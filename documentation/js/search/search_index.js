var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AboutPage.html",[0,0.74,1,1.311]],["body/components/AboutPage.html",[0,1.031,1,2.007,2,1.826,3,0.125,4,0.125,5,1.328,6,1.41,7,1.328,8,1.253,9,0.107,10,2.505,11,1.328,12,2.705,13,2.858,14,2.054,15,5.025,16,1.935,17,4.26,18,0.306,19,0.019,20,1.721,21,0.453,22,0.143,23,0.024,24,2.023,25,0.569,26,3.649,27,4.73,28,3.649,29,1.409,30,4.73,31,5.248,32,2.947,33,4.26,34,4.238,35,4.26,36,4.26,37,6.242,38,4.26,39,5.521,40,4.26,41,4.26,42,6.48,43,4.26,44,4.26,45,4.26,46,4.26,47,4.73,48,4.669,49,4.26,50,5.07,51,4.26,52,6.125,53,4.26,54,4.26,55,4.26,56,4.26,57,4.26,58,4.26,59,4.26,60,4.26,61,4.26,62,5.521,63,5.521,64,5.521,65,5.521,66,5.521,67,4.26,68,4.26,69,5.521,70,5.521,71,4.26,72,5.521,73,4.26,74,5.552,75,6.125,76,4.26,77,4.26,78,3.649,79,4.26,80,6.125,81,4.26,82,4.26,83,4.26,84,4.26,85,4.26,86,4.26,87,3.649,88,4.26,89,5.521,90,5.521,91,4.26,92,4.26,93,4.26,94,4.209,95,4.26,96,4.26,97,4.26,98,4.26,99,4.73,100,4.26,101,4.26,102,4.26,103,4.26,104,4.26,105,4.26,106,4.26,107,4.26,108,4.26,109,3.247,110,3.247,111,4.26,112,2.187,113,4.26,114,4.26,115,4.26,116,4.26,117,4.73,118,4.26,119,4.26,120,4.26,121,4.26,122,4.26,123,4.26,124,4.26,125,3.247,126,4.26,127,4.26,128,4.26,129,4.26,130,4.26,131,0.909,132,1.935,133,1.826,134,1.328,135,2.507,136,1.328,137,0.446,138,1.328,139,1.122,140,1.185,141,2.282,142,1.063,143,1.328,144,1.063,145,1.328,146,1.063,147,1.328,148,1.122,149,1.063,150,1.063,151,1.328,152,1.063,153,1.328,154,1.063,155,1.253,156,1.935,157,1.063,158,0.863,159,1.063,160,1.185,161,1.328,162,1.122,163,1.185,164,1.063,165,1.328,166,1.328,167,0.008,168,0.011,169,0.008]],["title/modules/AboutPageModule.html",[170,1.311,171,2.495]],["body/modules/AboutPageModule.html",[0,1.004,1,2.625,3,0.209,4,0.209,9,0.179,18,0.755,19,0.02,21,0.758,22,0.24,23,0.039,131,1.52,158,1.444,167,0.013,168,0.016,169,0.013,170,1.778,171,4.93,172,2.221,173,2.358,174,3.581,175,2.682,176,2.682,177,2.511,178,4.189,179,4.189,180,3.304,181,2.358,182,4.89,183,3.304,184,3.828,185,2.682,186,4.168,187,1.876,188,3.148,189,2.879,190,1.372,191,3.828,192,2.358,193,4.89,194,3.093,195,3.728,196,1.238,197,2.879,198,2.682,199,2.682,200,3.728]],["title/classes/Allocation.html",[23,0.029,201,2.123]],["body/classes/Allocation.html",[3,0.195,4,0.195,9,0.167,19,0.02,22,0.223,23,0.037,29,1.771,137,0.717,167,0.012,168,0.015,169,0.012,201,3.718,202,1.842,203,3.894,204,0.511,205,3.145,206,1.653,207,0.408,208,1.313,209,2.868,210,4.369,211,3.718,212,3.718,213,4.369,214,3.243,215,5.411,216,0.789,217,4.369,218,1.233,219,1.067,220,4.546,221,4.546,222,4.738,223,4.546,224,4.546,225,4.546,226,4.546,227,4.546,228,4.546,229,4.546,230,4.546,231,2.775]],["title/injectables/AllocationService.html",[232,0.913,233,2.292]],["body/injectables/AllocationService.html",[3,0.133,4,0.133,9,0.114,18,0.721,19,0.021,21,0.483,22,0.153,23,0.042,25,1.013,29,1.849,137,0.674,167,0.008,168,0.012,169,0.008,196,1.523,201,3.794,204,0.501,206,2.397,207,0.4,208,1.297,211,3.794,212,3.794,214,3.309,215,2.668,216,0.69,218,0.512,219,0.76,231,2.438,232,1.128,233,2.833,234,1.502,235,2.374,236,1.621,237,5.116,238,2.025,239,1.807,240,1.961,241,0.867,242,4.458,243,2.155,244,2.049,245,3.794,246,4.458,247,2.446,248,2.446,249,3.347,250,2.856,251,3.213,252,3.496,253,0.867,254,0.776,255,4.458,256,3.115,257,2.625,258,3.684,259,2.11,260,3.084,261,4.334,262,2.625,263,3.613,264,1.188,265,2.833,266,4.458,267,2.625,268,3.82,269,3.084,270,3.399,271,1.911,272,0.867,273,2.289,274,3.084,275,1.074,276,2.833,277,1.833,278,1.979,279,1.979,280,1.502,281,1.708,282,1.502,283,2.155,284,1.833,285,1.074,286,3.115,287,3.115,288,2.668,289,2.833,290,1.538,291,1.708,292,1.461,293,2.374,294,1.833,295,1.833,296,1.979,297,1.979,298,1.599,299,1.708,300,1.708,301,1.414,302,1.979,303,1.619,304,1.979,305,1.979,306,1.979,307,2.155,308,2.155,309,3.115,310,3.115,311,1.297,312,2.668,313,3.115,314,4.458,315,2.668,316,3.115,317,3.115,318,3.115,319,3.115,320,3.115,321,3.115,322,3.084,323,3.084,324,3.084,325,3.084,326,3.115,327,3.115,328,2.155,329,3.115,330,3.115,331,2.374,332,1.316,333,3.115,334,2.155,335,2.668,336,3.115,337,2.155]],["title/components/AppComponent.html",[0,0.74,142,1.311]],["body/components/AppComponent.html",[0,0.818,1,0.73,2,1.37,3,0.086,4,0.086,5,0.912,7,0.912,8,0.861,9,0.074,11,0.912,12,2.52,13,2.756,16,1.452,18,0.62,19,0.021,21,0.311,22,0.098,23,0.016,25,0.622,26,2.739,27,2.739,29,0.563,30,2.739,47,2.739,48,2.437,87,4.748,94,1.531,99,1.72,109,3.463,110,3.037,117,1.72,131,0.624,132,1.452,133,1.37,134,0.912,135,2.063,136,0.912,137,0.553,138,0.912,139,0.77,140,0.814,141,1.809,142,1.652,143,0.912,144,0.73,145,0.912,146,0.73,147,0.912,148,0.77,149,0.73,150,0.73,151,0.912,152,0.73,153,0.912,154,0.73,155,0.861,156,1.452,157,1.448,158,0.593,159,0.73,160,0.814,161,0.912,162,0.77,163,0.814,164,0.73,165,0.912,166,0.912,167,0.005,168,0.009,169,0.005,185,1.101,190,0.563,192,0.968,196,0.809,204,0.359,207,0.18,208,0.729,216,0.519,218,0.655,219,0.887,236,2.435,238,2.252,239,2.01,240,2.14,241,0.622,244,2.031,248,1.754,252,1.641,253,0.622,254,0.556,262,2.674,264,1.264,267,1.882,272,0.883,275,1.374,285,1.374,290,1.103,303,1.238,311,1.386,338,1.72,339,1.452,340,3.984,341,3.197,342,3.197,343,2.713,344,3.984,345,3.984,346,3.984,347,3.984,348,4.542,349,4.542,350,2.739,351,3.037,352,3.463,353,2.008,354,4.928,355,4.928,356,2.76,357,2.954,358,6.077,359,3.656,360,4.542,361,3.463,362,3.197,363,3.891,364,3.197,365,4.542,366,3.142,367,3.891,368,2.845,369,2.492,370,2.739,371,2.739,372,2.437,373,3.431,374,2.008,375,4.542,376,2.887,377,2.739,378,3.197,379,3.197,380,3.891,381,4.542,382,3.891,383,3.197,384,2.063,385,3.197,386,3.197,387,3.197,388,3.197,389,3.197,390,3.197,391,3.142,392,3.463,393,1.528,394,2.008,395,2.212,396,2.739,397,1.882,398,3.197,399,3.197,400,3.197,401,2.739,402,2.008,403,4.592,404,2.437,405,3.11,406,2.008,407,2.437,408,1.542,409,2.437,410,5.409,411,2.739,412,2.212,413,2.437,414,2.212,415,2.739,416,2.739,417,2.739,418,2.212,419,2.739,420,2.739,421,2.739,422,3.197,423,3.197,424,2.008,425,3.891,426,3.891,427,3.197,428,2.19,429,2.008,430,2.392,431,2.212,432,3.197,433,3.197,434,3.197,435,3.197,436,3.197,437,3.984,438,2.008,439,3.197,440,2.008,441,3.197,442,2.008,443,2.032,444,3.197,445,2.212,446,2.032,447,2.008,448,2.756,449,1.531,450,1.72,451,1.531,452,1.72,453,1.276,454,1.72,455,1.72,456,2.008,457,1.389,458,1.72,459,2.008,460,3.197,461,3.197,462,2.008,463,2.008,464,2.008,465,1.531,466,2.008,467,2.008,468,2.008,469,1.641,470,2.008,471,3.984,472,2.008,473,2.212,474,2.212,475,2.008,476,2.008,477,2.008,478,2.008,479,3.197,480,2.008,481,1.72,482,1.72,483,1.72,484,2.008,485,2.008,486,2.008,487,2.008,488,2.008,489,1.531,490,3.197,491,2.008,492,1.531,493,2.008,494,0.814,495,2.008,496,2.008,497,1.531,498,1.389,499,1.531,500,1.531,501,3.197]],["title/modules/AppModule.html",[170,1.311,502,2.495]],["body/modules/AppModule.html",[3,0.185,4,0.185,9,0.159,13,2.262,18,0.769,19,0.02,21,0.672,22,0.212,23,0.035,131,1.347,142,2.671,158,1.279,167,0.012,168,0.015,169,0.012,170,1.575,172,1.967,173,2.089,174,3.387,175,3.387,176,3.061,177,2.224,180,3.061,181,2.089,183,3.061,190,1.215,191,2.753,192,2.089,199,3.061,354,4.782,355,4.782,448,4.669,449,3.303,450,3.711,451,3.303,452,3.711,453,2.753,502,5.053,503,3.711,504,3.711,505,3.711,506,3.711,507,4.391,508,4.391,509,4.332,510,5.581,511,3.711,512,2.997,513,4.255,514,5.581,515,4.332,516,4.332,517,4.782,518,3.711,519,4.332,520,4.255,521,3.711,522,4.782,523,3.711,524,4.332,525,4.332,526,4.332,527,3.711,528,3.711]],["title/classes/AppPage.html",[23,0.029,529,2.749]],["body/classes/AppPage.html",[3,0.222,4,0.222,9,0.191,18,0.544,19,0.02,22,0.255,23,0.042,133,2.227,137,0.544,167,0.014,168,0.017,169,0.014,202,2.105,207,0.466,219,0.978,241,1.215,253,1.01,254,0.904,272,1.304,332,1.979,512,3.594,529,4.765,530,4.451,531,6.956,532,6.956,533,6.25,534,5.195,535,5.195,536,6.25,537,5.195,538,5.195,539,5.195,540,5.195,541,5.195,542,5.195,543,5.195,544,5.195]],["title/modules/AppRoutingModule.html",[170,1.311,507,2.292]],["body/modules/AppRoutingModule.html",[3,0.214,4,0.214,9,0.183,18,0.689,19,0.02,21,0.774,22,0.245,23,0.04,29,1.401,167,0.013,168,0.016,169,0.013,172,2.268,177,2.564,183,3.347,188,3.178,189,3.592,190,1.401,194,3.524,196,1.264,197,4.144,198,3.615,199,2.739,453,3.174,507,3.878,545,4.994,546,4.994,547,6.102,548,4.994,549,3.878,550,4.994,551,4.279,552,6.864,553,4.994,554,4.994,555,4.994,556,4.994,557,4.994,558,4.994,559,4.994]],["title/guards/AuthenticationGuard.html",[194,1.851,560,2.292]],["body/guards/AuthenticationGuard.html",[3,0.18,4,0.18,9,0.154,18,0.637,19,0.02,21,0.652,22,0.206,23,0.049,25,1.254,29,1.536,137,0.44,163,2.219,167,0.011,168,0.015,169,0.011,188,2.64,190,1.179,194,2.811,198,3.76,204,0.615,207,0.377,216,0.44,219,0.799,232,1.386,239,2.613,240,1.888,241,1.065,244,2.317,253,0.818,254,0.732,262,3.223,264,1.471,272,1.065,285,1.888,303,1.702,311,1.249,332,1.616,339,1.91,356,3.17,368,3.311,384,2.486,395,3.788,405,3.223,408,2.64,428,2.64,430,2.028,443,4.098,445,3.788,446,3.479,549,3.479,560,3.479,561,3.206,562,3.603,563,4.174,564,4.69,565,4.916,566,4.69,567,2.307,568,4.205,569,3.796,570,4.174,571,2.486,572,4.205,573,4.174,574,2.219,575,4.69,576,4.69,577,4.69,578,4.69,579,2.64,580,3.603,581,3.206,582,2.909,583,2.673]],["title/components/AuthenticationPage.html",[0,0.74,144,1.311]],["body/components/AuthenticationPage.html",[0,1.304,1,1.673,2,2.486,3,0.197,4,0.197,5,2.09,6,2.219,7,2.09,8,1.973,9,0.169,11,2.09,12,2.874,13,3.036,14,2.797,16,2.634,18,0.482,19,0.02,21,0.713,22,0.226,23,0.037,25,1.235,29,1.291,131,1.431,132,2.634,133,2.486,134,2.09,135,3.029,136,2.09,137,0.607,138,2.09,139,1.766,140,1.865,141,2.885,142,1.673,143,2.09,144,2.425,145,2.09,146,1.673,147,2.09,148,1.766,149,1.673,150,1.673,151,2.09,152,1.673,153,2.09,154,1.673,155,1.973,156,2.634,157,1.673,158,1.359,159,1.673,160,1.865,161,2.09,162,1.766,163,1.865,164,1.673,165,2.09,166,2.09,167,0.012,168,0.015,169,0.012,219,0.672,285,2.001,584,3.943,585,6.352,586,5.801,587,4.602]],["title/modules/AuthenticationPageModule.html",[170,1.311,588,2.495]],["body/modules/AuthenticationPageModule.html",[0,1.372,3,0.18,4,0.18,9,0.154,18,0.761,19,0.02,21,0.652,22,0.206,23,0.034,131,1.307,144,2.538,150,2.538,152,2.538,154,2.538,155,2.347,157,2.538,158,1.616,167,0.011,168,0.015,169,0.011,170,1.529,172,1.91,173,2.028,174,3.339,175,2.307,176,2.307,177,2.159,180,3.003,181,2.028,183,3.003,184,3.479,185,2.307,186,3.788,187,1.613,188,2.935,189,2.475,190,1.179,191,3.479,192,2.028,196,1.064,197,3.936,198,3.003,199,2.307,200,3.206,457,2.909,458,4.69,579,2.028,588,5.11,589,3.603,590,3.603,591,4.205,592,4.69,593,4.205,594,3.206,595,4.205,596,4.205,597,3.869,598,4.205,599,2.909,600,4.205]],["title/injectables/AuthenticationService.html",[232,0.913,244,1.18]],["body/injectables/AuthenticationService.html",[3,0.09,4,0.09,9,0.078,18,0.532,19,0.02,21,0.328,22,0.104,23,0.041,25,0.909,78,3.529,137,0.532,158,1.38,160,1.349,167,0.006,168,0.009,169,0.006,181,1.605,196,1.043,204,0.607,206,1.699,207,0.189,208,0.759,216,0.565,218,1.034,219,0.934,232,0.843,234,1.019,239,1.894,240,2.02,241,0.647,244,1.09,253,0.989,254,0.885,259,2.442,262,1.96,264,1.53,267,3.448,270,4.703,271,2.781,272,1.334,273,3.332,275,0.729,282,1.019,283,2.303,284,1.244,285,2.128,290,1.612,292,1.311,298,3.168,303,1.28,311,1.29,332,1.822,334,1.462,337,2.303,343,3.094,357,3.007,371,2.852,384,2.857,393,0.811,397,3.18,431,3.518,443,3.433,446,3.921,563,2.538,565,3.563,569,2.751,571,2.123,573,2.538,574,2.662,579,2.906,599,3.737,601,1.611,602,2.852,603,4.119,604,3.495,605,4.674,606,3.329,607,2.538,608,3.329,609,2.852,610,4.119,611,2.113,612,5.653,613,3.329,614,3.329,615,3.329,616,4.052,617,4.674,618,2.538,619,2.538,620,1.96,621,2.113,622,2.113,623,4.119,624,2.113,625,4.052,626,3.18,627,5.857,628,5.018,629,4.119,630,3.233,631,2.113,632,3.329,633,2.116,634,2.116,635,3.329,636,3.329,637,2.113,638,3.373,639,4.674,640,2.726,641,3.329,642,3.329,643,3.329,644,4.674,645,3.329,646,3.766,647,2.113,648,3.329,649,3.329,650,3.329,651,5.653,652,2.113,653,3.329,654,2.113,655,2.538,656,3.563,657,3.329,658,3.329,659,2.113,660,3.329,661,3.329,662,3.529,663,2.852,664,2.852,665,2.303,666,3.329,667,2.113,668,2.113,669,2.773,670,2.113,671,2.113,672,2.113,673,2.113,674,3.329,675,3.329,676,1.462,677,1.611,678,1.462,679,2.303,680,3.329,681,2.113,682,4.119,683,2.113,684,2.113,685,2.113,686,2.113,687,2.113,688,2.113,689,2.113,690,2.113,691,2.113,692,2.113,693,4.119,694,2.113,695,2.113,696,2.113,697,2.113,698,1.81,699,2.113,700,2.113,701,3.329,702,2.113,703,2.113]],["title/modules/CoreModule.html",[170,1.311,508,2.292]],["body/modules/CoreModule.html",[3,0.17,4,0.17,9,0.146,18,0.754,19,0.02,21,0.617,22,0.195,23,0.032,131,1.237,158,1.175,167,0.011,168,0.014,169,0.011,170,1.919,172,1.807,173,1.918,174,2.896,175,2.182,176,3.25,177,2.043,180,2.896,181,1.918,183,2.896,184,3.355,185,2.182,189,3.108,190,1.116,194,2.71,199,2.182,233,4.29,238,1.807,244,2.21,245,3.973,259,1.612,285,1.372,303,1.237,357,3.465,359,3.355,368,2.043,453,2.528,508,4.805,513,4.024,527,4.522,528,4.522,571,1.807,597,3.355,618,3.033,676,2.752,677,3.033,704,3.408,705,3.408,706,3.973,707,4.29,708,3.973,709,4.29,710,4.499,711,4.29,712,3.978,713,5.279,714,5.279,715,3.652,716,3.033,717,3.408,718,3.978,719,3.978,720,3.978,721,3.978,722,3.033,723,3.978]],["title/classes/Course.html",[23,0.029,724,2.292]],["body/classes/Course.html",[3,0.199,4,0.199,9,0.17,19,0.02,22,0.228,23,0.037,25,1.24,112,2.995,137,0.61,167,0.012,168,0.016,169,0.012,202,1.882,204,0.522,205,3.213,206,1.688,207,0.416,208,1.331,209,2.897,210,4.413,213,4.413,216,0.785,217,4.413,218,1.229,219,1.077,222,4.036,231,2.364,724,4.053,725,3.978,726,4.413,727,4.862,728,6.378,729,4.862,730,5.464,731,5.834,732,4.644,733,4.644,734,4.644,735,4.644,736,4.644,737,4.644,738,4.644,739,4.644,740,4.644]],["title/injectables/CourseService.html",[232,0.913,706,2.123]],["body/injectables/CourseService.html",[3,0.098,4,0.098,9,0.084,12,2.024,18,0.629,19,0.021,21,0.354,22,0.112,23,0.035,25,0.842,29,1.565,112,1.173,137,0.691,149,1.773,167,0.006,168,0.009,169,0.006,196,1.234,204,0.676,207,0.317,208,0.807,209,1.038,216,0.723,218,1.119,219,0.921,231,2.759,232,0.896,234,1.102,236,1.773,238,2.215,239,1.976,240,1.494,241,0.688,244,1.596,247,1.941,248,1.941,249,2.871,250,2.376,251,2.865,252,3.59,253,1.132,254,1.013,257,2.083,258,3.713,259,2.677,260,2.448,261,2.698,263,3.099,264,0.988,265,3.099,272,1.299,273,3.57,275,0.788,276,2.249,277,1.345,278,1.452,279,1.452,280,1.102,281,1.253,282,1.102,285,1.494,289,2.249,290,1.22,291,1.253,292,1.565,294,1.345,295,1.345,296,1.452,297,1.452,298,1.173,299,1.253,300,1.253,301,1.038,302,1.452,303,1.809,304,1.452,305,1.452,306,1.452,307,1.581,308,1.581,311,1.372,322,2.448,323,2.448,324,2.448,325,2.448,328,3.65,332,1.718,393,1.871,397,2.083,669,1.817,706,2.083,724,4.642,726,2.448,730,4.986,741,1.742,742,3.539,743,3.539,744,3.539,745,3.539,746,3.539,747,4.877,748,4.877,749,3.539,750,2.285,751,3.539,752,4.467,753,4.331,754,3.539,755,2.285,756,4.331,757,3.539,758,2.285,759,2.698,760,4.52,761,3.539,762,2.285,763,3.718,764,3.539,765,3.539,766,2.285,767,4.331,768,3.539,769,2.285,770,3.539,771,4.877,772,3.71,773,2.698,774,2.285,775,3.539,776,3.539,777,2.285,778,3.539,779,2.285,780,2.249,781,2.285,782,1.742,783,4.331,784,2.285,785,4.022,786,2.698,787,3.032,788,3.302,789,2.285,790,2.285,791,4.331,792,2.285,793,2.285,794,2.285,795,2.285,796,2.285,797,2.285,798,2.285,799,3.539,800,3.539,801,3.539,802,3.539,803,3.539,804,1.957,805,1.742,806,2.285,807,1.742,808,2.285]],["title/interfaces/Credentials.html",[604,1.739,809,1.546]],["body/interfaces/Credentials.html",[3,0.21,4,0.21,9,0.18,19,0.02,22,0.32,112,3.096,137,0.513,167,0.013,168,0.016,169,0.013,204,0.551,206,2.376,207,0.439,208,1.376,209,2.225,216,0.684,218,1.222,285,1.69,574,2.979,579,2.363,604,3.288,630,3.39,638,2.515,640,2.363,646,4.014,809,3.096,810,2.884,811,3.39,812,4.333,813,2.884,814,3.114,815,3.114,816,3.735,817,2.515,818,3.735,819,3.735]],["title/classes/DatabaseSyncService.html",[23,0.029,359,2.292]],["body/classes/DatabaseSyncService.html",[3,0.168,4,0.168,9,0.144,18,0.548,19,0.021,22,0.193,23,0.032,24,2.723,25,0.765,167,0.01,168,0.014,169,0.01,196,1.806,202,1.595,204,0.442,207,0.353,219,0.574,237,4.79,241,1.019,248,3.447,250,3.589,251,3.455,252,3.76,259,2.783,263,3.331,272,0.765,277,2.317,280,1.898,281,2.159,290,2.461,292,2.001,293,3,298,3.36,300,3.589,332,1.162,359,3.331,571,2.38,752,3.745,782,3,820,3.996,821,3,822,5.241,823,6.283,824,3.936,825,5.241,826,5.241,827,4.077,828,3,829,3,830,3,831,3,832,3,833,4.492,834,3,835,3,836,3,837,3,838,3,839,3,840,3,841,3,842,3.936,843,3.936,844,3.936,845,3.936,846,3.936,847,3.936,848,3.936,849,3.936,850,3.936,851,3.936,852,1.595]],["title/classes/EmailValidation.html",[23,0.029,853,2.292]],["body/classes/EmailValidation.html",[3,0.199,4,0.199,9,0.171,18,0.487,19,0.02,22,0.228,23,0.037,31,3.986,50,3.219,137,0.487,167,0.012,168,0.016,169,0.012,187,1.785,196,1.478,202,1.885,204,0.523,207,0.417,216,0.487,218,0.96,219,0.679,241,1.136,253,0.905,254,0.81,264,1.332,271,2.736,272,1.136,290,2.014,292,1.305,311,1.061,332,1.724,408,2.816,494,2.367,640,3.326,780,4.057,852,2.367,853,4.255,854,4.04,855,2.957,856,5.84,857,4.869,858,3.546,859,3.712,860,4.04,861,4.04,862,4.04,863,3.438,864,3.438,865,3.712,866,4.04,867,3.712,868,4.04,869,3.546,870,3.986,871,4.652,872,5.84,873,4.652,874,3.219,875,4.652,876,4.652,877,3.986,878,4.652,879,3.986,880,4.652,881,4.652,882,4.652]],["title/interceptors/ErrorHandlerInterceptor.html",[707,2.292,883,2.749]],["body/interceptors/ErrorHandlerInterceptor.html",[3,0.136,4,0.136,9,0.117,18,0.694,19,0.02,21,0.493,22,0.156,23,0.042,25,1.116,125,3.452,137,0.552,167,0.008,168,0.012,169,0.008,190,0.893,196,1.146,204,0.646,207,0.285,216,0.552,218,0.523,219,0.769,232,1.146,238,2.608,239,2.555,240,2.174,241,0.881,253,1.025,254,0.917,259,1.29,264,1.033,272,1.116,273,3.463,275,1.562,280,1.535,281,1.746,282,1.535,284,1.874,292,1.27,303,0.99,311,1.438,332,0.94,337,4.587,339,1.446,356,2.946,357,3.512,384,2.057,395,3.133,404,4.945,405,2.666,445,3.133,465,3.452,567,1.746,569,3.711,570,3.452,571,2.608,582,2.203,583,2.023,604,2.184,616,3.133,618,3.452,619,4.377,620,3.38,626,4.15,634,2.878,676,2.203,677,2.427,678,3.133,679,2.203,698,2.727,707,2.878,708,4.027,722,2.427,852,2.629,864,2.666,884,4.377,885,2.427,886,3.972,887,4.529,888,5.271,889,4.516,890,3.184,891,3.649,892,4.919,893,5.401,894,4.529,895,3.184,896,5.742,897,3.184,898,3.88,899,2.727,900,4.919,901,4.919,902,3.184,903,3.88,904,3.452,905,3.88,906,2.727,907,3.88,908,3.184,909,3.184,910,3.184,911,2.727,912,3.184,913,3.184,914,3.184,915,4.529,916,3.184,917,3.184,918,3.184,919,3.184,920,3.184,921,3.184,922,4.529,923,3.184,924,4.529,925,3.184,926,3.184,927,3.184,928,3.184,929,3.184]],["title/interfaces/ErrorMessageObject.html",[809,1.546,930,2.495]],["body/interfaces/ErrorMessageObject.html",[3,0.214,4,0.214,9,0.183,19,0.02,22,0.299,167,0.013,168,0.016,169,0.013,204,0.561,206,1.816,207,0.448,208,1.392,216,0.766,218,1.225,231,2.781,494,2.67,809,3.017,810,2.94,813,2.94,814,3.174,852,2.967,930,4.222,931,3.807,932,5.232,933,3.524,934,4.279,935,3.455,936,4.279,937,4.279]],["title/injectables/ErrorMessageService.html",[232,0.913,708,2.123]],["body/injectables/ErrorMessageService.html",[3,0.161,4,0.161,9,0.138,18,0.393,19,0.02,21,0.582,22,0.184,23,0.03,24,2.596,25,0.73,137,0.393,167,0.01,168,0.013,169,0.01,204,0.571,207,0.336,208,1.158,216,0.74,218,1.15,219,0.94,231,1.521,232,1.285,234,1.81,236,1.846,240,1.984,241,0.987,247,2.785,253,0.73,254,0.653,264,1.514,272,1.198,275,1.751,292,1.424,311,1.312,332,1.108,343,3.592,380,4.349,384,2.613,393,1.948,403,3.512,431,3.512,465,4.698,494,2.057,571,2.305,609,4.349,633,3.226,662,4.928,663,5.28,664,4.349,669,2.606,708,2.988,852,3.034,898,5.686,932,5.06,938,5.686,939,3.215,940,5.006,941,5.753,942,6.163,943,3.753,944,5.077,945,3.753,946,5.077,947,6.163,948,3.753,949,3.753,950,5.077,951,5.077,952,3.753,953,3.753,954,5.077,955,3.753,956,3.753,957,3.753,958,5.077]],["title/components/HomePage.html",[0,0.74,146,1.311]],["body/components/HomePage.html",[0,1.07,1,1.135,2,1.914,3,0.134,4,0.134,5,1.418,6,1.505,7,1.418,8,1.338,9,0.115,11,1.418,12,2.733,13,2.887,14,2.154,16,2.028,18,0.467,19,0.02,21,0.484,22,0.153,23,0.025,25,0.607,29,0.876,109,4.339,131,0.97,132,2.028,133,1.914,134,1.418,135,2.585,136,1.418,137,0.595,138,1.418,139,1.198,140,1.265,141,2.368,142,1.135,143,1.418,144,1.135,145,1.418,146,2.069,147,1.418,148,1.198,149,1.896,150,1.135,151,1.418,152,1.135,153,1.418,154,1.135,155,1.338,156,2.028,157,1.135,158,0.922,159,1.135,160,1.265,161,1.418,162,1.198,163,1.265,164,1.135,165,1.418,166,1.418,167,0.008,168,0.012,169,0.008,190,0.876,204,0.502,207,0.28,208,1.019,216,0.546,218,0.99,219,0.761,236,1.624,241,0.868,253,0.868,254,0.777,264,0.712,265,2.838,272,0.607,275,1.077,292,1.253,301,1.418,311,1.019,350,3.826,356,2.929,366,3.09,368,2.922,369,3.122,393,1.198,401,3.826,403,4.819,410,5.651,411,3.826,412,3.09,413,3.405,414,3.09,415,3.826,416,3.826,417,3.826,418,3.09,419,3.826,420,3.826,421,3.826,425,4.876,426,5.159,428,2.154,481,2.675,482,2.675,483,2.675,549,3.314,567,1.713,574,2.306,656,3.405,959,2.675,960,5.215,961,4.466,962,6.022,963,3.122,964,3.122,965,4.466,966,4.466,967,3.826,968,4.466,969,4.466,970,4.466,971,4.466,972,3.09,973,4.466,974,3.122,975,4.466,976,3.122,977,3.122,978,5.215,979,5.215,980,6.596,981,5.215,982,5.215,983,3.122,984,3.122,985,3.826,986,4.466,987,2.675,988,2.675,989,3.122,990,2.675,991,3.122,992,2.675,993,3.09,994,3.826,995,4.876,996,3.122,997,3.122,998,3.122,999,3.122,1000,1.984,1001,3.122,1002,2.675,1003,2.38,1004,4.466,1005,3.826,1006,2.675,1007,3.122]],["title/modules/HomePageModule.html",[170,1.311,1008,2.495]],["body/modules/HomePageModule.html",[0,1.015,3,0.212,4,0.212,9,0.182,18,0.757,19,0.02,21,0.767,22,0.243,23,0.04,131,1.538,146,2.631,158,1.46,167,0.013,168,0.016,169,0.013,170,1.798,172,2.246,173,2.385,174,3.599,175,2.713,176,2.713,177,2.54,180,3.328,181,2.385,183,3.328,184,3.855,185,2.713,186,4.197,187,1.898,189,2.912,190,1.387,191,3.855,192,2.385,194,3.115,195,3.771,197,2.912,198,2.713,199,2.713,1008,4.943,1009,4.238,1010,4.238,1011,4.946,1012,4.946,1013,4.946]],["title/injectables/LocalStorageService.html",[232,0.913,357,1.851]],["body/injectables/LocalStorageService.html",[3,0.143,4,0.143,9,0.122,18,0.349,19,0.021,21,0.516,25,0.909,112,2.774,137,0.723,167,0.009,168,0.012,169,0.009,196,0.843,197,1.961,204,0.659,207,0.299,208,1.067,216,0.646,218,1.12,219,0.959,232,0.843,234,1.607,236,1.211,239,1.895,241,0.909,253,1.051,254,0.94,257,1.961,258,1.961,259,1.895,264,1.555,272,1.2,274,2.305,292,0.934,311,1.53,332,1.73,343,3.618,357,1.71,370,5.287,469,1.71,489,2.54,569,2.753,602,2.854,616,4.779,633,2.972,634,2.117,669,1.71,678,5.002,812,2.117,886,3.235,904,3.565,933,1.71,1014,5.113,1015,2.54,1016,5.859,1017,5.404,1018,5.859,1019,4.677,1020,4.677,1021,4.677,1022,4.677,1023,2.854,1024,2.117,1025,3.332,1026,3.332,1027,3.332,1028,4.677,1029,4.677,1030,3.332,1031,3.565,1032,7.047,1033,4.677,1034,3.332,1035,4.006,1036,4.677,1037,3.332,1038,4.677,1039,4.677,1040,3.332,1041,4.677,1042,5.482,1043,5.287,1044,2.854,1045,2.854,1046,6.171,1047,3.332,1048,3.332,1049,4.677,1050,3.332,1051,3.332,1052,4.006,1053,2.854,1054,2.854,1055,3.332,1056,3.332,1057,3.332,1058,3.332,1059,3.332,1060,3.332,1061,3.332,1062,3.332,1063,3.332,1064,3.332]],["title/components/LoginComponent.html",[0,0.74,150,1.311]],["body/components/LoginComponent.html",[0,1.02,1,1.043,2,1.801,3,0.123,4,0.123,5,1.303,6,1.383,7,1.303,8,1.23,9,0.105,11,1.303,12,2.697,13,2.849,14,2.026,16,1.908,18,0.637,19,0.02,20,2.926,21,0.445,22,0.141,23,0.023,25,0.558,29,0.805,50,2.906,131,0.892,132,1.908,133,1.801,134,1.303,135,2.485,136,1.303,137,0.52,138,1.303,139,1.101,140,1.163,141,2.257,142,1.043,143,1.303,144,1.043,145,1.303,146,1.043,147,1.303,148,1.101,149,1.043,150,1.989,151,1.303,152,1.043,153,1.303,154,1.043,155,1.23,156,1.908,157,1.043,158,0.847,159,1.043,160,1.163,161,1.303,162,1.101,163,1.163,164,1.043,165,1.303,166,1.303,167,0.008,168,0.011,169,0.008,187,1.101,190,0.805,204,0.323,207,0.257,208,0.958,216,0.52,218,0.69,219,0.917,236,2.212,238,1.908,240,2.008,241,0.817,244,2.11,253,0.558,254,0.499,264,0.655,271,1.23,272,0.966,275,0.989,284,1.689,285,2.098,301,1.303,303,1.701,311,1.134,334,1.985,339,1.908,356,2.855,368,2.157,369,2.304,373,2.906,376,3.477,393,1.907,405,2.473,428,2.934,430,2.934,446,2.67,473,1.985,474,1.985,494,2.217,549,2.67,567,1.574,571,1.908,574,1.702,579,2.934,583,1.823,604,2.808,620,2.473,638,1.473,640,2.397,852,2.36,853,1.823,854,1.985,865,2.67,972,2.906,1000,2.67,1024,2.67,1065,2.458,1066,4.97,1067,4.201,1068,4.439,1069,4.439,1070,4.97,1071,5.471,1072,3.477,1073,5.471,1074,5.522,1075,4.201,1076,4.201,1077,4.459,1078,4.201,1079,4.201,1080,2.869,1081,2.869,1082,2.869,1083,3.789,1084,3.599,1085,2.869,1086,4.201,1087,4.201,1088,4.201,1089,4.201,1090,4.201,1091,3.439,1092,2.869,1093,1.985,1094,4.201,1095,1.985,1096,2.869,1097,2.869,1098,2.458,1099,2.906,1100,2.458,1101,3.789,1102,2.869,1103,2.869,1104,2.869,1105,2.869,1106,2.869,1107,3.202,1108,2.869,1109,2.869,1110,3.599,1111,3.599,1112,4.201,1113,4.201,1114,3.599]],["title/interfaces/LoginPayload.html",[809,1.546,815,2.292]],["body/interfaces/LoginPayload.html",[3,0.213,4,0.213,9,0.182,19,0.02,22,0.322,112,3.122,137,0.52,167,0.013,168,0.016,169,0.013,204,0.558,206,2.211,207,0.445,208,1.387,209,2.255,216,0.636,218,1.224,285,1.712,574,2.776,579,2.932,604,2.932,630,4.207,638,3.517,640,2.394,646,2.923,809,3.104,810,2.923,811,3.435,812,3.156,813,2.923,814,3.156,815,3.865,816,5.222,817,2.549,818,3.785,819,3.785]],["title/components/LogoutComponent.html",[0,0.74,152,1.311]],["body/components/LogoutComponent.html",[0,1.199,1,1.407,2,2.222,3,0.166,4,0.166,5,1.758,6,1.867,7,1.758,8,1.659,9,0.142,11,1.758,12,2.816,13,2.975,14,2.5,16,2.354,18,0.611,19,0.02,20,3.44,21,0.6,22,0.19,23,0.031,25,0.753,29,1.086,131,1.203,132,2.354,133,2.222,134,1.758,135,2.835,136,1.758,137,0.611,138,1.758,139,1.485,140,1.569,141,2.654,142,1.407,143,1.758,144,1.407,145,1.758,146,1.407,147,1.758,148,1.485,149,1.407,150,1.407,151,1.758,152,2.269,153,1.758,154,1.407,155,1.659,156,2.354,157,1.407,158,1.143,159,1.407,160,1.569,161,1.758,162,1.485,163,1.569,164,1.407,165,1.758,166,1.758,167,0.01,168,0.014,169,0.01,190,1.086,204,0.435,207,0.347,216,0.405,219,0.757,236,2.269,238,2.354,239,2.101,240,1.335,241,1.008,243,2.678,244,2.239,253,0.753,254,0.674,272,0.753,285,2.153,301,1.758,303,1.203,311,1.183,339,2.354,356,3.23,366,3.586,369,2.843,393,1.485,571,2.354,574,2.101,579,2.5,583,2.46,599,4.318,620,3.051,626,3.051,628,4.441,1072,3.967,1084,4.441,1095,2.678,1115,3.316,1116,5.844,1117,5.184,1118,3.871,1119,3.871,1120,5.184,1121,3.871,1122,3.871]],["title/classes/Organisation.html",[23,0.029,214,1.851]],["body/classes/Organisation.html",[3,0.176,4,0.176,9,0.151,19,0.02,22,0.202,23,0.033,25,1.171,137,0.695,167,0.011,168,0.014,169,0.011,202,1.666,204,0.462,205,2.844,206,1.495,207,0.369,208,1.231,209,2.734,210,4.166,211,3.544,212,3.544,213,4.166,214,3.091,216,0.789,217,4.166,218,1.253,219,1.092,222,3.732,231,2.186,262,3.544,269,4.166,640,2.903,727,4.59,817,3.091,1123,3.522,1124,6.021,1125,4.59,1126,6.021,1127,6.021,1128,4.166,1129,5.395,1130,4.111,1131,4.111,1132,4.111,1133,4.111,1134,4.111,1135,4.111,1136,4.111,1137,4.111,1138,4.111,1139,4.111,1140,4.111,1141,4.111,1142,4.111,1143,4.111,1144,4.111,1145,4.111,1146,4.111]],["title/injectables/OrganisationService.html",[232,0.913,709,2.292]],["body/injectables/OrganisationService.html",[3,0.102,4,0.102,9,0.088,12,1.708,18,0.638,19,0.021,21,0.37,22,0.117,23,0.036,25,0.866,137,0.736,167,0.006,168,0.01,169,0.006,196,1.616,204,0.686,206,1.331,207,0.328,208,0.835,209,1.085,214,3.723,216,0.718,218,1.185,219,0.913,231,2.587,232,0.927,234,1.152,236,1.331,238,1.663,239,1.484,240,1.959,241,0.712,243,1.652,244,2.048,247,2.009,248,2.009,249,2.939,250,2.443,251,2.917,252,3.524,253,1.15,254,1.029,257,2.156,258,3.592,259,2.703,260,2.533,264,1.016,265,3.173,272,1.281,273,3.55,274,2.533,275,0.824,276,2.327,277,1.406,278,1.518,279,1.518,280,1.152,281,1.31,282,1.152,285,0.824,289,2.327,290,1.722,291,1.31,292,1.791,294,1.406,295,1.406,296,1.518,297,1.518,298,1.226,299,1.31,300,1.31,301,1.085,302,1.518,303,1.673,304,1.518,305,1.518,306,1.518,307,1.652,308,1.652,311,1.349,312,2.046,322,2.533,323,2.533,324,2.533,325,2.533,328,3.454,331,3.806,332,1.59,393,1.405,397,2.156,469,1.226,669,1.88,709,2.327,759,2.791,763,3.806,785,3.395,786,1.821,787,2.046,788,2.791,805,1.821,807,1.821,833,4.951,835,1.821,863,2.156,891,2.327,993,2.533,1031,2.791,1128,1.652,1147,1.821,1148,3.662,1149,3.662,1150,3.662,1151,3.662,1152,4.992,1153,3.137,1154,3.662,1155,3.662,1156,3.662,1157,2.388,1158,4.992,1159,3.662,1160,2.388,1161,4.612,1162,3.662,1163,2.388,1164,3.662,1165,2.388,1166,4.453,1167,2.388,1168,3.137,1169,2.388,1170,4.867,1171,3.137,1172,3.662,1173,2.388,1174,2.388,1175,2.388,1176,2.046,1177,2.046,1178,2.388,1179,2.388,1180,2.388,1181,2.388,1182,2.388,1183,2.388,1184,2.388,1185,2.388,1186,2.388,1187,3.137,1188,3.137,1189,2.046,1190,2.388,1191,2.046,1192,2.046,1193,2.046,1194,2.046,1195,2.046,1196,2.046,1197,2.046,1198,3.137,1199,2.046]],["title/classes/PasswordValidation.html",[23,0.029,1200,2.495]],["body/classes/PasswordValidation.html",[3,0.148,4,0.148,9,0.127,18,0.361,19,0.02,22,0.169,23,0.028,32,4.325,34,4.813,48,5.304,137,0.502,167,0.009,168,0.016,169,0.009,187,1.324,196,1.68,202,1.399,204,0.539,207,0.31,216,0.502,218,0.788,219,0.7,241,0.932,253,0.932,254,0.834,264,1.094,271,2.68,272,1.157,290,2.052,292,1.669,311,1.094,332,1.846,408,2.869,494,2.411,638,3.572,665,3.316,780,4.112,852,2.411,855,2.194,857,4.863,858,2.631,859,3.782,860,4.117,861,4.117,862,4.117,863,2.822,864,3.503,865,3.782,866,3.316,867,3.047,868,4.117,869,2.631,933,1.772,1200,4.117,1201,4.198,1202,4.794,1203,4.794,1204,4.794,1205,4.794,1206,4.794,1207,4.794,1208,4.794,1209,3.452,1210,3.452,1211,4.107,1212,3.452,1213,3.452,1214,6.252,1215,6.252,1216,6.252,1217,6.252,1218,6.252,1219,3.973,1220,6.252,1221,6.252,1222,6.252,1223,6.252,1224,6.252,1225,6.471,1226,3.452,1227,3.452,1228,4.794,1229,4.794,1230,3.452,1231,3.452,1232,3.452,1233,3.452,1234,3.452,1235,3.452,1236,3.452]],["title/classes/PhoneValidation.html",[23,0.029,1237,2.749]],["body/classes/PhoneValidation.html",[3,0.2,4,0.2,9,0.171,18,0.489,19,0.02,22,0.229,23,0.038,137,0.489,167,0.012,168,0.016,169,0.012,187,1.791,196,1.481,202,1.892,204,0.525,207,0.419,216,0.489,218,0.962,219,0.681,241,1.138,253,0.908,254,0.813,264,1.335,271,2.741,272,1.138,290,2.019,292,1.31,311,1.065,332,1.379,408,2.823,469,2.397,494,2.372,780,4.064,817,3.283,852,2.372,855,2.967,857,4.874,858,3.559,859,3.72,860,4.049,861,4.049,862,4.049,863,3.446,864,3.446,865,3.72,866,4.049,867,3.72,868,4.049,869,3.559,870,4,874,3.23,1237,5.11,1238,5.015,1239,5.853,1240,4.669,1241,4.669,1242,6.394,1243,5.015,1244,4.669,1245,5.853]],["title/components/RecoverPasswordComponent.html",[0,0.74,154,1.311]],["body/components/RecoverPasswordComponent.html",[0,1.005,1,1.016,2,1.766,3,0.12,4,0.12,5,1.269,6,1.347,7,1.269,8,1.198,9,0.103,11,1.269,12,2.685,13,2.836,14,1.987,16,1.871,18,0.631,19,0.02,20,2.881,21,0.433,22,0.137,23,0.039,25,0.952,29,0.784,34,2.851,37,3.53,50,3.386,94,2.13,110,2.13,131,0.869,132,1.871,133,1.766,134,1.269,135,2.453,136,1.269,137,0.565,138,1.269,139,1.072,140,1.132,141,2.223,142,1.016,143,1.269,144,1.016,145,1.269,146,1.016,147,1.269,148,1.072,149,1.016,150,1.016,151,1.269,152,1.016,153,1.269,154,1.964,155,2.847,156,1.871,157,1.016,158,0.825,159,1.016,160,1.132,161,1.269,162,1.072,163,1.132,164,1.016,165,1.269,166,1.269,167,0.007,168,0.011,169,0.007,187,1.072,190,0.784,192,1.347,196,0.707,204,0.463,207,0.251,208,0.94,216,0.565,218,0.947,219,0.91,236,1.498,240,1.421,241,0.801,244,2.174,253,0.801,254,0.717,264,0.94,271,2.098,272,0.952,275,1.421,290,1.863,292,1.156,301,1.269,303,0.869,311,1.233,339,1.871,351,3.731,352,3.141,356,2.966,361,4.877,369,2.26,372,3.141,373,4.313,376,2.619,391,2.851,392,3.141,393,1.581,407,3.141,408,1.987,409,3.141,428,2.605,430,2.605,473,1.933,474,2.851,492,2.13,494,2.526,497,2.13,498,1.933,499,2.13,500,2.13,567,1.533,582,1.933,594,4.877,607,4.118,625,2.851,626,2.426,638,2.774,640,2.605,852,1.984,853,1.776,854,1.933,877,2.394,879,2.394,891,2.619,940,2.851,972,2.851,1000,2.619,1068,4.392,1069,4.392,1072,3.433,1077,2.851,1083,2.13,1091,3.738,1093,1.933,1095,1.933,1099,1.933,1100,2.394,1101,3.731,1107,3.141,1110,3.53,1246,5.481,1247,2.13,1248,4.193,1249,3.53,1250,4.193,1251,4.12,1252,2.794,1253,3.53,1254,2.794,1255,2.794,1256,2.794,1257,2.794,1258,3.53,1259,2.394,1260,2.794,1261,2.794,1262,2.794,1263,2.794,1264,2.394,1265,3.53,1266,2.794,1267,2.794,1268,2.794,1269,2.794,1270,2.794,1271,2.794,1272,2.794,1273,2.794,1274,2.794,1275,2.794,1276,2.394,1277,4.12,1278,3.53,1279,3.141]],["title/interceptors/RequestInterceptor.html",[710,2.292,883,2.749]],["body/interceptors/RequestInterceptor.html",[3,0.175,4,0.175,9,0.15,18,0.668,19,0.02,21,0.634,22,0.201,23,0.048,25,1.168,137,0.563,167,0.011,168,0.014,169,0.011,204,0.675,207,0.367,216,0.629,219,0.785,232,1.361,238,2.442,239,2.179,241,1.046,243,2.831,244,2.33,253,1.046,254,0.936,272,1.046,273,3.084,282,1.973,285,2.201,292,1.508,301,1.858,311,1.37,332,1.208,339,1.858,384,2.442,404,5.186,405,3.166,569,3.166,571,2.442,619,5.186,620,3.756,626,4.229,634,4.055,646,3.166,676,2.831,710,3.418,722,3.119,864,3.166,886,4.414,889,5.146,891,3.418,892,4.607,893,4.607,899,3.506,900,5.466,901,5.466,903,4.607,905,4.607,906,3.506,907,4.607,1005,3.506,1219,2.601,1280,3.506,1281,5.378,1282,5.378,1283,4.092,1284,4.092,1285,5.378,1286,4.092,1287,4.092,1288,4.092,1289,4.092,1290,5.378,1291,4.092,1292,4.092,1293,4.092,1294,4.092,1295,4.092]],["title/components/ResetPasswordComponent.html",[0,0.74,157,1.311]],["body/components/ResetPasswordComponent.html",[0,0.906,1,0.856,2,1.552,3,0.101,4,0.101,5,1.069,6,1.135,7,1.069,8,1.009,9,0.086,11,1.069,12,2.604,13,2.75,14,1.746,16,1.644,18,0.591,19,0.02,20,2.597,21,0.365,22,0.115,23,0.019,25,0.458,29,0.66,32,1.628,74,2.016,131,0.732,132,1.644,133,1.552,134,1.069,135,2.25,136,1.069,137,0.56,138,1.069,139,0.903,140,0.954,141,2.004,142,0.856,143,1.069,144,0.856,145,1.069,146,0.856,147,1.069,148,0.903,149,0.856,150,0.856,151,1.069,152,0.856,153,1.069,154,0.856,155,1.009,156,1.644,157,1.801,158,1.939,159,0.856,160,0.954,161,1.069,162,0.903,163,0.954,164,0.856,165,1.069,166,1.069,167,0.006,168,0.01,169,0.006,181,1.746,187,0.903,190,0.66,192,1.135,196,0.596,204,0.496,207,0.211,208,0.826,216,0.615,218,1.045,219,0.944,236,1.945,240,1.709,241,0.704,244,2.082,253,0.858,254,0.768,264,1.007,271,1.009,272,1.04,275,0.812,290,1.948,303,0.732,311,1.342,339,1.644,343,1.859,351,3.364,352,2.76,356,3.02,361,4.629,368,2.899,369,2.42,372,2.76,373,4.07,376,3.149,384,1.644,391,3.427,392,3.777,393,1.901,407,2.76,408,1.746,409,2.76,428,2.928,430,2.389,457,4.543,473,1.628,474,2.505,492,1.794,494,2.724,497,1.794,498,1.628,499,1.794,500,1.794,567,1.291,574,2.008,581,1.794,582,1.628,599,2.505,607,3.777,625,2.505,626,2.131,633,2.301,638,3.02,646,3.148,656,2.76,852,2.384,859,1.496,891,2.301,940,2.505,972,3.427,1000,2.301,1024,2.301,1068,3.364,1069,4.077,1072,3.149,1074,5.448,1077,2.505,1083,1.794,1091,3.053,1093,1.628,1095,1.628,1098,2.016,1099,2.505,1101,3.364,1107,2.76,1111,3.102,1114,3.102,1200,1.628,1201,1.794,1211,2.016,1247,1.794,1248,3.78,1249,3.102,1250,3.78,1253,3.102,1259,2.016,1264,2.016,1265,2.016,1276,2.016,1278,3.102,1279,2.76,1296,5.626,1297,4.954,1298,3.621,1299,4.954,1300,3.621,1301,3.621,1302,3.621,1303,3.621,1304,2.354,1305,4.954,1306,3.621,1307,2.354,1308,3.621,1309,3.621,1310,2.354,1311,2.354,1312,3.621,1313,2.354,1314,3.621,1315,2.354,1316,2.354,1317,2.354,1318,2.354,1319,2.354,1320,2.354,1321,3.621,1322,3.621,1323,2.354,1324,2.354,1325,2.354,1326,2.354,1327,2.354,1328,2.354,1329,2.354,1330,2.354,1331,2.354,1332,2.354,1333,2.354,1334,2.354,1335,2.354,1336,2.354,1337,3.621,1338,3.621,1339,3.621,1340,3.621]],["title/interfaces/RootObject.html",[809,1.546,935,2.495]],["body/interfaces/RootObject.html",[3,0.214,4,0.214,9,0.183,19,0.02,22,0.299,167,0.013,168,0.016,169,0.013,204,0.561,206,2.219,207,0.448,208,1.392,216,0.737,218,1.212,231,2.024,254,1.062,494,2.853,809,3.017,810,2.94,813,2.94,814,3.174,852,2.967,930,3.455,931,3.807,932,3.807,933,3.524,934,4.279,935,4.222,936,5.88,937,5.88]],["title/classes/RouteReusableStrategy.html",[23,0.029,715,2.495]],["body/classes/RouteReusableStrategy.html",[3,0.135,4,0.135,8,1.931,9,0.116,18,0.331,19,0.02,22,0.155,23,0.025,137,0.633,140,1.826,167,0.008,168,0.012,169,0.008,190,0.886,202,1.281,204,0.707,207,0.283,216,0.633,219,0.883,241,0.876,253,1.176,254,1.053,271,2.836,272,1.287,303,1.4,311,1.477,332,1.69,343,3.665,368,3.879,384,3.102,393,1.728,396,5.852,397,4.021,430,3.033,443,3.997,513,4.002,655,3.434,715,3.117,716,4.795,717,5.98,773,3.434,1024,2.863,1341,5.388,1342,2.707,1343,4.505,1344,4.505,1345,7.178,1346,4.505,1347,4.505,1348,4.505,1349,4.505,1350,4.505,1351,4.505,1352,4.505,1353,5.25,1354,5.25,1355,4.505,1356,7.275,1357,3.16,1358,6.981,1359,6.29,1360,4.505,1361,3.16,1362,4.505,1363,3.16,1364,3.16,1365,5.723,1366,3.16,1367,6.05,1368,3.16,1369,5.723,1370,3.16,1371,4.505,1372,3.16,1373,3.16,1374,3.16]],["title/components/SendMessageComponent.html",[0,0.74,159,1.311]],["body/components/SendMessageComponent.html",[0,0.955,1,0.933,2,1.658,3,0.11,4,0.11,5,1.166,6,1.238,7,1.166,8,1.1,9,0.094,11,1.166,12,2.646,13,2.835,14,1.865,16,1.756,18,0.611,19,0.02,20,2.739,21,0.398,22,0.126,23,0.021,25,0.499,29,1.559,32,2.676,131,0.798,132,1.756,133,1.658,134,1.166,135,2.353,136,1.166,137,0.487,138,1.166,139,0.985,140,1.04,141,2.113,142,0.933,143,1.166,144,0.933,145,1.166,146,0.933,147,1.166,148,0.985,149,1.692,150,0.933,151,1.166,152,0.933,153,1.166,154,0.933,155,1.1,156,1.756,157,0.933,158,0.758,159,1.884,160,2.528,161,1.166,162,0.985,163,1.04,164,0.933,165,1.166,166,1.166,167,0.007,168,0.01,169,0.007,187,0.985,190,0.72,196,1.178,204,0.289,207,0.23,208,0.882,216,0.542,218,0.96,219,0.911,231,1.567,236,1.884,240,1.787,241,0.752,249,2.277,253,0.499,254,0.447,264,0.586,267,2.277,272,1.007,275,0.885,292,1.085,301,1.166,311,0.882,339,1.756,343,2.389,356,2.954,369,2.842,376,2.458,382,3.313,393,1.987,403,2.676,413,2.948,428,1.865,430,1.238,448,2.676,469,1.986,489,2.948,494,2.528,498,1.776,520,5.162,521,2.199,551,2.199,620,2.277,625,3.584,817,1.986,827,3.22,886,2.676,940,2.676,967,4.438,985,2.199,987,3.987,988,3.987,990,2.199,992,2.199,993,1.776,994,2.199,995,2.199,1000,1.631,1002,4.438,1003,1.957,1006,5.004,1023,3.313,1072,3.292,1077,2.676,1091,3.584,1093,1.776,1099,1.776,1258,3.313,1279,3.949,1375,5.469,1376,4.867,1377,2.199,1378,4.654,1379,3.867,1380,4.654,1381,4.654,1382,4.654,1383,5.18,1384,5.18,1385,5.18,1386,2.567,1387,3.867,1388,3.867,1389,2.567,1390,5.841,1391,3.987,1392,3.867,1393,3.867,1394,5.18,1395,3.867,1396,2.567,1397,3.867,1398,3.867,1399,2.567,1400,3.313,1401,3.867,1402,2.567,1403,3.867,1404,2.567,1405,2.567,1406,3.867,1407,2.199,1408,2.567,1409,2.567,1410,2.567,1411,2.567,1412,2.567,1413,2.567,1414,2.567,1415,2.567,1416,2.567,1417,2.567,1418,2.567,1419,2.567,1420,2.567,1421,2.567,1422,2.567,1423,2.567,1424,2.567,1425,2.567,1426,2.567,1427,2.199,1428,3.867,1429,2.567,1430,2.567,1431,3.867,1432,2.567,1433,5.18,1434,3.867,1435,3.867,1436,3.867,1437,2.567,1438,5.18,1439,2.567,1440,2.567,1441,3.867,1442,2.567,1443,3.867,1444,2.567,1445,2.567,1446,2.567,1447,2.567,1448,2.567,1449,2.567,1450,2.567,1451,2.567,1452,2.567,1453,2.567,1454,2.567,1455,2.567,1456,2.567]],["title/classes/SsnValidation.html",[23,0.029,1457,2.749]],["body/classes/SsnValidation.html",[3,0.187,4,0.187,9,0.16,18,0.586,19,0.02,22,0.214,23,0.035,34,3.017,137,0.456,167,0.012,168,0.015,169,0.012,187,1.673,196,1.752,202,1.767,204,0.49,207,0.391,216,0.456,218,0.921,219,0.637,241,1.09,253,0.848,254,0.759,264,1.279,271,2.403,272,1.09,283,3.017,284,2.567,290,1.933,311,0.995,391,3.878,408,2.703,469,3.18,494,2.272,780,3.937,852,2.272,855,2.772,857,4.789,859,3.562,860,3.878,861,3.878,862,3.878,863,3.3,864,3.3,865,3.562,866,3.878,867,3.562,868,3.878,874,4.285,933,2.239,1219,3.562,1243,4.802,1457,4.984,1458,4.802,1459,5.606,1460,4.361,1461,4.722,1462,4.361,1463,4.361,1464,3.736,1465,4.361,1466,4.361,1467,4.361,1468,5.307,1469,5.307,1470,5.606,1471,5.606,1472,5.606,1473,4.273,1474,4.361,1475,4.802,1476,4.361,1477,4.361,1478,4.361,1479,5.606,1480,4.361,1481,5.606]],["title/injectables/StaticsService.html",[232,0.913,711,2.292]],["body/injectables/StaticsService.html",[3,0.154,4,0.154,9,0.132,18,0.664,19,0.02,21,0.558,22,0.177,23,0.045,25,1.234,28,5.19,137,0.377,149,2.486,167,0.01,168,0.013,169,0.01,196,1.425,204,0.405,207,0.323,208,1.126,211,2.906,212,2.906,216,0.702,218,1.043,219,0.926,232,1.249,234,1.736,236,1.795,241,0.96,247,2.707,248,2.707,249,3.566,250,3.089,251,3.366,252,3.111,253,0.7,254,0.627,259,1.459,263,4.034,264,1.126,267,3.566,272,1.178,273,3.561,275,1.702,277,2.12,278,2.289,279,2.289,280,1.736,281,1.975,282,1.736,290,1.702,291,1.975,292,1.384,294,2.12,295,2.12,296,2.289,297,2.289,298,1.849,299,1.975,300,1.975,302,2.289,303,1.973,304,2.289,305,2.289,306,2.289,332,1.457,343,3.366,669,3.111,711,3.137,840,2.745,1482,2.745,1483,4.936,1484,6.836,1485,6.836,1486,5.632,1487,5.632,1488,4.936,1489,6.059,1490,4.936,1491,4.936,1492,3.601,1493,3.601,1494,6.059,1495,3.601,1496,3.601,1497,6.059,1498,4.936,1499,4.936,1500,3.601,1501,4.936,1502,3.601,1503,4.936,1504,4.936,1505,3.601]],["title/guards/UnauthenticatedGuard.html",[560,2.292,597,2.292]],["body/guards/UnauthenticatedGuard.html",[3,0.181,4,0.181,9,0.155,18,0.638,19,0.02,21,0.654,22,0.207,23,0.049,25,1.255,137,0.441,167,0.011,168,0.015,169,0.011,188,2.646,190,1.183,198,3.763,204,0.617,207,0.378,216,0.441,219,0.801,232,1.389,239,2.616,240,1.892,241,1.067,244,2.318,253,0.82,254,0.734,262,3.23,264,1.473,272,1.067,285,1.892,303,1.705,311,1.252,332,1.62,339,1.916,356,3.172,368,3.315,384,2.492,395,3.796,405,3.23,408,2.646,428,2.646,430,2.034,443,4.103,445,3.796,446,3.487,549,3.487,560,3.487,561,3.216,563,4.182,564,4.7,565,4.182,566,4.7,567,2.314,569,3.801,570,4.182,571,2.492,573,4.182,574,2.223,575,4.7,576,4.7,577,4.7,578,4.7,579,2.646,580,3.614,581,3.216,583,2.681,597,3.487,1506,3.614,1507,6.456,1508,4.219,1509,4.219,1510,4.219]],["title/interfaces/User.html",[574,1.461,809,1.546]],["body/interfaces/User.html",[3,0.202,4,0.202,9,0.173,19,0.02,22,0.315,112,3.625,137,0.704,167,0.013,168,0.016,169,0.013,204,0.53,206,2.334,207,0.422,208,1.343,209,3.054,216,0.739,218,1.226,254,1.024,285,1.625,574,2.861,579,2.272,604,2.839,630,3.26,638,2.419,640,3.243,646,2.774,809,3.07,810,2.774,811,3.26,812,2.994,813,2.774,814,2.994,815,2.994,816,3.592,817,3.453,818,5.127,819,5.127]],["title/classes/Volunteer.html",[23,0.029,29,1.011]],["body/classes/Volunteer.html",[3,0.17,4,0.17,9,0.146,19,0.02,22,0.195,23,0.032,25,1.151,29,1.66,137,0.72,167,0.011,168,0.014,169,0.011,201,3.485,202,1.61,204,0.447,205,2.748,206,1.444,207,0.356,208,1.203,209,2.864,210,4.096,211,3.485,212,3.485,213,4.096,214,3.039,216,0.79,217,4.096,218,1.254,219,1.089,222,4.363,231,2.399,269,2.748,640,2.855,726,2.748,727,4.513,729,3.028,752,3.762,817,3.039,933,2.707,1125,4.513,1128,4.363,1461,4.513,1511,3.403,1512,5.072,1513,5.274,1514,3.972,1515,3.972,1516,3.972,1517,3.972,1518,3.972,1519,3.972,1520,3.972,1521,3.972,1522,3.972,1523,3.972,1524,3.972,1525,3.972,1526,3.972,1527,3.972,1528,3.972,1529,3.972,1530,3.972,1531,3.403]],["title/components/VolunteerPage.html",[0,0.74,164,1.311]],["body/components/VolunteerPage.html",[0,1.304,1,1.673,2,2.486,3,0.197,4,0.197,5,2.09,6,2.219,7,2.09,8,1.973,9,0.169,11,2.09,12,2.874,13,3.036,14,2.797,16,2.634,18,0.482,19,0.02,21,0.713,22,0.226,23,0.037,24,3.184,25,0.895,29,1.782,131,1.431,132,2.634,133,2.486,134,2.09,135,3.029,136,2.09,137,0.607,138,2.09,139,1.766,140,1.865,141,2.885,142,1.673,143,2.09,144,1.673,145,2.09,146,1.673,147,2.09,148,1.766,149,1.673,150,1.673,151,2.09,152,1.673,153,2.09,154,1.673,155,1.973,156,2.634,157,1.673,158,1.359,159,1.673,160,1.865,161,2.09,162,1.766,163,1.865,164,2.425,165,2.09,166,2.09,167,0.012,168,0.015,169,0.012,1532,3.943,1533,6.352,1534,5.801]],["title/modules/VolunteerPageModule.html",[170,1.311,1535,2.495]],["body/modules/VolunteerPageModule.html",[0,1.365,3,0.177,4,0.177,9,0.152,18,0.759,19,0.02,21,0.641,22,0.203,23,0.033,131,1.286,139,2.668,140,2.195,148,2.668,149,1.97,158,1.222,159,2.528,160,2.195,162,2.668,163,2.195,164,2.528,167,0.011,168,0.014,169,0.011,170,1.504,172,1.879,173,1.995,174,3.313,175,2.27,176,2.27,177,2.124,180,2.972,181,1.995,183,2.972,184,3.443,185,2.27,186,3.748,187,1.587,188,2.913,189,2.436,190,1.161,191,3.443,192,1.995,194,3.504,195,3.154,196,1.047,197,3.916,198,3.649,199,2.27,200,3.154,412,2.863,414,2.863,418,2.863,592,4.641,1376,3.154,1535,5.1,1536,3.545,1537,3.545,1538,4.138,1539,4.138,1540,6.04,1541,4.138]],["title/injectables/VolunteerService.html",[232,0.913,245,2.123]],["body/injectables/VolunteerService.html",[3,0.06,4,0.06,9,0.051,12,1.697,18,0.542,19,0.021,21,0.216,22,0.068,23,0.025,25,0.599,29,1.929,112,1.213,125,1.801,137,0.707,149,1.608,167,0.004,168,0.01,169,0.004,196,1.516,201,1.391,204,0.636,206,1.608,207,0.212,208,1.009,209,1.073,211,2.604,212,2.922,214,2.832,216,0.678,218,1.197,219,0.826,231,2.764,232,0.598,234,0.671,236,1.321,238,1.649,239,1.472,240,1.526,241,0.459,245,1.391,247,1.296,248,1.296,249,2.138,250,1.69,251,2.271,252,3.269,253,1.124,254,0.96,257,1.391,258,2.922,259,2.497,260,1.635,261,4.635,264,1.319,265,3.864,267,1.391,268,2.024,269,2.131,270,1.801,271,1.744,272,1.198,273,3.396,274,1.635,275,0.48,276,1.502,277,0.819,278,0.884,279,0.884,280,0.671,281,0.763,282,0.671,283,0.962,284,0.819,288,1.192,289,1.502,290,0.815,291,0.763,292,1.831,294,0.819,295,0.819,296,0.884,297,0.884,298,0.714,299,0.763,300,0.763,301,0.632,302,0.884,303,1.265,304,0.884,305,0.884,306,0.884,307,0.962,308,0.962,311,1.509,315,3.111,322,1.635,323,1.635,324,1.635,325,1.635,328,3.06,331,1.06,332,1.466,334,0.962,335,1.192,337,3.264,384,2.009,393,0.907,397,1.391,428,3.19,469,0.714,665,1.635,669,1.213,706,2.777,724,3.506,726,2.131,729,2.348,752,0.884,759,1.801,760,3.79,763,2.769,772,4.434,773,2.769,785,3.102,786,1.801,788,3.102,804,2.024,805,1.801,807,1.06,813,0.819,817,2.422,827,4.72,829,1.06,863,1.391,867,2.308,933,3.543,993,1.635,1024,3.155,1031,1.801,1125,1.06,1128,2.131,1153,2.024,1161,3.79,1168,2.024,1170,3.79,1171,2.024,1176,2.024,1177,1.192,1187,2.024,1188,2.024,1189,1.192,1191,1.192,1192,1.192,1193,3.111,1194,2.024,1195,1.192,1196,1.192,1197,1.192,1198,2.024,1199,1.192,1461,4.697,1512,1.192,1531,2.024,1542,1.06,1543,2.363,1544,2.363,1545,2.363,1546,2.363,1547,2.363,1548,2.363,1549,2.363,1550,3.632,1551,2.363,1552,1.391,1553,2.363,1554,2.363,1555,1.391,1556,3.632,1557,2.363,1558,3.081,1559,2.363,1560,2.363,1561,1.391,1562,2.363,1563,2.363,1564,2.363,1565,1.391,1566,2.363,1567,6.236,1568,1.391,1569,3.632,1570,3.632,1571,4.424,1572,4.424,1573,4.424,1574,4.424,1575,2.363,1576,1.391,1577,2.363,1578,1.391,1579,2.363,1580,1.391,1581,1.391,1582,2.363,1583,1.391,1584,2.363,1585,2.363,1586,2.363,1587,4.069,1588,2.363,1589,1.391,1590,1.391,1591,1.06,1592,1.391,1593,3.081,1594,2.363,1595,1.391,1596,4.424,1597,1.391,1598,3.081,1599,3.081,1600,1.391,1601,1.391,1602,3.081,1603,1.391,1604,1.391,1605,1.391,1606,1.391,1607,3.081,1608,3.081,1609,1.391,1610,1.391,1611,3.632,1612,1.391,1613,3.081,1614,1.391,1615,1.391,1616,1.391,1617,1.391,1618,1.391,1619,1.391,1620,1.391,1621,1.391,1622,1.391,1623,1.391,1624,2.363,1625,2.363,1626,2.363,1627,2.363,1628,2.363,1629,2.363,1630,2.363,1631,2.363,1632,2.363,1633,2.363,1634,2.363,1635,2.363,1636,3.081,1637,2.363,1638,3.632,1639,1.391]],["title/coverage.html",[1640,4.233]],["body/coverage.html",[0,1.409,1,1.001,9,0.101,10,2.358,19,0.02,23,0.054,29,0.772,139,1.056,142,1.001,144,1.001,146,1.001,148,1.056,150,1.001,152,1.001,154,1.001,157,1.001,159,1.001,162,1.056,164,1.001,167,0.007,168,0.011,169,0.007,194,1.413,201,1.62,203,2.358,214,1.413,216,0.288,232,1.612,233,1.749,235,3.699,244,0.901,245,1.62,276,1.749,280,2.586,291,3.14,292,0.772,299,3.14,338,2.358,357,1.413,359,1.749,412,1.904,414,1.904,418,1.904,457,1.904,469,3.185,529,2.098,530,2.358,560,2.59,562,2.358,574,1.115,584,2.358,594,2.098,597,1.749,601,3.106,604,1.327,679,2.819,706,1.62,707,1.749,708,1.62,709,1.749,710,1.749,711,1.749,715,1.904,716,2.098,724,1.749,725,2.358,741,3.699,809,2.454,811,3.357,815,1.749,820,5.118,821,5.118,828,2.098,830,2.098,831,2.098,832,2.098,834,2.098,836,2.098,837,2.098,838,2.098,839,2.098,841,2.098,853,1.749,854,1.904,855,3.408,874,1.904,883,3.106,884,3.106,885,3.106,904,4.57,930,1.904,931,3.106,935,1.904,938,2.358,939,2.358,959,2.358,1003,5.748,1014,4.729,1015,4.729,1065,2.358,1115,2.358,1123,2.358,1147,3.699,1200,1.904,1201,2.098,1219,1.749,1237,2.098,1238,2.358,1246,2.358,1247,3.106,1280,2.358,1296,2.358,1341,2.358,1342,2.358,1375,2.358,1376,2.098,1377,2.358,1457,2.098,1458,2.358,1473,3.106,1482,3.699,1506,2.358,1511,2.358,1532,2.358,1542,4.088,1591,2.098,1640,2.358,1641,2.753,1642,2.753,1643,2.753,1644,2.753,1645,2.753,1646,2.753,1647,4.852,1648,4.075,1649,7.373,1650,7.414,1651,4.075,1652,2.753,1653,2.358,1654,2.358,1655,2.358,1656,2.358,1657,2.358,1658,2.358,1659,2.753,1660,2.753,1661,2.753,1662,4.075,1663,4.075,1664,2.753,1665,2.753,1666,2.753,1667,4.075,1668,4.075,1669,4.075,1670,4.075,1671,2.753,1672,2.753,1673,2.753,1674,2.753,1675,5.725,1676,5.363,1677,4.852,1678,2.753,1679,2.753,1680,2.753,1681,2.753,1682,2.753,1683,2.753,1684,2.753,1685,2.753,1686,2.753,1687,2.753,1688,2.753,1689,4.852,1690,2.753,1691,2.753,1692,2.753,1693,2.753,1694,2.753,1695,2.753,1696,2.753,1697,2.753,1698,2.753,1699,2.753,1700,2.358,1701,2.358,1702,2.358,1703,2.358,1704,3.491,1705,2.358,1706,2.358,1707,2.753]],["title/dependencies.html",[173,2.094,1708,3.002]],["body/dependencies.html",[13,1.865,19,0.02,21,0.713,167,0.012,168,0.015,169,0.012,173,2.219,185,2.525,187,1.766,190,1.291,192,2.219,251,2.978,282,2.219,289,2.925,294,2.709,295,4.047,363,6.013,366,3.184,367,3.943,448,5.032,449,3.509,451,3.509,453,2.925,454,3.943,455,3.943,511,4.97,512,4.394,517,3.943,518,3.943,520,3.509,522,3.943,523,3.943,1391,3.943,1407,3.943,1427,3.943,1709,7.126,1710,4.602,1711,4.602,1712,5.801,1713,4.602,1714,6.669,1715,4.602,1716,4.602,1717,4.602,1718,4.602,1719,4.602,1720,4.602,1721,4.602,1722,4.602,1723,4.602,1724,4.602,1725,4.602,1726,4.602,1727,4.602,1728,4.602,1729,4.602,1730,4.602,1731,4.602,1732,4.602,1733,4.602,1734,4.602,1735,5.801,1736,4.602,1737,4.602,1738,4.602,1739,4.602,1740,4.602]],["title/miscellaneous/functions.html",[1741,2.077,1742,3.72]],["body/miscellaneous/functions.html",[19,0.019,137,0.773,167,0.012,168,0.016,169,0.012,204,0.776,207,0.418,216,0.773,247,2.556,253,1.342,254,1.201,257,2.744,258,2.744,259,2.589,264,1.458,616,4.871,633,2.962,634,2.962,655,5.26,669,3.002,812,4.258,933,2.393,1014,3.553,1015,5.447,1035,3.993,1042,5.912,1043,5.473,1044,3.993,1045,3.993,1052,3.993,1053,3.993,1054,3.993,1400,3.993,1653,5.009,1654,5.009,1655,5.009,1656,5.473,1657,5.009,1658,5.009,1741,3.224,1742,3.993,1743,7.041,1744,4.661,1745,4.661,1746,4.661,1747,4.661]],["title/index.html",[207,0.323,1748,3.089]],["body/index.html",[1,2.162,2,1.718,19,0.02,131,1.246,139,2.282,142,2.509,144,2.162,146,2.162,148,2.282,150,2.162,152,2.162,154,2.162,157,2.162,158,1.184,159,2.162,162,2.282,164,2.162,167,0.011,168,0.014,169,0.011,170,1.458,171,4.379,172,1.821,173,1.933,174,2.199,175,2.199,176,2.199,177,2.058,178,3.435,179,3.435,180,2.91,181,1.933,188,1.933,202,1.625,233,3.78,234,1.933,244,1.947,245,3.501,357,3.053,502,4.905,503,3.435,504,3.435,505,3.435,506,3.435,507,3.78,508,4.801,561,3.056,588,5.025,589,3.435,590,3.435,704,3.435,705,3.435,706,3.501,707,3.78,708,3.501,709,3.78,710,4.023,711,3.78,810,2.36,1008,4.379,1009,3.435,1010,3.435,1219,2.548,1464,3.435,1468,3.435,1469,3.435,1473,3.056,1475,3.435,1535,5.025,1536,3.435,1537,3.435,1748,3.435,1749,4.009]],["title/modules.html",[172,2.244]],["body/modules.html",[19,0.017,167,0.015,168,0.017,169,0.015,171,3.809,172,2.5,377,4.716,502,3.809,507,3.499,508,3.499,512,5.067,588,3.809,1008,3.809,1535,3.809,1750,7.324,1751,7.324,1752,7.394,1753,5.505]],["title/routes.html",[188,2.382]],["body/routes.html",[19,0.018,167,0.016,168,0.018,169,0.016,188,2.862]],["title/miscellaneous/variables.html",[1741,2.077,1754,3.72]],["body/miscellaneous/variables.html",[19,0.02,167,0.008,168,0.011,169,0.008,206,2.005,207,0.262,216,0.678,218,0.699,235,2.224,237,4.817,250,3.681,251,3.445,252,3.713,259,2.786,263,3.726,264,1.687,275,2.556,280,3.315,290,2.494,291,3.681,292,2.029,293,3.242,298,3.445,299,3.681,300,3.681,303,1.322,430,2.42,431,2.018,601,2.224,604,2.659,665,3.815,678,2.942,679,3.815,741,2.224,752,3.89,782,3.242,820,2.224,821,5.183,827,4.234,828,3.242,829,3.242,830,3.242,831,3.242,832,3.242,833,4.666,834,3.242,835,3.242,836,3.242,837,3.242,838,3.242,839,3.242,840,3.242,841,3.242,884,2.224,885,3.242,911,2.499,1147,2.224,1482,2.224,1542,2.224,1591,3.242,1700,2.499,1701,2.499,1702,2.499,1703,2.499,1704,2.499,1705,3.643,1706,3.643,1741,2.018,1754,2.499,1755,4.253,1756,2.917,1757,2.917,1758,5.019,1759,2.917,1760,2.917,1761,2.917,1762,2.917,1763,6.71,1764,4.253,1765,4.253,1766,4.253,1767,4.253,1768,2.917,1769,2.917,1770,5.515,1771,2.917,1772,5.863,1773,5.019,1774,6.121,1775,5.019,1776,5.019,1777,5.019,1778,5.019,1779,5.019,1780,2.917,1781,2.917]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":469,"title":{},"body":{"components/AppComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"classes/PhoneValidation.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["0.8.29",{"_index":1740,"title":{},"body":{"dependencies.html":{}}}],["0.9.3",{"_index":1728,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1675,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1680,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1644,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":980,"title":{},"body":{"components/HomePage.html":{}}}],["1",{"_index":1470,"title":{},"body":{"classes/SsnValidation.html":{}}}],["1.0.0",{"_index":1730,"title":{},"body":{"dependencies.html":{}}}],["1.0.20",{"_index":1733,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1738,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1650,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":1659,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":1666,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1677,"title":{},"body":{"coverage.html":{}}}],["1/20",{"_index":1669,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1663,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1661,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1668,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1665,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1243,"title":{},"body":{"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["10/10",{"_index":1648,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":1686,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1003,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{},"coverage.html":{}}}],["1000",{"_index":489,"title":{},"body":{"components/AppComponent.html":{},"injectables/LocalStorageService.html":{},"components/SendMessageComponent.html":{}}}],["100px",{"_index":1450,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["10px",{"_index":992,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["11",{"_index":1475,"title":{},"body":{"classes/SsnValidation.html":{},"index.html":{}}}],["11/11",{"_index":1671,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1244,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["12px",{"_index":989,"title":{},"body":{"components/HomePage.html":{}}}],["13",{"_index":1464,"title":{},"body":{"classes/SsnValidation.html":{},"index.html":{}}}],["13/13",{"_index":1674,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1664,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1468,"title":{},"body":{"classes/SsnValidation.html":{},"index.html":{}}}],["2.0.6",{"_index":1721,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":1734,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1732,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1672,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1679,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1687,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1667,"title":{},"body":{"coverage.html":{}}}],["23/25",{"_index":1699,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":1048,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["24/28",{"_index":1691,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":1444,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["25",{"_index":1660,"title":{},"body":{"coverage.html":{}}}],["25px",{"_index":1455,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["27",{"_index":1749,"title":{},"body":{"index.html":{}}}],["2px",{"_index":984,"title":{},"body":{"components/HomePage.html":{}}}],["3",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/SsnValidation.html":{}}}],["3.1.0",{"_index":1729,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1647,"title":{},"body":{"coverage.html":{}}}],["30/32",{"_index":1694,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":474,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["300px",{"_index":1456,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["30px",{"_index":1451,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["33",{"_index":1662,"title":{},"body":{"coverage.html":{}}}],["35px",{"_index":1452,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["4",{"_index":1471,"title":{},"body":{"classes/SsnValidation.html":{}}}],["4.0.3",{"_index":1727,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":1719,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1651,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":917,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["401",{"_index":916,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["5",{"_index":1473,"title":{},"body":{"classes/SsnValidation.html":{},"coverage.html":{},"index.html":{}}}],["5.0.0",{"_index":1718,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":1726,"title":{},"body":{"dependencies.html":{}}}],["5.11.0",{"_index":1714,"title":{},"body":{"dependencies.html":{}}}],["5.12.0",{"_index":1716,"title":{},"body":{"dependencies.html":{}}}],["5.9.0",{"_index":1712,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1673,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["50px",{"_index":1445,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["5px",{"_index":981,"title":{},"body":{"components/HomePage.html":{}}}],["6",{"_index":1472,"title":{},"body":{"classes/SsnValidation.html":{}}}],["6.4.0",{"_index":1723,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":1736,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1670,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":1682,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1049,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["66",{"_index":1678,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1469,"title":{},"body":{"classes/SsnValidation.html":{},"index.html":{}}}],["7.1.1",{"_index":1735,"title":{},"body":{"dependencies.html":{}}}],["7.2.2",{"_index":1709,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":1684,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":1696,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":1645,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1681,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1695,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1219,"title":{},"body":{"classes/PasswordValidation.html":{},"interceptors/RequestInterceptor.html":{},"classes/SsnValidation.html":{},"coverage.html":{},"index.html":{}}}],["8.0.0",{"_index":1724,"title":{},"body":{"dependencies.html":{}}}],["8/11",{"_index":1646,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1652,"title":{},"body":{"coverage.html":{}}}],["80px",{"_index":991,"title":{},"body":{"components/HomePage.html":{}}}],["83",{"_index":1685,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1690,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1683,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":874,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{},"coverage.html":{}}}],["9._",{"_index":873,"title":{},"body":{"classes/EmailValidation.html":{}}}],["92",{"_index":1698,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1693,"title":{},"body":{"coverage.html":{}}}],["_\\ufff0",{"_index":1505,"title":{},"body":{"injectables/StaticsService.html":{}}}],["_credentials",{"_index":603,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["_errors",{"_index":941,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["_global_",{"_index":926,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["_id",{"_index":209,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["_rev",{"_index":210,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["aaist",{"_index":1192,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["about'},{'name",{"_index":138,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["about.page",{"_index":193,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["about.page.html",{"_index":17,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page.scss",{"_index":15,"title":{},"body":{"components/AboutPage.html":{}}}],["aboutpage",{"_index":1,"title":{"components/AboutPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["aboutpagemodule",{"_index":171,"title":{"modules/AboutPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"index.html":{},"modules.html":{}}}],["abstract",{"_index":860,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["abstractcontrol",{"_index":857,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["abstractcontrol.get('confirmpassword').seterrors",{"_index":1213,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["abstractcontrol.get('confirmpassword').value",{"_index":1212,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["abstractcontrol.get('password').value",{"_index":1210,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["abstractcontrol.value",{"_index":869,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{}}}],["accept",{"_index":1289,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["access",{"_index":575,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["accessed",{"_index":1309,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["accessors",{"_index":609,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["accesstoken",{"_index":610,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["acestei",{"_index":76,"title":{},"body":{"components/AboutPage.html":{}}}],["aceștia",{"_index":88,"title":{},"body":{"components/AboutPage.html":{}}}],["acredited",{"_index":726,"title":{},"body":{"classes/Course.html":{},"injectables/CourseService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["acredited.id",{"_index":784,"title":{},"body":{"injectables/CourseService.html":{}}}],["action",{"_index":966,"title":{},"body":{"components/HomePage.html":{}}}],["action.title",{"_index":975,"title":{},"body":{"components/HomePage.html":{}}}],["actions",{"_index":962,"title":{},"body":{"components/HomePage.html":{}}}],["activated",{"_index":1358,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["activatedroute",{"_index":1299,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["activatedroutesnapshot",{"_index":1356,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["actual_component",{"_index":166,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["adaug",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["add",{"_index":140,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{}}}],["added",{"_index":296,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["added_by",{"_index":727,"title":{},"body":{"classes/Course.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["addimage",{"_index":1383,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["additional",{"_index":905,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["address",{"_index":1124,"title":{},"body":{"classes/Organisation.html":{}}}],["adds",{"_index":886,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{}}}],["addvolunteercomponent",{"_index":139,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["administrare",{"_index":51,"title":{},"body":{"components/AboutPage.html":{}}}],["administrarea",{"_index":102,"title":{},"body":{"components/AboutPage.html":{}}}],["adres",{"_index":1110,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["adresa",{"_index":877,"title":{},"body":{"classes/EmailValidation.html":{},"components/RecoverPasswordComponent.html":{}}}],["afterviewinit",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["ajutorul",{"_index":75,"title":{},"body":{"components/AboutPage.html":{}}}],["al",{"_index":70,"title":{},"body":{"components/AboutPage.html":{}}}],["align",{"_index":994,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["allocated",{"_index":266,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocates",{"_index":1557,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocatevolunteer",{"_index":1543,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocatevolunteer(allocationid",{"_index":1554,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocation",{"_index":201,"title":{"classes/Allocation.html":{}},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["allocation.city",{"_index":320,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.county",{"_index":319,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.created_at",{"_index":321,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.organisation",{"_index":329,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.rescue_officer",{"_index":316,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.type",{"_index":327,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.updated_at",{"_index":326,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.volunteer",{"_index":313,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocationid",{"_index":1558,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocations",{"_index":237,"title":{},"body":{"injectables/AllocationService.html":{},"classes/DatabaseSyncService.html":{},"miscellaneous/variables.html":{}}}],["allocationservice",{"_index":233,"title":{"injectables/AllocationService.html":{}},"body":{"injectables/AllocationService.html":{},"modules/CoreModule.html":{},"coverage.html":{},"index.html":{}}}],["allowed",{"_index":577,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["allowing",{"_index":1343,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["aloca",{"_index":114,"title":{},"body":{"components/AboutPage.html":{}}}],["already",{"_index":1308,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["alt",{"_index":71,"title":{},"body":{"components/AboutPage.html":{}}}],["android",{"_index":1427,"title":{},"body":{"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["angular",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["angular/common",{"_index":185,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":676,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["angular/core",{"_index":21,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":187,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"classes/EmailValidation.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1710,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":511,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":190,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["apeleaz",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["api.lxhost.ro",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api.lxhost.ro/api",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aplicația",{"_index":99,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["aplicație",{"_index":27,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["aplicației",{"_index":79,"title":{},"body":{"components/AboutPage.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"dependencies.html":{}}}],["app.component",{"_index":515,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":142,"title":{"components/AppComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["application",{"_index":375,"title":{},"body":{"components/AppComponent.html":{}}}],["application/json",{"_index":1290,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["appmodule",{"_index":502,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["apppage",{"_index":529,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["apppages",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["approutingmodule",{"_index":507,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["apărut",{"_index":1334,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["apăsați",{"_index":495,"title":{},"body":{"components/AppComponent.html":{}}}],["ar",{"_index":43,"title":{},"body":{"components/AboutPage.html":{}}}],["array.from(string(ssn",{"_index":1466,"title":{},"body":{"classes/SsnValidation.html":{}}}],["asemenea",{"_index":98,"title":{},"body":{"components/AboutPage.html":{}}}],["async",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["attachments",{"_index":787,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{}}}],["attributes",{"_index":937,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["atât",{"_index":1267,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["autentificare",{"_index":1278,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["auth",{"_index":556,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/logout",{"_index":423,"title":{},"body":{"components/AppComponent.html":{}}}],["auth/reset/:token",{"_index":485,"title":{},"body":{"components/AppComponent.html":{}}}],["authenticated",{"_index":565,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/UnauthenticatedGuard.html":{}}}],["authenticates",{"_index":661,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication",{"_index":285,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{}}}],["authentication'},{'name",{"_index":145,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["authentication.credentials",{"_index":651,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication.loginpayload",{"_index":623,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication.page",{"_index":593,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["authentication.page.html",{"_index":586,"title":{},"body":{"components/AuthenticationPage.html":{}}}],["authentication.page.scss",{"_index":585,"title":{},"body":{"components/AuthenticationPage.html":{}}}],["authentication.service",{"_index":580,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["authentication.user",{"_index":675,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication/authentication.service",{"_index":1286,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["authentication/unauthenticated.guard",{"_index":719,"title":{},"body":{"modules/CoreModule.html":{}}}],["authenticationguard",{"_index":194,"title":{"guards/AuthenticationGuard.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["authenticationpage",{"_index":144,"title":{"components/AuthenticationPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["authenticationpagemodule",{"_index":588,"title":{"modules/AuthenticationPageModule.html":{}},"body":{"modules/AuthenticationPageModule.html":{},"index.html":{},"modules.html":{}}}],["authenticationservice",{"_index":244,"title":{"injectables/AuthenticationService.html":{}},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{},"coverage.html":{},"index.html":{}}}],["authorization",{"_index":1292,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["authservice",{"_index":753,"title":{},"body":{"injectables/CourseService.html":{}}}],["automatically",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/SsnValidation.html":{},"guards/UnauthenticatedGuard.html":{}}}],["available",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"modules.html":{}}}],["avea",{"_index":44,"title":{},"body":{"components/AboutPage.html":{}}}],["await",{"_index":492,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["b",{"_index":1481,"title":{},"body":{"classes/SsnValidation.html":{}}}],["back",{"_index":381,"title":{},"body":{"components/AppComponent.html":{}}}],["backend",{"_index":627,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["background",{"_index":1447,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["bank",{"_index":130,"title":{},"body":{"components/AboutPage.html":{}}}],["bar",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["bar/ngx",{"_index":452,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["base64",{"_index":1393,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["base64image",{"_index":1380,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["basic",{"_index":602,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/LocalStorageService.html":{}}}],["baza",{"_index":111,"title":{},"body":{"components/AboutPage.html":{}}}],["bearer",{"_index":1293,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["being",{"_index":864,"title":{},"body":{"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"interceptors/RequestInterceptor.html":{},"classes/SsnValidation.html":{}}}],["belong",{"_index":771,"title":{},"body":{"injectables/CourseService.html":{}}}],["black",{"_index":986,"title":{},"body":{"components/HomePage.html":{}}}],["block",{"_index":1454,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["body",{"_index":629,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["boolean",{"_index":443,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/RouteReusableStrategy.html":{},"guards/UnauthenticatedGuard.html":{}}}],["bootstrap",{"_index":175,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["bottom",{"_index":498,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["box",{"_index":978,"title":{},"body":{"components/HomePage.html":{}}}],["browse",{"_index":1752,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":512,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(destination",{"_index":540,"title":{},"body":{"classes/AppPage.html":{}}}],["browser.gettitle",{"_index":541,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/ngx",{"_index":524,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":510,"title":{},"body":{"modules/AppModule.html":{}}}],["bun",{"_index":119,"title":{},"body":{"components/AboutPage.html":{}}}],["button",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"components/SendMessageComponent.html":{}}}],["c",{"_index":1058,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["ca",{"_index":1056,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["calamități",{"_index":40,"title":{},"body":{"components/AboutPage.html":{}}}],["call",{"_index":971,"title":{},"body":{"components/HomePage.html":{}}}],["camera",{"_index":1391,"title":{},"body":{"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["camera.destinationtype.data_url",{"_index":1418,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["camera.getpicture",{"_index":1416,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["canactivate",{"_index":198,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"modules/HomePageModule.html":{},"guards/UnauthenticatedGuard.html":{},"modules/VolunteerPageModule.html":{}}}],["caracter",{"_index":1224,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["caractere",{"_index":1220,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["care",{"_index":42,"title":{},"body":{"components/AboutPage.html":{}}}],["catch(error",{"_index":849,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["catcherror",{"_index":908,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["caz",{"_index":105,"title":{},"body":{"components/AboutPage.html":{}}}],["cazul",{"_index":65,"title":{},"body":{"components/AboutPage.html":{}}}],["center",{"_index":995,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["change",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{}}}],["changed",{"_index":951,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["changes",{"_index":1314,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["charset=utf",{"_index":1291,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["checkpemission",{"_index":1384,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["checks",{"_index":1023,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/SendMessageComponent.html":{}}}],["cities",{"_index":1485,"title":{},"body":{"injectables/StaticsService.html":{}}}],["city",{"_index":211,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Organisation.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["city._id.tostring",{"_index":1603,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["city.id",{"_index":1595,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["city.name",{"_index":1604,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["city_",{"_index":1503,"title":{},"body":{"injectables/StaticsService.html":{}}}],["city_type",{"_index":1486,"title":{},"body":{"injectables/StaticsService.html":{}}}],["civil",{"_index":60,"title":{},"body":{"components/AboutPage.html":{}}}],["class",{"_index":23,"title":{"classes/Allocation.html":{},"classes/AppPage.html":{},"classes/Course.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"classes/Organisation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/RouteReusableStrategy.html":{},"classes/SsnValidation.html":{},"classes/Volunteer.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["classes",{"_index":202,"title":{},"body":{"classes/Allocation.html":{},"classes/AppPage.html":{},"classes/Course.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"classes/Organisation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/RouteReusableStrategy.html":{},"classes/SsnValidation.html":{},"classes/Volunteer.html":{},"index.html":{}}}],["clear",{"_index":942,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["clearall",{"_index":1018,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["cleardata",{"_index":1653,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cleardata(type",{"_index":1744,"title":{},"body":{"miscellaneous/functions.html":{}}}],["clearitem",{"_index":1019,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["clearitem(key",{"_index":1029,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["clears",{"_index":633,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/functions.html":{}}}],["click",{"_index":973,"title":{},"body":{"components/HomePage.html":{}}}],["closes",{"_index":386,"title":{},"body":{"components/AppComponent.html":{}}}],["cluster_aboutpagemodule",{"_index":178,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_aboutpagemodule_declarations",{"_index":179,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":503,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":506,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":504,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":505,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_authenticationpagemodule",{"_index":589,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"index.html":{}}}],["cluster_authenticationpagemodule_declarations",{"_index":590,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"index.html":{}}}],["cluster_coremodule",{"_index":704,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_coremodule_providers",{"_index":705,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_homepagemodule",{"_index":1009,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_declarations",{"_index":1010,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_volunteerpagemodule",{"_index":1536,"title":{},"body":{"modules/VolunteerPageModule.html":{},"index.html":{}}}],["cluster_volunteerpagemodule_declarations",{"_index":1537,"title":{},"body":{"modules/VolunteerPageModule.html":{},"index.html":{}}}],["cnp",{"_index":1465,"title":{},"body":{"classes/SsnValidation.html":{}}}],["cnp[x",{"_index":1478,"title":{},"body":{"classes/SsnValidation.html":{}}}],["code",{"_index":125,"title":{},"body":{"components/AboutPage.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/VolunteerService.html":{}}}],["codification",{"_index":1394,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["coefs",{"_index":1467,"title":{},"body":{"classes/SsnValidation.html":{}}}],["coefs[x",{"_index":1477,"title":{},"body":{"classes/SsnValidation.html":{}}}],["colaborare",{"_index":96,"title":{},"body":{"components/AboutPage.html":{}}}],["color",{"_index":985,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["column",{"_index":976,"title":{},"body":{"components/HomePage.html":{}}}],["columns",{"_index":998,"title":{},"body":{"components/HomePage.html":{}}}],["comments",{"_index":1125,"title":{},"body":{"classes/Organisation.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["commonmodule",{"_index":184,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["completely",{"_index":387,"title":{},"body":{"components/AppComponent.html":{}}}],["component",{"_index":0,"title":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["component_template",{"_index":136,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["componente",{"_index":77,"title":{},"body":{"components/AboutPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"index.html":{}}}],["confirm",{"_index":1337,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["confirmpassword",{"_index":1211,"title":{},"body":{"classes/PasswordValidation.html":{},"components/ResetPasswordComponent.html":{}}}],["console.error('request",{"_index":928,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["console.log(`error",{"_index":850,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["console.log(result",{"_index":848,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["console.log(this._errors",{"_index":957,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["console.warn('unmatched",{"_index":491,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":196,"title":{},"body":{"modules/AboutPageModule.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"components/AboutPage.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{}}}],["constructor(authenticationservice",{"_index":243,"title":{},"body":{"injectables/AllocationService.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{}}}],["constructor(authservice",{"_index":750,"title":{},"body":{"injectables/CourseService.html":{}}}],["constructor(courseservice",{"_index":1552,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["constructor(httpclient",{"_index":611,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(platform",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":301,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{},"injectables/VolunteerService.html":{}}}],["constructor(public",{"_index":1319,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["constructor(router",{"_index":567,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["constructor(sms",{"_index":1386,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["contact_person",{"_index":1126,"title":{},"body":{"classes/Organisation.html":{}}}],["containing",{"_index":265,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"components/HomePage.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["contains",{"_index":267,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["content",{"_index":1005,"title":{},"body":{"components/HomePage.html":{},"interceptors/RequestInterceptor.html":{}}}],["context",{"_index":1705,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continuous",{"_index":305,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["control",{"_index":861,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["controller",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["convert",{"_index":1395,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["conțin",{"_index":1217,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["cookie",{"_index":1042,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["cookie's",{"_index":1053,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["cordova",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["core",{"_index":453,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"dependencies.html":{}}}],["core/authentication/authentication.guard",{"_index":195,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["coremodule",{"_index":508,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"index.html":{},"modules.html":{}}}],["corespund",{"_index":1216,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["couchdb",{"_index":250,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["counties",{"_index":1484,"title":{},"body":{"injectables/StaticsService.html":{}}}],["county",{"_index":212,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Organisation.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["county._id.tostring",{"_index":1600,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["county.id",{"_index":1594,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["county.name",{"_index":1601,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["county_romania_",{"_index":1500,"title":{},"body":{"injectables/StaticsService.html":{}}}],["county_romania_\\ufff0",{"_index":1502,"title":{},"body":{"injectables/StaticsService.html":{}}}],["county_type",{"_index":1487,"title":{},"body":{"injectables/StaticsService.html":{}}}],["countyid",{"_index":1570,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["countyname",{"_index":1493,"title":{},"body":{"injectables/StaticsService.html":{}}}],["countyname.tolowercase().replace",{"_index":1504,"title":{},"body":{"injectables/StaticsService.html":{}}}],["course",{"_index":724,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"injectables/CourseService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["course's",{"_index":764,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.[].course_name_id",{"_index":1592,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course._id",{"_index":1619,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course.acredited",{"_index":801,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.added_by",{"_index":794,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.course_name",{"_index":791,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.created_at",{"_index":792,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.name",{"_index":1620,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course.obtained",{"_index":803,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.service",{"_index":1590,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course.type",{"_index":796,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.updated_at",{"_index":793,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.volunteer_id",{"_index":790,"title":{},"body":{"injectables/CourseService.html":{}}}],["course_name",{"_index":728,"title":{},"body":{"classes/Course.html":{}}}],["course_name.id",{"_index":783,"title":{},"body":{"injectables/CourseService.html":{}}}],["course_name_id",{"_index":1531,"title":{},"body":{"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["course_names",{"_index":808,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseid",{"_index":760,"title":{},"body":{"injectables/CourseService.html":{},"injectables/VolunteerService.html":{}}}],["coursename",{"_index":756,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursenameid",{"_index":767,"title":{},"body":{"injectables/CourseService.html":{}}}],["courses",{"_index":752,"title":{},"body":{"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["courseservice",{"_index":706,"title":{"injectables/CourseService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/CourseService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"index.html":{}}}],["cover",{"_index":1127,"title":{},"body":{"classes/Organisation.html":{}}}],["coverage",{"_index":1640,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createallocation",{"_index":242,"title":{},"body":{"injectables/AllocationService.html":{}}}],["createallocation(volunteer",{"_index":255,"title":{},"body":{"injectables/AllocationService.html":{}}}],["createcookie",{"_index":1654,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createcookie(name",{"_index":1045,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["createcourse",{"_index":742,"title":{},"body":{"injectables/CourseService.html":{}}}],["createcourse(coursename",{"_index":754,"title":{},"body":{"injectables/CourseService.html":{}}}],["created",{"_index":274,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["created_at",{"_index":213,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["createdat",{"_index":818,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["createform",{"_index":1071,"title":{},"body":{"components/LoginComponent.html":{}}}],["createorganisation",{"_index":1148,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["createorganisation(name",{"_index":1156,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["creates",{"_index":257,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["createvolunteer",{"_index":1544,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["createvolunteer(name",{"_index":1560,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["creating",{"_index":1301,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["creation",{"_index":1078,"title":{},"body":{"components/LoginComponent.html":{}}}],["credentials",{"_index":604,"title":{"interfaces/Credentials.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["credentialskey",{"_index":679,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cu",{"_index":74,"title":{},"body":{"components/AboutPage.html":{},"components/ResetPasswordComponent.html":{}}}],["curr",{"_index":1365,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["curr.routeconfig",{"_index":1373,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["current",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["currentpath",{"_index":466,"title":{},"body":{"components/AppComponent.html":{}}}],["currentpath.indexof('home",{"_index":470,"title":{},"body":{"components/AppComponent.html":{}}}],["currentpath.indexof('login",{"_index":468,"title":{},"body":{"components/AppComponent.html":{}}}],["currentuser",{"_index":1175,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["currentuser._id",{"_index":1179,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["custom",{"_index":1025,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["cât",{"_index":1269,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["către",{"_index":61,"title":{},"body":{"components/AboutPage.html":{}}}],["data",{"_index":655,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/RouteReusableStrategy.html":{},"miscellaneous/functions.html":{}}}],["data.id",{"_index":1618,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["data:image/jpeg;base64",{"_index":1423,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["database",{"_index":252,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["databasesyncservice",{"_index":359,"title":{"classes/DatabaseSyncService.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"classes/DatabaseSyncService.html":{},"coverage.html":{}}}],["databaseurl",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":112,"title":{},"body":{"components/AboutPage.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"injectables/VolunteerService.html":{}}}],["date.now",{"_index":956,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["date.settime(date.gettime",{"_index":1047,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["date.togmtstring",{"_index":1050,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["datepicker",{"_index":517,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["days",{"_index":1043,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["dd",{"_index":324,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["de",{"_index":50,"title":{},"body":{"components/AboutPage.html":{},"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["declarations",{"_index":174,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["declare",{"_index":813,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{},"injectables/VolunteerService.html":{}}}],["decoration",{"_index":996,"title":{},"body":{"components/HomePage.html":{}}}],["decorators",{"_index":438,"title":{},"body":{"components/AppComponent.html":{}}}],["deeplinks",{"_index":454,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["deeplinks.route",{"_index":484,"title":{},"body":{"components/AppComponent.html":{}}}],["default",{"_index":275,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":219,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["defining",{"_index":1571,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["definition",{"_index":1348,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["deja",{"_index":85,"title":{},"body":{"components/AboutPage.html":{}}}],["deletecoursebyid",{"_index":743,"title":{},"body":{"injectables/CourseService.html":{}}}],["deletecoursebyid(courseid",{"_index":757,"title":{},"body":{"injectables/CourseService.html":{}}}],["deleteorganisationbyid",{"_index":1149,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["deleteorganisationbyid(organisationid",{"_index":1159,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["deletes",{"_index":759,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["deletevolunteerbyid",{"_index":1545,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["deletevolunteerbyid(volunteerid",{"_index":1564,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["delogare",{"_index":422,"title":{},"body":{"components/AppComponent.html":{}}}],["departamentul",{"_index":62,"title":{},"body":{"components/AboutPage.html":{}}}],["dependencies",{"_index":173,"title":{"dependencies.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{},"index.html":{}}}],["depending",{"_index":445,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["description",{"_index":204,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["design",{"_index":1090,"title":{},"body":{"components/LoginComponent.html":{}}}],["despre",{"_index":26,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["destination",{"_index":538,"title":{},"body":{"classes/AppPage.html":{}}}],["destinationtype",{"_index":1417,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["detached",{"_index":1371,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["detachedroutehandle",{"_index":1359,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["detachedtree",{"_index":1369,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["determines",{"_index":573,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/UnauthenticatedGuard.html":{}}}],["dev",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["developement",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["device",{"_index":701,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["dezastru",{"_index":72,"title":{},"body":{"components/AboutPage.html":{}}}],["dezvoltat",{"_index":124,"title":{},"body":{"components/AboutPage.html":{}}}],["diacritics",{"_index":1170,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["didn't",{"_index":1087,"title":{},"body":{"components/LoginComponent.html":{}}}],["din",{"_index":94,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["directive",{"_index":134,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["directives",{"_index":165,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["dismessed",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["display",{"_index":1000,"title":{},"body":{"components/HomePage.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["displayed",{"_index":972,"title":{},"body":{"components/HomePage.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dispoziție",{"_index":58,"title":{},"body":{"components/AboutPage.html":{}}}],["doc.acredited",{"_index":800,"title":{},"body":{"injectables/CourseService.html":{}}}],["doc.allocation",{"_index":1636,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.city",{"_index":1629,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.comments",{"_index":1632,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.county",{"_index":1628,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.course_name",{"_index":799,"title":{},"body":{"injectables/CourseService.html":{}}}],["doc.courses",{"_index":1631,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.email",{"_index":1625,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.job",{"_index":1634,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.name",{"_index":1187,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["doc.obtained",{"_index":802,"title":{},"body":{"injectables/CourseService.html":{}}}],["doc.organisation",{"_index":1630,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.phone",{"_index":1627,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.slug",{"_index":1188,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["doc.ssn",{"_index":1624,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.updated_at",{"_index":804,"title":{},"body":{"injectables/CourseService.html":{},"injectables/VolunteerService.html":{}}}],["document",{"_index":1052,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["document.addeventlistener('backbutton",{"_index":464,"title":{},"body":{"components/AppComponent.html":{}}}],["document.cookie",{"_index":1051,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["document.cookie.split",{"_index":1057,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["documentation",{"_index":1641,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["double",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["dsu",{"_index":97,"title":{},"body":{"components/AboutPage.html":{}}}],["duration",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dynamic",{"_index":1711,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/app.po.ts",{"_index":530,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:12",{"_index":534,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":537,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":535,"title":{},"body":{"classes/AppPage.html":{}}}],["eforturile",{"_index":122,"title":{},"body":{"components/AboutPage.html":{}}}],["element",{"_index":133,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["element(by.tagname('app",{"_index":542,"title":{},"body":{"classes/AppPage.html":{}}}],["elemmatch",{"_index":1639,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["email",{"_index":640,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"components/RecoverPasswordComponent.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{}}}],["email@email.com",{"_index":882,"title":{},"body":{"classes/EmailValidation.html":{}}}],["emailvalidation",{"_index":853,"title":{"classes/EmailValidation.html":{}},"body":{"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["emailvalidation(abstractcontrol",{"_index":856,"title":{},"body":{"classes/EmailValidation.html":{}}}],["emailvalidation.emailvalidation",{"_index":1100,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["emit",{"_index":1591,"title":{},"body":{"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emits",{"_index":663,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["emitts",{"_index":950,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["endkey",{"_index":1501,"title":{},"body":{"injectables/StaticsService.html":{}}}],["entries",{"_index":1497,"title":{},"body":{"injectables/StaticsService.html":{}}}],["entry",{"_index":258,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["entrycomponents",{"_index":525,"title":{},"body":{"modules/AppModule.html":{}}}],["env",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":280,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":927,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["environment.serverurl",{"_index":1282,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["environments/environment",{"_index":281,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["eq",{"_index":788,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["eroare",{"_index":1335,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["err",{"_index":1425,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["error",{"_index":852,"title":{},"body":{"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/SsnValidation.html":{}}}],["errorhandler",{"_index":888,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorhandler(response",{"_index":895,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorhandlerinterceptor",{"_index":707,"title":{"interceptors/ErrorHandlerInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["errormessage",{"_index":1068,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errormessageobject",{"_index":930,"title":{"interfaces/ErrorMessageObject.html":{}},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["errormessageservice",{"_index":708,"title":{"injectables/ErrorMessageService.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"coverage.html":{},"index.html":{}}}],["errormodel",{"_index":934,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["errormodel.errormessageobject",{"_index":947,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["errorresponse",{"_index":918,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error",{"_index":919,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.error",{"_index":925,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.validation",{"_index":920,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.validation.errors[key",{"_index":923,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.validation.keys.foreach((key",{"_index":921,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errors",{"_index":898,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{}}}],["este",{"_index":31,"title":{},"body":{"components/AboutPage.html":{},"classes/EmailValidation.html":{}}}],["event",{"_index":465,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{}}}],["eventemitter",{"_index":662,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["events",{"_index":664,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["eventualitatea",{"_index":38,"title":{},"body":{"components/AboutPage.html":{}}}],["ex",{"_index":881,"title":{},"body":{"classes/EmailValidation.html":{}}}],["exist",{"_index":1272,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["existenți",{"_index":86,"title":{},"body":{"components/AboutPage.html":{}}}],["existing",{"_index":1028,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["exiting",{"_index":436,"title":{},"body":{"components/AppComponent.html":{}}}],["expiration",{"_index":1044,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["expires",{"_index":1046,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["explicit",{"_index":1344,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["export",{"_index":22,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["exports",{"_index":177,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["extends",{"_index":1349,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["extra",{"_index":1285,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["f9f9f9",{"_index":1448,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["false",{"_index":430,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"miscellaneous/variables.html":{}}}],["fields",{"_index":308,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["files",{"_index":1494,"title":{},"body":{"injectables/StaticsService.html":{}}}],["filter",{"_index":1546,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["filter(countyid",{"_index":1566,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["filters",{"_index":1569,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["finalize",{"_index":1094,"title":{},"body":{"components/LoginComponent.html":{}}}],["find",{"_index":294,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["find/lib/index",{"_index":279,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["finds",{"_index":763,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["flex",{"_index":1001,"title":{},"body":{"components/HomePage.html":{}}}],["foarte",{"_index":107,"title":{},"body":{"components/AboutPage.html":{}}}],["following",{"_index":268,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["font",{"_index":987,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["form",{"_index":1077,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["formbuilder",{"_index":1074,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["formcontrol",{"_index":1258,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["formgroup",{"_index":1091,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["forms",{"_index":1303,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["formsmodule",{"_index":186,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["fost",{"_index":1262,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["fotografie",{"_index":1436,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["found",{"_index":615,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["from(localdb.alldocs({include_docs",{"_index":1498,"title":{},"body":{"injectables/StaticsService.html":{}}}],["from(localdb.find",{"_index":785,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["from(localdb.post(allocation",{"_index":333,"title":{},"body":{"injectables/AllocationService.html":{}}}],["from(localdb.post(course",{"_index":797,"title":{},"body":{"injectables/CourseService.html":{}}}],["from(localdb.post(organisation",{"_index":1185,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["from(localdb.post(volunteer",{"_index":1614,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["full",{"_index":551,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SendMessageComponent.html":{}}}],["function",{"_index":904,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["functions",{"_index":1742,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["future",{"_index":1367,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["future.data.reuse",{"_index":1374,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["future.routeconfig",{"_index":1372,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["g",{"_index":1195,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["generated",{"_index":946,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["get('/logout",{"_index":691,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getaccesstoken",{"_index":670,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getcitylist",{"_index":1488,"title":{},"body":{"injectables/StaticsService.html":{}}}],["getcitylist(countyname",{"_index":1491,"title":{},"body":{"injectables/StaticsService.html":{}}}],["getcountylist",{"_index":1489,"title":{},"body":{"injectables/StaticsService.html":{}}}],["getcoursebyid",{"_index":744,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyid(courseid",{"_index":761,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyname",{"_index":745,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyname(coursenameid",{"_index":765,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyvolunteerid",{"_index":746,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyvolunteerid(volunteerid",{"_index":768,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursenames",{"_index":747,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourses",{"_index":748,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcredentials",{"_index":667,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getdata",{"_index":1655,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getdata(type",{"_index":1745,"title":{},"body":{"miscellaneous/functions.html":{}}}],["geterrors",{"_index":952,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["getitem",{"_index":1020,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getitem(key",{"_index":1033,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getorganisationbyid",{"_index":1150,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisationbyid(organisationid",{"_index":1162,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisationbyname",{"_index":1151,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisationbyname(organisationname",{"_index":1164,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisations",{"_index":1152,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getpageonetitletext",{"_index":531,"title":{},"body":{"classes/AppPage.html":{}}}],["gets",{"_index":398,"title":{},"body":{"components/AppComponent.html":{}}}],["getsessionname",{"_index":1656,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getter",{"_index":669,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["gettitle",{"_index":532,"title":{},"body":{"classes/AppPage.html":{}}}],["getuser",{"_index":672,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getvolunteerbyid",{"_index":1547,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteerbyid(volunteerid",{"_index":1575,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteerbyssn",{"_index":1548,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteerbyssn(ssn",{"_index":1577,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteers",{"_index":1549,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteers(page",{"_index":1579,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["given",{"_index":773,"title":{},"body":{"injectables/CourseService.html":{},"classes/RouteReusableStrategy.html":{},"injectables/VolunteerService.html":{}}}],["go",{"_index":1088,"title":{},"body":{"components/LoginComponent.html":{}}}],["granted",{"_index":1398,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["graph",{"_index":1753,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":560,"title":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{},"coverage.html":{}}}],["guards",{"_index":561,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{},"index.html":{}}}],["h",{"_index":1440,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["h:mm:ss",{"_index":325,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["handle",{"_index":1026,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["handle(request",{"_index":912,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler",{"_index":887,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler.interceptor.ts",{"_index":885,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["handler.interceptor.ts:25",{"_index":890,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler.interceptor.ts:45",{"_index":902,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler.interceptor.ts:59",{"_index":897,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handles",{"_index":569,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["handling",{"_index":893,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["header",{"_index":1446,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["height",{"_index":1002,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["hidden",{"_index":378,"title":{},"body":{"components/AppComponent.html":{}}}],["home",{"_index":549,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["home')).element(by.deepcss('ion",{"_index":543,"title":{},"body":{"classes/AppPage.html":{}}}],["home'},{'name",{"_index":147,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["home.page",{"_index":1012,"title":{},"body":{"modules/HomePageModule.html":{}}}],["home.page.html",{"_index":961,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":960,"title":{},"body":{"components/HomePage.html":{}}}],["homepage",{"_index":146,"title":{"components/HomePage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["homepagemodule",{"_index":1008,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"index.html":{},"modules.html":{}}}],["html",{"_index":132,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["http",{"_index":618,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["http://rvm.lxhost.ro:5984",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":713,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpclient",{"_index":612,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["httpclientmodule",{"_index":714,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpevent",{"_index":906,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httphandler",{"_index":901,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httpinterceptor",{"_index":907,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httprequest",{"_index":900,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httpresponse",{"_index":896,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["https://github.com/angular/angular/issues/18374",{"_index":1347,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["https://rvm",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":1443,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["id",{"_index":231,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["identific",{"_index":92,"title":{},"body":{"components/AboutPage.html":{}}}],["identifier",{"_index":1642,"title":{},"body":{"coverage.html":{}}}],["identifies",{"_index":911,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"miscellaneous/variables.html":{}}}],["identitatea",{"_index":83,"title":{},"body":{"components/AboutPage.html":{}}}],["idx",{"_index":1474,"title":{},"body":{"classes/SsnValidation.html":{}}}],["idx.map((x",{"_index":1476,"title":{},"body":{"classes/SsnValidation.html":{}}}],["ig",{"_index":1597,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["ignore",{"_index":24,"title":{},"body":{"components/AboutPage.html":{},"classes/DatabaseSyncService.html":{},"injectables/ErrorMessageService.html":{},"components/VolunteerPage.html":{}}}],["image",{"_index":1390,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["imagedata",{"_index":1424,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["implements",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["implicate",{"_index":121,"title":{},"body":{"components/AboutPage.html":{}}}],["import",{"_index":18,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["imports",{"_index":199,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["inactiv",{"_index":1184,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["inappbrowser",{"_index":522,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["inbox",{"_index":1268,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["include_docs",{"_index":786,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["incorecte",{"_index":1109,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":207,"title":{"index.html":{}},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["information",{"_index":634,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"interceptors/RequestInterceptor.html":{},"miscellaneous/functions.html":{}}}],["informații",{"_index":1108,"title":{},"body":{"components/LoginComponent.html":{}}}],["initialisation",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["initialiseview",{"_index":1297,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["initializeapp",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["initializes",{"_index":614,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["injectable",{"_index":232,"title":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}},"body":{"injectables/AllocationService.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["injectables",{"_index":234,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"index.html":{}}}],["injected",{"_index":891,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{}}}],["injection",{"_index":617,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["input",{"_index":863,"title":{},"body":{"classes/EmailValidation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{},"injectables/VolunteerService.html":{}}}],["inputs",{"_index":1205,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["inside",{"_index":1041,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["instrument",{"_index":49,"title":{},"body":{"components/AboutPage.html":{}}}],["intent",{"_index":1428,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["intercept",{"_index":889,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["intercept(request",{"_index":899,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["interceptor",{"_index":883,"title":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":722,"title":{},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["intercepts",{"_index":903,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["interface",{"_index":809,"title":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{}},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":810,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{},"index.html":{}}}],["intervenție",{"_index":116,"title":{},"body":{"components/AboutPage.html":{}}}],["introdus",{"_index":878,"title":{},"body":{"classes/EmailValidation.html":{}}}],["ion",{"_index":1006,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["ionic",{"_index":448,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["ionic/angular",{"_index":192,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/HomePageModule.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["ionic/lab",{"_index":1720,"title":{},"body":{"dependencies.html":{}}}],["ionicmodule",{"_index":191,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["ionicmodule.forroot",{"_index":526,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":514,"title":{},"body":{"modules/AppModule.html":{}}}],["ionrouteroutlet",{"_index":437,"title":{},"body":{"components/AppComponent.html":{}}}],["ios",{"_index":1725,"title":{},"body":{"dependencies.html":{}}}],["isauthenticated",{"_index":605,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isdoubletap",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["isn't",{"_index":576,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["it's",{"_index":270,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/VolunteerService.html":{}}}],["item",{"_index":1032,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["item's",{"_index":1038,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["items",{"_index":999,"title":{},"body":{"components/HomePage.html":{}}}],["itself",{"_index":1039,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["job",{"_index":1512,"title":{},"body":{"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["js",{"_index":1731,"title":{},"body":{"dependencies.html":{}}}],["json.parse(savedcredentials",{"_index":683,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(credentials",{"_index":696,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["justify",{"_index":1004,"title":{},"body":{"components/HomePage.html":{}}}],["key",{"_index":678,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["keyword",{"_index":1587,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["l",{"_index":113,"title":{},"body":{"components/AboutPage.html":{}}}],["la",{"_index":57,"title":{},"body":{"components/AboutPage.html":{}}}],["label",{"_index":1453,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["last",{"_index":1559,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["le",{"_index":55,"title":{},"body":{"components/AboutPage.html":{}}}],["legend",{"_index":131,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["lifecycle",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"classes/RouteReusableStrategy.html":{}}}],["limit",{"_index":1567,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["link",{"_index":643,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["list",{"_index":149,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"injectables/CourseService.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["listvolunteercomponent",{"_index":148,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["liter",{"_index":1221,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["literal",{"_index":222,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["live",{"_index":302,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["loadchildren",{"_index":552,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loading",{"_index":1069,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["loc",{"_index":45,"title":{},"body":{"components/AboutPage.html":{}}}],["local",{"_index":259,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["localallocationsdb",{"_index":837,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localallocationsdb.sync(remoteallocationsdb",{"_index":846,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localcoursesdb",{"_index":831,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localcoursesdb.sync(remotecoursesdb",{"_index":844,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localdb",{"_index":291,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localdb.createindex",{"_index":307,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localdb.get(course._id).then((doc",{"_index":798,"title":{},"body":{"injectables/CourseService.html":{}}}],["localdb.get(courseid).then(doc",{"_index":806,"title":{},"body":{"injectables/CourseService.html":{}}}],["localdb.get(organisation._id).then((doc",{"_index":1186,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["localdb.get(organisationid).then((doc",{"_index":1190,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["localdb.get(volunteer._id).then((doc",{"_index":1622,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["localdb.get(volunteerid).then((doc",{"_index":1637,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["localdb.put(doc",{"_index":805,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localdb.remove(doc",{"_index":807,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localdb.sync(remotedb",{"_index":306,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["localorganisationsdb",{"_index":834,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localorganisationsdb.sync(remoteorganisationsdb",{"_index":845,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localstaticsdb",{"_index":839,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localstaticsdb.sync(remotestaticsdb)]).then((result",{"_index":847,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localstorage",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":357,"title":{"injectables/LocalStorageService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{},"index.html":{}}}],["localvolunteersdb",{"_index":828,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localvolunteersdb.sync(remotevolunteersdb",{"_index":843,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["location",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["locations",{"_index":1483,"title":{},"body":{"injectables/StaticsService.html":{}}}],["log",{"_index":658,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logged",{"_index":1305,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["login",{"_index":579,"title":{},"body":{"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{}}}],["login'},{'name",{"_index":151,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["login(payload",{"_index":622,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login(this.loginform.value",{"_index":1103,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1067,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1066,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/home",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["login/login.component",{"_index":595,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["login/logout",{"_index":666,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logincomponent",{"_index":150,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["loginform",{"_index":1070,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.controls.email.errors?.email",{"_index":1112,"title":{},"body":{"components/LoginComponent.html":{}}}],["logininfo",{"_index":684,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logininfo).pipe",{"_index":687,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logininfo.device",{"_index":685,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginpayload",{"_index":815,"title":{"interfaces/LoginPayload.html":{}},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["logout",{"_index":599,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"components/LogoutComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["logout'},{'name",{"_index":153,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["logout.component.html",{"_index":1117,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout.component.scss",{"_index":1116,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout/logout.component",{"_index":596,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["logoutcomponent",{"_index":152,"title":{"components/LogoutComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["lookup",{"_index":1197,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["lowercase",{"_index":1230,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["lowercase.test(password",{"_index":1234,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["m",{"_index":1198,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["mai",{"_index":118,"title":{},"body":{"components/AboutPage.html":{}}}],["major",{"_index":68,"title":{},"body":{"components/AboutPage.html":{}}}],["majore",{"_index":41,"title":{},"body":{"components/AboutPage.html":{}}}],["management",{"_index":30,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["map",{"_index":283,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"classes/SsnValidation.html":{},"injectables/VolunteerService.html":{}}}],["map((body",{"_index":688,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["map((response",{"_index":335,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["mare",{"_index":1222,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["margin",{"_index":1441,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["match",{"_index":1207,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["match.$args.token",{"_index":488,"title":{},"body":{"components/AppComponent.html":{}}}],["matches",{"_index":1586,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["matching",{"_index":168,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchpassword",{"_index":1202,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["matchpassword(abstractcontrol",{"_index":1203,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["md",{"_index":1439,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["mean",{"_index":968,"title":{},"body":{"components/HomePage.html":{}}}],["menit",{"_index":33,"title":{},"body":{"components/AboutPage.html":{}}}],["menu",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["mesaj",{"_index":1433,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["mesajul",{"_index":1434,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message",{"_index":494,"title":{},"body":{"components/AppComponent.html":{},"classes/EmailValidation.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{}}}],["message'},{'name",{"_index":161,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["message.component",{"_index":1541,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["message.component.html",{"_index":1379,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.scss",{"_index":1378,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts",{"_index":1377,"title":{},"body":{"components/SendMessageComponent.html":{},"coverage.html":{}}}],["message.component.ts:19",{"_index":1405,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:24",{"_index":1404,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:29",{"_index":1387,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:41",{"_index":1399,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:58",{"_index":1389,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:72",{"_index":1402,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:85",{"_index":1396,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.service",{"_index":910,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["message.service.ts",{"_index":939,"title":{},"body":{"injectables/ErrorMessageService.html":{},"coverage.html":{}}}],["message.service.ts:11",{"_index":948,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:16",{"_index":949,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:27",{"_index":953,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:37",{"_index":945,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:51",{"_index":943,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message/send",{"_index":1376,"title":{},"body":{"components/SendMessageComponent.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["messageform",{"_index":1381,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["messages",{"_index":940,"title":{},"body":{"injectables/ErrorMessageService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["messagging",{"_index":894,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["method",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"classes/RouteReusableStrategy.html":{},"injectables/VolunteerService.html":{}}}],["methods",{"_index":241,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["min",{"_index":1449,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["minim",{"_index":1218,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["miscellaneous",{"_index":1741,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":323,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["mobile",{"_index":78,"title":{},"body":{"components/AboutPage.html":{},"injectables/AuthenticationService.html":{}}}],["mobilizați",{"_index":81,"title":{},"body":{"components/AboutPage.html":{}}}],["model",{"_index":205,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["model/allocation.model",{"_index":287,"title":{},"body":{"injectables/AllocationService.html":{}}}],["model/course.model",{"_index":781,"title":{},"body":{"injectables/CourseService.html":{}}}],["model/organisation.model",{"_index":1174,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["model/volunteer.model",{"_index":288,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["models",{"_index":723,"title":{},"body":{"modules/CoreModule.html":{}}}],["module",{"_index":170,"title":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["modules",{"_index":172,"title":{"modules.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{},"modules.html":{}}}],["moment",{"_index":289,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["moment().format('y",{"_index":322,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["moz",{"_index":983,"title":{},"body":{"components/HomePage.html":{}}}],["multi",{"_index":720,"title":{},"body":{"modules/CoreModule.html":{}}}],["n",{"_index":37,"title":{},"body":{"components/AboutPage.html":{},"components/RecoverPasswordComponent.html":{}}}],["name",{"_index":137,"title":{},"body":{"components/AboutPage.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["name,ssn",{"_index":1585,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["nameeq",{"_index":1055,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["names",{"_index":775,"title":{},"body":{"injectables/CourseService.html":{}}}],["namespace",{"_index":814,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{}}}],["native/camera",{"_index":1407,"title":{},"body":{"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["native/core",{"_index":1713,"title":{},"body":{"dependencies.html":{}}}],["native/date",{"_index":518,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/deeplinks",{"_index":455,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["native/in",{"_index":523,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/sms",{"_index":1717,"title":{},"body":{"dependencies.html":{}}}],["native/sms/ngx",{"_index":521,"title":{},"body":{"modules/AppModule.html":{},"components/SendMessageComponent.html":{}}}],["native/splash",{"_index":449,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/status",{"_index":451,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["natural",{"_index":73,"title":{},"body":{"components/AboutPage.html":{}}}],["navigateto",{"_index":533,"title":{},"body":{"classes/AppPage.html":{}}}],["navigateto(destination",{"_index":536,"title":{},"body":{"classes/AppPage.html":{}}}],["navigation",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["navigation.extras",{"_index":1410,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["navigation.extras.state",{"_index":1411,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["navigation.extras.state.volunteers",{"_index":1412,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["navigator['app'].exitapp",{"_index":475,"title":{},"body":{"components/AppComponent.html":{}}}],["ncerci",{"_index":1275,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["neccessary",{"_index":1306,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["needs",{"_index":1400,"title":{},"body":{"components/SendMessageComponent.html":{},"miscellaneous/functions.html":{}}}],["never",{"_index":660,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["new",{"_index":292,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["next.handle(request",{"_index":1295,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["ngafterviewinit",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["ngmodule",{"_index":183,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["ngoninit",{"_index":1072,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["nomatch",{"_index":490,"title":{},"body":{"components/AppComponent.html":{}}}],["nothing",{"_index":657,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["nou",{"_index":110,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["nregistra",{"_index":106,"title":{},"body":{"components/AboutPage.html":{}}}],["nregistrat",{"_index":1263,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["nu",{"_index":879,"title":{},"body":{"classes/EmailValidation.html":{},"components/RecoverPasswordComponent.html":{}}}],["null",{"_index":271,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"classes/SsnValidation.html":{},"injectables/VolunteerService.html":{}}}],["number",{"_index":933,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"injectables/LocalStorageService.html":{},"classes/PasswordValidation.html":{},"interfaces/RootObject.html":{},"classes/SsnValidation.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["number.test(password",{"_index":1232,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["numbers",{"_index":1406,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["număr",{"_index":1223,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["o",{"_index":32,"title":{},"body":{"components/AboutPage.html":{},"classes/PasswordValidation.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["object",{"_index":206,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":273,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["obtained",{"_index":729,"title":{},"body":{"classes/Course.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["ofer",{"_index":89,"title":{},"body":{"components/AboutPage.html":{}}}],["ofere",{"_index":35,"title":{},"body":{"components/AboutPage.html":{}}}],["once",{"_index":434,"title":{},"body":{"components/AppComponent.html":{}}}],["one",{"_index":641,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"components/AboutPage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["opening",{"_index":969,"title":{},"body":{"components/HomePage.html":{}}}],["operation",{"_index":1079,"title":{},"body":{"components/LoginComponent.html":{}}}],["operations",{"_index":239,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["optional",{"_index":254,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":249,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["organisation",{"_index":214,"title":{"classes/Organisation.html":{}},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["organisation's",{"_index":1158,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation._id",{"_index":1593,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["organisation.added_by",{"_index":1178,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.created_at",{"_index":1180,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.id",{"_index":330,"title":{},"body":{"injectables/AllocationService.html":{}}}],["organisation.name",{"_index":331,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["organisation.slug",{"_index":1176,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["organisation.status",{"_index":1183,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.type",{"_index":1182,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.updated_at",{"_index":1181,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.website",{"_index":1612,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["organisationid",{"_index":1161,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["organisationname",{"_index":1166,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisations",{"_index":833,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"miscellaneous/variables.html":{}}}],["organisationservice",{"_index":709,"title":{"injectables/OrganisationService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/OrganisationService.html":{},"coverage.html":{},"index.html":{}}}],["otherwise",{"_index":868,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["out",{"_index":181,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"components/ResetPasswordComponent.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["outlet",{"_index":441,"title":{},"body":{"components/AppComponent.html":{}}}],["output",{"_index":1191,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["overview",{"_index":1748,"title":{"index.html":{}},"body":{"index.html":{}}}],["p.title",{"_index":501,"title":{},"body":{"components/AppComponent.html":{}}}],["package",{"_index":1708,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":990,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["page",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["pages",{"_index":427,"title":{},"body":{"components/AppComponent.html":{}}}],["pages/about/about.module#aboutpagemodule",{"_index":554,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/authentication/authentication.module#authenticationpagemodule",{"_index":557,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/authentication/reset",{"_index":456,"title":{},"body":{"components/AppComponent.html":{}}}],["pages/home/home.module#homepagemodule",{"_index":553,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/volunteer/volunteer.module#volunteerpagemodule",{"_index":555,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paginate",{"_index":1573,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["param",{"_index":311,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["parameters",{"_index":253,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1325,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["params['token",{"_index":1327,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["parol",{"_index":1111,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["parola",{"_index":1114,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["parolele",{"_index":1214,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["parseint(abstractcontrol.value",{"_index":1462,"title":{},"body":{"classes/SsnValidation.html":{}}}],["parte",{"_index":93,"title":{},"body":{"components/AboutPage.html":{}}}],["parteneriat",{"_index":127,"title":{},"body":{"components/AboutPage.html":{}}}],["password",{"_index":638,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/User.html":{}}}],["password'},{'name",{"_index":156,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["password.component",{"_index":458,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticationPageModule.html":{}}}],["password.component.html",{"_index":1249,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":1248,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":1247,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:103",{"_index":1313,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:114",{"_index":1310,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":1316,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:18",{"_index":1257,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:22",{"_index":1318,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:23",{"_index":1256,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:27",{"_index":1315,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:28",{"_index":1251,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:32",{"_index":1300,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:42",{"_index":1317,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:44",{"_index":1252,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:52",{"_index":1307,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:53",{"_index":1255,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:72",{"_index":1254,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:76",{"_index":1304,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:87",{"_index":1311,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.length",{"_index":1236,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["password/recover",{"_index":594,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":457,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticationPageModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password_confirmation",{"_index":703,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["passwords",{"_index":1204,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordvalidation",{"_index":1200,"title":{"classes/PasswordValidation.html":{}},"body":{"classes/PasswordValidation.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordvalidation(abstractcontrol",{"_index":1208,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordvalidation.matchpassword",{"_index":1323,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordvalidation.passwordvalidation",{"_index":1322,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["path",{"_index":197,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"modules/VolunteerPageModule.html":{}}}],["pathmatch",{"_index":550,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":867,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{},"injectables/VolunteerService.html":{}}}],["payload",{"_index":630,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["pe",{"_index":54,"title":{},"body":{"components/AboutPage.html":{}}}],["pentru",{"_index":117,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["per",{"_index":1574,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["performaction",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["performaction(url",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["performed",{"_index":656,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomePage.html":{},"components/ResetPasswordComponent.html":{}}}],["performes",{"_index":965,"title":{},"body":{"components/HomePage.html":{}}}],["permission",{"_index":1397,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["permite",{"_index":101,"title":{},"body":{"components/AboutPage.html":{}}}],["persoanelor",{"_index":120,"title":{},"body":{"components/AboutPage.html":{}}}],["phone",{"_index":817,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"classes/PhoneValidation.html":{},"components/SendMessageComponent.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["phone's",{"_index":970,"title":{},"body":{"components/HomePage.html":{}}}],["phone.indexof",{"_index":1245,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["phone.length",{"_index":1242,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["phonenumbers",{"_index":1382,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["phonevalidation",{"_index":1237,"title":{"classes/PhoneValidation.html":{}},"body":{"classes/PhoneValidation.html":{},"coverage.html":{}}}],["phonevalidation(abstractcontrol",{"_index":1239,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["picker",{"_index":1715,"title":{},"body":{"dependencies.html":{}}}],["picker/ngx",{"_index":519,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe",{"_index":334,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"injectables/VolunteerService.html":{}}}],["pipe(catcherror(error",{"_index":913,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["planned",{"_index":1089,"title":{},"body":{"components/LoginComponent.html":{}}}],["platform",{"_index":87,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["platforms",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["plugin",{"_index":295,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["position",{"_index":497,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["pouchdb",{"_index":251,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('allocations",{"_index":293,"title":{},"body":{"injectables/AllocationService.html":{},"classes/DatabaseSyncService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('courses",{"_index":782,"title":{},"body":{"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('organisations",{"_index":835,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('statics",{"_index":840,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/StaticsService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('volunteers",{"_index":829,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb(environment.databaseurl",{"_index":300,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb.plugin(pouchdbfind",{"_index":297,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["pouchdb/dist/pouchdb",{"_index":277,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["pouchdbfind",{"_index":278,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["prefixes",{"_index":1281,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["preloadallmodules",{"_index":547,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":559,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["presents",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["presenttoast",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["presenttoast(message",{"_index":1253,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["private",{"_index":240,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["prod",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":674,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["promise",{"_index":826,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["promise.all",{"_index":842,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["promises",{"_index":851,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["properties",{"_index":208,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["protecting",{"_index":564,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["protocolul",{"_index":95,"title":{},"body":{"components/AboutPage.html":{}}}],["protractor",{"_index":539,"title":{},"body":{"classes/AppPage.html":{}}}],["prove",{"_index":648,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["provide",{"_index":527,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["provider",{"_index":236,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["providers",{"_index":176,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["provides",{"_index":563,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/UnauthenticatedGuard.html":{}}}],["public",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{}}}],["pune",{"_index":56,"title":{},"body":{"components/AboutPage.html":{}}}],["puteți",{"_index":80,"title":{},"body":{"components/AboutPage.html":{}}}],["părăsi",{"_index":496,"title":{},"body":{"components/AppComponent.html":{}}}],["reactive",{"_index":1076,"title":{},"body":{"components/LoginComponent.html":{}}}],["reactiveformsmodule",{"_index":592,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["readcookie",{"_index":1657,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readcookie(name",{"_index":1054,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["receive",{"_index":642,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["recover",{"_index":155,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["recoverpassword",{"_index":606,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["recoverpassword(email",{"_index":636,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["recoverpasswordcomponent",{"_index":154,"title":{"components/RecoverPasswordComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["recovery",{"_index":639,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["rective",{"_index":1302,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["redirected",{"_index":1084,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["redirects",{"_index":578,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["redirectto",{"_index":548,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":290,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["referes",{"_index":892,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["reg",{"_index":870,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PhoneValidation.html":{}}}],["reg.test(email",{"_index":876,"title":{},"body":{"classes/EmailValidation.html":{}}}],["reg.test(phone",{"_index":1241,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["regex",{"_index":1193,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["regexp",{"_index":1194,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["regexp('[a",{"_index":1228,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["regexp('\\\\d",{"_index":1226,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["regexp('^[+]{0,1}[0",{"_index":1240,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["regexp('^[a",{"_index":871,"title":{},"body":{"classes/EmailValidation.html":{}}}],["regexp(/[!#$%&\\‘\\(\\)\\*?@\\[\\]^_",{"_index":1231,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["related",{"_index":238,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/VolunteerService.html":{}}}],["remote",{"_index":822,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["remoteallocationsdb",{"_index":838,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["remotecoursesdb",{"_index":832,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["remotedb",{"_index":299,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["remoteorganisationsdb",{"_index":836,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["remotestaticsdb",{"_index":841,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["remotevolunteersdb",{"_index":830,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["removes",{"_index":1031,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["removespecialchars",{"_index":1153,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["removespecialchars(text",{"_index":1168,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["replacelinebreaks",{"_index":1426,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["replaceurl",{"_index":583,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["request",{"_index":626,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{}}}],["request.clone",{"_index":1287,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["requestinterceptor",{"_index":710,"title":{"interceptors/RequestInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["requests",{"_index":619,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["require",{"_index":1706,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":1479,"title":{},"body":{"classes/SsnValidation.html":{}}}],["rescue_officer",{"_index":215,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{}}}],["rescue_officer._id",{"_index":317,"title":{},"body":{"injectables/AllocationService.html":{}}}],["rescue_officer.id",{"_index":310,"title":{},"body":{"injectables/AllocationService.html":{}}}],["rescue_officer.name",{"_index":318,"title":{},"body":{"injectables/AllocationService.html":{}}}],["reset",{"_index":158,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["reset/:token",{"_index":600,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["resetat",{"_index":1331,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpassword",{"_index":607,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["resetpassword(password",{"_index":645,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resetpassword.errors?.password",{"_index":1338,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordcomponent",{"_index":157,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["resetpasswordform",{"_index":1250,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["resetpasswordform.controls.confirmpassword.errors?.password",{"_index":1339,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordform.controls.email.errors?.email",{"_index":1277,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["resetpasswordform.controls.password.errors?.password",{"_index":1340,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resource",{"_index":28,"title":{},"body":{"components/AboutPage.html":{},"injectables/StaticsService.html":{}}}],["respects",{"_index":866,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["response",{"_index":337,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/VolunteerService.html":{}}}],["response.status",{"_index":915,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["response.url",{"_index":924,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["result",{"_index":167,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":169,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resurse",{"_index":53,"title":{},"body":{"components/AboutPage.html":{}}}],["retrieve",{"_index":1350,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["retrieve(route",{"_index":1355,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["retrieved",{"_index":1401,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["retrieves",{"_index":1035,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["retrives",{"_index":770,"title":{},"body":{"injectables/CourseService.html":{}}}],["retry",{"_index":304,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["return",{"_index":332,"title":{},"body":{"injectables/AllocationService.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"interceptors/RequestInterceptor.html":{},"classes/RouteReusableStrategy.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["returns",{"_index":272,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["reusable",{"_index":716,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["reuse",{"_index":1345,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["rewuest",{"_index":632,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["reîncercați",{"_index":1336,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["rgba(240,237,240,1",{"_index":982,"title":{},"body":{"components/HomePage.html":{}}}],["romania",{"_index":126,"title":{},"body":{"components/AboutPage.html":{}}}],["românia",{"_index":46,"title":{},"body":{"components/AboutPage.html":{}}}],["root",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":143,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["rootobject",{"_index":935,"title":{"interfaces/RootObject.html":{}},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["route",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"modules/CoreModule.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"guards/UnauthenticatedGuard.html":{}}}],["router",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["routereusablestrategy",{"_index":715,"title":{"classes/RouteReusableStrategy.html":{}},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["routereusestrategy",{"_index":513,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["routermodule",{"_index":189,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["routermodule.forchild",{"_index":1013,"title":{},"body":{"modules/HomePageModule.html":{}}}],["routermodule.forchild(routes",{"_index":200,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["routermodule.forroot(routes",{"_index":558,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":188,"title":{"routes.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"guards/UnauthenticatedGuard.html":{},"modules/VolunteerPageModule.html":{},"index.html":{},"routes.html":{}}}],["routing",{"_index":570,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["routing.module",{"_index":516,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":546,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":1007,"title":{},"body":{"components/HomePage.html":{}}}],["rugăm",{"_index":1265,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["rvm",{"_index":47,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["rxjs",{"_index":282,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":284,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"classes/SsnValidation.html":{},"injectables/VolunteerService.html":{}}}],["s",{"_index":34,"title":{},"body":{"components/AboutPage.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"classes/SsnValidation.html":{}}}],["s.reduce((a",{"_index":1480,"title":{},"body":{"classes/SsnValidation.html":{}}}],["salvare",{"_index":123,"title":{},"body":{"components/AboutPage.html":{}}}],["same",{"_index":649,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sau",{"_index":69,"title":{},"body":{"components/AboutPage.html":{}}}],["savedcredentials",{"_index":680,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["saves",{"_index":653,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sc",{"_index":1437,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["screen",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LogoutComponent.html":{},"dependencies.html":{}}}],["screen/ngx",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["se",{"_index":91,"title":{},"body":{"components/AboutPage.html":{}}}],["search",{"_index":1550,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["search(keyword",{"_index":1582,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["searches",{"_index":1556,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["seconds",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["security",{"_index":1563,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["seism",{"_index":67,"title":{},"body":{"components/AboutPage.html":{}}}],["selected",{"_index":967,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["selection",{"_index":776,"title":{},"body":{"injectables/CourseService.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"injectables/CourseService.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{}}}],["selector['$and'].push",{"_index":1638,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["send",{"_index":160,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{}}}],["sending",{"_index":1388,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["sendmessage",{"_index":1385,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["sendmessagecomponent",{"_index":159,"title":{"components/SendMessageComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["sends",{"_index":625,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["sent",{"_index":620,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{}}}],["server",{"_index":298,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["serverbaseurl",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverurl",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":571,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["service/error",{"_index":909,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["service/statics.service",{"_index":718,"title":{},"body":{"modules/CoreModule.html":{}}}],["services",{"_index":721,"title":{},"body":{"modules/CoreModule.html":{}}}],["serviceurl",{"_index":932,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"interfaces/RootObject.html":{}}}],["session",{"_index":812,"title":{},"body":{"interfaces/Credentials.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["sessionstorage",{"_index":1017,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["set",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"injectables/ErrorMessageService.html":{}}}],["set(error",{"_index":944,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["setcredentials",{"_index":608,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setcredentials(credentials",{"_index":650,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setdata",{"_index":1658,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setdata(type",{"_index":1746,"title":{},"body":{"miscellaneous/functions.html":{}}}],["seterrormessage",{"_index":1298,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["seterrormessage(message",{"_index":1312,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["setheaders",{"_index":1288,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["setitem",{"_index":1021,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setitem(key",{"_index":1036,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["sets",{"_index":247,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["settimeout",{"_index":473,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["shadow",{"_index":979,"title":{},"body":{"components/HomePage.html":{}}}],["shouldattach",{"_index":1351,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldattach(route",{"_index":1360,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shoulddetach",{"_index":1352,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shoulddetach(route",{"_index":1362,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldreuseroute",{"_index":1353,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldreuseroute(future",{"_index":1364,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shows/hides",{"_index":444,"title":{},"body":{"components/AppComponent.html":{}}}],["showsidemenu",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["side",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["simplu",{"_index":108,"title":{},"body":{"components/AboutPage.html":{}}}],["situații",{"_index":63,"title":{},"body":{"components/AboutPage.html":{}}}],["size",{"_index":988,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["skip",{"_index":1596,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["slug",{"_index":1128,"title":{},"body":{"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["sms",{"_index":520,"title":{},"body":{"modules/AppModule.html":{},"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["social",{"_index":1562,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["societatea",{"_index":59,"title":{},"body":{"components/AboutPage.html":{}}}],["something",{"_index":1086,"title":{},"body":{"components/LoginComponent.html":{}}}],["sort",{"_index":789,"title":{},"body":{"injectables/CourseService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["spam",{"_index":1270,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["spec\\.ts",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":1225,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["special.test(password",{"_index":1235,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["specificat",{"_index":1271,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["splash",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["splashscreen",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["spontani",{"_index":104,"title":{},"body":{"components/AboutPage.html":{}}}],["sprijin",{"_index":36,"title":{},"body":{"components/AboutPage.html":{}}}],["sprijinul",{"_index":128,"title":{},"body":{"components/AboutPage.html":{}}}],["src/.../allocation.service.ts",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authentication.service.ts",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../course.service.ts",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.dev.ts",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.local.ts",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":1743,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../organisation.service.ts",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../statics.service.ts",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../volunteer.service.ts",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":545,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:133",{"_index":402,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:144",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:163",{"_index":406,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":440,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":442,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":424,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:60",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:78",{"_index":429,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:93",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":509,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core",{"_index":1095,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["src/app/core/authentication/authentication.guard.ts",{"_index":562,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/app/core/authentication/authentication.guard.ts:10",{"_index":568,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/app/core/authentication/authentication.guard.ts:26",{"_index":572,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/app/core/authentication/authentication.service.ts",{"_index":601,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/authentication/authentication.service.ts:106",{"_index":652,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:123",{"_index":673,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:132",{"_index":637,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:142",{"_index":647,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:21",{"_index":659,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:26",{"_index":613,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:48",{"_index":624,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:66",{"_index":631,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:81",{"_index":621,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:89",{"_index":668,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:97",{"_index":671,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/unauthenticated.guard",{"_index":598,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["src/app/core/authentication/unauthenticated.guard.ts",{"_index":1506,"title":{},"body":{"guards/UnauthenticatedGuard.html":{},"coverage.html":{}}}],["src/app/core/authentication/unauthenticated.guard.ts:10",{"_index":1508,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["src/app/core/authentication/unauthenticated.guard.ts:27",{"_index":1509,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["src/app/core/core.module.ts",{"_index":712,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/http/error",{"_index":884,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/http/request.interceptor.ts",{"_index":1280,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["src/app/core/http/request.interceptor.ts:16",{"_index":1283,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/app/core/http/request.interceptor.ts:30",{"_index":1284,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/app/core/local",{"_index":1014,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/model/allocation.model.ts",{"_index":203,"title":{},"body":{"classes/Allocation.html":{},"coverage.html":{}}}],["src/app/core/model/allocation.model.ts:11",{"_index":230,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:15",{"_index":224,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:19",{"_index":223,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:23",{"_index":226,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:27",{"_index":225,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:28",{"_index":229,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:29",{"_index":228,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:5",{"_index":220,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:6",{"_index":221,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:7",{"_index":227,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/authentication.model.ts",{"_index":811,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/model/course.model.ts",{"_index":725,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["src/app/core/model/course.model.ts:12",{"_index":734,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:16",{"_index":738,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:17",{"_index":737,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:18",{"_index":739,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:19",{"_index":735,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:20",{"_index":731,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:5",{"_index":732,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:6",{"_index":733,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:7",{"_index":740,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:8",{"_index":736,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/error.model.ts",{"_index":931,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["src/app/core/model/organisation.model.ts",{"_index":1123,"title":{},"body":{"classes/Organisation.html":{},"coverage.html":{}}}],["src/app/core/model/organisation.model.ts:10",{"_index":1136,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:11",{"_index":1141,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:12",{"_index":1133,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:13",{"_index":1139,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:14",{"_index":1137,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:18",{"_index":1134,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:22",{"_index":1135,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:23",{"_index":1138,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:24",{"_index":1145,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:25",{"_index":1132,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:26",{"_index":1144,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:27",{"_index":1143,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:28",{"_index":1129,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:5",{"_index":1130,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:6",{"_index":1131,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:7",{"_index":1140,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:8",{"_index":1142,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:9",{"_index":1146,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/volunteer.model",{"_index":1408,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["src/app/core/model/volunteer.model.ts",{"_index":1511,"title":{},"body":{"classes/Volunteer.html":{},"coverage.html":{}}}],["src/app/core/model/volunteer.model.ts:10",{"_index":1523,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:11",{"_index":1527,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:12",{"_index":1520,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:16",{"_index":1518,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:20",{"_index":1526,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:26",{"_index":1521,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:33",{"_index":1517,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:34",{"_index":1519,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:35",{"_index":1524,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:36",{"_index":1522,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:37",{"_index":1530,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:38",{"_index":1516,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:39",{"_index":1513,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:5",{"_index":1514,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:6",{"_index":1515,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:7",{"_index":1525,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:8",{"_index":1528,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:9",{"_index":1529,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/route",{"_index":1341,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["src/app/core/service/allocation.service.ts",{"_index":235,"title":{},"body":{"injectables/AllocationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/allocation.service.ts:36",{"_index":246,"title":{},"body":{"injectables/AllocationService.html":{}}}],["src/app/core/service/allocation.service.ts:65",{"_index":256,"title":{},"body":{"injectables/AllocationService.html":{}}}],["src/app/core/service/course.service.ts",{"_index":741,"title":{},"body":{"injectables/CourseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/course.service.ts:102",{"_index":769,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:116",{"_index":755,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:132",{"_index":779,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:146",{"_index":758,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:155",{"_index":774,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:34",{"_index":751,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:58",{"_index":777,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:73",{"_index":766,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:88",{"_index":762,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/database",{"_index":820,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/error",{"_index":938,"title":{},"body":{"injectables/ErrorMessageService.html":{},"coverage.html":{}}}],["src/app/core/service/organisation.service.ts",{"_index":1147,"title":{},"body":{"injectables/OrganisationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/organisation.service.ts:100",{"_index":1157,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:118",{"_index":1173,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:130",{"_index":1160,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:141",{"_index":1169,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:33",{"_index":1155,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:57",{"_index":1167,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:72",{"_index":1163,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:86",{"_index":1165,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/statics.service.ts",{"_index":1482,"title":{},"body":{"injectables/StaticsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/statics.service.ts:30",{"_index":1496,"title":{},"body":{"injectables/StaticsService.html":{}}}],["src/app/core/service/statics.service.ts:35",{"_index":1490,"title":{},"body":{"injectables/StaticsService.html":{}}}],["src/app/core/service/statics.service.ts:54",{"_index":1495,"title":{},"body":{"injectables/StaticsService.html":{}}}],["src/app/core/service/statics.service.ts:62",{"_index":1492,"title":{},"body":{"injectables/StaticsService.html":{}}}],["src/app/core/service/volunteer.service.ts",{"_index":1542,"title":{},"body":{"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/volunteer.service.ts:129",{"_index":1576,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:143",{"_index":1578,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:164",{"_index":1561,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:220",{"_index":1589,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:243",{"_index":1565,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:258",{"_index":1568,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:299",{"_index":1555,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:312",{"_index":1581,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:36",{"_index":1553,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:74",{"_index":1580,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:94",{"_index":1583,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/validators/email",{"_index":854,"title":{},"body":{"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["src/app/core/validators/password",{"_index":1201,"title":{},"body":{"classes/PasswordValidation.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/core/validators/phone",{"_index":1238,"title":{},"body":{"classes/PhoneValidation.html":{},"coverage.html":{}}}],["src/app/core/validators/ssn",{"_index":1458,"title":{},"body":{"classes/SsnValidation.html":{},"coverage.html":{}}}],["src/app/pages/about/about.module.ts",{"_index":182,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["src/app/pages/about/about.page.ts",{"_index":10,"title":{},"body":{"components/AboutPage.html":{},"coverage.html":{}}}],["src/app/pages/authentication/authentication.module.ts",{"_index":591,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["src/app/pages/authentication/authentication.page.ts",{"_index":584,"title":{},"body":{"components/AuthenticationPage.html":{},"coverage.html":{}}}],["src/app/pages/authentication/authentication.page.ts:9",{"_index":587,"title":{},"body":{"components/AuthenticationPage.html":{}}}],["src/app/pages/authentication/login/login.component.ts",{"_index":1065,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/pages/authentication/login/login.component.ts:18",{"_index":1092,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:23",{"_index":1085,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:28",{"_index":1075,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:43",{"_index":1081,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:50",{"_index":1080,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:61",{"_index":1082,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/logout/logout.component.ts",{"_index":1115,"title":{},"body":{"components/LogoutComponent.html":{},"coverage.html":{}}}],["src/app/pages/authentication/logout/logout.component.ts:10",{"_index":1118,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/pages/authentication/logout/logout.component.ts:24",{"_index":1119,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/pages/authentication/recover",{"_index":1246,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/authentication/reset",{"_index":1296,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":1011,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":959,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:14",{"_index":974,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:28",{"_index":963,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:41",{"_index":964,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/volunteer/add",{"_index":1688,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/volunteer/list",{"_index":1692,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/volunteer/send",{"_index":1375,"title":{},"body":{"components/SendMessageComponent.html":{},"coverage.html":{}}}],["src/app/pages/volunteer/validate",{"_index":1697,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/volunteer/volunteer.module.ts",{"_index":1538,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["src/app/pages/volunteer/volunteer.page.ts",{"_index":1532,"title":{},"body":{"components/VolunteerPage.html":{},"coverage.html":{}}}],["src/environments/environment.dev.ts",{"_index":1700,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.local.ts",{"_index":1701,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1702,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1703,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1704,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssn",{"_index":1461,"title":{},"body":{"classes/SsnValidation.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["ssn.tostring().length",{"_index":1463,"title":{},"body":{"classes/SsnValidation.html":{}}}],["ssnvalidation",{"_index":1457,"title":{"classes/SsnValidation.html":{}},"body":{"classes/SsnValidation.html":{},"coverage.html":{}}}],["ssnvalidation(abstractcontrol",{"_index":1459,"title":{},"body":{"classes/SsnValidation.html":{}}}],["startkey",{"_index":1499,"title":{},"body":{"injectables/StaticsService.html":{}}}],["starts",{"_index":825,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["state",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["statements",{"_index":1643,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":780,"title":{},"body":{"injectables/CourseService.html":{},"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["statics",{"_index":263,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/StaticsService.html":{},"miscellaneous/variables.html":{}}}],["staticsservice",{"_index":711,"title":{"injectables/StaticsService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/StaticsService.html":{},"coverage.html":{},"index.html":{}}}],["status",{"_index":262,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Organisation.html":{},"guards/UnauthenticatedGuard.html":{}}}],["statusbar",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["statuscode",{"_index":936,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["storage",{"_index":616,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["storage.service",{"_index":677,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["storage.service.ts",{"_index":1015,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["storage.service.ts:109",{"_index":1040,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:114",{"_index":1022,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:221",{"_index":1037,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:229",{"_index":1034,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:237",{"_index":1030,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:244",{"_index":1027,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["store",{"_index":1354,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["store(route",{"_index":1368,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["stored",{"_index":1747,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stores",{"_index":431,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{},"miscellaneous/variables.html":{}}}],["storing",{"_index":1016,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["strategy",{"_index":717,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["strategy.ts",{"_index":1342,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["strategy.ts:19",{"_index":1363,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:28",{"_index":1370,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:38",{"_index":1361,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:47",{"_index":1357,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:56",{"_index":1366,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["string",{"_index":218,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":1206,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["style",{"_index":379,"title":{},"body":{"components/AppComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutPage.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["styleurls",{"_index":14,"title":{},"body":{"components/AboutPage.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["submit",{"_index":1073,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe",{"_index":1105,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe((match",{"_index":486,"title":{},"body":{"components/AppComponent.html":{}}}],["subscription",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["succes",{"_index":1332,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["success",{"_index":635,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["successful",{"_index":628,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LogoutComponent.html":{}}}],["such",{"_index":566,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["suport",{"_index":420,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["support",{"_index":1750,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1751,"title":{},"body":{"modules.html":{}}}],["sync",{"_index":823,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts",{"_index":821,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sync.service.ts:62",{"_index":824,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["synchronization",{"_index":248,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["table",{"_index":276,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1707,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":862,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["tap",{"_index":389,"title":{},"body":{"components/AppComponent.html":{}}}],["tapped",{"_index":433,"title":{},"body":{"components/AppComponent.html":{}}}],["tapping",{"_index":432,"title":{},"body":{"components/AppComponent.html":{}}}],["targetheight",{"_index":1420,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["targetwidth",{"_index":1419,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["te",{"_index":1273,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["tel:89992142265",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["teren",{"_index":90,"title":{},"body":{"components/AboutPage.html":{}}}],["text",{"_index":993,"title":{},"body":{"components/HomePage.html":{},"injectables/OrganisationService.html":{},"components/SendMessageComponent.html":{},"injectables/VolunteerService.html":{}}}],["textarea",{"_index":1438,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["then((imagedata",{"_index":1421,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this._credentials",{"_index":682,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._errors",{"_index":954,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this._errors.push",{"_index":955,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this.authenticationservice",{"_index":1102,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authenticationservice.accesstoken",{"_index":1294,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.authenticationservice.isauthenticated",{"_index":581,"title":{},"body":{"guards/AuthenticationGuard.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["this.authenticationservice.logout().subscribe",{"_index":1121,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.authenticationservice.logout().subscribe(response",{"_index":1320,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authenticationservice.recoverpassword(this.resetpasswordform.value.email).subscribe(response",{"_index":1260,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.authenticationservice.resetpassword(this.resetpasswordform.value.password",{"_index":1328,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authenticationservice.user",{"_index":312,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{}}}],["this.authservice.user._id",{"_index":795,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.base64image",{"_index":1422,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.courseservice.createcourse(course",{"_index":1615,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["this.createform",{"_index":1096,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.credentials",{"_index":693,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials$.emit(this._credentials",{"_index":697,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials.token",{"_index":694,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials.user",{"_index":699,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.databasesyncservice.sync().then(response",{"_index":478,"title":{},"body":{"components/AppComponent.html":{}}}],["this.errorhandler(error",{"_index":914,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.errormessage",{"_index":1107,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.errormessageservice.set",{"_index":922,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.errors$.emit(this._errors",{"_index":958,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this.formbuilder.group",{"_index":1098,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.httpclient",{"_index":690,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpclient.post('/login",{"_index":686,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpclient.post('/recoverpassword",{"_index":700,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpclient.post('/resetpassword",{"_index":702,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.initialiseview",{"_index":1321,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.initializeapp",{"_index":459,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isdoubletap",{"_index":471,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loading",{"_index":1101,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.localstorage",{"_index":1059,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.clear",{"_index":1064,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.getitem(key",{"_index":1062,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.removeitem(key",{"_index":1063,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.setitem(key",{"_index":1061,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorageservice.clearitem(credentialskey",{"_index":698,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.localstorageservice.getitem('firstlaunch",{"_index":477,"title":{},"body":{"components/AppComponent.html":{}}}],["this.localstorageservice.getitem(credentialskey",{"_index":681,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.localstorageservice.setitem",{"_index":695,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.localstorageservice.setitem('firstlaunch",{"_index":480,"title":{},"body":{"components/AppComponent.html":{}}}],["this.location.back",{"_index":476,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loginform",{"_index":1097,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.markaspristine",{"_index":1104,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.messageform",{"_index":1415,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.messageform.value.message",{"_index":1430,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.phonenumbers.push(volunteer.phone",{"_index":1414,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.platform.is('cordova",{"_index":461,"title":{},"body":{"components/AppComponent.html":{}}}],["this.platform.ready().then",{"_index":460,"title":{},"body":{"components/AppComponent.html":{}}}],["this.presenttoast",{"_index":472,"title":{},"body":{"components/AppComponent.html":{}}}],["this.presenttoast('cererea",{"_index":1261,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.presenttoast('parol",{"_index":1330,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.removespecialchars(name",{"_index":1177,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["this.removespecialchars(organisation.name",{"_index":1189,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["this.removespecialchars(volunteer.name",{"_index":1623,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["this.resetpasswordform",{"_index":1259,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.route.params.subscribe",{"_index":1324,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.getcurrentnavigation",{"_index":1409,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.router.navigate(['../auth/login",{"_index":1122,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.router.navigate(['../home",{"_index":1106,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":582,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/auth/reset",{"_index":487,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/home",{"_index":1510,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["this.router.navigate([url",{"_index":483,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["this.router.url",{"_index":467,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sendmessage",{"_index":1432,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.sessionstorage",{"_index":1060,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.setcredentials",{"_index":692,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.setcredentials(body",{"_index":689,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.seterrormessage('a",{"_index":1333,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.sms.haspermission",{"_index":1431,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.sms.send(this.phonenumbers",{"_index":1429,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.splashscreen.hide",{"_index":479,"title":{},"body":{"components/AppComponent.html":{}}}],["this.statusbar.backgroundcolorbyhexstring('#264998",{"_index":462,"title":{},"body":{"components/AppComponent.html":{}}}],["this.statusbar.styledefault",{"_index":463,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toastcontroller.create",{"_index":1276,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.toastctrl.create",{"_index":493,"title":{},"body":{"components/AppComponent.html":{}}}],["this.token",{"_index":1326,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.token).subscribe(response",{"_index":1329,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.type",{"_index":328,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["this.updatevolunteer(volunteer",{"_index":1621,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["this.volunteerservice.allocatevolunteer(response.id",{"_index":336,"title":{},"body":{"injectables/AllocationService.html":{}}}],["through",{"_index":1120,"title":{},"body":{"components/LogoutComponent.html":{}}}],["throw",{"_index":929,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["title",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["title')).gettext",{"_index":544,"title":{},"body":{"classes/AppPage.html":{}}}],["toast",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["toast.present",{"_index":500,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["toastcontroller",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["toastctrl",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":646,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/User.html":{}}}],["top",{"_index":1442,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["total",{"_index":1572,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["toți",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["transl",{"_index":1196,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["transl[m",{"_index":1199,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["trebuie",{"_index":1215,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["triggered",{"_index":399,"title":{},"body":{"components/AppComponent.html":{}}}],["trimite",{"_index":1279,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["true",{"_index":303,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["truth",{"_index":644,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tslib",{"_index":1737,"title":{},"body":{"dependencies.html":{}}}],["twice",{"_index":435,"title":{},"body":{"components/AppComponent.html":{}}}],["type",{"_index":216,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types/pouchdb",{"_index":1722,"title":{},"body":{"dependencies.html":{}}}],["tău",{"_index":1435,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["uitat",{"_index":1113,"title":{},"body":{"components/LoginComponent.html":{}}}],["un",{"_index":48,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/PasswordValidation.html":{}}}],["unauthenticated",{"_index":1507,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["unauthenticatedguard",{"_index":597,"title":{"guards/UnauthenticatedGuard.html":{}},"body":{"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"guards/UnauthenticatedGuard.html":{},"coverage.html":{}}}],["underline",{"_index":997,"title":{},"body":{"components/HomePage.html":{}}}],["unei",{"_index":39,"title":{},"body":{"components/AboutPage.html":{}}}],["unor",{"_index":84,"title":{},"body":{"components/AboutPage.html":{}}}],["unui",{"_index":66,"title":{},"body":{"components/AboutPage.html":{}}}],["updatecourse",{"_index":749,"title":{},"body":{"injectables/CourseService.html":{}}}],["updatecourse(course",{"_index":778,"title":{},"body":{"injectables/CourseService.html":{}}}],["updated_at",{"_index":217,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["updatedat",{"_index":819,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["updateorganisation",{"_index":1154,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["updateorganisation(organisation",{"_index":1172,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["updates",{"_index":260,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["updatevolunteer",{"_index":1551,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["updatevolunteer(volunteer",{"_index":1588,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["uppercase",{"_index":1227,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["uppercase.test(password",{"_index":1233,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["urgen",{"_index":64,"title":{},"body":{"components/AboutPage.html":{}}}],["url",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["url.includes('tel",{"_index":481,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["useclass",{"_index":528,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["used",{"_index":1024,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"injectables/VolunteerService.html":{}}}],["user",{"_index":574,"title":{"interfaces/User.html":{}},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["user's",{"_index":446,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["username",{"_index":816,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["uses",{"_index":1392,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["v",{"_index":1264,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["va",{"_index":100,"title":{},"body":{"components/AboutPage.html":{}}}],["valid",{"_index":880,"title":{},"body":{"classes/EmailValidation.html":{}}}],["validate",{"_index":163,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{}}}],["validated",{"_index":865,"title":{},"body":{"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["validatevolunteercomponent",{"_index":162,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["validation",{"_index":1083,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validation.ts",{"_index":855,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{},"coverage.html":{}}}],["validation.ts:11",{"_index":858,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{}}}],["validation.ts:12",{"_index":1460,"title":{},"body":{"classes/SsnValidation.html":{}}}],["validation.ts:30",{"_index":1209,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["validator",{"_index":859,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/ResetPasswordComponent.html":{},"classes/SsnValidation.html":{}}}],["validators",{"_index":1093,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["validators.required",{"_index":1099,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["validați",{"_index":82,"title":{},"body":{"components/AboutPage.html":{}}}],["valideaz",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["value",{"_index":264,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":665,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/PasswordValidation.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":135,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["variable",{"_index":1649,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1754,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verificați",{"_index":1266,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["verifici",{"_index":1274,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["vezi",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["view",{"_index":400,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild",{"_index":447,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(ionrouteroutlet",{"_index":439,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"injectables/VolunteerService.html":{}}}],["voluntar",{"_index":109,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{}}}],["voluntari",{"_index":52,"title":{},"body":{"components/AboutPage.html":{}}}],["voluntarii",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["voluntarilor",{"_index":103,"title":{},"body":{"components/AboutPage.html":{}}}],["volunteer",{"_index":29,"title":{"classes/Volunteer.html":{}},"body":{"components/AboutPage.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"injectables/CourseService.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["volunteer's",{"_index":261,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/VolunteerService.html":{}}}],["volunteer'},{'name",{"_index":141,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["volunteer._id",{"_index":314,"title":{},"body":{"injectables/AllocationService.html":{}}}],["volunteer._id).subscribe((data",{"_index":1616,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.allocation",{"_index":1607,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.city",{"_index":1602,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.comments",{"_index":1633,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.component",{"_index":1540,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["volunteer.component.ts",{"_index":1689,"title":{},"body":{"coverage.html":{}}}],["volunteer.county",{"_index":1599,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.courses",{"_index":1613,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.courses.push",{"_index":1617,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.created_at",{"_index":1605,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.email",{"_index":1626,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.id",{"_index":309,"title":{},"body":{"injectables/AllocationService.html":{}}}],["volunteer.job",{"_index":1635,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.name",{"_index":315,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["volunteer.organisation",{"_index":1611,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.page",{"_index":1539,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["volunteer.page.html",{"_index":1534,"title":{},"body":{"components/VolunteerPage.html":{}}}],["volunteer.page.scss",{"_index":1533,"title":{},"body":{"components/VolunteerPage.html":{}}}],["volunteer.phone",{"_index":1608,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.service",{"_index":286,"title":{},"body":{"injectables/AllocationService.html":{}}}],["volunteer.slug",{"_index":1609,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.ssn",{"_index":1598,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.type",{"_index":1610,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.updated_at",{"_index":1606,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer/add",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["volunteer/list",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["volunteer/s",{"_index":1403,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["volunteer/validate",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["volunteer_id",{"_index":730,"title":{},"body":{"classes/Course.html":{},"injectables/CourseService.html":{}}}],["volunteerid",{"_index":772,"title":{},"body":{"injectables/CourseService.html":{},"injectables/VolunteerService.html":{}}}],["volunteerpage",{"_index":164,"title":{"components/VolunteerPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["volunteerpagemodule",{"_index":1535,"title":{"modules/VolunteerPageModule.html":{}},"body":{"modules/VolunteerPageModule.html":{},"index.html":{},"modules.html":{}}}],["volunteers",{"_index":827,"title":{},"body":{"classes/DatabaseSyncService.html":{},"components/SendMessageComponent.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["volunteers.foreach((volunteer",{"_index":1413,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["volunteerservice",{"_index":245,"title":{"injectables/VolunteerService.html":{}},"body":{"injectables/AllocationService.html":{},"modules/CoreModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"index.html":{}}}],["webkit",{"_index":977,"title":{},"body":{"components/HomePage.html":{}}}],["website",{"_index":269,"title":{},"body":{"injectables/AllocationService.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["whose",{"_index":1584,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["window.open(url",{"_index":482,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["within",{"_index":390,"title":{},"body":{"components/AppComponent.html":{}}}],["without",{"_index":1171,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["workaround",{"_index":1346,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["world",{"_index":129,"title":{},"body":{"components/AboutPage.html":{}}}],["yes",{"_index":654,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["z",{"_index":1229,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["z0",{"_index":872,"title":{},"body":{"classes/EmailValidation.html":{}}}],["z]{2,4",{"_index":875,"title":{},"body":{"classes/EmailValidation.html":{}}}],["zone",{"_index":115,"title":{},"body":{"components/AboutPage.html":{}}}],["zone.js",{"_index":1739,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":180,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutPage.html":{"url":"components/AboutPage.html","title":"component - AboutPage","body":"\n                   \n\n\n\n\n\n  Components\n  AboutPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/about/about.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                ./about.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.page.html',\n  styleUrls: ['./about.page.scss'],\n})\nexport class AboutPage {\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n  \n\n\n  \n    \n      Despre Aplicație\n    \n  \n  \n    \n      Resource and Volunteer Management este o aplicație menită să ofere sprijin în eventualitatea unei calamități majore care ar avea loc în România. RVM este un instrument de administrare de voluntari și resurse pe care le pune la dispoziție societatea civilă către Departamentul de Situații de Urgență în cazul unui seism major sau al unui alt dezastru natural. \n    \n  \n  \n    \n      Cu ajutorul acestei componente mobile a aplicației puteți să mobilizați voluntari sau să validați identitatea unor voluntari deja existenți în platformă în cazul în care aceștia își oferă ajutorul în teren și se identifică parte din protocolul de colaborare cu DSU.\n    \n  \n  \n    \n      De asemenea, aplicația va permite și administrarea voluntarilor spontani care își oferă ajutorul în caz de dezastru. Puteți înregistra foarte simplu un voluntar nou în baza de date și îl puteți aloca unei zone de intervenție pentru un mai bun management al persoanelor implicate în eforturile de salvare din teren.  \n    \n  \n  \n    \n      Aplicația RVM este dezvoltată de Code for Romania, în parteneriat cu Departamentul pentru Situații de Urgență și cu sprijinul World Bank. \n    \n  \n\n  \n    \n      \n        \n      \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n      \n        \n      \n        \n  \n\n    \n\n    \n                \n                    ./about.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Despre Aplicație                  Resource and Volunteer Management este o aplicație menită să ofere sprijin în eventualitatea unei calamități majore care ar avea loc în România. RVM este un instrument de administrare de voluntari și resurse pe care le pune la dispoziție societatea civilă către Departamentul de Situații de Urgență în cazul unui seism major sau al unui alt dezastru natural.                   Cu ajutorul acestei componente mobile a aplicației puteți să mobilizați voluntari sau să validați identitatea unor voluntari deja existenți în platformă în cazul în care aceștia își oferă ajutorul în teren și se identifică parte din protocolul de colaborare cu DSU.                  De asemenea, aplicația va permite și administrarea voluntarilor spontani care își oferă ajutorul în caz de dezastru. Puteți înregistra foarte simplu un voluntar nou în baza de date și îl puteți aloca unei zone de intervenție pentru un mai bun management al persoanelor implicate în eforturile de salvare din teren.                    Aplicația RVM este dezvoltată de Code for Romania, în parteneriat cu Departamentul pentru Situații de Urgență și cu sprijinul World Bank.                                                                                                                   '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageModule.html":{"url":"modules/AboutPageModule.html","title":"module - AboutPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AboutPage } from './about.page';\nimport { AuthenticationGuard } from '../../core/authentication/authentication.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AboutPage,\n    canActivate: [AuthenticationGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AboutPage]\n})\nexport class AboutPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Allocation.html":{"url":"classes/Allocation.html","title":"class - Allocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Allocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/allocation.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for allocation object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                _rev\n                            \n                            \n                                city\n                            \n                            \n                                county\n                            \n                            \n                                created_at\n                            \n                            \n                                organisation\n                            \n                            \n                                rescue_officer\n                            \n                            \n                                type\n                            \n                            \n                                updated_at\n                            \n                            \n                                volunteer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _rev\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organisation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rescue_officer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volunteer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Allocation {\n    _id: string;\n    _rev: string;\n    rescue_officer: {\n        id: string;\n        name: string;\n    };\n    volunteer: {\n        id: string;\n        name: string;\n    };\n    county: {\n      id: string;\n      name: string;\n    };\n    city: {\n      id: string;\n      name: string;\n    };\n    organisation: {\n        id: string;\n        name: string;\n    };\n    created_at: any;\n    updated_at: any;\n    type: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllocationService.html":{"url":"injectables/AllocationService.html","title":"injectable - AllocationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/allocation.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for allocations related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAllocation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, volunteerService: VolunteerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/allocation.service.ts:36\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Allocations Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        volunteerService\n                                                  \n                                                        \n                                                                        VolunteerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createAllocation\n                        \n                        \n                    \n                \n            \n            \n                \ncreateAllocation(volunteer: Volunteer, county: any, city: any, organisation: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/allocation.service.ts:65\n                \n            \n\n\n            \n                \n                    Creates an allocation entry in the local database and updates volunteer's allocation status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteer\n                                    \n                                                Volunteer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer object\n\n                                    \n                                \n                                \n                                    county\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        County entry from statics database\n\n                                    \n                                \n                                \n                                    city\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        City entry from statics database\n\n                                    \n                                \n                                \n                                    organisation\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object value containing the allocated volunteer's organisation\nEither contains an object with the following properties {id, name, website}, or it's null\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        An Observable with the created object\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'allocations'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/allocation.service.ts:36\n                            \n                        \n\n                \n                    \n                        Table type\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { from } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthenticationService } from '../authentication';\nimport { VolunteerService } from './volunteer.service';\nimport { Allocation } from '../model/allocation.model';\nimport { Volunteer } from '../model/volunteer.model';\nimport * as moment from 'moment';\n\n/**\n * Reference for local PouchDB Allocations Database\n */\nconst localDB = new PouchDB('allocations');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Allocations Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/allocations');\n\n/**\n * Provider for allocations related operations\n */\n@Injectable()\nexport class AllocationService {\n  /**\n   * Table type\n   */\n  private type = 'allocations';\n\n  /**\n   * Class constructor, sets the synchronization options for CouchDB and PouchDB Allocations Database\n   */\n  constructor(private authenticationService: AuthenticationService,\n              private volunteerService: VolunteerService) {\n    const options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);\n\n    localDB.createIndex({\n      index: {fields: ['volunteer.id', 'rescue_officer.id']}\n    });\n   }\n\n    /**\n     *  Creates an allocation entry in the local database and updates volunteer's allocation status\n     * @param volunteer Volunteer object\n     * @param county County entry from statics database\n     * @param city City entry from statics database\n     * @param organisation Object value containing the allocated volunteer's organisation\n     * Either contains an object with the following properties {id, name, website}, or it's null\n     * @returns An Observable with the created object\n     */\n   createAllocation(volunteer: Volunteer, county: any, city: any, organisation: any) {\n    const rescue_officer = this.authenticationService.user;\n    const allocation = new Allocation();\n    allocation.volunteer = {\n      id: volunteer._id,\n      name: volunteer.name\n    };\n    allocation.rescue_officer = {\n      id: rescue_officer._id,\n      name: rescue_officer.name\n    };\n    allocation.county = county;\n    allocation.city = city;\n    allocation.created_at = moment().format('Y-MM-DD H:mm:ss');\n    allocation.updated_at = moment().format('Y-MM-DD H:mm:ss');\n    allocation.type = this.type;\n\n    if (organisation) {\n        allocation.organisation = {\n          id: organisation.id,\n          name: organisation.name,\n        };\n    }\n\n    return from(localDB.post(allocation))\n    .pipe(\n        map((response: any) => {\n          this.volunteerService.allocateVolunteer(response.id, volunteer._id);\n          return response;\n        })\n      );\n   }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appPages\n                            \n                            \n                                    Public\n                                authenticationService\n                            \n                            \n                                    Private\n                                isDoubleTap\n                            \n                            \n                                routerOutlet\n                            \n                            \n                                showSideMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                performAction\n                            \n                            \n                                    Async\n                                presentToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar, authenticationService: AuthenticationService, router: Router, localStorageService: LocalStorageService, location: Location, databaseSyncService: DatabaseSyncService, toastCtrl: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for cordova platforms\n\n                                                        \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for splash screen\n\n                                                        \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for status bar\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operations\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route navigation\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for localStorage related operations\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route location change\n\n                                                        \n                                                \n                                                \n                                                        databaseSyncService\n                                                  \n                                                        \n                                                                        DatabaseSyncService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for database synchronization\n\n                                                        \n                                                \n                                                \n                                                        toastCtrl\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller for toast management\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeApp\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:93\n                \n            \n\n\n            \n                \n                    Application initialisation\nIf cordova is available then the splash screen is hidden and status bar style is set\nThe back-button subscription is set (if the current route is login/home \nthen it closes the app completely on double tap within 3 seconds)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:144\n                \n            \n\n\n            \n                \n                    Angular lifecycle method; gets triggered after view initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            performAction\n                        \n                        \n                    \n                \n            \n            \n                \nperformAction(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains the value of the next application state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentToast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToast()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:163\n                \n            \n\n\n            \n                \n                    Presents a toast that will be automatically dismessed after 3 seconds\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appPages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      title: 'Despre Aplicație',\n      url: '/about'\n    },\n    {\n      title: 'Validează un voluntar',\n      url: '/volunteer/validate'\n    },\n    {\n      title: 'Adaugă voluntar nou',\n      url: '/volunteer/add'\n    },\n    {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    },\n    {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    },\n    {\n      title: 'Delogare',\n      url: '/auth/logout'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n                \n                    \n                        Side menu navigation pages (page name and page url)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authenticationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:78\n                            \n                        \n\n                \n                    \n                        Provider for authentication related operations\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDoubleTap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:60\n                            \n                        \n\n                \n                    \n                        Stores the current state of back-button tapping: tapped once or twice (for exiting app)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routerOutlet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IonRouterOutlet\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(IonRouterOutlet)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n                \n                    \n                        Router outlet reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSideMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n                \n                    \n                        Boolean value that shows/hides the side menu depending on user's state\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, AfterViewInit } from '@angular/core';\n\nimport { IonRouterOutlet, Platform, ToastController } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { AuthenticationService, LocalStorageService, DatabaseSyncService } from './core';\nimport { Router } from '@angular/router';\nimport { Deeplinks } from '@ionic-native/deeplinks';\nimport { ResetPasswordComponent } from './pages/authentication/reset-password/reset-password.component';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent implements AfterViewInit {\n  /**\n   * Router outlet reference\n   */\n  @ViewChild(IonRouterOutlet) routerOutlet: IonRouterOutlet;\n\n  /**\n   * Boolean value that shows/hides the side menu depending on user's state\n   */\n  showSideMenu = true;\n\n  /**\n   * Side menu navigation pages (page name and page url)\n   */\n  public appPages = [\n    {\n      title: 'Despre Aplicație',\n      url: '/about'\n    },\n    {\n      title: 'Validează un voluntar',\n      url: '/volunteer/validate'\n    },\n    {\n      title: 'Adaugă voluntar nou',\n      url: '/volunteer/add'\n    },\n    {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    },\n    {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    },\n    {\n      title: 'Delogare',\n      url: '/auth/logout'\n    }\n  ];\n\n  /**\n   * Stores the current state of back-button tapping: tapped once or twice (for exiting app)\n   */\n  private isDoubleTap = false;\n\n  /**\n   *\n   * @param platform Provider for cordova platforms\n   * @param splashScreen Provider for splash screen\n   * @param statusBar Provider for status bar\n   * @param authenticationService Provider for authentication related operations\n   * @param router Provider for route navigation\n   * @param localStorageService Provider for localStorage related operations\n   * @param location Provider for route location change\n   * @param databaseSyncService Provider for database synchronization\n   * @param toastCtrl Controller for toast management\n   */\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar,\n    public authenticationService: AuthenticationService,\n    private router: Router,\n    private localStorageService: LocalStorageService,\n    private location: Location,\n    private databaseSyncService: DatabaseSyncService,\n    private toastCtrl: ToastController) {\n    this.initializeApp();\n  }\n\n  /**\n   * Application initialisation\n   * If cordova is available then the splash screen is hidden and status bar style is set\n   * The back-button subscription is set (if the current route is login/home \n   * then it closes the app completely on double tap within 3 seconds)\n   */\n  initializeApp() {\n    this.platform.ready().then(() => {\n      if (this.platform.is('cordova')) {\n        this.statusBar.backgroundColorByHexString('#264998');\n        this.statusBar.styleDefault();\n\n        document.addEventListener('backbutton', (event) => {\n          const currentPath = this.router.url;\n          if (currentPath.indexOf('login') >= 0 || currentPath.indexOf('home') >= 0) {\n            if (!this.isDoubleTap) {\n              this.isDoubleTap = true;\n              this.presentToast();\n\n              setTimeout(() => {\n                this.isDoubleTap = false;\n               }, 3000);\n            } else {\n              navigator['app'].exitApp();\n            }\n          } else {\n            this.location.back();\n          }\n        }, false);\n\n        if (!this.localStorageService.getItem('firstLaunch')) {\n          this.databaseSyncService.sync().then(response => {\n            this.splashScreen.hide();\n            this.localStorageService.setItem('firstLaunch', false);\n           });\n        } else {\n          this.splashScreen.hide();\n        }\n      }\n    });\n  }\n\n  /**\n   *\n   * @param url Contains the value of the next application state\n   */\n  performAction(url: string) {\n    if (url.includes('tel')) {\n      window.open(url);\n    } else {\n      this.router.navigate([url]);\n    }\n  }\n\n  /**\n   * Angular lifecycle method; gets triggered after view initialisation\n   */\n  ngAfterViewInit() {\n    this.platform.ready().then(() => {\n      if (this.platform.is('cordova')) {\n        Deeplinks.route({\n          '/auth/reset/:token': ResetPasswordComponent\n        }).subscribe((match) => {\n          setTimeout(() => {\n            this.router.navigate(['/auth/reset/', match.$args.token]);\n          }, 1000);\n        }, (nomatch) => {\n          console.warn('Unmatched Route', nomatch);\n        });\n      }\n    });\n  }\n\n  /**\n   * Presents a toast that will be automatically dismessed after 3 seconds\n   */\n  async presentToast() {\n    const toast = await this.toastCtrl.create({\n      message: 'Apăsați din nou pentru a părăsi aplicația.',\n      position: 'bottom',\n      duration: 3000\n    });\n\n    toast.present();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n          \n            RVM\n          \n        \n      \n      \n        \n          \n            \n              \n                \n                  {{p.title}}\n                \n              \n            \n          \n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          RVM                                                                                                            {{p.title}}                                                                            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CoreModule } from './core';\nimport { DatePicker } from '@ionic-native/date-picker/ngx';\nimport { SMS } from '@ionic-native/sms/ngx';\nimport { InAppBrowser } from '@ionic-native/in-app-browser/ngx';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  entryComponents: [],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n    CoreModule\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    DatePicker,\n    SMS,\n    InAppBrowser\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPageOneTitleText\n                            \n                            \n                                getTitle\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPageOneTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetPageOneTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo(destination)\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    destination\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(destination) {\n    return browser.get(destination);\n  }\n\n  getTitle() {\n    return browser.getTitle();\n  }\n\n  getPageOneTitleText() {\n    return element(by.tagName('app-home')).element(by.deepCss('ion-title')).getText();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthenticationGuard } from './core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    loadChildren: './pages/home/home.module#HomePageModule',\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'about',\n    loadChildren: './pages/about/about.module#AboutPageModule',\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'volunteer',\n    loadChildren: './pages/volunteer/volunteer.module#VolunteerPageModule',\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'auth',\n    loadChildren: './pages/authentication/authentication.module#AuthenticationPageModule'\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/authentication/authentication.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Provides a guard for protecting authenticated routes (such as home, validate-volunteer)\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.guard.ts:10\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular value which handles routing operations\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service which handles the authentication operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.guard.ts:26\n                \n            \n\n\n            \n                \n                    Determines if a user can access a route, depending on its state\nIf the route isn't allowed, it automatically redirects to login page\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        a boolean value, current user's status: authenticated or not\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { AuthenticationService } from './authentication.service';\n\n/**\n * Provides a guard for protecting authenticated routes (such as home, validate-volunteer)\n */\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  /**\n   * Class constructor\n   * @param router Angular value which handles routing operations\n   * @param authenticationService The service which handles the authentication operations\n   */\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  /**\n   * Determines if a user can access a route, depending on its state\n   * If the route isn't allowed, it automatically redirects to login page\n   * @returns a boolean value, current user's status: authenticated or not\n   */\n  canActivate(): boolean {\n    if (this.authenticationService.isAuthenticated()) {\n      return true;\n    }\n\n    this.router.navigate(['/auth/login'], {\n      replaceUrl: true\n    });\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthenticationPage.html":{"url":"components/AuthenticationPage.html","title":"component - AuthenticationPage","body":"\n                   \n\n\n\n\n\n  Components\n  AuthenticationPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/authentication.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-authentication\n            \n\n            \n                styleUrls\n                ./authentication.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./authentication.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/authentication.page.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-authentication',\n  templateUrl: './authentication.page.html',\n  styleUrls: ['./authentication.page.scss'],\n})\n\nexport class AuthenticationPage {\n\n  constructor() { }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./authentication.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthenticationPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationPageModule.html":{"url":"modules/AuthenticationPageModule.html","title":"module - AuthenticationPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthenticationPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationPageModule\n\n\n\ncluster_AuthenticationPageModule_declarations\n\n\n\n\nAuthenticationPage\n\nAuthenticationPage\n\n\n\nAuthenticationPageModule\n\nAuthenticationPageModule\n\nAuthenticationPageModule -->\n\nAuthenticationPage->AuthenticationPageModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthenticationPageModule -->\n\nLoginComponent->AuthenticationPageModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAuthenticationPageModule -->\n\nLogoutComponent->AuthenticationPageModule\n\n\n\n\n\nRecoverPasswordComponent\n\nRecoverPasswordComponent\n\nAuthenticationPageModule -->\n\nRecoverPasswordComponent->AuthenticationPageModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationPageModule -->\n\nResetPasswordComponent->AuthenticationPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/authentication/authentication.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthenticationPage\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            LogoutComponent\n                        \n                        \n                            RecoverPasswordComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthenticationPage } from './authentication.page';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { RecoverPasswordComponent } from './recover-password/recover-password.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { UnauthenticatedGuard } from 'src/app/core/authentication/unauthenticated.guard';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthenticationPage,\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n    canActivate: [UnauthenticatedGuard]\n  },\n  {\n    path: 'logout',\n    component: LogoutComponent\n  },\n  {\n    path: 'reset/:token',\n    component: ResetPasswordComponent,\n  },\n  {\n    path: 'recover',\n    component: RecoverPasswordComponent,\n    canActivate: [UnauthenticatedGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [\n    AuthenticationPage,\n    ResetPasswordComponent,\n    RecoverPasswordComponent,\n    LoginComponent,\n    LogoutComponent\n  ]\n})\nexport class AuthenticationPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides the basic authentication operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _credentials\n                            \n                            \n                                    Public\n                                credentials$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuthenticated\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Public\n                                recoverPassword\n                            \n                            \n                                    Public\n                                resetPassword\n                            \n                            \n                                    Private\n                                setCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    credentials\n                                \n                                \n                                    accessToken\n                                \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.service.ts:26\n                            \n                        \n\n                \n                    \n                            Class constructor, initializes current credentials value if some credentials are found in local storage\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Class reference injection, handles http requests sent from this service\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service reference injection, handles operations on local storage\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:81\n                \n            \n\n\n            \n                \n                    Determines if the current user is authenticated\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        A boolean value with the authenticated status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(payload: Authentication.LoginPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:48\n                \n            \n\n\n            \n                \n                    Sends a login request to the backend server\nIf it's successful stores the credentials and returns the response body\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Authentication.LoginPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Login credentials\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable that contains the authentication credentials\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:66\n                \n            \n\n\n            \n                \n                    Sends a logout rewuest to the backend server\nIf it's successful clears the credentials information from local storage\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable with a boolean value for success (true)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            recoverPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    recoverPassword(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:132\n                \n            \n\n\n            \n                \n                    Sends a request to the backend server for password recovery\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's email, it's the one that will receive the password reset link\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable that contains a truth value: successful or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(password: string, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:142\n                \n            \n\n\n            \n                \n                    Sends a request to the backend server for password reset\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's new password\n\n                                    \n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The token from the email send by password recovery to prove that it's the same user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable that contains a truth value: successful or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setCredentials\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCredentials(credentials?: Authentication.Credentials)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:106\n                \n            \n\n\n            \n                \n                    Saves current user's credentials in local storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                Authentication.Credentials\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An object that contains the authentication token and data from server if user performed a login,\nor nothing if user just performed a log out\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _credentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Authentication.Credentials | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:21\n                            \n                        \n\n                \n                    \n                        Value that stores user's credentials after authentication\nIt's null if the user never authenticates\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            credentials$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:26\n                            \n                        \n\n                \n                    \n                        Value which emits events when credentials' values change (on login/logout)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        credentials\n                    \n                \n\n                \n                    \n                        getcredentials()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:89\n                                \n                            \n                    \n                        \n                                Getter method for the credentials object\n\n\n                                \n                                \n                                \n                                    Returns :         Authentication.Credentials | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:97\n                                \n                            \n                    \n                        \n                                Getter method for the authentication token\n\n\n                                \n                                \n                                \n                                    Returns :     string | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:123\n                                \n                            \n                    \n                        \n                                Getter method for current user's profile\n\n\n                                \n                                \n                                \n                                    Returns :         Authentication.User | null\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LocalStorageService } from '../local-storage.service';\n\n/**\n * Stores the value of credentials' key\n */\nconst credentialsKey = 'credentials';\n\n/**\n * Provides the basic authentication operations.\n */\n@Injectable()\nexport class AuthenticationService {\n  /**\n   * Value that stores user's credentials after authentication\n   * It's null if the user never authenticates\n   */\n  private _credentials: Authentication.Credentials | null;\n\n  /**\n   * Value which emits events when credentials' values change (on login/logout)\n   */\n  public credentials$ = new EventEmitter();\n\n  /**\n   * Class constructor, initializes current credentials value if some credentials are found in local storage\n   * @param httpClient Class reference injection, handles http requests sent from this service\n   * @param localStorageService Service reference injection, handles operations on local storage\n   */\n  constructor(\n    private httpClient: HttpClient,\n    private localStorageService: LocalStorageService) {\n      const savedCredentials = this.localStorageService.getItem(credentialsKey);\n      if (savedCredentials) {\n        this._credentials = JSON.parse(savedCredentials);\n      }\n  }\n\n  /**\n   * Sends a login request to the backend server\n   * If it's successful stores the credentials and returns the response body\n   * @param payload Login credentials\n   * @returns An observable that contains the authentication credentials\n   */\n  login(\n    payload: Authentication.LoginPayload\n  ): Observable {\n    const loginInfo: any = payload;\n    loginInfo.device = 'mobile';\n    return this.httpClient.post('/login', loginInfo).pipe(\n      map((body: any) => {\n        this.setCredentials(body);\n        return body;\n      })\n    );\n  }\n\n  /**\n   * Sends a logout rewuest to the backend server\n   * If it's successful clears the credentials information from local storage\n   * @returns An observable with a boolean value for success (true)\n   */\n  logout(): Observable {\n    return this.httpClient\n      .get('/logout')\n      .pipe(\n        map(() => {\n          this.setCredentials();\n          return true;\n        })\n      );\n  }\n\n  /**\n   * Determines if the current user is authenticated\n   * @returns A boolean value with the authenticated status\n   */\n  isAuthenticated(): boolean {\n    return !!this.credentials;\n  }\n\n  /**\n   * Getter method for the credentials object\n   * @returns The current credentials\n   */\n  get credentials(): Authentication.Credentials | null {\n    return this._credentials;\n  }\n\n  /**\n   * Getter method for the authentication token\n   * @returns The current token\n   */\n  get accessToken(): string | null {\n    return this.credentials ? this.credentials.token : null;\n  }\n\n  /**\n   * Saves current user's credentials in local storage\n   * @param credentials An object that contains the authentication token and data from server if user performed a login,\n   * or nothing if user just performed a log out\n   */\n  private setCredentials(credentials?: Authentication.Credentials) {\n    this._credentials = credentials || null;\n    if (credentials) {\n      this.localStorageService.setItem(\n        credentialsKey,\n        JSON.stringify(credentials)\n      );\n      this.credentials$.emit(this._credentials);\n    } else {\n      this.localStorageService.clearItem(credentialsKey);\n    }\n  }\n\n   /**\n    * Getter method for current user's profile\n    * @returns The current user\n    */\n  get user(): Authentication.User | null {\n    return this.credentials ? this.credentials.user : null;\n  }\n\n  /**\n   * Sends a request to the backend server for password recovery\n   * @param email User's email, it's the one that will receive the password reset link\n   * @returns an observable that contains a truth value: successful or not\n   */\n  public recoverPassword(email: string) {\n    return this.httpClient.post('/recoverpassword', {email, device: 'mobile'});\n  }\n\n   /**\n    * Sends a request to the backend server for password reset\n    * @param password User's new password\n    * @param token The token from the email send by password recovery to prove that it's the same user\n    * @returns an observable that contains a truth value: successful or not\n    */\n  public resetPassword(password: string, token: string) {\n    return this.httpClient.post('/resetpassword', {password, password_confirmation: password, token, device: 'mobile'});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nAllocationService\n\nAllocationService\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAllocationService->CoreModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nCoreModule -->\n\nAuthenticationService->CoreModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nCoreModule -->\n\nCourseService->CoreModule\n\n\n\n\n\nErrorHandlerInterceptor\n\nErrorHandlerInterceptor\n\nCoreModule -->\n\nErrorHandlerInterceptor->CoreModule\n\n\n\n\n\nErrorMessageService\n\nErrorMessageService\n\nCoreModule -->\n\nErrorMessageService->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\nOrganisationService\n\nOrganisationService\n\nCoreModule -->\n\nOrganisationService->CoreModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\n\n\nStaticsService\n\nStaticsService\n\nCoreModule -->\n\nStaticsService->CoreModule\n\n\n\n\n\nVolunteerService\n\nVolunteerService\n\nCoreModule -->\n\nVolunteerService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AllocationService\n                        \n                        \n                            AuthenticationService\n                        \n                        \n                            CourseService\n                        \n                        \n                            ErrorHandlerInterceptor\n                        \n                        \n                            ErrorMessageService\n                        \n                        \n                            LocalStorageService\n                        \n                        \n                            OrganisationService\n                        \n                        \n                            RequestInterceptor\n                        \n                        \n                            RequestInterceptor\n                        \n                        \n                            StaticsService\n                        \n                        \n                            VolunteerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  HTTP_INTERCEPTORS,\n  HttpClientModule\n} from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\nimport {\n  AuthenticationGuard,\n  AuthenticationService,\n} from './authentication';\nimport {\n  RequestInterceptor,\n  ErrorHandlerInterceptor\n} from './http';\nimport { LocalStorageService } from './local-storage.service';\nimport { RouteReusableStrategy } from './route-reusable-strategy';\nimport {\n  ErrorMessageService,\n  CourseService,\n  VolunteerService,\n  OrganisationService,\n  DatabaseSyncService,\n  AllocationService\n} from './service';\nimport { StaticsService } from './service/statics.service';\nimport { UnauthenticatedGuard } from './authentication/unauthenticated.guard';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule, RouterModule],\n  declarations: [],\n  providers: [\n    LocalStorageService,\n    AuthenticationService,\n    AuthenticationGuard,\n    UnauthenticatedGuard,\n    RequestInterceptor,\n    ErrorHandlerInterceptor,\n    VolunteerService,\n    ErrorMessageService,\n    StaticsService,\n    CourseService,\n    OrganisationService,\n    DatabaseSyncService,\n    AllocationService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: RequestInterceptor,\n      multi: true\n    },\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy\n    }\n  ]\n})\n\n/**\n * Module for all core related services, interceptors and models\n */\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/course.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for course object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                _rev\n                            \n                            \n                                acredited\n                            \n                            \n                                added_by\n                            \n                            \n                                course_name\n                            \n                            \n                                created_at\n                            \n                            \n                                obtained\n                            \n                            \n                                type\n                            \n                            \n                                updated_at\n                            \n                            \n                                volunteer_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/model/course.model.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _rev\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acredited\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            added_by\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            obtained\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volunteer_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Course {\n    _id: string;\n    _rev: string;\n    volunteer_id: string;\n    course_name: {\n        id: string;\n        name: string;\n    };\n    acredited: {\n        id: string;\n        name: string;\n    };\n    obtained: Date;\n    created_at: any;\n    updated_at: any;\n    added_by: string;\n    type: string;\n\n    constructor() {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseService.html":{"url":"injectables/CourseService.html","title":"injectable - CourseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/course.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for course related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCourse\n                            \n                            \n                                deleteCourseById\n                            \n                            \n                                getCourseById\n                            \n                            \n                                getCourseByName\n                            \n                            \n                                getCourseByVolunteerId\n                            \n                            \n                                getCourseNames\n                            \n                            \n                                getCourses\n                            \n                            \n                                updateCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/course.service.ts:34\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Courses Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createCourse\n                        \n                        \n                    \n                \n            \n            \n                \ncreateCourse(courseName: any, volunteer_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:116\n                \n            \n\n\n            \n                \n                    Creates a course entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    courseName\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Entry from statics courses database\n\n                                    \n                                \n                                \n                                    volunteer_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the volunteer that is acredited for this course\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteCourseById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteCourseById(courseId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:146\n                \n            \n\n\n            \n                \n                    Deletes an entry by its id from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The course id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourseById\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourseById(courseId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:88\n                \n            \n\n\n            \n                \n                    Finds a course by its id in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course's id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the course with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourseByName\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourseByName(courseNameId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:73\n                \n            \n\n\n            \n                \n                    Finds a course by its name in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    courseNameId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course name id from statics database\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all courses with that name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourseByVolunteerId\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourseByVolunteerId(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:102\n                \n            \n\n\n            \n                \n                    Retrives the list of courses that belong to a volunteer\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A volunteer's id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable containing the list of courses that belong to the given volunteer\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourseNames\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourseNames()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:155\n                \n            \n\n\n            \n                \n                    Returns all course names for selection\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourses\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourses()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:58\n                \n            \n\n\n            \n                \n                    Getter method for all courses from the local database\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all courses\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateCourse\n                        \n                        \n                    \n                \n            \n            \n                \nupdateCourse(course: Course)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:132\n                \n            \n\n\n            \n                \n                    Updates a course entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new course entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'courses'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/course.service.ts:34\n                            \n                        \n\n                \n                    \n                        Courses' table type (if the course is not a static value)\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { from, Observable } from 'rxjs';\nimport { Course } from '../model/course.model';\nimport { AuthenticationService } from '../authentication';\nimport * as moment from 'moment';\n\n/**\n * Reference for local PouchDB Courses Database\n */\nconst localDB = new PouchDB('courses');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Courses Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/courses');\n\n/**\n * Provider for course related operations\n */\n@Injectable()\nexport class CourseService {\n\n  /**\n   * Courses' table type (if the course is not a static value)\n   */\n  private type = 'courses';\n\n  /**\n   * Class constructor, sets the synchronization options for CouchDB and PouchDB Courses Database\n   * @param authService Provider for authentication related operations\n   */\n  constructor(private authService: AuthenticationService) {\n    const options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);\n\n    localDB.createIndex({\n      index: {fields: ['course_name.id', 'volunteer_id', 'acredited.id']}\n    });\n   }\n\n  /**\n   * Getter method for all courses from the local database\n   * @returns An Observable with all courses\n   */\n  getCourses(): Observable {\n    return from(localDB.find({\n      selector: {\n          type: this.type\n      },\n      include_docs: true,\n      attachments: true\n    }));\n  }\n\n  /**\n   * Finds a course by its name in the local database\n   * @param courseNameId Course name id from statics database\n   * @returns An Observable with all courses with that name\n   */\n  getCourseByName(courseNameId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        'course_name.id': {$eq: courseNameId},\n        type: this.type\n      },\n      sort: ['course_name.id'],\n    }));\n  }\n\n  /**\n   * Finds a course by its id in the local database\n   * @param courseId Course's id\n   * @returns An Observable containing the course with that id\n   */\n  getCourseById(courseId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        _id: {$eq: courseId},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   * Retrives the list of courses that belong to a volunteer\n   * @param volunteerId A volunteer's id\n   * @returns An observable containing the list of courses that belong to the given volunteer\n   */\n  getCourseByVolunteerId(volunteerId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        volunteer_id: {$eq: volunteerId},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   * Creates a course entry in the local database\n   * @param courseName Entry from statics courses database\n   * @param volunteer_id The id of the volunteer that is acredited for this course\n   */\n  createCourse(courseName: any, volunteer_id: string): Observable {\n    const course = new Course();\n    course.volunteer_id = volunteer_id;\n    course.course_name = courseName;\n    course.created_at = moment().format('Y-MM-DD H:mm:ss');\n    course.updated_at = moment().format('Y-MM-DD H:mm:ss');\n    course.added_by = this.authService.user._id;\n    course.type = this.type;\n\n    return from(localDB.post(course));\n  }\n\n  /**\n   * Updates a course entry in the local database\n   * @param course The new course entry\n   */\n  updateCourse(course: Course): void {\n    localDB.get(course._id).then((doc: Course) => {\n      doc.course_name = course.course_name ? course.course_name : doc.course_name;\n      doc.acredited = course.acredited ? course.acredited : doc.acredited;\n      doc.obtained = course.obtained ? course.obtained : doc.obtained;\n      doc.updated_at = new Date();\n      localDB.put(doc);\n    });\n  }\n\n  /**\n   * Deletes an entry by its id from the local database\n   * @param courseId The course id\n   */\n  deleteCourseById(courseId: string): void {\n    localDB.get(courseId).then(doc => {\n      return localDB.remove(doc);\n    });\n  }\n\n  /**\n   * Returns all course names for selection\n   */\n  getCourseNames() {\n    return from(localDB.find({\n      selector: {\n          type: 'course_names'\n      },\n      include_docs: true,\n      attachments: true\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Credentials.html":{"url":"interfaces/Credentials.html","title":"interface - Credentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Credentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for credentials object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        session\n                                \n                                \n                                        token\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        session\n                                    \n                                \n                                \n                                    \n                                        session:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  /**\n   * Interface for login payload\n   */\n  export interface LoginPayload {\n    username: string;\n    password: string;\n  }\n\n  /**\n   * Interface for user object\n   */\n  export interface User {\n    _id: string;\n    name: string;\n    phone?: any;\n    email: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n\n  /**\n   * Interface for credentials object\n   */\n  export interface Credentials {\n    user: User;\n    token: string;\n    session: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseSyncService.html":{"url":"classes/DatabaseSyncService.html","title":"class - DatabaseSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/database-sync.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for database synchronization (local and remote)\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sync\n                        \n                        \n                    \n                \n            \n            \n                \nsync()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/database-sync.service.ts:62\n                \n            \n\n\n            \n                \n                    Starts database synchronization\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as PouchDB from 'pouchdb/dist/pouchdb';\nimport { environment } from '../../../environments/environment';\n\n/**\n * Reference for local PouchDB Volunteers Database\n */\nconst localVolunteersDB = new PouchDB('volunteers');\n/**\n * Reference for server CouchDB Volunteers Database\n */\nconst remoteVolunteersDB = new PouchDB(environment.databaseURL + '/volunteers');\n\n/**\n * Reference for local PouchDB Courses Database\n */\nconst localCoursesDB = new PouchDB('courses');\n/**\n * Reference for server CouchDB Courses Database\n */\nconst remoteCoursesDB = new PouchDB(environment.databaseURL + '/courses');\n\n/**\n * Reference for local PouchDB Organisations Database\n */\nconst localOrganisationsDB = new PouchDB('organisations');\n/**\n * Reference for server CouchDB Organisations Database\n */\nconst remoteOrganisationsDB = new PouchDB(environment.databaseURL + '/organisations');\n\n/**\n * Reference for local PouchDB Allocations Database\n */\nconst localAllocationsDB = new PouchDB('allocations');\n/**\n * Reference for server CouchDB Allocations Database\n */\nconst remoteAllocationsDB = new PouchDB(environment.databaseURL + '/allocations');\n\n/**\n * Reference for local PouchDB Statics Database\n */\nconst localStaticsDB = new PouchDB('statics');\n/**\n * Reference for server CouchDB Allocations Database\n */\nconst remoteStaticsDB = new PouchDB(environment.databaseURL + '/statics');\n\n/**\n * Service for database synchronization (local and remote)\n */\nexport class DatabaseSyncService {\n\n    /**\n     * @ignore\n     */\n    constructor() { }\n\n    /**\n     * Starts database synchronization\n     */\n    sync(): Promise {\n        return Promise.all(\n          [localVolunteersDB.sync(remoteVolunteersDB),\n            localCoursesDB.sync(remoteCoursesDB),\n            localOrganisationsDB.sync(remoteOrganisationsDB),\n            localAllocationsDB.sync(remoteAllocationsDB),\n            localStaticsDB.sync(remoteStaticsDB)]).then((result) => {\n              console.log(result);\n            }).catch(error => console.log(`Error in promises ${error}`));\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailValidation.html":{"url":"classes/EmailValidation.html","title":"class - EmailValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/email-validation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                emailValidation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            emailValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emailValidation(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/email-validation.ts:11\n                \n            \n\n\n            \n                \n                    Email validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the value from the input\nthat is being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the string respects the pattern, an error message otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\n\nexport class EmailValidation {\n\n    /**\n     * Email validator\n     * @param abstractControl An abstract control reference, to automatically take the value from the input\n     * that is being validated\n     * @returns null if the string respects the pattern, an error message otherwise\n     */\n    static emailValidation(abstractControl: AbstractControl): any {\n        const email = abstractControl.value;\n        const reg = new RegExp('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$');\n\n        if (reg.test(email)) {\n            return null;\n        }\n\n        return { 'email': 'Adresa de email introdusă nu este validă (ex: email@email.com).' };\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorHandlerInterceptor.html":{"url":"interceptors/ErrorHandlerInterceptor.html","title":"interceptor - ErrorHandlerInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorHandlerInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/error-handler.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Adds a default error handler to all requests.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, localStorageService: LocalStorageService, errorMessageService: ErrorMessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/error-handler.interceptor.ts:25\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular value which handles routing operations\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected service referes the LocalStorageService for handling operations related to storage\n\n                                                        \n                                                \n                                                \n                                                        errorMessageService\n                                                  \n                                                        \n                                                                        ErrorMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected service referes the ErrorMessageService for handling operations related to error messagging\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            errorHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    errorHandler(response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/error-handler.interceptor.ts:59\n                \n            \n\n\n            \n                \n                    Handles the request errors depending on its code\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request response\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable with the http event\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/error-handler.interceptor.ts:45\n                \n            \n\n\n            \n                \n                    Intercepts all requests that are sent and adds an error handling function to them\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current request that is being sent\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Handles the next state of the request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable with the new request, with the additional information\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from '../local-storage.service';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ErrorMessageService } from '../service/error-message.service';\nimport { environment } from '../../../environments/environment';\n\n/**\n * Key that identifies the credentials\n */\nconst credentialsKey = 'credentials';\n\n/**\n * Adds a default error handler to all requests.\n */\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n\n  /**\n   * Class constructor\n   * @param router Angular value which handles routing operations\n   * @param localStorageService Injected service referes the LocalStorageService for handling operations related to storage\n   * @param errorMessageService Injected service referes the ErrorMessageService for handling operations related to error messagging\n   */\n  constructor(\n    private router: Router,\n    private localStorageService: LocalStorageService,\n    private errorMessageService: ErrorMessageService\n  ) {}\n\n   /**\n    * Intercepts all requests that are sent and adds an error handling function to them\n    * @param request The current request that is being sent\n    * @param next Handles the next state of the request\n    * @returns An observable with the new request, with the additional information\n    */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return next\n      .handle(request)\n      .pipe(catchError(error => this.errorHandler(error)));\n  }\n\n  /**\n   * Handles the request errors depending on its code\n   * @param response Request response\n   * @returns An observable with the http event\n   */\n  private errorHandler(\n    response: HttpResponse\n  ): Observable> {\n    if (response.status === 401) {\n      this.localStorageService.clearItem(credentialsKey);\n      this.router.navigate(['/auth/login'], {\n        replaceUrl: true\n      });\n    } else if (response.status === 400) {\n      const errorResponse: any = response;\n      if (errorResponse.error) {\n        if (errorResponse.error.validation) {\n          errorResponse.error.validation.keys.forEach((key: string) => {\n            this.errorMessageService.set(\n              errorResponse.error.validation.errors[key],\n              key,\n              response.url\n            );\n          });\n        } else {\n          this.errorMessageService.set(\n            errorResponse.error.error,\n            '_GLOBAL_',\n            response.url\n          );\n        }\n      }\n    }\n\n    if (!environment.production) {\n      console.error('Request error', response);\n    }\n    throw response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorMessageObject.html":{"url":"interfaces/ErrorMessageObject.html","title":"interface - ErrorMessageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorMessageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/error.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for error message\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        id\n                                \n                                \n                                        serviceUrl\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceUrl\n                                    \n                                \n                                \n                                    \n                                        serviceUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace ErrorModel {\n  /**\n   * Interface for error object\n   */\n  export interface RootObject {\n    statusCode: number;\n    error: string;\n    message: string;\n    attributes?: any;\n  }\n\n  /**\n   * Interface for error message\n   */\n  export interface ErrorMessageObject {\n    id: number;\n    error: string;\n    type: string;\n    serviceUrl: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorMessageService.html":{"url":"injectables/ErrorMessageService.html","title":"injectable - ErrorMessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorMessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/error-message.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for error messages\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _errors\n                            \n                            \n                                    Public\n                                errors$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errors\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/error-message.service.ts:51\n                \n            \n\n\n            \n                \n                    Clears the error messages and emits an event\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            set\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    set(error: string, type: string, serviceUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/error-message.service.ts:37\n                \n            \n\n\n            \n                \n                    Sets the error messages and emits an event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error message\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error type\n\n                                    \n                                \n                                \n                                    serviceUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Service Url that generated the error\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorModel.ErrorMessageObject[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/error-message.service.ts:11\n                            \n                        \n\n                \n                    \n                        Value that stores the error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errors$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/error-message.service.ts:16\n                            \n                        \n\n                \n                    \n                        Value that emitts events when error messages are changed\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errors\n                    \n                \n\n                \n                    \n                        geterrors()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/service/error-message.service.ts:27\n                                \n                            \n                    \n                        \n                                Getter for current error messages\n\n\n                                \n                                \n                                \n                                    Returns :         ErrorModel.ErrorMessageObject[]\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\n\n/**\n * Provider for error messages\n */\n@Injectable()\nexport class ErrorMessageService {\n  /**\n   * Value that stores the error messages\n   */\n  private _errors: ErrorModel.ErrorMessageObject[] = [];\n\n  /**\n   * Value that emitts events when error messages are changed\n   */\n  public errors$ = new EventEmitter();\n\n  /**\n   * @ignore\n   */\n  constructor() {}\n\n  /**\n   * Getter for current error messages\n   * @returns current error messages\n   */\n  get errors(): ErrorModel.ErrorMessageObject[] {\n    return this._errors;\n  }\n\n  /**\n   * Sets the error messages and emits an event\n   * @param error Error message\n   * @param type Error type\n   * @param serviceUrl Service Url that generated the error\n   */\n  public set(error: string, type: string, serviceUrl: string) {\n    this._errors.push({\n      id: Date.now(),\n      error: error,\n      type: type,\n      serviceUrl: serviceUrl\n    });\n    console.log(this._errors);\n    this.errors$.emit(this._errors);\n  }\n\n  /**\n   * Clears the error messages and emits an event\n   */\n  public clear() {\n    this._errors = [];\n    this.errors$.emit(this._errors);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                performAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.page.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            performAction\n                        \n                        \n                    \n                \n            \n            \n                \nperformAction(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/home.page.ts:41\n                \n            \n\n\n            \n                \n                    Performes the action selected by the user from the side-menu list;\nIt can either mean navigation to a new page or opening the phone's call screen\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String containing the url for the route that will be displayed on user click\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      title: 'Validează voluntar',\n      url: '/volunteer/validate'\n    }, {\n      title: 'Adaugă voluntar',\n      url: '/volunteer/add'\n    }, {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    }, {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/home/home.page.ts:14\n                            \n                        \n\n                \n                    \n                        Actions that can be performed from the side-menu\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n\n  /**\n   * Actions that can be performed from the side-menu\n   */\n  actions = [\n    {\n      title: 'Validează voluntar',\n      url: '/volunteer/validate'\n    }, {\n      title: 'Adaugă voluntar',\n      url: '/volunteer/add'\n    }, {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    }, {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    }\n  ];\n\n  /**\n   *\n   * @param router Provider for route navigation\n   */\n  constructor(private router: Router) { }\n\n  /**\n   * Performes the action selected by the user from the side-menu list;\n   * It can either mean navigation to a new page or opening the phone's call screen\n   * @param url String containing the url for the route that will be displayed on user click\n   */\n  performAction(url: string) {\n    if (url.includes('tel')) {\n      window.open(url);\n    } else {\n      this.router.navigate([url]);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n    \n      \n    \n    \n  \n\n\n\n  \n    \n      \n          \n            {{action.title}}\n          \n      \n    \n  \n\n    \n\n    \n                \n                    home.page.scss\n                \n                .menu-column {\n  -webkit-box-shadow: 0px 0px 0px 5px rgba(240,237,240,1);\n  -moz-box-shadow: 0px 0px 0px 5px rgba(240,237,240,1);\n  box-shadow: 0px 0px 5px 2px rgba(240,237,240,1);\n  color: black;\n  font-size: 12px;\n  padding: 80px 10px;\n  text-align: center;\n  text-decoration: underline;\n\n  a {\n    color: black;\n  }\n}\n\n.home-columns {\n  align-items: center;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  \n  ion-row {\n    justify-content: center;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{action.title}}                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { HomePage } from './home.page';\nimport { AuthenticationGuard } from '../../core/authentication/authentication.guard';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage,\n        canActivate: [AuthenticationGuard]\n      }\n    ])\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/local-storage.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for storing information in local storage\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                localStorage\n                            \n                            \n                                sessionStorage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearAll\n                            \n                            \n                                    Public\n                                clearItem\n                            \n                            \n                                    Public\n                                getItem\n                            \n                            \n                                    Public\n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/local-storage.service.ts:114\n                            \n                        \n\n                \n                    \n                            Checks if localStorage can be used for basic storing operations\nIf not, then a custom storage is created to handle this operations\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clearAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:244\n                \n            \n\n\n            \n                \n                    Clears the existing storage\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clearItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:237\n                \n            \n\n\n            \n                \n                    Removes an item from storage by its key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:229\n                \n            \n\n\n            \n                \n                    Retrieves an item by its key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setItem(key: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:221\n                \n            \n\n\n            \n                \n                    Adds an item to storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item's key\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item itself\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localStorage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:109\n                            \n                        \n\n                \n                    \n                        Handles storing inside local storage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionStorage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:114\n                            \n                        \n\n                \n                    \n                        Handles storing inside session storage\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Creates a cookie entry\n * @param name Cookie name\n * @param value Cookie value\n * @param days Cookie expiration number of days\n */\nfunction createCookie(name: any, value: any, days: any) {\n  let date: any, expires;\n\n  if (days) {\n    date = new Date();\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    expires = '; expires=' + date.toGMTString();\n  } else {\n    expires = '';\n  }\n  document.cookie = name + '=' + value + expires + '; path=/';\n}\n\n/**\n * Getter for a cookie document by its name\n * @param name Cookie's name\n * @returns cookie document \n */\nfunction readCookie(name: any) {\n  const nameEQ = name + '=',\n    ca = document.cookie.split(';');\n  let i, c;\n\n  for (i = 0; i  localStorage\n      });\n      this.localStorage = localStorage;\n      this.sessionStorage = sessionStorage;\n    }\n  }\n\n  /**\n   * Adds an item to storage\n   * @param key Item's key\n   * @param value Item itself\n   */\n  public setItem(key: string, value: any) {\n    return this.localStorage.setItem(key, value);\n  }\n\n   /**\n    * Retrieves an item by its key\n    * @param key Item key\n    */\n  public getItem(key: string) {\n    return this.localStorage.getItem(key);\n  }\n\n  /**\n   * Removes an item from storage by its key\n   * @param key Item key\n   */\n  public clearItem(key: string) {\n    return this.localStorage.removeItem(key);\n  }\n\n  /**\n   * Clears the existing storage\n   */\n  public clearAll() {\n    return this.localStorage.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loading\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, formBuilder: FormBuilder, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/login/login.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route navigation\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for reactive form creation\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/login/login.component.ts:50\n                \n            \n\n\n            \n                \n                    Form initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/login/login.component.ts:43\n                \n            \n\n\n            \n                \n                    Page initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/login/login.component.ts:61\n                \n            \n\n\n            \n                \n                    Authentication credentials from the form are sent to the authentication service for validation\nIf they are validated, the user will be redirected to the home page, if not, a toast will display an error message\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                        The error message that will be displayed when something didn't go as planned\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/login/login.component.ts:28\n                            \n                        \n\n                \n                    \n                        True if page is in loading state false if not; used in design\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/login/login.component.ts:18\n                            \n                        \n\n                \n                    \n                        Form with user's login credentials\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { AuthenticationService } from 'src/app/core';\nimport { EmailValidation } from 'src/app/core/validators/email-validation';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Form with user's login credentials\n   */\n  loginForm: FormGroup;\n\n  /**\n   * The error message that will be displayed when something didn't go as planned\n   */\n  errorMessage: string;\n\n  /**\n   * True if page is in loading state false if not; used in design\n   */\n  loading = false;\n\n  /**\n   *\n   * @param router Provider for route navigation\n   * @param formBuilder Provider for reactive form creation\n   * @param authenticationService Provider for authentication related operation\n   */\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private authenticationService: AuthenticationService) { }\n\n  /**\n   * Page initialisation\n   */\n  ngOnInit() {\n    this.createForm();\n  }\n\n  /**\n   * Form initialisation\n   */\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, EmailValidation.emailValidation]],\n      password: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Authentication credentials from the form are sent to the authentication service for validation\n   * If they are validated, the user will be redirected to the home page, if not, a toast will display an error message\n   */\n  submit() {\n    this.loading = true;\n    this.authenticationService\n      .login(this.loginForm.value)\n      .pipe(\n        finalize(() => {\n          this.loginForm.markAsPristine();\n        })\n      )\n      .subscribe(\n        (credentials) => {\n            this.loading = false;\n            this.router.navigate(['../home'], {\n              replaceUrl: true\n            });\n        },\n        (error: any) => {\n          this.loading = false;\n          this.errorMessage = 'Informații incorecte';\n          setTimeout(() => {\n            this.errorMessage = null;\n          }, 3000);\n        }\n      );\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      Adresă de email\n      \n    \n    \n      Parolă\n      \n    \n\n    \n       {{ loginForm.controls.email.errors?.email || errorMessage }}\n      \n    \n\n    Am uitat parola\n    Login\n  \n\n  \n    \n  \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Adresă de email                    Parolă                     {{ loginForm.controls.email.errors?.email || errorMessage }}              Am uitat parola    Login          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginPayload.html":{"url":"interfaces/LoginPayload.html","title":"interface - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for login payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  /**\n   * Interface for login payload\n   */\n  export interface LoginPayload {\n    username: string;\n    password: string;\n  }\n\n  /**\n   * Interface for user object\n   */\n  export interface User {\n    _id: string;\n    name: string;\n    phone?: any;\n    email: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n\n  /**\n   * Interface for credentials object\n   */\n  export interface Credentials {\n    user: User;\n    token: string;\n    session: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutComponent.html":{"url":"components/LogoutComponent.html","title":"component - LogoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LogoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/logout/logout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout\n            \n\n            \n                styleUrls\n                ./logout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/logout/logout.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operations\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/logout/logout.component.ts:24\n                \n            \n\n\n            \n                \n                    A request through the authentication service is sent for logout;\nIf its successful the user will be redirected to the login screen\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss'],\n})\nexport class LogoutComponent implements OnInit {\n\n  /**\n   *\n   * @param authenticationService Provider for authentication related operations\n   * @param router Provider for router navigation\n   */\n  constructor(private authenticationService: AuthenticationService,\n              private router: Router) { }\n\n  /**\n   * A request through the authentication service is sent for logout;\n   * If its successful the user will be redirected to the login screen\n   */\n  ngOnInit() {\n    this.authenticationService.logout().subscribe(() => {\n      this.router.navigate(['../auth/login'], {\n        replaceUrl: true\n      });\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n  \n\n    \n\n    \n                \n                    ./logout.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Organisation.html":{"url":"classes/Organisation.html","title":"class - Organisation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Organisation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/organisation.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for organisation object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                _rev\n                            \n                            \n                                added_by\n                            \n                            \n                                address\n                            \n                            \n                                city\n                            \n                            \n                                comments\n                            \n                            \n                                contact_person\n                            \n                            \n                                county\n                            \n                            \n                                cover\n                            \n                            \n                                created_at\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                slug\n                            \n                            \n                                status\n                            \n                            \n                                type\n                            \n                            \n                                updated_at\n                            \n                            \n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/model/organisation.model.ts:28\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _rev\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            added_by\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contact_person\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            website\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Organisation {\n    _id: string;\n    _rev: string;\n    name: string;\n    slug: string;\n    website: string;\n    contact_person: string;\n    phone: string;\n    address: string;\n    email: string;\n    county: {\n        id: string;\n        name: string;\n    };\n    city: {\n        id: string;\n        name: string;\n    };\n    comments: string;\n    created_at: any;\n    updated_at: any;\n    added_by: string;\n    type: string;\n    status: string;\n    cover: string;\n\n    constructor() {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganisationService.html":{"url":"injectables/OrganisationService.html","title":"injectable - OrganisationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OrganisationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/organisation.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for organisation related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createOrganisation\n                            \n                            \n                                deleteOrganisationById\n                            \n                            \n                                getOrganisationById\n                            \n                            \n                                getOrganisationByName\n                            \n                            \n                                getOrganisations\n                            \n                            \n                                    Private\n                                removeSpecialChars\n                            \n                            \n                                updateOrganisation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/organisation.service.ts:33\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Organisations Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected reference for AuthenticationService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createOrganisation\n                        \n                        \n                    \n                \n            \n            \n                \ncreateOrganisation(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:100\n                \n            \n\n\n            \n                \n                    Creates an organisation entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new organisation's name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with the created object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteOrganisationById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteOrganisationById(organisationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:130\n                \n            \n\n\n            \n                \n                    Deletes an entry by its id from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The organisation id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrganisationById\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrganisationById(organisationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:72\n                \n            \n\n\n            \n                \n                    Finds an organisation by its id in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Organisation's id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the organisation with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrganisationByName\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrganisationByName(organisationName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:86\n                \n            \n\n\n            \n                \n                    Finds an organisation by its name in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisationName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the organisation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all organisation with that name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrganisations\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrganisations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:57\n                \n            \n\n\n            \n                \n                    Getter method for all organisations from the local database\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all organisations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            removeSpecialChars\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeSpecialChars(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:141\n                \n            \n\n\n            \n                \n                    Removes diacritics from a string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A string with diacritics\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the new string, without diacritics\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOrganisation\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOrganisation(organisation: Organisation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:118\n                \n            \n\n\n            \n                \n                    Updates an organisation entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisation\n                                    \n                                                Organisation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new organisation entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'organisations'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/organisation.service.ts:33\n                            \n                        \n\n                \n                    \n                        Table type\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { from, Observable } from 'rxjs';\nimport { AuthenticationService } from '../authentication';\nimport { Organisation } from '../model/organisation.model';\nimport * as moment from 'moment';\n\n/**\n * Reference for local PouchDB Organisations Database\n */\nconst localDB = new PouchDB('organisations');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Organisations Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/organisations');\n\n/**\n * Provider for organisation related operations\n */\n@Injectable()\nexport class OrganisationService {\n  /**\n   * Table type\n   */\n  private type = 'organisations';\n\n  /**\n   * Class constructor, sets the synchronization options for CouchDB and PouchDB Organisations Database\n   * @param authenticationService Injected reference for AuthenticationService\n   */\n  constructor(private authenticationService: AuthenticationService) {\n    const options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);\n\n    localDB.createIndex({\n      index: {fields: ['name', 'slug']}\n    });\n   }\n\n  /**\n   * Getter method for all organisations from the local database\n   * @returns An Observable with all organisations\n   */\n  getOrganisations(): Observable {\n    return from(localDB.find({\n      selector: {\n          type: this.type\n      },\n      include_docs: true,\n      attachments: true\n    }));\n  }\n\n  /**\n   * Finds an organisation by its id in the local database\n   * @param organisationId Organisation's id\n   * @returns An Observable containing the organisation with that id\n   */\n  getOrganisationById(organisationId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        _id: {$eq: organisationId},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   * Finds an organisation by its name in the local database\n   * @param organisationName The name of the organisation\n   * @returns An Observable with all organisation with that name\n   */\n  getOrganisationByName(organisationName: string): Observable {\n    return from(localDB.find({\n      selector: {\n        name: {$eq: organisationName},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   * Creates an organisation entry in the local database\n   * @param name String value containing the new organisation's name\n   * @returns An Observable with the created object\n   */\n  createOrganisation(name: string): Observable {\n    const currentUser = this.authenticationService.user;\n    const organisation = new Organisation();\n    organisation.name = name;\n    organisation.slug = this.removeSpecialChars(name);\n    organisation.added_by = currentUser._id;\n    organisation.created_at = moment().format('Y-MM-DD H:mm:ss');\n    organisation.updated_at = moment().format('Y-MM-DD H:mm:ss');\n    organisation.type = this.type;\n    organisation.status = 'inactiv';\n\n    return from(localDB.post(organisation));\n  }\n\n  /**\n   * Updates an organisation entry in the local database\n   * @param organisation The new organisation entry\n   */\n  updateOrganisation(organisation: Organisation) {\n    localDB.get(organisation._id).then((doc) => {\n      doc.name = organisation.name ? organisation.name : doc.name;\n      doc.slug = organisation.name ? this.removeSpecialChars(organisation.name) : doc.slug;\n      localDB.put(doc);\n    });\n  }\n\n  /**\n   * Deletes an entry by its id from the local database\n   * @param organisationId The organisation id\n   */\n  deleteOrganisationById(organisationId: string) {\n    localDB.get(organisationId).then((doc) => {\n      return localDB.remove(doc);\n    });\n  }\n\n   /**\n    * Removes diacritics from a string\n    * @param text A string with diacritics\n    * @returns the new string, without diacritics\n    */\n  private removeSpecialChars(text: string): string {\n    const input   = 'ăâîșț';\n    const output  = 'aaist';\n    const regex = new RegExp('[' + input + ']', 'g');\n    const transl = {};\n\n    const lookup = (m) => transl[m] || m;\n\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordValidation.html":{"url":"classes/PasswordValidation.html","title":"class - PasswordValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/password-validation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                MatchPassword\n                            \n                            \n                                    Static\n                                passwordValidation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            MatchPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    MatchPassword(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/password-validation.ts:11\n                \n            \n\n\n            \n                \n                    Matching passwords validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the values from the inputs\nthat are being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the strings match, an error message otherwise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            passwordValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    passwordValidation(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/password-validation.ts:30\n                \n            \n\n\n            \n                \n                    Password validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the value from the input\nthat is being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the string respects the pattern, an error message otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AbstractControl} from '@angular/forms';\n\nexport class PasswordValidation {\n\n    /**\n     * Matching passwords validator\n     * @param abstractControl An abstract control reference, to automatically take the values from the inputs\n     * that are being validated\n     * @returns null if the strings match, an error message otherwise\n     */\n    static MatchPassword(abstractControl: AbstractControl): any {\n        const password = abstractControl.get('password').value;\n        const confirmPassword = abstractControl.get('confirmPassword').value;\n\n        if (password !== confirmPassword) {\n            abstractControl.get('confirmPassword').setErrors({\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            });\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Password validator\n     * @param abstractControl An abstract control reference, to automatically take the value from the input\n     * that is being validated\n     * @returns null if the string respects the pattern, an error message otherwise\n     */\n    static passwordValidation(abstractControl: AbstractControl): any {\n        const number = new RegExp('\\\\d');\n        const password = abstractControl.value;\n        const uppercase = new RegExp('[A-Z]');\n        const lowercase = new RegExp('[a-z]');\n        const special = new RegExp(/[!#$%&\\‘\\(\\)\\*?@\\[\\]^_\\+\\.`\\{\\|\\}~]/);\n\n        if (!number.test(password)) {\n            return {\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            };\n        }\n\n        if (!uppercase.test(password)) {\n            return {\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            };\n        }\n\n        if (!lowercase.test(password)) {\n            return {\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            };\n        }\n\n        if (!special.test(password)) {\n            return {\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            };\n        }\n\n        if (password.length \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PhoneValidation.html":{"url":"classes/PhoneValidation.html","title":"class - PhoneValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PhoneValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/phone-validation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                phoneValidation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            phoneValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    phoneValidation(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/phone-validation.ts:11\n                \n            \n\n\n            \n                \n                    Phone validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the value from the input\nthat is being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the string respects the pattern, an error message otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\n\nexport class PhoneValidation {\n\n    /**\n     * Phone validator\n     * @param abstractControl An abstract control reference, to automatically take the value from the input\n     * that is being validated\n     * @returns null if the string respects the pattern, an error message otherwise\n     */\n    static phoneValidation(abstractControl: AbstractControl): any {\n        const phone = abstractControl.value;\n        const reg = new RegExp('^[+]{0,1}[0-9]+$');\n\n        if ((reg.test(phone) && phone.length >= 10)) {\n            if (phone.length === 12 && phone.indexOf('+') >= 0) {\n                return null;\n            }\n\n            if (phone.length === 10 && phone.indexOf('+') \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecoverPasswordComponent.html":{"url":"components/RecoverPasswordComponent.html","title":"component - RecoverPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecoverPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/recover-password/recover-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recover-password\n            \n\n            \n                styleUrls\n                ./recover-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./recover-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loading\n                            \n                            \n                                resetPasswordForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentToast\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:28\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected reference for AuthenticationService\n\n                                                        \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller for toast messages display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:44\n                \n            \n\n\n            \n                \n                    Page initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentToast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToast(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:72\n                \n            \n\n\n            \n                \n                    Presents a toast that will be automatically dismessed after 3 seconds\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        toast message\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:53\n                \n            \n\n\n            \n                \n                    Sends the recover password request\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:23\n                            \n                        \n\n                \n                    \n                        Error message that will be displayed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:28\n                            \n                        \n\n                \n                    \n                        Page is loading or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPasswordForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:18\n                            \n                        \n\n                \n                    \n                        Form reference\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core';\nimport { EmailValidation } from 'src/app/core/validators/email-validation';\nimport { ToastController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-recover-password',\n  templateUrl: './recover-password.component.html',\n  styleUrls: ['./recover-password.component.scss'],\n})\nexport class RecoverPasswordComponent implements OnInit {\n    /**\n     * Form reference\n     */\n    resetPasswordForm: FormGroup;\n\n    /**\n     * Error message that will be displayed\n     */\n    errorMessage: string = null;\n\n    /**\n     * Page is loading or not\n     */\n    loading = false;\n\n    /**\n     * Class constructor\n     *\n     * @param router Provider for router navigation\n     * @param authenticationService Injected reference for AuthenticationService\n     * @param toastController Controller for toast messages display\n     */\n    constructor(private router: Router,\n                private authenticationService: AuthenticationService,\n                private toastController: ToastController) { }\n\n    /**\n     * Page initialisation\n     */\n    ngOnInit() {\n        this.resetPasswordForm = new FormGroup({\n        email: new FormControl('', [Validators.required, EmailValidation.emailValidation])\n        });\n    }\n\n    /**\n     * Sends the recover password request\n     */\n    resetPassword() {\n        this.loading = true;\n        this.authenticationService.recoverPassword(this.resetPasswordForm.value.email).subscribe(response => {\n            this.loading = false;\n            this.presentToast('Cererea a fost înregistrată. Vă rugăm verificați atât în inbox cât și în spam.');\n            this.router.navigate(['/auth/login']);\n        }, error => {\n            this.loading = false;\n            this.errorMessage = 'Adresa de email specificată nu există. Te rugăm să verifici și să încerci din nou.';\n            setTimeout(() => {\n                this.errorMessage = null;\n            }, 3000);\n        });\n    }\n\n     /**\n      * Presents a toast that will be automatically dismessed after 3 seconds\n      * @param message toast message\n      */\n    async presentToast(message: string) {\n        const toast = await this.toastController.create({\n          message,\n          position: 'bottom',\n          duration: 3000\n        });\n        toast.present();\n    }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      Adresă de email\n      \n    \n\n    \n       {{ resetPasswordForm.controls.email.errors?.email || errorMessage }} \n     \n\n    Autentificare\n    Trimite\n  \n\n  \n      \n  \n\n\n    \n\n    \n                \n                    ./recover-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Adresă de email                     {{ resetPasswordForm.controls.email.errors?.email || errorMessage }}          Autentificare    Trimite            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecoverPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RequestInterceptor.html":{"url":"interceptors/RequestInterceptor.html","title":"interceptor - RequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  RequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/request.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Prefixes all requests with environment.serverUrl and adds the authentication token to requests\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/request.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected service referes the AuthenticationService for handling authentication related operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/request.interceptor.ts:30\n                \n            \n\n\n            \n                \n                    Intercepts all requests that are sent and adds extra information to them\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current request that is being sent\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Handles the next state of the request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The new request, with the additional information\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AuthenticationService } from '../authentication/authentication.service';\n\n/**\n * Prefixes all requests with `environment.serverUrl` and adds the authentication token to requests\n */\n@Injectable()\nexport class RequestInterceptor implements HttpInterceptor {\n\n  /**\n   * Class constructor\n   * @param authenticationService Injected service referes the AuthenticationService for handling authentication related operations\n   */\n  constructor(private authenticationService: AuthenticationService) {}\n\n  /**\n   * Intercepts all requests that are sent and adds extra information to them\n   * @param request The current request that is being sent\n   * @param next Handles the next state of the request\n   * @returns The new request, with the additional information\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    request = request.clone({\n      setHeaders: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json; charset=utf-8',\n      Authorization: `Bearer ${this.authenticationService.accessToken}`,\n      }\n    });\n\n    return next.handle(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/reset-password/reset-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                ./reset-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loading\n                            \n                            \n                                resetPasswordForm\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialiseView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentToast\n                            \n                            \n                                resetPassword\n                            \n                            \n                                setErrorMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService, formBuilder: FormBuilder, route: ActivatedRoute, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected reference for AuthenticationService\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder reference, used in creating rective forms\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for current route\n\n                                                        \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller for toast messages display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialiseView\n                        \n                        \n                    \n                \n            \n            \n                \ninitialiseView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:76\n                \n            \n\n\n            \n                \n                    Page initialisation after user was logged out (if neccessary)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:52\n                \n            \n\n\n            \n                \n                    Page initialisation\nIf user is already logged in when page is accessed, then a logout is performed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentToast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToast(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:114\n                \n            \n\n\n            \n                \n                    Presents a toast that will be automatically dismessed after 3 seconds\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        toast message\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:87\n                \n            \n\n\n            \n                \n                    Sends the reset password request\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setErrorMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsetErrorMessage(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:103\n                \n            \n\n\n            \n                \n                    Changes the value of the error message and clears it after 3 seconds\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        error message that will be displayed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:27\n                            \n                        \n\n                \n                    \n                        Error message that will be displayed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:32\n                            \n                        \n\n                \n                    \n                        Page is loading or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPasswordForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:17\n                            \n                        \n\n                \n                    \n                        Form reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:42\n                            \n                        \n\n                \n                    \n                        Provider for router navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:22\n                            \n                        \n\n                \n                    \n                        Token for password reset\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core';\nimport { PasswordValidation } from 'src/app/core/validators/password-validation';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss'],\n})\nexport class ResetPasswordComponent implements OnInit {\n    /**\n     * Form reference\n     */\n     resetPasswordForm: FormGroup;\n\n     /**\n      * Token for password reset\n      */\n    token: string;\n\n    /**\n     * Error message that will be displayed\n     */\n    errorMessage: string;\n\n    /**\n     * Page is loading or not\n     */\n    loading = false;\n\n\n    /**\n     * @param router Provider for router navigation\n     * @param authenticationService Injected reference for AuthenticationService\n     * @param formBuilder FormBuilder reference, used in creating rective forms\n     * @param route Provider for current route\n     * @param toastController Controller for toast messages display\n     */\n    constructor(public router: Router,\n                private authenticationService: AuthenticationService,\n                private formBuilder: FormBuilder,\n                private route: ActivatedRoute,\n                private toastController: ToastController) { }\n\n    /**\n     * Page initialisation\n     * If user is already logged in when page is accessed, then a logout is performed\n     */\n    ngOnInit() {\n        if (this.authenticationService.isAuthenticated() ) {\n            this.authenticationService.logout().subscribe(response => {\n                this.initialiseView();\n            });\n        } else {\n            this.initialiseView();\n        }\n\n        this.resetPasswordForm = this.formBuilder.group({\n            password: ['', [Validators.required,\n                PasswordValidation.passwordValidation\n            ]],\n            confirmPassword: ['', [Validators.required,\n                PasswordValidation.passwordValidation\n            ]],\n            }, {\n                validator: PasswordValidation.MatchPassword\n            });\n    }\n\n    /**\n     * Page initialisation after user was logged out (if neccessary)\n     */\n    initialiseView() {\n        this.route.params.subscribe(\n            (params) => {\n                this.token = params['token'];\n            }\n        );\n    }\n\n    /**\n     * Sends the reset password request\n     */\n    resetPassword() {\n        this.loading = true;\n        this.authenticationService.resetPassword(this.resetPasswordForm.value.password, this.token).subscribe(response => {\n                this.presentToast('Parolă resetată cu succes.');\n                this.loading = false;\n                this.router.navigate(['/auth/login']);\n            }, error => {\n                this.loading = false;\n                this.setErrorMessage('A apărut o eroare. Vă rugăm reîncercați.');\n            });\n    }\n\n    /**\n     * Changes the value of the error message and clears it after 3 seconds\n     * @param message error message that will be displayed\n     */\n    setErrorMessage(message: string) {\n        this.errorMessage = message;\n        setTimeout(() => {\n            this.errorMessage = null;\n        }, 3000);\n    }\n\n    /**\n     * Presents a toast that will be automatically dismessed after 3 seconds\n     * @param message toast message\n     */\n    async presentToast(message: string) {\n        const toast = await this.toastController.create({\n          message,\n          position: 'bottom',\n          duration: 3000\n        });\n        toast.present();\n    }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      Parolă\n      \n    \n\n    \n      Confirmă Parola\n      \n    \n    \n    \n       {{ resetPassword.errors?.password || resetPasswordForm.controls.confirmPassword.errors?.password || resetPasswordForm.controls.password.errors?.password }} \n    \n\n    Autentificare\n    Trimite\n  \n\n  \n      \n  \n\n\n    \n\n    \n                \n                    ./reset-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Parolă                    Confirmă Parola                         {{ resetPassword.errors?.password || resetPasswordForm.controls.confirmPassword.errors?.password || resetPasswordForm.controls.password.errors?.password }}         Autentificare    Trimite            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RootObject.html":{"url":"interfaces/RootObject.html","title":"interface - RootObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RootObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/error.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for error object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attributes\n                                \n                                \n                                        error\n                                \n                                \n                                        message\n                                \n                                \n                                        statusCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                    \n                                \n                                \n                                    \n                                        attributes:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace ErrorModel {\n  /**\n   * Interface for error object\n   */\n  export interface RootObject {\n    statusCode: number;\n    error: string;\n    message: string;\n    attributes?: any;\n  }\n\n  /**\n   * Interface for error message\n   */\n  export interface ErrorMessageObject {\n    id: number;\n    error: string;\n    type: string;\n    serviceUrl: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteReusableStrategy.html":{"url":"classes/RouteReusableStrategy.html","title":"class - RouteReusableStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteReusableStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/route-reusable-strategy.ts\n        \n\n            \n                Description\n            \n            \n                A route strategy allowing for explicit route reuse.\nUsed as a workaround for https://github.com/angular/angular/issues/18374\nTo reuse a given route, add data: { reuse: true } to the route definition.\n\n            \n\n            \n                Extends\n            \n            \n                        RouteReuseStrategy\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                retrieve\n                            \n                            \n                                    Public\n                                shouldAttach\n                            \n                            \n                                    Public\n                                shouldDetach\n                            \n                            \n                                    Public\n                                shouldReuseRoute\n                            \n                            \n                                    Public\n                                store\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            retrieve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    retrieve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:47\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DetachedRouteHandle | null\n\n                    \n                    \n                        null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldAttach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldAttach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:38\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        false\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldDetach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldDetach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:19\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        false\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldReuseRoute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:56\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    future\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Future activated route\n\n                                    \n                                \n                                \n                                    curr\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            store\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:28\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                                \n                                    detachedTree\n                                    \n                                            DetachedRouteHandle | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The detached tree\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ActivatedRouteSnapshot,\n  DetachedRouteHandle,\n  RouteReuseStrategy\n} from '@angular/router';\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @returns false\n   */\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @param detachedTree The detached tree\n   */\n  public store(\n    route: ActivatedRouteSnapshot,\n    detachedTree: DetachedRouteHandle | null\n  ): void {}\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @returns false\n   */\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @returns null\n   */\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param future Future activated route\n   * @param curr Current activated route\n   */\n  public shouldReuseRoute(\n    future: ActivatedRouteSnapshot,\n    curr: ActivatedRouteSnapshot\n  ): boolean {\n    return future.routeConfig === curr.routeConfig || future.data.reuse;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SendMessageComponent.html":{"url":"components/SendMessageComponent.html","title":"component - SendMessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SendMessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/volunteer/send-message/send-message.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-send-message\n            \n\n            \n                styleUrls\n                ./send-message.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./send-message.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                base64Image\n                            \n                            \n                                messageForm\n                            \n                            \n                                    Private\n                                phoneNumbers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addImage\n                            \n                            \n                                checkPemission\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sms: SMS, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/volunteer/send-message/send-message.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sms\n                                                  \n                                                        \n                                                                    SMS\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for sending SMS messages\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addImage\n                        \n                        \n                    \n                \n            \n            \n                \naddImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:58\n                \n            \n\n\n            \n                \n                    Adds an image from camera to the app and uses base64 codification to convert it into a string\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkPemission\n                        \n                        \n                    \n                \n            \n            \n                \ncheckPemission()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:85\n                \n            \n\n\n            \n                \n                    Checks for SMS permission, if granted sends the SMS\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:41\n                \n            \n\n\n            \n                \n                    Page initialisation: the volunteer id needs to be retrieved from the url\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:72\n                \n            \n\n\n            \n                \n                    Sends the message and image to the selected volunteer/s\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            base64Image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:29\n                            \n                        \n\n                \n                    \n                        Codification of the image that will be sent\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messageForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:24\n                            \n                        \n\n                \n                    \n                        The form that contains the message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            phoneNumbers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:19\n                            \n                        \n\n                \n                    \n                        A list of selected volunteers' phone numbers\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Camera } from '@ionic-native/camera';\nimport { SMS } from '@ionic-native/sms/ngx';\nimport { Volunteer } from 'src/app/core/model/volunteer.model';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-send-message',\n  templateUrl: './send-message.component.html',\n  styleUrls: ['./send-message.component.scss']\n})\n\nexport class SendMessageComponent implements OnInit {\n\n  /**\n   * A list of selected volunteers' phone numbers\n   */\n  private phoneNumbers: string[] = [];\n\n  /**\n   * The form that contains the message\n   */\n  messageForm: FormGroup;\n\n  /**\n   * Codification of the image that will be sent\n   */\n  public base64Image: string;\n\n  /**\n   * @param sms Provider for sending SMS messages\n   * @param router Provider for router navigation\n   */\n  constructor(private sms: SMS,\n              private router: Router) { }\n\n  /**\n   * Page initialisation: the volunteer id needs to be retrieved from the url\n   */\n  ngOnInit() {\n      const navigation = this.router.getCurrentNavigation();\n\n      if (navigation && navigation.extras && navigation.extras.state) {\n        const volunteers = navigation.extras.state.volunteers;\n\n        volunteers.forEach((volunteer: Volunteer) => this.phoneNumbers.push(volunteer.phone));\n      }\n\n      this.messageForm = new FormGroup({\n        message: new FormControl('', [Validators.required])\n        });\n  }\n\n  /**\n   * Adds an image from camera to the app and uses base64 codification to convert it into a string\n   */\n  addImage() {\n    Camera.getPicture({\n      destinationType: Camera.DestinationType.DATA_URL,\n      targetWidth: 1000,\n      targetHeight: 1000\n    }).then((imageData) => {\n      this.base64Image = 'data:image/jpeg;base64,' + imageData;\n    }, (err) => {\n    });\n  }\n\n  /**\n   * Sends the message and image to the selected volunteer/s\n   */\n  sendMessage() {\n    const options = {\n        replaceLineBreaks: false,\n        android: {\n            intent: 'INTENT'\n        }\n    };\n    this.sms.send(this.phoneNumbers, this.messageForm.value.message, options);\n  }\n\n  /**\n   * Checks for SMS permission, if granted sends the SMS\n   */\n  checkPemission() {\n    this.sms.hasPermission();\n    if (this.sms.hasPermission()) {\n      this.sendMessage();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n  \n\n\n\n  \n    \n      \n      Trimite mesaj\n    \n\n    \n      \n        \n          Mesajul tău\n        \n      \n      \n        \n      \n      \n        \n          \n          \n              Adaugă o fotografie\n          \n        \n        \n          \n            \n          \n        \n       -->\n    \n\n    Trimite mesaj\n  \n\n    \n\n    \n                \n                    ./send-message.component.scss\n                \n                .sc-ion-textarea-md-h {\n    margin-top: 0;\n}\n\nion-button ion-icon {\n    font-size: 24px;\n}\n\n.full-button-bottom {\n  margin: 0;\n  height: 50px;\n}\n\n.header {\n    background-color: #f9f9f9; \n    min-height: 100px; \n    text-align: center;\n    padding: 30px 10px;\n\n    ion-icon {\n        font-size: 35px;\n    }\n\n    ion-label {\n        display: block;\n        font-size: 25px;\n    }\n}\n\n.message-textarea {\n    height: 300px;\n}\n\nion-textarea textarea {\n    height: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      Trimite mesaj                                Mesajul tău                                                                                  Adaugă o fotografie                                                                         -->        Trimite mesaj  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SendMessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SsnValidation.html":{"url":"classes/SsnValidation.html","title":"class - SsnValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SsnValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/ssn-validation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                ssnValidation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            ssnValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ssnValidation(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/ssn-validation.ts:12\n                \n            \n\n\n            \n                \n                    Ssn validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the value from the input\nthat is being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the string respects the pattern, an error message otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\nimport { map } from 'rxjs/operators';\n\nexport class SsnValidation {\n\n    /**\n     * Ssn validator\n     * @param abstractControl An abstract control reference, to automatically take the value from the input\n     * that is being validated\n     * @returns null if the string respects the pattern, an error message otherwise\n     */\n    static ssnValidation(abstractControl: AbstractControl): any {\n        const ssn = parseInt(abstractControl.value, 10) || 0;\n\n        if (ssn.toString().length === 13) {\n            const cnp = Array.from(String(ssn), Number);\n            const coefs = [2, 7, 9, 1, 4, 6, 3, 5, 8, 2, 7, 9];\n            const idx = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n            const s = idx.map((x) => coefs[x] * cnp[x]);\n            const res = s.reduce((a, b) => a + b, 0) % 11;\n\n            if ((res \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StaticsService.html":{"url":"injectables/StaticsService.html","title":"injectable - StaticsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StaticsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/statics.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for locations: counties and cities\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city_type\n                            \n                            \n                                county_type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCityList\n                            \n                            \n                                    Public\n                                getCountyList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/statics.service.ts:35\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Statics Database\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCityList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCityList(countyName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/statics.service.ts:62\n                \n            \n\n\n            \n                \n                    Getter for the list of cities\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    countyName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that contains the list of cities from resource files\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCountyList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCountyList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/statics.service.ts:54\n                \n            \n\n\n            \n                \n                    Getter for the list of counties\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that contains the list of counties from resource files\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city_type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'cities'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/statics.service.ts:30\n                            \n                        \n\n                \n                    \n                        Type for city entries\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county_type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'counties'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/statics.service.ts:35\n                            \n                        \n\n                \n                    \n                        Type for county entries\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\n\n/**\n * Reference for local PouchDB Statics Database\n */\nconst localDB = new PouchDB('statics');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Statics Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/statics');\n\n/**\n * Provider for locations: counties and cities\n */\n@Injectable()\nexport class StaticsService {\n    /**\n     * Type for city entries\n     */\n    city_type = 'cities';\n\n    /**\n     * Type for county entries\n     */\n    county_type = 'counties';\n\n    /**\n     * Class constructor, sets the synchronization options for CouchDB and PouchDB Statics Database\n     */\n    constructor() {\n        const options = {\n            live: true,\n            retry: true,\n            continuous: true\n        };\n\n        localDB.sync(remoteDB, options);\n    }\n\n    /**\n     * Getter for the list of counties\n     * @returns An observable that contains the list of counties from resource files\n     */\n    public getCountyList(): Observable {\n        return from(localDB.allDocs({include_docs: true, startkey: 'county_romania_', endkey: 'county_romania_\\ufff0'}));\n    }\n\n    /**\n     * Getter for the list of cities\n     * @returns An observable that contains the list of cities from resource files\n     */\n    public getCityList(countyName: string): Observable {\n        return from(localDB.allDocs({include_docs: true,\n            startkey: 'city_' + countyName.toLowerCase().replace(' ',''),\n            endkey: 'city_' + countyName.toLowerCase().replace(' ','') + '_\\ufff0'}));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UnauthenticatedGuard.html":{"url":"guards/UnauthenticatedGuard.html","title":"guard - UnauthenticatedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    UnauthenticatedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/authentication/unauthenticated.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Provides a guard for protecting unauthenticated routes (such as login)\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/unauthenticated.guard.ts:10\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular value which handles routing operations\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service which handles the authentication operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/unauthenticated.guard.ts:27\n                \n            \n\n\n            \n                \n                    Determines if a user can access a route, depending on its state\nIf the route isn't allowed, it automatically redirects to home page\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        a boolean value, current user's status: unauthenticated or authenticated\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { AuthenticationService } from './authentication.service';\n\n/**\n * Provides a guard for protecting unauthenticated routes (such as login)\n */\n@Injectable()\nexport class UnauthenticatedGuard implements CanActivate {\n\n   /**\n    * Class constructor\n    * @param router Angular value which handles routing operations\n    * @param authenticationService The service which handles the authentication operations\n    */\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n   /**\n    * Determines if a user can access a route, depending on its state\n    * If the route isn't allowed, it automatically redirects to home page\n    * @returns a boolean value, current user's status: unauthenticated or authenticated\n    */\n  canActivate(): boolean {\n    if (!this.authenticationService.isAuthenticated()) {\n      return true;\n    }\n\n    this.router.navigate(['/home'], {\n      replaceUrl: true\n    });\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for user object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        phone\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  /**\n   * Interface for login payload\n   */\n  export interface LoginPayload {\n    username: string;\n    password: string;\n  }\n\n  /**\n   * Interface for user object\n   */\n  export interface User {\n    _id: string;\n    name: string;\n    phone?: any;\n    email: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n\n  /**\n   * Interface for credentials object\n   */\n  export interface Credentials {\n    user: User;\n    token: string;\n    session: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Volunteer.html":{"url":"classes/Volunteer.html","title":"class - Volunteer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Volunteer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/volunteer.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for volunteer object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                _rev\n                            \n                            \n                                added_by\n                            \n                            \n                                allocation\n                            \n                            \n                                city\n                            \n                            \n                                comments\n                            \n                            \n                                county\n                            \n                            \n                                courses\n                            \n                            \n                                created_at\n                            \n                            \n                                email\n                            \n                            \n                                job\n                            \n                            \n                                name\n                            \n                            \n                                organisation\n                            \n                            \n                                phone\n                            \n                            \n                                slug\n                            \n                            \n                                ssn\n                            \n                            \n                                type\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/model/volunteer.model.ts:39\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _rev\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            added_by\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            job\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organisation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ssn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Volunteer {\n    _id: string;\n    _rev: string;\n    name: string;\n    slug: string;\n    ssn: string;\n    email: string;\n    phone: string;\n    county: {\n        id: string;\n        name: string;\n    };\n    city: {\n        id: string;\n        name: string;\n    };\n    organisation: {\n       _id: string,\n       name: string,\n       slug: string,\n       website: string\n    };\n    courses: {\n        id: string;\n        course_name_id: string;\n        name: string;\n        obtained: string;\n        acredited: string;\n    }[];\n    allocation: string;\n    comments: string;\n    job: string;\n    created_at: any;\n    updated_at: any;\n    added_by: number;\n    type: string;\n\n    constructor() {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VolunteerPage.html":{"url":"components/VolunteerPage.html","title":"component - VolunteerPage","body":"\n                   \n\n\n\n\n\n  Components\n  VolunteerPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/volunteer/volunteer.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-volunteer\n            \n\n            \n                styleUrls\n                ./volunteer.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./volunteer.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-volunteer',\n  templateUrl: './volunteer.page.html',\n  styleUrls: ['./volunteer.page.scss'],\n})\nexport class VolunteerPage {\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./volunteer.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VolunteerPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VolunteerPageModule.html":{"url":"modules/VolunteerPageModule.html","title":"module - VolunteerPageModule","body":"\n                   \n\n\n\n\n    Modules\n    VolunteerPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VolunteerPageModule\n\n\n\ncluster_VolunteerPageModule_declarations\n\n\n\n\nAddVolunteerComponent\n\nAddVolunteerComponent\n\n\n\nVolunteerPageModule\n\nVolunteerPageModule\n\nVolunteerPageModule -->\n\nAddVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nListVolunteerComponent\n\nListVolunteerComponent\n\nVolunteerPageModule -->\n\nListVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nSendMessageComponent\n\nSendMessageComponent\n\nVolunteerPageModule -->\n\nSendMessageComponent->VolunteerPageModule\n\n\n\n\n\nValidateVolunteerComponent\n\nValidateVolunteerComponent\n\nVolunteerPageModule -->\n\nValidateVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nVolunteerPage\n\nVolunteerPage\n\nVolunteerPageModule -->\n\nVolunteerPage->VolunteerPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/volunteer/volunteer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddVolunteerComponent\n                        \n                        \n                            ListVolunteerComponent\n                        \n                        \n                            SendMessageComponent\n                        \n                        \n                            ValidateVolunteerComponent\n                        \n                        \n                            VolunteerPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { VolunteerPage } from './volunteer.page';\nimport { AddVolunteerComponent } from './add-volunteer/add-volunteer.component';\nimport { ListVolunteerComponent } from './list-volunteer/list-volunteer.component';\nimport { ValidateVolunteerComponent } from './validate-volunteer/validate-volunteer.component';\nimport { AuthenticationGuard } from '../../core/authentication/authentication.guard';\nimport { SendMessageComponent } from './send-message/send-message.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VolunteerPage,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'add',\n    component: AddVolunteerComponent,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'list',\n    component: ListVolunteerComponent,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'validate',\n    component: ValidateVolunteerComponent,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'send',\n    component: SendMessageComponent,\n    canActivate: [AuthenticationGuard]\n  }\n\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n  ],\n  declarations: [\n    VolunteerPage,\n    AddVolunteerComponent,\n    ListVolunteerComponent,\n    ValidateVolunteerComponent,\n    SendMessageComponent\n  ]\n})\nexport class VolunteerPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VolunteerService.html":{"url":"injectables/VolunteerService.html","title":"injectable - VolunteerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  VolunteerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/volunteer.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for volunteer related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allocateVolunteer\n                            \n                            \n                                createVolunteer\n                            \n                            \n                                deleteVolunteerById\n                            \n                            \n                                filter\n                            \n                            \n                                getVolunteerById\n                            \n                            \n                                getVolunteerBySsn\n                            \n                            \n                                getVolunteers\n                            \n                            \n                                    Private\n                                removeSpecialChars\n                            \n                            \n                                search\n                            \n                            \n                                updateVolunteer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/volunteer.service.ts:36\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Volunteers Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                        CourseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for course related operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allocateVolunteer\n                        \n                        \n                    \n                \n            \n            \n                \nallocateVolunteer(allocationId: string, volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:299\n                \n            \n\n\n            \n                \n                    Searches for a volunteer with the given volunteer id and allocates it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    allocationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Last allocation id\n\n                                    \n                                \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createVolunteer\n                        \n                        \n                    \n                \n            \n            \n                \ncreateVolunteer(name: string, ssn: string, phone: string, county: any, city: any, organisation: any, course: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:164\n                \n            \n\n\n            \n                \n                    Creates a volunteer entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's name\n\n                                    \n                                \n                                \n                                    ssn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's ssn (Social Security Number)\n\n                                    \n                                \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's phone number\n\n                                    \n                                \n                                \n                                    county\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's county\n\n                                    \n                                \n                                \n                                    city\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's city\n\n                                    \n                                \n                                \n                                    organisation\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object value containing the new volunteer's organisation\nEither contains an object with the following properties {id, name, website}, or it's null\n\n                                    \n                                \n                                \n                                    course\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer's course with properties: {id, name, acredited, obtained}\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with the created object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteVolunteerById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteVolunteerById(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:243\n                \n            \n\n\n            \n                \n                    Deletes an entry by its id from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The volunteer id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter(countyId: string, organisationId: string, courseId: string, page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:258\n                \n            \n\n\n            \n                \n                    Filters local Volunteers database by the given parameters' values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    countyId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        County id\n\n                                    \n                                \n                                \n                                    organisationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Organisation id\n\n                                    \n                                \n                                \n                                    courseId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course name id\n\n                                    \n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A number defining the current page of volunteers from the total list (used to paginate the response)\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of volunteers per page\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all volunteers matching the filters\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolunteerById\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolunteerById(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:129\n                \n            \n\n\n            \n                \n                    Finds a volunteer by its id in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer's id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the volunteer with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolunteerBySsn\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolunteerBySsn(ssn: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:143\n                \n            \n\n\n            \n                \n                    Finds a volunteer by its ssn in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ssn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A ssn code\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the volunteer with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolunteers\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolunteers(page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:74\n                \n            \n\n\n            \n                \n                    Getter method for all volunteers from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A number defining the current page of volunteers from the total list (used to paginate the response)\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of volunteers per page\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all volunteers\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            removeSpecialChars\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeSpecialChars(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:312\n                \n            \n\n\n            \n                \n                    Removes diacritics from a string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A string with diacritics\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the new string, without diacritics\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(keyword: string, page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:94\n                \n            \n\n\n            \n                \n                    Searches for all volunteers from the local database whose name,ssn or organisation name matches the keyword\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    keyword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The string used for search\n\n                                    \n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A number defining the current page of volunteers from the total list (used to paginate the response)\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of volunteers per page\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all volunteers\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateVolunteer\n                        \n                        \n                    \n                \n            \n            \n                \nupdateVolunteer(volunteer: Volunteer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:220\n                \n            \n\n\n            \n                \n                    Updates a volunteer entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteer\n                                    \n                                                Volunteer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new volunteer entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'volunteers'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/volunteer.service.ts:36\n                            \n                        \n\n                \n                    \n                        Table type\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { Volunteer } from '../model/volunteer.model';\nimport { from, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CourseService } from './course.service';\nimport * as moment from 'moment';\n\ndeclare const emit: any;\n/**\n * Reference for local PouchDB Volunteers Database\n */\nconst localDB = new PouchDB('volunteers');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Volunteers Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/volunteers');\n\n/**\n * Provider for volunteer related operations\n */\n@Injectable()\nexport class VolunteerService {\n\n  /**\n   * Table type\n   */\n  private type = 'volunteers';\n\n   /**\n    * Class constructor, sets the synchronization options for CouchDB and PouchDB Volunteers Database\n    * @param courseService Provider for course related operations\n    */\n  constructor(private courseService: CourseService) {\n    const options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);\n\n    localDB.createIndex({\n      index: {\n        fields: [\n          'name',\n          'slug',\n          'ssn',\n          'organisation.slug',\n          'course.[].course_name_id',\n          'organisation._id',\n          'county.id',\n          'city.id',\n          'job',\n          'comments'\n      ]}\n    });\n   }\n\n  /**\n   * Getter method for all volunteers from the local database\n   * @param page A number defining the current page of volunteers from the total list (used to paginate the response)\n   * @param limit The number of volunteers per page\n   * @returns An Observable with all volunteers\n   */\n  getVolunteers(page: number, limit: number): Observable {\n    const skip = page * limit;\n\n    return from(localDB.find({\n      selector: {\n          type: this.type\n      },\n      limit,\n      include_docs: true,\n      skip,\n    }));\n  }\n\n  /**\n   * Searches for all volunteers from the local database whose name,ssn or organisation name matches the keyword\n   * @param keyword The string used for search\n   * @param page A number defining the current page of volunteers from the total list (used to paginate the response)\n   * @param limit The number of volunteers per page\n   * @returns An Observable with all volunteers\n   */\n  search(keyword: string, page: number, limit: number): Observable {\n    const skip = page * limit;\n    const pattern = new RegExp('.*' + keyword + '.*', 'ig');\n    return from(localDB.find({\n      selector: {\n        $and: [\n          {\n            $or: [\n              {\n                slug: {$regex: pattern},\n              },\n              {\n                ssn: {$regex: pattern},\n              },\n              {\n                'organisation.slug': {$regex: pattern},\n              },\n            ]\n          },\n          {\n            type: this.type\n          }\n        ]\n      },\n      limit,\n      include_docs: true,\n      skip,\n    }));\n  }\n\n   /**\n    * Finds a volunteer by its id in the local database\n    * @param volunteerId Volunteer's id\n    * @returns An Observable containing the volunteer with that id\n    */\n  getVolunteerById(volunteerId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        _id: {$eq: volunteerId},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   * Finds a volunteer by its ssn in the local database\n   * @param ssn A ssn code\n   * @returns An Observable containing the volunteer with that id\n   */\n  getVolunteerBySsn(ssn: string): Observable {\n    return from(localDB.find({\n      selector: {\n        ssn: {$eq: ssn},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   *  Creates a volunteer entry in the local database\n   * @param name String value containing the new volunteer's name\n   * @param ssn String value containing the new volunteer's ssn (Social Security Number)\n   * @param phone String value containing the new volunteer's phone number\n   * @param county String value containing the new volunteer's county\n   * @param city String value containing the new volunteer's city\n   * @param organisation Object value containing the new volunteer's organisation\n   * Either contains an object with the following properties {id, name, website}, or it's null\n   * @param course Volunteer's course with properties: {id, name, acredited, obtained}\n   * @returns An Observable with the created object\n   */\n  createVolunteer(name: string, ssn: string, phone: string, county: any, city: any, organisation: any, course: any): Observable {\n    const volunteer = new Volunteer();\n    volunteer.name = name;\n    volunteer.ssn = ssn;\n    volunteer.county = {\n      id: county._id.toString(),\n      name: county.name\n    };\n    volunteer.city = {\n      id: city._id.toString(),\n      name: city.name\n    };\n    volunteer.created_at = moment().format('Y-MM-DD H:mm:ss');\n    volunteer.updated_at = moment().format('Y-MM-DD H:mm:ss');\n    volunteer.allocation = '';\n    volunteer.phone = phone;\n    volunteer.slug = this.removeSpecialChars(name);\n    volunteer.type = this.type;\n\n    if (organisation) {\n      volunteer.organisation = {\n        _id: organisation._id,\n        name: organisation.name,\n        website: organisation.website,\n        slug: this.removeSpecialChars(organisation.name)\n      };\n    } else {\n      volunteer.organisation = null;\n    }\n\n    volunteer.courses = [];\n\n    return from(localDB.post(volunteer))\n    .pipe(\n        map((response) => {\n          if (course) {\n            this.courseService.createCourse(course, volunteer._id).subscribe((data) => {\n              volunteer.courses.push({\n                id: data.id,\n                course_name_id: course._id,\n                name: course.name,\n                obtained: null,\n                acredited: null\n              });\n              this.updateVolunteer(volunteer);\n            });\n          }\n          return response;\n        })\n      );\n  }\n\n   /**\n    * Updates a volunteer entry in the local database\n    * @param volunteer The new volunteer entry\n    */\n  updateVolunteer(volunteer: Volunteer) {\n    localDB.get(volunteer._id).then((doc: Volunteer) => {\n      doc.name = volunteer.name ? volunteer.name : doc.name;\n      doc.slug = volunteer.name ? this.removeSpecialChars(volunteer.name) : doc.slug;\n      doc.ssn = volunteer.ssn ? volunteer.ssn : doc.ssn;\n      doc.email = volunteer.email ? volunteer.email : doc.email;\n      doc.phone = volunteer.phone ? volunteer.phone : doc.phone;\n      doc.county = volunteer.county ? volunteer.county : doc.county;\n      doc.city = volunteer.city ? volunteer.city : doc.city;\n      doc.organisation = volunteer.organisation ? volunteer.organisation : doc.organisation;\n      doc.courses = volunteer.courses ? volunteer.courses : doc.courses;\n      doc.comments = volunteer.comments ? volunteer.comments : doc.comments;\n      doc.job = volunteer.job ? volunteer.job : doc.job;\n      doc.allocation = volunteer.allocation ? volunteer.allocation : doc.allocation;\n      doc.updated_at = new Date();\n      localDB.put(doc);\n    });\n  }\n\n   /**\n    * Deletes an entry by its id from the local database\n    * @param volunteerId The volunteer id\n    */\n  deleteVolunteerById(volunteerId: string) {\n    localDB.get(volunteerId).then((doc) => {\n      localDB.remove(doc);\n    });\n  }\n\n  /**\n   * Filters local Volunteers database by the given parameters' values\n   * @param countyId County id\n   * @param organisationId Organisation id\n   * @param courseId Course name id\n   * @param page A number defining the current page of volunteers from the total list (used to paginate the response)\n   * @param limit The number of volunteers per page\n   * @returns An Observable with all volunteers matching the filters\n   */\n  filter(countyId: string, organisationId: string, courseId: string, page: number, limit: number): Observable {\n    const skip = page * limit;\n    const selector: any = {$and : []};\n\n    selector['$and'].push( {\n      type: this.type,\n    });\n\n    if (countyId) {\n      selector['$and'].push( {\n        'county.id': {$eq: countyId},\n      });\n    }\n\n    if (organisationId) {\n      selector['$and'].push(  {\n        'organisation._id': {$eq: organisationId},\n      });\n    }\n\n    if (courseId) {\n      selector['$and'].push( {courses: {\n        $elemMatch : {\n          course_name_id: {$eq: courseId},\n          }\n        }\n      });\n    }\n\n    return from(localDB.find({\n      selector,\n      limit,\n      skip\n    }));\n  }\n\n  /**\n   * Searches for a volunteer with the given volunteer id and allocates it\n   * @param allocationId Last allocation id\n   * @param volunteerId Volunteer id\n   */\n  allocateVolunteer(allocationId: string, volunteerId: string) {\n    return localDB.get(volunteerId).then((doc) => {\n      doc.allocation = allocationId;\n      doc.updated_at = new Date();\n      localDB.put(doc);\n    });\n  }\n\n  /**\n   * Removes diacritics from a string\n   * @param text A string with diacritics\n   * @returns the new string, without diacritics\n   */\n  private removeSpecialChars(text: string): string {\n      const input   = 'ăâîșț';\n      const output  = 'aaist';\n      const regex = new RegExp('[' + input + ']', 'g');\n      const transl = {};\n\n      const lookup = (m) => transl[m] || m;\n\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.service.ts\n            \n            variable\n            credentialsKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/authentication/unauthenticated.guard.ts\n            \n            guard\n            UnauthenticatedGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/http/error-handler.interceptor.ts\n            \n            interceptor\n            ErrorHandlerInterceptor\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/http/error-handler.interceptor.ts\n            \n            variable\n            credentialsKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/http/request.interceptor.ts\n            \n            interceptor\n            RequestInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            clearData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            createCookie\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            getData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            getSessionName\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            readCookie\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            setData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/model/allocation.model.ts\n            \n            class\n            Allocation\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            interface\n            Credentials\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            interface\n            LoginPayload\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            interface\n            User\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/core/model/course.model.ts\n            \n            class\n            Course\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/app/core/model/error.model.ts\n            \n            interface\n            ErrorMessageObject\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/core/model/error.model.ts\n            \n            interface\n            RootObject\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/core/model/organisation.model.ts\n            \n            class\n            Organisation\n            \n                5 %\n                (1/20)\n            \n        \n        \n            \n                \n                src/app/core/model/volunteer.model.ts\n            \n            class\n            Volunteer\n            \n                5 %\n                (1/20)\n            \n        \n        \n            \n                \n                src/app/core/route-reusable-strategy.ts\n            \n            class\n            RouteReusableStrategy\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/service/allocation.service.ts\n            \n            injectable\n            AllocationService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/service/allocation.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/allocation.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/course.service.ts\n            \n            injectable\n            CourseService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/core/service/course.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/course.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            class\n            DatabaseSyncService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            localAllocationsDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            localCoursesDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            localOrganisationsDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            localStaticsDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            localVolunteersDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            remoteAllocationsDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            remoteCoursesDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            remoteOrganisationsDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            remoteStaticsDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            remoteVolunteersDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/error-message.service.ts\n            \n            injectable\n            ErrorMessageService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/service/organisation.service.ts\n            \n            injectable\n            OrganisationService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/service/organisation.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/organisation.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/statics.service.ts\n            \n            injectable\n            StaticsService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/service/statics.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/statics.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/volunteer.service.ts\n            \n            injectable\n            VolunteerService\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/core/service/volunteer.service.ts\n            \n            variable\n            emit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/service/volunteer.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/volunteer.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/email-validation.ts\n            \n            class\n            EmailValidation\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/validators/password-validation.ts\n            \n            class\n            PasswordValidation\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/validators/phone-validation.ts\n            \n            class\n            PhoneValidation\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/validators/ssn-validation.ts\n            \n            class\n            SsnValidation\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/pages/about/about.page.ts\n            \n            component\n            AboutPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/authentication.page.ts\n            \n            component\n            AuthenticationPage\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/logout/logout.component.ts\n            \n            component\n            LogoutComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/recover-password/recover-password.component.ts\n            \n            component\n            RecoverPasswordComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            component\n            HomePage\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/add-volunteer/add-volunteer.component.ts\n            \n            component\n            AddVolunteerComponent\n            \n                85 %\n                (24/28)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/list-volunteer/list-volunteer.component.ts\n            \n            component\n            ListVolunteerComponent\n            \n                93 %\n                (30/32)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/send-message/send-message.component.ts\n            \n            component\n            SendMessageComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts\n            \n            component\n            ValidateVolunteerComponent\n            \n                92 %\n                (23/25)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/volunteer.page.ts\n            \n            component\n            VolunteerPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.local.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^7.2.2\n        \n            @angular/core : ^7.2.2\n        \n            @angular/forms : ^7.2.2\n        \n            @angular/http : ^7.2.2\n        \n            @angular/platform-browser : ^7.2.2\n        \n            @angular/platform-browser-dynamic : ^7.2.2\n        \n            @angular/router : ^7.2.2\n        \n            @ionic-native/camera : ^5.9.0\n        \n            @ionic-native/core : ^5.11.0\n        \n            @ionic-native/date-picker : ^5.11.0\n        \n            @ionic-native/deeplinks : ^5.11.0\n        \n            @ionic-native/in-app-browser : ^5.12.0\n        \n            @ionic-native/sms : ^5.11.0\n        \n            @ionic-native/splash-screen : ^5.0.0\n        \n            @ionic-native/status-bar : ^5.9.0\n        \n            @ionic/angular : ^4.6.2\n        \n            @ionic/lab : ^2.0.6\n        \n            @types/pouchdb : ^6.4.0\n        \n            cordova-android : ^8.0.0\n        \n            cordova-ios : ^5.0.1\n        \n            cordova-plugin-camera : ^4.0.3\n        \n            cordova-plugin-datepicker : ^0.9.3\n        \n            cordova-plugin-inappbrowser : ^3.1.0\n        \n            cordova-sms-plugin : ^1.0.0\n        \n            core-js : ^2.5.4\n        \n            ionic-plugin-deeplinks : ^1.0.20\n        \n            moment : ^2.24.0\n        \n            pouchdb : ^7.1.1\n        \n            pouchdb-find : ^7.1.1\n        \n            rxjs : ~6.5.1\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            clearData   (src/.../local-storage.service.ts)\n                        \n                        \n                            createCookie   (src/.../local-storage.service.ts)\n                        \n                        \n                            getData   (src/.../local-storage.service.ts)\n                        \n                        \n                            getSessionName   (src/.../local-storage.service.ts)\n                        \n                        \n                            readCookie   (src/.../local-storage.service.ts)\n                        \n                        \n                            setData   (src/.../local-storage.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/local-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            clearData\n                        \n                        \n                    \n                \n            \n            \n                \nclearData(type: any)\n                \n            \n\n\n\n\n            \n                \n                    Clears data from storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Storage type (local or session)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createCookie\n                        \n                        \n                    \n                \n            \n            \n                \ncreateCookie(name: any, value: any, days: any)\n                \n            \n\n\n\n\n            \n                \n                    Creates a cookie entry\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie name\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie value\n\n                                    \n                                \n                                \n                                    days\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie expiration number of days\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData(type: any)\n                \n            \n\n\n\n\n            \n                \n                    Retrieves all data from storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Storage type (local or session)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSessionName\n                        \n                        \n                    \n                \n            \n            \n                \ngetSessionName()\n                \n            \n\n\n\n\n            \n                \n                    Getter for session name\n\n\n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readCookie\n                        \n                        \n                    \n                \n            \n            \n                \nreadCookie(name: any)\n                \n            \n\n\n\n\n            \n                \n                    Getter for a cookie document by its name\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie's name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setData\n                        \n                        \n                    \n                \n            \n            \n                \nsetData(type: any, data: any)\n                \n            \n\n\n\n\n            \n                \n                    Sets data into storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Storage type (local or session)\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Information that needs to be stored\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthenticationPageModule\n\n\n\ncluster_AuthenticationPageModule_declarations\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_VolunteerPageModule\n\n\n\ncluster_VolunteerPageModule_declarations\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nAuthenticationPage\n\nAuthenticationPage\n\n\n\nAuthenticationPageModule\n\nAuthenticationPageModule\n\nAuthenticationPageModule -->\n\nAuthenticationPage->AuthenticationPageModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthenticationPageModule -->\n\nLoginComponent->AuthenticationPageModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAuthenticationPageModule -->\n\nLogoutComponent->AuthenticationPageModule\n\n\n\n\n\nRecoverPasswordComponent\n\nRecoverPasswordComponent\n\nAuthenticationPageModule -->\n\nRecoverPasswordComponent->AuthenticationPageModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationPageModule -->\n\nResetPasswordComponent->AuthenticationPageModule\n\n\n\n\n\nAllocationService\n\nAllocationService\n\nCoreModule -->\n\nAllocationService->CoreModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nCoreModule -->\n\nAuthenticationService->CoreModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nCoreModule -->\n\nCourseService->CoreModule\n\n\n\n\n\nErrorHandlerInterceptor\n\nErrorHandlerInterceptor\n\nCoreModule -->\n\nErrorHandlerInterceptor->CoreModule\n\n\n\n\n\nErrorMessageService\n\nErrorMessageService\n\nCoreModule -->\n\nErrorMessageService->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\nOrganisationService\n\nOrganisationService\n\nCoreModule -->\n\nOrganisationService->CoreModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\n\n\nStaticsService\n\nStaticsService\n\nCoreModule -->\n\nStaticsService->CoreModule\n\n\n\n\n\nVolunteerService\n\nVolunteerService\n\nCoreModule -->\n\nVolunteerService->CoreModule\n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nAddVolunteerComponent\n\nAddVolunteerComponent\n\n\n\nVolunteerPageModule\n\nVolunteerPageModule\n\nVolunteerPageModule -->\n\nAddVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nListVolunteerComponent\n\nListVolunteerComponent\n\nVolunteerPageModule -->\n\nListVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nSendMessageComponent\n\nSendMessageComponent\n\nVolunteerPageModule -->\n\nSendMessageComponent->VolunteerPageModule\n\n\n\n\n\nValidateVolunteerComponent\n\nValidateVolunteerComponent\n\nVolunteerPageModule -->\n\nValidateVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nVolunteerPage\n\nVolunteerPage\n\nVolunteerPageModule -->\n\nVolunteerPage->VolunteerPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        27 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AboutPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VolunteerPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            credentialsKey   (src/.../authentication.service.ts)\n                        \n                        \n                            credentialsKey   (src/.../error-handler.interceptor.ts)\n                        \n                        \n                            emit   (src/.../volunteer.service.ts)\n                        \n                        \n                            environment   (src/.../environment.dev.ts)\n                        \n                        \n                            environment   (src/.../environment.local.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            localAllocationsDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            localCoursesDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            localDB   (src/.../allocation.service.ts)\n                        \n                        \n                            localDB   (src/.../course.service.ts)\n                        \n                        \n                            localDB   (src/.../organisation.service.ts)\n                        \n                        \n                            localDB   (src/.../statics.service.ts)\n                        \n                        \n                            localDB   (src/.../volunteer.service.ts)\n                        \n                        \n                            localOrganisationsDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            localStaticsDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            localVolunteersDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            remoteAllocationsDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            remoteCoursesDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            remoteDB   (src/.../allocation.service.ts)\n                        \n                        \n                            remoteDB   (src/.../course.service.ts)\n                        \n                        \n                            remoteDB   (src/.../organisation.service.ts)\n                        \n                        \n                            remoteDB   (src/.../statics.service.ts)\n                        \n                        \n                            remoteDB   (src/.../volunteer.service.ts)\n                        \n                        \n                            remoteOrganisationsDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            remoteStaticsDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            remoteVolunteersDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/core/authentication/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            credentialsKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'credentials'\n                        \n                    \n\n                \n                    \n                        Stores the value of credentials' key\n\n                    \n                \n\n            \n        \n\n    src/app/core/http/error-handler.interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            credentialsKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'credentials'\n                        \n                    \n\n                \n                    \n                        Key that identifies the credentials\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/volunteer.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('volunteers')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/volunteers')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.dev.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'DEV',\n  production: false,\n  serverBaseUrl: 'https://rvm-api.lxhost.ro',\n  serverUrl: 'https://rvm-api.lxhost.ro/api',\n  databaseURL: 'http://rvm.lxhost.ro:5984'\n}\n                        \n                    \n\n                \n                    \n                        Developement environment values\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.local.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'LOCAL',\n  production: false\n}\n                        \n                    \n\n                \n                    \n                        Local environment values\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'PROD',\n  production: true,\n  serverBaseUrl: 'https://rvm-api.lxhost.ro',\n  serverUrl: 'https://rvm-api.lxhost.ro/api',\n  databaseURL: 'http://rvm.lxhost.ro:5984'\n}\n                        \n                    \n\n                \n                    \n                        Production environment values\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'DEFAULT',\n  production: false,\n  serverBaseUrl: 'https://rvm-api.lxhost.ro',\n  serverUrl: 'https://rvm-api.lxhost.ro/api',\n  databaseURL: 'http://rvm.lxhost.ro:5984'\n}\n                        \n                    \n\n                \n                    \n                        Default environment values\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/database-sync.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localAllocationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('allocations')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localCoursesDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('courses')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Courses Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localOrganisationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('organisations')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Organisations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localStaticsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('statics')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Statics Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localVolunteersDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('volunteers')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteAllocationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/allocations')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteCoursesDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/courses')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Courses Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteOrganisationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/organisations')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Organisations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteStaticsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/statics')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteVolunteersDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/volunteers')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/allocation.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('allocations')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/allocations')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Allocations Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/course.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('courses')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Courses Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/courses')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Courses Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/organisation.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('organisations')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Organisations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/organisations')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Organisations Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/statics.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('statics')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Statics Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/statics')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Statics Database\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
