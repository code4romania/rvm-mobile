var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AboutPage.html",[0,0.625,1,1.205]],["body/components/AboutPage.html",[0,0.859,1,1.824,2,1.651,3,0.127,4,0.127,5,1.193,6,1.266,7,1.193,8,1.126,9,0.109,10,2.415,11,1.561,12,2.336,13,1.193,14,2.478,15,2.771,16,1.856,17,4.902,18,1.749,19,4.14,20,0.313,21,0.02,22,0.386,23,0.146,24,0.074,25,2.851,26,0.495,27,1.346,28,3.541,29,4.617,30,3.541,31,1.337,32,5.399,33,6.008,34,3.541,35,4.14,36,6.008,37,4.14,38,4.14,39,6.146,40,4.14,41,5.399,42,4.14,43,4.14,44,6.367,45,4.14,46,4.14,47,4.14,48,4.14,49,4.617,50,5.138,51,4.14,52,5.494,53,4.14,54,6.008,55,4.14,56,4.14,57,4.14,58,4.14,59,4.14,60,4.14,61,4.14,62,4.14,63,4.14,64,5.399,65,5.399,66,5.399,67,5.399,68,5.399,69,4.14,70,4.14,71,4.617,72,5.399,73,4.14,74,5.399,75,4.14,76,6.367,77,6.008,78,4.14,79,4.14,80,4.14,81,4.14,82,6.008,83,4.14,84,4.14,85,4.14,86,4.14,87,4.14,88,4.14,89,3.541,90,4.14,91,5.399,92,5.399,93,4.14,94,4.14,95,4.14,96,5.399,97,4.14,98,4.14,99,4.14,100,4.14,101,5.399,102,4.14,103,4.14,104,4.14,105,4.14,106,4.14,107,4.14,108,4.14,109,4.14,110,4.14,111,2.851,112,3.146,113,4.14,114,1.561,115,4.14,116,4.14,117,4.14,118,4.14,119,4.617,120,4.14,121,4.14,122,4.14,123,4.14,124,4.14,125,4.14,126,4.14,127,3.146,128,4.14,129,4.14,130,4.14,131,4.14,132,4.14,133,0.812,134,1.749,135,1.651,136,1.193,137,1.728,138,1.193,139,0.459,140,1.193,141,1.007,142,1.064,143,2.071,144,0.954,145,1.193,146,0.954,147,1.193,148,0.954,149,1.193,150,1.007,151,1.007,152,0.954,153,1.193,154,0.954,155,1.193,156,0.954,157,1.126,158,1.749,159,0.954,160,0.77,161,0.954,162,1.064,163,1.193,164,0.954,165,1.064,166,0.954,167,1.193,168,1.193,169,0.008,170,0.012,171,0.008]],["title/modules/AboutPageModule.html",[172,1.273,173,2.457]],["body/modules/AboutPageModule.html",[0,0.844,1,2.41,3,0.217,4,0.217,9,0.186,20,0.791,21,0.021,22,0.658,23,0.249,24,0.126,133,1.385,160,1.313,169,0.013,170,0.017,171,0.013,172,1.718,173,4.848,174,2.159,175,2.296,176,3.504,177,2.618,178,2.618,179,2.447,180,4.119,181,4.119,182,3.231,183,2.447,184,4.817,185,3.231,186,3.754,187,2.618,188,4.092,189,2.296,190,3.072,191,2.814,192,1.313,193,3.754,194,2.447,195,4.817,196,3.02,197,3.659,198,1.627,199,2.814,200,2.618,201,2.618,202,3.659]],["title/classes/Allocation.html",[24,0.093,203,1.94]],["body/classes/Allocation.html",[3,0.214,4,0.214,9,0.184,21,0.021,23,0.246,24,0.124,31,1.747,114,2.222,139,0.71,169,0.013,170,0.016,171,0.013,203,3.483,204,2.265,205,4.064,206,0.607,207,3.272,208,1.605,209,0.414,210,1.444,211,2.872,212,4.047,213,4.047,214,6.407,215,3.256,216,5.479,217,0.809,218,1.626,219,1.105,220,4.753,221,4.753,222,4.753,223,4.753,224,5.479,225,4.753,226,4.753,227,4.753,228,2.706,229,3.002]],["title/injectables/AllocationService.html",[230,0.874,231,2.085]],["body/injectables/AllocationService.html",[3,0.142,4,0.142,9,0.122,20,0.75,21,0.021,22,0.431,23,0.163,24,0.137,26,0.914,31,1.885,114,1.188,137,1.434,139,0.711,169,0.009,170,0.013,171,0.009,198,1.514,203,3.489,206,0.573,208,2.215,209,0.391,210,1.098,212,3.791,213,4.215,215,3.17,216,2.695,217,0.497,218,1.487,219,0.696,228,2.536,229,3.294,230,1.098,231,2.618,232,1.502,233,2.394,234,1.514,235,4.876,236,1.893,237,1.689,238,0.881,239,4.482,240,2.17,241,2.107,242,3.261,243,3.152,244,2.618,245,2.618,246,3.319,247,3.047,248,3.391,249,3.391,250,0.932,251,0.832,252,4.482,253,3.152,254,2.618,255,2.618,256,2.203,257,3.086,258,4.317,259,2.831,260,1.996,261,3.644,262,6.238,263,2.618,264,3.833,265,3.086,266,2.618,267,0.881,268,2.277,269,2.618,270,1.99,271,2.17,272,2.17,273,1.502,274,1.713,275,1.412,276,2.394,277,1.99,278,1.124,279,3.152,280,3.152,281,2.695,282,1.893,283,1.841,284,2.026,285,2.394,286,1.99,287,1.99,288,2.17,289,2.17,290,1.713,291,1.841,292,1.841,293,1.331,294,1.188,295,1.99,296,1.582,297,1.99,298,1.99,299,2.17,300,2.17,301,2.17,302,3.152,303,3.152,304,1.392,305,2.695,306,3.152,307,3.405,308,2.394,309,3.152,310,3.152,311,3.152,312,3.152,313,3.152,314,3.152,315,2.695,316,3.152,317,2.695,318,2.394,319,2.695,320,1.514,321,3.152,322,2.17,323,2.394,324,3.152,325,1.99]],["title/components/AppComponent.html",[0,0.625,144,1.205]],["body/components/AppComponent.html",[0,0.792,1,0.832,2,1.491,3,0.111,4,0.111,5,1.041,7,1.041,8,0.983,9,0.095,13,1.041,14,2.42,15,2.706,18,1.58,20,0.678,21,0.021,22,0.337,23,0.127,24,0.065,26,0.655,28,3.199,29,3.199,31,0.672,49,3.199,50,3.199,89,5.076,111,3.475,112,2.842,133,0.709,134,1.58,135,1.491,136,1.041,137,1.615,138,1.041,139,0.633,140,1.041,141,0.879,142,0.929,143,1.91,144,1.705,145,1.041,146,0.832,147,1.041,148,0.832,149,1.041,150,0.879,151,0.879,152,0.832,153,1.041,154,0.832,155,1.041,156,0.832,157,0.983,158,1.58,159,1.527,160,0.672,161,0.832,162,0.929,163,1.041,164,0.832,165,0.929,166,0.832,167,1.041,168,1.041,169,0.007,170,0.01,171,0.007,192,0.672,194,1.252,206,0.478,209,0.215,210,0.916,217,0.601,218,0.993,219,0.949,234,2.192,236,1.91,237,1.704,238,0.735,241,2.192,250,0.778,251,0.694,259,3.188,260,1.828,263,2.185,267,0.889,278,1.612,282,1.58,294,2.045,296,1.135,304,1.399,326,2.107,327,3.741,328,3.741,329,2.903,330,4.521,331,4.521,332,4.521,333,5.047,334,5.047,335,3.199,336,2.464,337,5.23,338,5.23,339,3.043,340,4.521,341,5.047,342,2.464,343,4.316,344,3.741,345,5.047,346,3.475,347,4.316,348,2.154,349,2.949,350,2.464,351,5.047,352,2.185,353,3.199,354,3.741,355,3.741,356,3.199,357,1.447,358,2.464,359,3.199,360,2.464,361,4.32,362,2.842,363,3.188,364,1.783,365,5.627,366,3.199,367,2.362,368,2.842,369,2.575,370,3.199,371,3.199,372,3.199,373,2.575,374,3.199,375,3.199,376,3.199,377,3.741,378,3.741,379,2.464,380,3.835,381,3.835,382,3.741,383,2.262,384,2.464,385,4.521,386,2.464,387,3.741,388,2.464,389,3.741,390,2.464,391,2.362,392,3.741,393,2.575,394,2.362,395,2.464,396,2.641,397,1.872,398,2.107,399,1.872,400,2.107,401,1.556,402,2.107,403,2.107,404,2.464,405,1.697,406,2.107,407,2.464,408,3.741,409,2.464,410,2.464,411,2.464,412,2.464,413,2.107,414,2.107,415,2.107,416,2.464,417,2.107,418,2.464,419,2.107,420,2.464,421,2.464,422,1.697,423,3.741,424,2.464,425,3.741]],["title/modules/AppModule.html",[172,1.273,426,2.457]],["body/modules/AppModule.html",[3,0.195,4,0.195,9,0.167,15,1.724,20,0.802,21,0.021,22,0.591,23,0.224,24,0.113,133,1.244,144,2.458,160,1.179,169,0.012,170,0.016,171,0.012,172,1.542,174,1.938,175,2.061,176,3.335,177,3.335,178,3.019,179,2.197,182,3.019,183,2.197,185,3.019,192,1.179,193,2.731,194,2.197,201,3.019,337,4.749,338,4.749,396,3.782,397,3.286,398,3.698,399,3.286,400,3.698,401,2.731,426,4.982,427,3.698,428,3.698,429,3.698,430,3.698,431,4.327,432,4.327,433,4.325,434,5.554,435,3.698,436,2.977,437,4.219,438,5.554,439,4.325,440,4.325,441,4.749,442,3.698,443,4.325,444,4.219,445,3.698,446,4.325,447,4.325,448,3.698,449,3.698]],["title/classes/AppPage.html",[24,0.093,450,2.711]],["body/classes/AppPage.html",[3,0.231,4,0.231,9,0.198,20,0.568,21,0.021,23,0.265,24,0.134,135,2.043,139,0.568,169,0.014,170,0.017,171,0.014,204,2.441,209,0.447,219,1.028,238,1.213,250,1.065,251,0.951,267,1.302,320,2.237,436,3.527,450,4.688,451,4.381,452,6.874,453,6.874,454,6.171,455,5.123,456,5.123,457,6.171,458,5.123,459,5.123,460,5.123,461,5.123,462,5.123,463,5.123,464,5.123,465,5.123]],["title/modules/AppRoutingModule.html",[172,1.273,431,2.254]],["body/modules/AppRoutingModule.html",[3,0.22,4,0.22,9,0.188,20,0.749,21,0.021,22,0.666,23,0.252,24,0.128,31,1.329,169,0.014,170,0.017,171,0.014,174,2.184,179,2.476,185,3.254,190,3.088,191,3.497,192,1.329,196,3.434,198,1.646,199,4.052,200,3.522,201,2.649,401,3.078,431,3.781,466,4.873,467,4.873,468,5.986,469,2.847,470,4.873,471,4.873,472,3.781,473,4.873,474,4.167,475,6.758,476,4.873,477,4.873,478,4.873,479,4.873,480,4.873,481,4.873,482,4.873]],["title/guards/AuthenticationGuard.html",[196,1.813,483,2.254]],["body/guards/AuthenticationGuard.html",[3,0.186,4,0.186,9,0.159,11,1.552,20,0.664,21,0.021,22,0.563,23,0.213,24,0.157,26,1.113,31,1.467,139,0.456,165,2.028,169,0.012,170,0.015,171,0.012,190,2.564,192,1.123,196,2.734,200,3.676,206,0.687,209,0.359,217,0.456,219,0.835,230,1.318,237,2.395,238,1.058,241,2.359,250,0.856,251,0.765,259,3.398,260,2.033,267,1.058,278,1.919,294,2.028,296,1.632,304,1.318,320,1.817,339,3.283,348,3.028,363,3.398,383,2.411,391,4.013,393,3.704,394,3.398,472,3.398,483,3.398,484,3.129,485,3.521,486,4.087,487,4.601,488,4.827,489,4.601,490,2.239,491,4.118,492,3.704,493,3.228,494,4.087,495,2.145,496,4.118,497,4.087,498,2.145,499,4.601,500,4.087,501,4.601,502,4.601,503,4.601,504,2.564,505,2.411,506,3.521,507,3.521,508,2.835,509,2.601,510,2.092]],["title/components/AuthenticationPage.html",[0,0.625,146,1.205]],["body/components/AuthenticationPage.html",[0,1.081,1,1.479,2,2.232,3,0.197,4,0.197,5,1.849,6,1.962,7,1.849,8,1.746,9,0.169,11,2.11,12,2.94,13,1.849,14,2.631,15,2.942,16,2.509,18,2.364,20,0.485,21,0.021,22,0.598,23,0.226,24,0.115,26,1.081,27,3.099,31,1.194,133,1.259,134,2.364,135,2.232,136,1.849,137,2.081,138,1.849,139,0.62,140,1.849,141,1.561,142,1.65,143,2.606,144,1.479,145,1.849,146,2.196,147,1.849,148,1.479,149,1.849,150,1.561,151,1.561,152,1.479,153,1.849,154,1.479,155,1.849,156,1.479,157,1.746,158,2.364,159,1.479,160,1.194,161,1.479,162,1.65,163,1.849,164,1.479,165,1.65,166,1.479,167,1.849,168,1.849,169,0.012,170,0.016,171,0.012,209,0.382,219,0.869,238,1.1,267,0.861,278,1.996,357,1.401,511,3.744,512,6.17,513,5.597,514,4.378,515,4.378]],["title/modules/AuthenticationPageModule.html",[172,1.273,516,2.457]],["body/modules/AuthenticationPageModule.html",[0,1.155,3,0.186,4,0.186,9,0.159,20,0.796,21,0.021,22,0.563,23,0.213,24,0.108,133,1.184,146,2.326,152,2.326,154,2.326,156,2.326,157,2.145,159,2.326,160,1.467,169,0.012,170,0.015,171,0.012,172,1.469,174,1.846,175,1.962,176,3.257,177,2.239,178,2.239,179,2.092,182,2.925,183,2.092,185,2.925,186,3.398,187,2.239,188,3.704,189,1.962,190,2.856,191,2.406,192,1.123,193,3.398,194,2.092,198,1.391,199,3.851,200,3.257,201,2.239,202,3.129,405,2.835,406,4.601,417,3.521,469,3.712,504,1.962,516,5.024,517,3.521,518,3.521,519,4.118,520,4.601,521,4.118,522,3.129,523,4.118,524,4.118,525,4.118,526,3.129]],["title/injectables/AuthenticationService.html",[230,0.874,241,1.205]],["body/injectables/AuthenticationService.html",[3,0.089,4,0.089,9,0.076,20,0.542,21,0.021,22,0.27,23,0.102,24,0.128,26,0.785,139,0.542,160,1.221,162,1.187,169,0.006,170,0.009,171,0.006,183,1.6,198,1.063,206,0.625,208,1.513,209,0.172,210,0.771,217,0.578,218,1.346,219,0.983,230,0.771,232,0.941,237,1.688,238,0.619,241,1.063,250,1.017,251,0.908,256,2.473,259,1.989,260,2.099,263,3.506,265,4.131,266,3.699,267,1.338,268,3.363,275,0.885,276,2.392,277,1.247,278,2.14,282,1.892,284,1.598,290,3.39,294,2.309,296,1.191,304,1.34,320,2.106,322,2.168,323,1.501,325,2.829,329,2.974,357,0.632,364,0.941,391,3.293,394,4.052,486,2.392,488,3.403,493,2.276,495,1.786,497,2.392,498,2.558,504,2.607,505,2.909,526,3.961,527,1.501,528,2.693,529,3.926,530,3.378,531,4.479,532,4.479,533,3.149,534,2.392,535,3.149,536,2.693,537,3.926,538,1.975,539,4.156,540,3.087,541,3.149,542,3.149,543,3.149,544,3.91,545,4.479,546,2.168,547,2.168,548,1.839,549,1.975,550,3.79,551,3.318,552,4.559,553,5.214,554,1.975,555,1.975,556,3.926,557,1.975,558,4.857,559,3.717,560,3.926,561,2.703,562,1.975,563,3.149,564,2.168,565,1.989,566,3.149,567,3.149,568,1.975,569,3.26,570,4.479,571,3.087,572,3.149,573,2.693,574,3.149,575,4.479,576,3.149,577,3.699,578,1.975,579,3.149,580,3.149,581,3.149,582,5.68,583,1.975,584,3.149,585,1.975,586,2.168,587,3.831,588,3.149,589,3.149,590,1.975,591,3.149,592,3.149,593,3.358,594,2.693,595,2.693,596,2.392,597,2.693,598,3.149,599,1.975,600,1.975,601,2.649,602,2.834,603,1.975,604,1.975,605,1.975,606,1.975,607,3.926,608,1.247,609,1.501,610,1.36,611,2.168,612,3.149,613,1.975,614,3.926,615,1.975,616,1.975,617,1.975,618,1.975,619,3.149,620,1.975,621,1.975,622,3.149,623,1.975,624,1.975,625,3.926,626,1.975,627,1.975,628,1.975,629,1.975,630,1.689,631,1.975,632,1.975,633,1.975,634,1.975,635,1.975,636,1.975]],["title/modules/CoreModule.html",[172,1.273,432,2.254]],["body/modules/CoreModule.html",[3,0.176,4,0.176,9,0.151,20,0.789,21,0.021,22,0.533,23,0.202,24,0.102,133,1.121,160,1.063,169,0.011,170,0.015,171,0.011,172,1.851,174,1.748,175,1.858,176,2.821,177,2.12,178,3.171,179,1.981,182,2.821,183,1.981,185,2.821,186,3.278,187,2.12,191,3.032,192,1.063,196,2.637,201,2.12,231,3.89,236,1.647,241,2.249,242,3.384,256,1.647,278,1.391,296,1.183,348,1.858,401,2.463,432,4.72,437,3.943,448,4.438,449,4.438,469,3.032,495,1.555,539,2.962,540,3.62,546,2.685,608,2.463,609,2.962,637,3.335,638,3.335,639,3.62,640,4.206,641,3.89,642,3.89,643,4.206,644,4.414,645,3.899,646,5.19,647,5.19,648,3.573,649,2.962,650,3.335,651,3.278,652,3.899,653,3.899,654,3.899,655,3.899,656,2.962,657,3.899]],["title/classes/Course.html",[24,0.093,658,2.085]],["body/classes/Course.html",[3,0.228,4,0.228,9,0.196,21,0.021,23,0.262,24,0.133,26,1.154,114,2.309,139,0.73,169,0.014,170,0.017,171,0.014,204,2.412,206,0.647,207,3.484,208,1.709,209,0.441,210,1.5,211,2.952,217,0.777,218,1.598,219,1.106,658,3.848,659,4.328,660,5.005,661,4.535,662,5.633,663,6.126,664,5.061,665,5.061,666,5.061,667,5.061]],["title/injectables/CourseService.html",[230,0.874,639,1.94]],["body/injectables/CourseService.html",[3,0.114,4,0.114,9,0.098,14,1.637,20,0.639,21,0.021,22,0.345,23,0.131,24,0.12,26,0.961,114,2.068,137,1.22,139,0.779,169,0.007,170,0.011,171,0.007,198,0.853,206,0.737,208,1.287,209,0.332,211,1.132,217,0.639,218,1.574,219,0.957,228,2.795,230,0.934,232,1.204,234,1.287,236,1.61,237,1.437,238,0.749,244,2.227,245,2.227,246,2.986,247,2.681,248,3.135,249,3.734,250,1.199,251,1.071,254,2.227,255,3.6,256,2.827,257,2.624,258,2.896,260,1.846,261,3.369,267,1.283,268,3.555,269,2.227,270,1.596,271,1.74,272,1.74,273,1.204,274,1.373,275,1.132,282,1.61,283,1.476,284,2.135,286,1.596,287,1.596,288,1.74,289,1.74,290,1.373,291,1.476,292,1.476,295,1.596,296,1.551,297,1.596,298,1.596,299,1.74,300,1.74,301,1.74,304,1.467,320,1.948,357,1.636,601,1.937,602,2.072,639,2.072,658,4.22,660,4.168,661,4.122,662,5.12,668,1.92,669,3.812,670,3.812,671,3.812,672,3.812,673,3.812,674,5.112,675,3.812,676,2.527,677,4.123,678,3.812,679,2.527,680,5.112,681,3.812,682,2.527,683,2.896,684,5.486,685,3.812,686,2.527,687,3.884,688,3.812,689,2.527,690,3.925,691,3.812,692,2.527,693,2.624,694,2.527,695,3.812,696,2.527,697,2.527,698,1.92,699,1.92,700,1.92,701,3.487,702,3.487,703,2.527,704,2.527,705,3.925,706,4.59,707,3.925,708,2.527,709,2.527,710,1.92,711,2.896,712,3.812,713,3.812,714,1.92,715,2.527,716,1.92]],["title/interfaces/Credentials.html",[530,1.701,717,1.507]],["body/interfaces/Credentials.html",[3,0.218,4,0.218,9,0.187,21,0.021,23,0.334,114,2.243,139,0.535,169,0.013,170,0.017,171,0.013,206,0.617,208,2.179,209,0.421,210,1.458,211,2.163,217,0.715,218,1.615,278,1.721,498,2.898,504,2.3,530,3.21,561,3.323,569,2.452,571,2.623,577,3.935,717,3.015,718,2.819,719,3.323,720,4.254,721,3.048,722,3.048,723,3.048,724,3.667,725,3.048,726,3.667,727,3.667]],["title/classes/DatabaseSyncService.html",[24,0.093,651,2.254]],["body/classes/DatabaseSyncService.html",[3,0.182,4,0.182,9,0.156,20,0.587,21,0.021,23,0.208,24,0.105,25,2.771,26,0.705,137,2.225,169,0.011,170,0.015,171,0.011,204,1.918,206,0.514,209,0.351,219,0.625,235,4.502,238,1.042,245,3.679,246,3.823,247,3.679,248,3.557,249,3.915,256,2.838,267,0.791,270,2.542,273,1.918,274,2.188,282,2.936,284,2.479,285,3.058,290,3.423,292,3.679,295,2.542,296,1.797,297,2.542,298,2.542,357,1.288,495,2.113,651,3.347,677,3.743,698,3.058,728,4.027,729,3.058,730,5.3,731,6.298,732,4.025,733,5.3,734,4.08,735,3.058,736,3.058,737,3.058,738,3.058,739,3.058,740,4.502,741,3.058,742,3.058,743,3.058,744,3.058,745,3.058,746,4.025,747,4.025,748,4.025,749,4.025]],["title/interceptors/ErrorHandlerInterceptor.html",[640,2.254,750,2.711]],["body/interceptors/ErrorHandlerInterceptor.html",[3,0.141,4,0.141,9,0.12,11,1.175,20,0.725,21,0.021,22,0.426,23,0.161,24,0.136,26,0.99,127,3.378,139,0.575,169,0.009,170,0.012,171,0.009,192,0.85,198,1.502,206,0.722,209,0.272,217,0.575,218,0.685,219,0.805,230,1.089,236,2.388,237,2.343,238,0.874,250,1.078,251,0.962,256,1.316,260,1.423,267,1.111,268,3.382,273,1.485,274,1.694,275,1.397,277,1.968,284,1.586,294,2.343,296,0.945,304,1.522,320,1.052,325,4.13,339,3.048,362,4.86,363,2.808,364,2.119,393,3.061,490,1.694,492,3.061,493,3.158,494,3.378,495,2.254,505,1.993,508,2.145,509,1.968,530,2.119,540,3.67,544,3.061,546,3.061,547,3.892,548,3.302,551,4.066,565,2.808,608,1.968,609,2.367,610,3.061,611,2.145,630,2.665,640,2.808,641,3.944,656,2.367,751,4.295,752,2.367,753,3.892,754,4.04,755,3.802,756,5.184,757,4.433,758,3.116,759,3.302,760,4.834,761,5.315,762,4.446,763,3.116,764,5.653,765,3.116,766,3.802,767,3.378,768,2.665,769,4.834,770,4.834,771,3.116,772,3.802,773,2.808,774,3.802,775,3.802,776,2.665,777,3.802,778,3.116,779,3.116,780,3.116,781,2.665,782,3.116,783,3.116,784,3.116,785,4.446,786,3.116,787,3.116,788,3.116,789,3.116,790,3.116,791,3.116,792,4.446,793,3.116,794,4.446,795,3.116,796,3.116,797,3.116,798,3.116,799,3.116]],["title/interfaces/ErrorMessageObject.html",[717,1.507,800,2.457]],["body/interfaces/ErrorMessageObject.html",[3,0.222,4,0.222,9,0.19,21,0.021,23,0.311,169,0.014,170,0.017,171,0.014,206,0.629,208,1.662,209,0.429,210,1.475,217,0.802,218,1.62,228,2.864,717,2.938,718,2.875,721,3.108,722,3.108,754,4.57,800,4.146,801,3.739,802,4.11,803,5.152,804,3.686,805,4.208,806,3.388,807,4.208,808,4.208]],["title/injectables/ErrorMessageService.html",[230,0.874,641,2.085]],["body/injectables/ErrorMessageService.html",[3,0.166,4,0.166,9,0.142,20,0.408,21,0.021,22,0.503,23,0.19,24,0.096,25,2.534,26,0.645,139,0.408,169,0.01,170,0.014,171,0.01,206,0.638,209,0.321,210,1.223,217,0.774,218,1.518,219,0.986,228,1.555,230,1.223,232,1.754,234,1.686,238,0.981,244,2.917,250,0.765,251,0.683,260,2.096,267,1.194,284,1.781,294,2.136,304,1.388,320,1.243,329,3.51,356,4.27,357,1.598,361,3.153,364,2.379,495,1.991,505,2.539,536,4.27,559,3.793,564,3.437,593,4.845,594,5.196,595,4.27,601,2.537,641,2.917,754,4.674,766,5.6,767,4.616,802,3.153,803,4.975,809,5.6,810,3.148,811,5.431,812,5.666,813,6.076,814,3.681,815,4.993,816,3.681,817,4.993,818,6.076,819,3.681,820,3.681,821,4.993,822,4.993,823,3.681,824,3.681,825,4.993,826,3.681,827,3.681,828,3.681,829,4.993]],["title/components/HomePage.html",[0,0.625,148,1.205]],["body/components/HomePage.html",[0,0.875,1,0.986,2,1.692,3,0.132,4,0.132,5,1.233,6,1.308,7,1.233,8,1.164,9,0.113,13,1.233,14,2.492,15,2.786,16,1.901,18,1.792,20,0.47,21,0.021,22,0.399,23,0.151,24,0.076,26,0.511,31,0.796,111,3.776,112,3.223,133,0.84,134,1.792,135,1.692,136,1.233,137,1.755,138,1.233,139,0.608,140,1.233,141,1.041,142,1.1,143,2.111,144,0.986,145,1.233,146,0.986,147,1.233,148,1.853,149,1.233,150,1.041,151,1.782,152,0.986,153,1.233,154,0.986,155,1.233,156,0.986,157,1.164,158,1.792,159,0.986,160,0.796,161,0.986,162,1.1,163,1.233,164,0.986,165,1.1,166,0.986,167,1.233,168,1.233,169,0.008,170,0.012,171,0.008,192,0.796,206,0.542,209,0.255,210,1.039,217,0.554,218,1.28,219,0.852,234,1.433,238,0.834,250,0.882,251,0.788,260,0.934,261,2.478,267,0.834,284,1.513,293,1.233,304,1.039,335,3.628,339,2.989,346,2.921,348,2.614,349,3.551,357,1.358,359,3.628,361,4.305,364,2.382,365,5.496,366,3.628,367,2.679,368,3.223,369,2.921,370,3.628,371,3.628,372,3.628,373,2.921,374,3.628,375,3.628,376,3.628,380,4.167,381,4.427,383,1.901,396,2.478,413,2.497,414,2.497,415,2.497,472,3.156,490,1.587,498,2.187,510,1.483,587,3.628,602,2.306,830,2.497,831,4.997,832,4.242,833,5.827,834,4.691,835,2.919,836,2.919,837,3.223,838,3.628,839,3.628,840,3.628,841,2.921,842,2.919,843,4.242,844,4.242,845,3.223,846,4.242,847,4.242,848,4.242,849,4.242,850,4.242,851,4.242,852,2.919,853,2.919,854,4.242,855,2.497,856,2.919,857,4.273,858,4.997,859,6.427,860,4.273,861,4.997,862,2.919,863,2.497,864,3.628,865,4.242,866,2.497,867,2.497,868,2.919,869,2.497,870,2.919,871,2.919,872,3.223,873,3.628,874,4.691,875,2.919,876,2.919,877,2.919,878,2.497,879,2.218,880,2.497,881,2.01,882,2.218,883,3.628,884,3.223,885,2.01,886,2.919]],["title/modules/HomePageModule.html",[172,1.273,887,2.457]],["body/modules/HomePageModule.html",[0,0.854,3,0.22,4,0.22,9,0.188,20,0.793,21,0.021,22,0.666,23,0.252,24,0.128,133,1.401,148,2.416,160,1.329,169,0.014,170,0.017,171,0.014,172,1.738,174,2.184,175,2.322,176,3.522,177,2.649,178,2.649,179,2.476,182,3.254,183,2.476,185,3.254,186,3.781,187,2.649,188,4.121,189,2.322,191,2.847,192,1.329,193,3.781,194,2.476,196,3.042,197,3.702,199,2.847,200,2.649,201,2.649,887,4.861,888,4.167,889,4.167,890,4.873,891,4.873,892,4.873]],["title/injectables/LocalStorageService.html",[230,0.874,540,1.94]],["body/injectables/LocalStorageService.html",[3,0.147,4,0.147,9,0.126,20,0.362,21,0.021,22,0.446,26,0.805,114,2.004,139,0.756,169,0.009,170,0.013,171,0.009,198,1.102,199,1.906,206,0.737,209,0.284,210,1.125,217,0.674,218,1.478,219,1.006,230,0.799,232,1.555,234,1.102,237,1.731,238,0.903,250,1.105,251,0.987,254,1.906,255,1.906,256,1.94,260,2.153,267,1.195,269,1.906,284,1.164,304,1.621,320,1.949,329,3.536,422,2.246,493,2.334,528,2.79,540,1.774,544,4.694,564,3.162,565,2.061,601,1.658,610,4.918,720,2.061,753,3.162,773,2.901,804,1.774,893,5.028,894,2.479,895,5.77,896,6.082,897,5.316,898,5.77,899,4.594,900,4.594,901,4.594,902,4.594,903,2.79,904,2.061,905,3.263,906,3.263,907,3.263,908,4.594,909,4.594,910,3.263,911,4.594,912,6.959,913,4.594,914,3.263,915,3.49,916,4.594,917,3.263,918,4.594,919,4.594,920,3.263,921,4.594,922,5.395,923,5.201,924,2.79,925,2.79,926,6.082,927,3.263,928,3.263,929,3.928,930,3.263,931,3.263,932,3.928,933,2.79,934,2.79,935,3.263,936,3.263,937,3.263,938,3.263,939,2.246,940,3.263,941,3.263,942,3.263,943,3.263,944,3.263,945,3.263]],["title/injectables/LocationsService.html",[230,0.874,642,2.085]],["body/injectables/LocationsService.html",[3,0.191,4,0.191,9,0.164,20,0.673,21,0.021,22,0.579,23,0.219,24,0.159,26,1.064,30,5.493,139,0.47,151,2.506,169,0.012,170,0.015,171,0.012,206,0.7,209,0.369,217,0.47,219,0.943,230,1.342,232,2.019,234,1.851,238,1.077,250,0.881,251,0.787,263,3.752,267,1.263,268,3.609,275,1.899,282,2.315,293,1.79,304,1.038,320,1.851,329,3.462,492,3.773,495,2.185,539,4.88,546,4.774,547,3.773,601,3.264,608,2.676,642,3.202,759,3.202,946,3.623,947,4.687,948,5.827,949,5.827,950,5.493,951,5.493,952,4.237,953,4.237,954,4.687,955,4.237,956,6.423,957,4.237,958,4.237,959,4.237]],["title/components/LoginComponent.html",[0,0.625,152,1.205]],["body/components/LoginComponent.html",[0,0.822,1,0.886,2,1.563,3,0.118,4,0.118,5,1.108,6,1.175,7,1.108,8,1.046,9,0.101,11,1.477,12,2.237,13,1.108,14,2.447,15,2.736,16,1.757,18,1.656,20,0.672,21,0.021,22,0.358,23,0.136,24,0.069,26,0.459,27,2.482,31,0.715,52,3.957,133,0.754,134,1.656,135,1.563,136,1.108,137,1.667,138,1.108,139,0.52,140,1.108,141,0.935,142,0.988,143,1.983,144,0.886,145,1.108,146,0.886,147,1.108,148,0.886,149,1.108,150,0.935,151,0.935,152,1.759,153,1.108,154,0.886,155,1.108,156,0.886,157,1.046,158,1.656,159,0.886,160,0.715,161,0.886,162,0.988,163,1.108,164,0.886,165,0.988,166,0.886,167,1.108,168,1.108,169,0.007,170,0.011,171,0.007,187,1.425,189,1.25,192,0.715,194,1.332,198,0.886,206,0.335,209,0.229,210,0.96,217,0.434,219,0.941,234,2.191,236,1.656,238,0.77,241,2.105,245,2.29,249,2.131,250,0.545,251,0.487,267,1.096,277,1.656,278,2.086,293,1.108,294,2.349,296,0.795,304,1.433,322,1.805,339,2.889,348,1.868,349,3.042,352,3.042,357,1.667,364,1.868,380,1.992,383,2.334,396,2.29,472,2.475,490,1.425,495,1.563,498,1.563,504,2.482,509,1.656,510,1.332,530,2.657,548,2.29,569,1.332,571,2.551,602,2.131,651,3.936,754,3.521,755,2.242,773,1.656,802,3.521,811,2.978,834,4.454,837,2.978,838,3.352,839,3.352,840,3.352,841,2.698,872,1.992,879,3.957,960,2.242,961,4.694,962,3.92,963,4.694,964,5.208,965,4.694,966,5.208,967,5.208,968,5.329,969,5.548,970,6.232,971,3.92,972,3.92,973,4.443,974,3.92,975,3.92,976,3.352,977,3.92,978,6.062,979,2.622,980,2.622,981,2.622,982,2.622,983,3.92,984,3.92,985,2.622,986,3.352,987,3.92,988,3.352,989,3.566,990,1.992,991,3.92,992,1.532,993,2.622,994,2.622,995,2.242,996,2.978,997,2.622,998,2.622,999,2.622,1000,2.622,1001,2.622,1002,2.622,1003,2.622,1004,2.622,1005,2.622,1006,2.622,1007,2.622,1008,2.622,1009,2.622,1010,2.622,1011,2.622,1012,2.622,1013,2.242,1014,1.992,1015,2.622,1016,2.622,1017,2.242,1018,2.622,1019,2.622,1020,2.622,1021,2.622,1022,3.352,1023,3.92,1024,3.92,1025,3.92,1026,3.352]],["title/interfaces/LoginPayload.html",[717,1.507,723,2.254]],["body/interfaces/LoginPayload.html",[3,0.221,4,0.221,9,0.189,21,0.021,23,0.336,114,2.262,139,0.542,169,0.014,170,0.017,171,0.014,206,0.625,208,2.027,209,0.427,210,1.47,211,2.193,217,0.665,218,1.618,278,1.745,498,2.698,504,2.86,530,2.86,561,4.131,569,3.438,571,2.659,577,2.858,717,3.024,718,2.858,719,3.368,720,3.09,721,3.09,722,3.09,723,3.79,724,5.141,725,3.09,726,3.717,727,3.717]],["title/components/LogoutComponent.html",[0,0.625,154,1.205]],["body/components/LogoutComponent.html",[0,0.988,1,1.232,2,1.979,3,0.165,4,0.165,5,1.541,6,1.635,7,1.541,8,1.455,9,0.141,11,1.871,12,2.688,13,1.541,14,2.574,15,2.877,16,2.224,18,2.096,20,0.625,21,0.021,22,0.499,23,0.189,24,0.096,26,0.639,27,2.885,31,0.995,133,1.049,134,2.096,135,1.979,136,1.541,137,1.937,138,1.541,139,0.625,140,1.541,141,1.301,142,1.375,143,2.382,144,1.232,145,1.541,146,1.232,147,1.541,148,1.232,149,1.541,150,1.301,151,1.301,152,1.232,153,1.541,154,2.045,155,1.541,156,1.232,157,1.455,158,2.096,159,1.232,160,0.995,161,1.232,162,1.375,163,1.541,164,1.232,165,1.375,166,1.232,167,1.541,168,1.541,169,0.01,170,0.014,171,0.01,192,0.995,206,0.466,209,0.318,217,0.404,219,0.77,234,2.045,236,2.096,237,1.871,238,0.976,240,2.512,241,2.257,250,0.759,251,0.677,267,0.717,278,2.159,293,1.541,294,1.375,296,1.107,304,1.216,339,3.323,346,3.417,349,2.899,357,1.168,495,1.979,498,1.979,504,2.365,509,2.304,526,4.599,548,2.899,551,2.899,558,4.244,855,3.12,864,3.12,873,3.12,874,4.823,878,3.12,879,2.772,880,4.244,881,3.417,882,2.772,883,3.12,884,2.772,885,2.512,988,4.244,992,2.132,1027,3.12,1028,5.641,1029,4.963,1030,3.649,1031,3.649,1032,4.963,1033,3.649,1034,3.649,1035,4.963,1036,3.649,1037,4.963,1038,3.649,1039,3.649]],["title/classes/Organisation.html",[24,0.093,215,1.813]],["body/classes/Organisation.html",[3,0.228,4,0.228,9,0.196,21,0.021,23,0.262,24,0.133,26,1.154,114,2.309,139,0.73,169,0.014,170,0.017,171,0.014,204,2.412,206,0.647,207,3.484,208,1.709,209,0.441,210,1.5,211,2.952,215,3.347,217,0.777,218,1.598,219,1.106,229,4.16,661,4.535,1040,4.328,1041,5.633,1042,6.126,1043,5.061,1044,5.061,1045,5.061,1046,5.061]],["title/injectables/OrganisationService.html",[230,0.874,643,2.254]],["body/injectables/OrganisationService.html",[3,0.122,4,0.122,9,0.105,14,1.433,20,0.679,21,0.021,22,0.37,23,0.14,24,0.125,26,0.838,137,1.286,139,0.783,169,0.008,170,0.011,171,0.008,198,0.915,206,0.783,208,1.357,209,0.35,211,1.215,215,3.696,217,0.656,218,1.504,219,0.951,228,2.762,230,0.984,232,1.292,234,1.357,236,1.697,237,1.514,238,0.79,240,1.866,241,2.171,244,2.347,245,2.347,246,3.092,247,2.796,248,3.218,249,3.778,250,1.231,251,1.099,254,2.347,255,3.676,256,2.866,257,2.766,260,1.286,261,3.092,267,1.286,268,3.553,269,2.347,270,1.712,271,1.866,272,1.866,273,1.292,274,1.473,275,1.215,278,0.967,282,2.236,283,1.583,284,2.185,286,1.712,287,1.712,288,1.866,289,1.866,290,1.473,291,1.583,292,1.583,293,1.145,295,1.712,296,1.715,297,1.712,298,1.712,299,1.866,300,1.866,301,1.866,304,1.45,305,2.318,318,3.636,320,1.909,357,1.286,601,2.041,602,2.184,643,2.537,683,3.052,687,4.022,699,2.059,700,2.059,701,3.052,702,3.052,710,3.052,711,3.052,714,2.059,716,2.059,740,4.883,742,2.059,759,2.347,1047,2.059,1048,4.017,1049,4.017,1050,4.017,1051,4.017,1052,5.293,1053,4.017,1054,2.71,1055,4.017,1056,2.71,1057,5.293,1058,4.017,1059,2.71,1060,4.834,1061,4.017,1062,2.71,1063,4.017,1064,2.71,1065,4.787,1066,2.71,1067,4.017,1068,2.71,1069,2.71,1070,2.71,1071,2.71,1072,2.71,1073,2.71,1074,2.71,1075,2.71,1076,2.71]],["title/classes/PasswordValidation.html",[24,0.093,1077,2.457]],["body/classes/PasswordValidation.html",[3,0.233,4,0.233,9,0.199,20,0.571,21,0.021,23,0.267,24,0.135,139,0.571,169,0.014,170,0.017,171,0.014,189,2.457,198,2.092,204,2.457,209,0.449,217,0.571,219,0.8,238,1.218,250,1.072,251,0.957,266,3.011,267,1.013,296,1.564,320,1.741,569,3.147,1077,4.264,1078,4.706,1079,4.408,1080,6.64,1081,6.194,1082,6.194,1083,7.046,1084,5.155,1085,5.155,1086,5.297,1087,5.155,1088,5.155]],["title/components/RecoverPasswordComponent.html",[0,0.625,156,1.205]],["body/components/RecoverPasswordComponent.html",[0,0.959,1,1.164,2,1.903,3,0.155,4,0.155,5,1.456,6,1.545,7,1.456,8,1.375,9,0.133,11,1.799,12,2.609,13,1.456,14,2.554,15,2.855,16,2.139,18,2.016,20,0.655,21,0.021,22,0.471,23,0.178,24,0.143,26,0.959,27,2.817,31,0.94,52,3.627,133,0.991,134,2.016,135,1.903,136,1.456,137,1.891,138,1.456,139,0.607,140,1.456,141,1.229,142,1.299,143,2.313,144,1.164,145,1.456,146,1.164,147,1.456,148,1.164,149,1.456,150,1.229,151,1.229,152,1.164,153,1.456,154,1.164,155,1.456,156,1.996,157,2.75,158,2.016,159,1.164,160,0.94,161,1.164,162,1.299,163,1.456,164,1.164,165,1.299,166,1.164,167,1.456,168,1.456,169,0.01,170,0.013,171,0.01,189,1.643,192,0.94,206,0.44,209,0.301,210,1.169,217,0.529,219,0.918,234,1.612,238,0.938,241,2.329,250,0.717,251,0.64,267,0.938,282,2.496,284,1.702,293,1.456,294,1.299,304,1.169,339,3.246,349,2.789,352,2.789,357,1.528,383,2.139,490,1.874,493,1.752,508,2.373,522,4.715,534,4.49,550,3.015,551,2.789,552,2.619,569,3.003,571,2.977,759,2.789,973,3.627,989,4.49,990,2.619,992,2.014,996,2.619,1022,4.082,1089,5.307,1090,2.619,1091,4.682,1092,4.082,1093,4.682,1094,4.082,1095,3.447,1096,2.948,1097,4.774,1098,2.948,1099,2.948,1100,2.948,1101,3.447,1102,2.948,1103,3.286]],["title/interceptors/RequestInterceptor.html",[644,2.254,750,2.711]],["body/interceptors/RequestInterceptor.html",[3,0.177,4,0.177,9,0.151,11,1.477,20,0.719,21,0.021,22,0.535,23,0.203,24,0.153,26,1.024,139,0.577,169,0.011,170,0.015,171,0.011,206,0.747,209,0.342,217,0.648,219,0.808,230,1.275,236,2.199,237,1.962,238,1.023,240,2.697,241,2.363,250,1.082,251,0.967,267,1.023,268,2.971,273,1.867,274,2.13,275,1.756,278,2.222,284,1.857,293,1.655,304,1.432,320,1.323,361,2.474,362,5.066,363,3.288,493,2.645,495,2.076,505,2.333,547,4.591,548,3.64,551,4.161,565,3.935,577,3.041,608,2.474,644,3.288,656,2.976,753,4.29,757,5,759,3.041,760,4.452,761,4.452,768,3.35,769,5.328,770,5.328,772,4.452,774,4.452,775,4.452,776,3.35,777,4.452,884,2.976,1104,3.35,1105,5.206,1106,5.847,1107,3.918,1108,3.918,1109,5.206,1110,3.918,1111,5.206,1112,3.918,1113,3.918,1114,5.206,1115,3.918,1116,3.35,1117,3.918,1118,3.918,1119,3.918,1120,3.918,1121,3.918,1122,3.918]],["title/components/ResetPasswordComponent.html",[0,0.625,159,1.205]],["body/components/ResetPasswordComponent.html",[0,0.9,1,1.037,2,1.754,3,0.138,4,0.138,5,1.297,6,1.376,7,1.297,8,1.224,9,0.119,11,1.658,12,2.45,13,1.297,14,2.511,15,2.808,16,1.972,18,1.858,20,0.659,21,0.021,22,0.42,23,0.159,24,0.08,26,0.538,27,2.676,31,0.837,133,0.883,134,1.858,135,1.754,136,1.297,137,1.797,138,1.297,139,0.57,140,1.297,141,1.095,142,1.157,143,2.172,144,1.037,145,1.297,146,1.037,147,1.297,148,1.037,149,1.297,150,1.095,151,1.095,152,1.037,153,1.297,154,1.037,155,1.297,156,1.037,157,1.224,158,1.858,159,1.896,160,1.876,161,1.037,162,1.157,163,1.297,164,1.037,165,1.157,166,1.037,167,1.297,168,1.297,169,0.009,170,0.012,171,0.009,189,1.463,192,0.837,206,0.392,209,0.268,210,1.078,217,0.622,218,0.967,219,0.96,234,2.007,238,0.865,241,2.273,250,0.638,251,0.57,267,0.865,282,2.612,294,1.938,304,1.375,329,2.235,339,3.309,348,2.947,349,3.003,352,2.57,357,1.408,383,1.972,405,4.385,490,1.669,493,1.56,505,1.972,508,2.114,534,4.266,550,2.778,551,2.57,552,2.332,569,3.236,577,3.472,759,2.57,904,2.778,968,5.755,973,3.342,986,2.625,989,3.906,990,2.332,992,1.794,995,2.625,996,3.342,1026,3.762,1077,2.114,1078,2.332,1086,2.625,1090,2.332,1091,4.397,1092,3.762,1093,4.397,1094,2.625,1096,2.625,1098,2.625,1099,2.625,1100,2.625,1102,2.625,1103,3.029,1123,5.446,1124,4.801,1125,4.399,1126,4.399,1127,4.399,1128,4.399,1129,3.07,1130,3.07,1131,3.07,1132,3.07,1133,2.625,1134,3.07,1135,3.07,1136,3.07,1137,3.07,1138,3.07,1139,3.07,1140,4.399,1141,3.762]],["title/interfaces/RootObject.html",[717,1.507,806,2.457]],["body/interfaces/RootObject.html",[3,0.222,4,0.222,9,0.19,21,0.021,23,0.311,169,0.014,170,0.017,171,0.014,206,0.629,208,2.034,209,0.429,210,1.475,217,0.771,218,1.602,228,2.079,251,1.118,717,2.938,718,2.875,721,3.108,722,3.108,754,4.57,800,3.388,801,3.739,802,4.393,803,3.739,804,3.686,805,4.208,806,4.146,807,5.799,808,5.799]],["title/classes/RouteReusableStrategy.html",[24,0.093,648,2.457]],["body/classes/RouteReusableStrategy.html",[3,0.14,4,0.14,8,1.764,9,0.12,20,0.343,21,0.021,23,0.16,24,0.081,139,0.661,142,1.667,169,0.009,170,0.012,171,0.009,192,0.843,204,1.474,206,0.792,209,0.27,217,0.661,219,0.925,238,0.869,250,1.239,251,1.107,266,3.813,267,1.283,296,1.342,304,1.563,320,1.903,329,3.582,348,3.56,357,1.415,391,3.915,437,3.922,505,3.021,510,3.15,586,3.045,602,3.665,648,3.045,649,4.71,650,5.893,837,5.121,904,2.793,1142,5.302,1143,2.645,1144,4.423,1145,4.423,1146,7.09,1147,4.423,1148,4.423,1149,3.782,1150,4.423,1151,4.423,1152,4.423,1153,4.423,1154,4.423,1155,5.163,1156,5.163,1157,4.423,1158,7.187,1159,3.093,1160,6.892,1161,6.2,1162,4.423,1163,3.093,1164,4.423,1165,3.093,1166,3.093,1167,5.634,1168,3.093,1169,5.96,1170,3.093,1171,5.634,1172,3.093,1173,4.423,1174,3.093,1175,3.093,1176,3.093]],["title/components/SendMessageComponent.html",[0,0.625,161,1.205]],["body/components/SendMessageComponent.html",[0,0.781,1,0.814,2,1.466,3,0.109,4,0.109,5,1.018,6,1.08,7,1.018,8,0.961,9,0.093,11,1.386,12,2.125,13,1.018,14,2.41,15,2.736,16,1.648,18,1.553,20,0.653,21,0.021,22,0.329,23,0.125,24,0.063,26,0.422,27,2.378,31,1.807,34,3.145,133,0.693,134,1.553,135,1.466,136,1.018,137,1.597,138,1.018,139,0.494,140,1.018,141,0.859,142,0.908,143,1.883,144,0.814,145,1.018,146,0.814,147,1.018,148,0.814,149,1.018,150,0.859,151,0.859,152,0.814,153,1.018,154,0.814,155,1.018,156,0.814,157,0.961,158,1.553,159,0.814,160,0.657,161,1.685,162,2.289,163,1.018,164,0.814,165,0.908,166,0.814,167,1.018,168,1.018,169,0.007,170,0.01,171,0.007,192,0.657,198,0.814,206,0.308,209,0.21,210,0.901,217,0.628,218,1.294,219,1.002,228,2.107,234,1.685,238,0.723,242,2.993,246,2.148,250,0.927,251,0.447,260,0.771,267,1.056,275,1.08,293,1.018,294,2.433,304,0.901,329,2.877,348,3.076,352,2.148,357,1.719,361,3.151,364,1.148,368,2.794,383,2.236,396,2.148,422,2.532,444,5.087,445,2.061,474,2.061,505,1.648,510,1.224,548,2.915,550,3.151,573,3.145,693,3.07,753,2.532,802,4.077,811,2.794,841,1.659,845,2.794,866,2.061,867,2.061,881,1.659,885,3.07,903,3.145,904,2.322,939,3.699,954,3.145,976,3.145,992,1.408,1013,2.061,1014,2.794,1103,3.435,1124,4.267,1177,5.599,1178,4.974,1179,2.061,1180,4.459,1181,4.459,1182,3.677,1183,4.459,1184,4.459,1185,4.989,1186,4.989,1187,4.989,1188,4.989,1189,2.41,1190,3.677,1191,2.41,1192,5.663,1193,3.813,1194,3.677,1195,3.677,1196,4.989,1197,3.677,1198,2.41,1199,3.677,1200,3.677,1201,2.41,1202,3.145,1203,3.677,1204,3.677,1205,2.41,1206,2.794,1207,3.677,1208,2.41,1209,2.41,1210,3.145,1211,5.373,1212,2.41,1213,3.145,1214,3.145,1215,2.41,1216,2.41,1217,2.061,1218,2.41,1219,2.41,1220,2.41,1221,2.41,1222,2.41,1223,2.41,1224,2.41,1225,2.061,1226,2.41,1227,2.41,1228,2.41,1229,2.41,1230,2.41,1231,2.41,1232,2.41,1233,2.41,1234,2.41,1235,2.41,1236,2.41,1237,2.41,1238,3.677,1239,2.41,1240,2.41,1241,2.41,1242,2.41,1243,2.41,1244,4.267,1245,3.677,1246,3.677,1247,3.677,1248,2.061,1249,2.41,1250,2.061,1251,2.061,1252,3.145,1253,2.061,1254,3.145,1255,2.41,1256,2.41,1257,2.41,1258,2.41,1259,2.41,1260,2.41]],["title/guards/UnauthenticatedGuard.html",[469,2.085,483,2.254]],["body/guards/UnauthenticatedGuard.html",[3,0.186,4,0.186,9,0.16,11,1.557,20,0.665,21,0.021,22,0.565,23,0.214,24,0.157,26,1.114,139,0.458,169,0.012,170,0.015,171,0.012,190,2.57,192,1.126,200,3.679,206,0.689,209,0.36,217,0.458,219,0.837,230,1.321,237,2.398,238,1.06,241,2.361,250,0.859,251,0.767,259,3.405,260,2.036,267,1.06,278,1.923,294,2.032,296,1.635,304,1.321,320,1.821,339,3.285,348,3.032,363,3.405,383,2.416,391,4.018,393,3.712,394,3.405,469,3.15,472,3.405,483,3.405,484,3.139,486,4.096,487,4.611,488,4.096,489,4.611,490,2.246,492,3.712,493,3.233,494,4.096,495,2.15,497,4.096,498,2.15,499,4.611,500,4.096,501,4.611,502,4.611,503,4.611,504,2.57,505,2.416,506,3.533,507,3.533,509,2.609,510,2.099,1261,3.533,1262,6.362,1263,4.132,1264,4.132,1265,4.132]],["title/interfaces/User.html",[498,1.423,717,1.507]],["body/interfaces/User.html",[3,0.209,4,0.209,9,0.179,21,0.021,23,0.328,114,2.629,139,0.736,169,0.013,170,0.016,171,0.013,206,0.593,208,2.14,209,0.404,210,1.422,211,2.976,217,0.773,218,1.621,251,1.078,278,1.654,498,2.782,504,2.21,530,2.767,561,3.193,569,2.357,571,3.61,577,2.709,717,2.99,718,2.709,719,3.193,720,2.929,721,2.929,722,2.929,723,2.929,724,3.524,725,4.194,726,5.045,727,5.045]],["title/components/ValidateVolunteerComponent.html",[0,0.625,164,1.205]],["body/components/ValidateVolunteerComponent.html",[0,0.565,1,0.502,2,0.995,3,0.067,4,0.067,5,0.628,6,0.667,7,0.628,8,0.593,9,0.057,11,0.941,12,1.537,13,0.628,14,2.16,15,2.448,16,1.119,18,1.054,20,0.466,21,0.021,22,0.203,23,0.077,24,0.039,26,0.26,27,1.8,31,1.761,39,2.134,71,2.134,111,3.137,114,0.941,119,2.134,133,0.428,134,1.054,135,1.506,136,0.628,137,1.209,138,0.628,139,0.622,140,0.628,141,0.53,142,0.561,143,1.362,144,0.502,145,0.628,146,0.502,147,0.628,148,0.502,149,0.628,150,0.53,151,1.884,152,0.502,153,0.628,154,0.502,155,0.628,156,0.502,157,0.593,158,1.054,159,0.502,160,0.879,161,0.502,162,0.561,163,0.628,164,1.276,165,1.915,166,0.502,167,0.628,168,0.628,169,0.004,170,0.007,171,0.004,198,0.843,203,2.966,206,0.675,209,0.367,210,0.611,212,2.037,213,3.626,217,0.681,218,1.459,219,1.011,228,2.146,231,2.968,234,1.716,236,1.924,237,1.717,238,0.491,242,2.46,250,1.098,251,0.981,260,1.989,261,2.662,263,1.458,265,1.718,266,1.884,267,1.102,293,0.628,294,1.216,296,0.757,304,1.406,307,1.896,308,1.896,325,2.658,352,1.458,357,1.795,364,2.518,367,4.14,381,2.869,383,2.368,394,2.385,419,2.134,422,1.024,495,1.817,498,0.995,500,1.896,510,0.756,550,1.576,586,3.333,597,3.23,639,2.762,642,2.968,658,1.458,677,2.037,693,3.757,705,2.134,734,3.333,767,4.665,773,1.576,804,1.357,845,4.665,857,3.599,860,1.272,863,2.134,869,3.599,872,1.13,881,1.024,885,2.897,915,2.869,939,4.033,947,2.134,948,3.599,949,4.14,950,2.134,951,3.23,969,3.23,992,0.869,1014,1.13,1017,1.272,1103,1.718,1141,2.134,1202,3.23,1206,1.896,1210,2.134,1213,2.134,1214,3.23,1225,1.272,1244,2.134,1248,1.272,1250,2.134,1251,1.272,1252,2.134,1253,2.134,1254,1.272,1266,5.606,1267,1.272,1268,3.225,1269,2.496,1270,2.758,1271,3.599,1272,3.225,1273,2.496,1274,2.496,1275,2.496,1276,2.496,1277,2.869,1278,2.496,1279,2.496,1280,2.496,1281,1.487,1282,2.496,1283,2.496,1284,2.496,1285,1.487,1286,3.777,1287,2.496,1288,1.487,1289,2.496,1290,2.496,1291,2.496,1292,1.487,1293,2.496,1294,2.134,1295,2.496,1296,2.496,1297,2.496,1298,2.496,1299,1.487,1300,2.496,1301,4.842,1302,2.496,1303,2.496,1304,1.487,1305,1.487,1306,2.496,1307,1.487,1308,2.496,1309,2.496,1310,2.496,1311,1.487,1312,2.496,1313,3.777,1314,2.496,1315,2.496,1316,2.496,1317,2.496,1318,3.225,1319,1.487,1320,2.496,1321,1.487,1322,3.777,1323,2.496,1324,2.496,1325,2.496,1326,2.496,1327,2.496,1328,1.487,1329,3.23,1330,2.496,1331,2.134,1332,3.777,1333,2.496,1334,2.496,1335,1.487,1336,1.487,1337,1.487,1338,1.487,1339,1.487,1340,1.487,1341,3.225,1342,2.134,1343,1.487,1344,2.496,1345,1.487,1346,2.496,1347,2.496,1348,1.487,1349,1.487,1350,1.487,1351,1.487,1352,4.209,1353,1.487,1354,1.487,1355,2.496,1356,1.487,1357,1.487,1358,1.487,1359,1.487,1360,2.496,1361,1.487,1362,2.496,1363,1.487,1364,1.487,1365,2.496,1366,2.496,1367,1.487,1368,1.487,1369,1.487,1370,1.487,1371,2.496,1372,1.487,1373,1.487,1374,1.487,1375,1.487,1376,1.487,1377,2.496,1378,1.487,1379,1.487,1380,1.487,1381,4.556,1382,1.487,1383,1.487,1384,1.487,1385,2.496,1386,1.487,1387,1.487,1388,1.487,1389,1.487,1390,1.487,1391,1.272,1392,1.487,1393,1.487,1394,1.487,1395,1.487,1396,1.487,1397,1.487,1398,1.487,1399,1.487,1400,1.487,1401,3.777,1402,2.496,1403,2.496,1404,2.496,1405,2.496,1406,2.496,1407,2.496,1408,2.496,1409,2.134,1410,2.496,1411,2.134,1412,2.496,1413,2.496,1414,2.496,1415,2.496,1416,2.496,1417,2.496,1418,2.496,1419,1.487,1420,1.487,1421,2.496,1422,1.487,1423,2.496,1424,1.487,1425,1.487,1426,3.777,1427,1.487,1428,1.487,1429,1.487,1430,1.487]],["title/classes/Volunteer.html",[24,0.093,31,0.973]],["body/classes/Volunteer.html",[3,0.19,4,0.19,9,0.163,21,0.021,23,0.218,24,0.111,26,1.062,31,1.654,114,2.418,139,0.711,169,0.012,170,0.015,171,0.012,203,3.297,204,2.012,206,0.54,207,2.907,208,1.426,209,0.368,210,1.339,211,2.718,212,3.83,213,3.83,215,3.082,217,0.817,218,1.649,219,1.144,224,3.611,228,1.783,229,2.667,269,3.543,571,3.297,725,3.83,804,2.973,1041,5.187,1294,5.187,1431,3.611,1432,6.065,1433,5.187,1434,5.187,1435,5.187,1436,5.468,1437,4.222,1438,4.222,1439,4.222,1440,4.222,1441,4.222,1442,4.222,1443,4.222,1444,4.222,1445,4.222,1446,4.222,1447,4.222,1448,4.222,1449,4.222,1450,4.222]],["title/components/VolunteerPage.html",[0,0.625,166,1.205]],["body/components/VolunteerPage.html",[0,1.087,1,1.497,2,2.249,3,0.2,4,0.2,5,1.872,6,1.986,7,1.872,8,1.767,9,0.171,11,2.126,12,2.957,13,1.872,14,2.635,15,2.946,16,2.528,18,2.383,20,0.491,21,0.021,22,0.606,23,0.229,24,0.116,25,3.884,26,0.776,27,2.112,31,1.692,133,1.275,134,2.383,135,2.249,136,1.872,137,2.09,138,1.872,139,0.625,140,1.872,141,1.581,142,1.671,143,2.621,144,1.497,145,1.872,146,1.497,147,1.872,148,1.497,149,1.872,150,1.581,151,1.581,152,1.497,153,1.872,154,1.497,155,1.872,156,1.497,157,1.767,158,2.383,159,1.497,160,1.208,161,1.497,162,1.671,163,1.872,164,1.497,165,1.671,166,2.206,167,1.872,168,1.872,169,0.012,170,0.016,171,0.012,1451,3.79,1452,6.206,1453,5.641]],["title/modules/VolunteerPageModule.html",[172,1.273,1454,2.457]],["body/modules/VolunteerPageModule.html",[0,1.15,3,0.183,4,0.183,9,0.157,20,0.794,21,0.021,22,0.555,23,0.21,24,0.106,133,1.169,141,2.449,142,2.011,150,2.449,151,1.902,160,1.108,161,2.319,162,1.532,164,2.319,165,2.011,166,2.319,169,0.011,170,0.015,171,0.011,172,1.45,174,1.822,175,1.937,176,3.237,177,2.209,178,2.209,179,2.065,182,2.9,183,2.065,185,2.9,186,3.369,187,2.209,188,3.672,189,1.937,190,2.838,191,2.374,192,1.108,193,3.369,194,2.065,196,3.423,197,3.088,198,1.373,199,3.835,200,3.569,201,2.209,202,3.088,367,2.567,369,2.798,373,2.798,520,4.561,1178,3.088,1454,5.015,1455,3.476,1456,3.476,1457,4.064,1458,4.064,1459,5.954,1460,4.064,1461,4.064]],["title/injectables/VolunteerService.html",[230,0.874,242,1.813]],["body/injectables/VolunteerService.html",[3,0.069,4,0.069,9,0.059,14,1.524,20,0.569,21,0.021,22,0.209,23,0.079,24,0.086,26,0.576,31,1.876,114,1.448,127,1.939,137,0.817,139,0.754,151,1.524,169,0.004,170,0.011,171,0.004,198,1.297,203,1.387,206,0.704,208,1.56,209,0.223,210,0.941,211,0.684,212,3.245,213,3.794,215,2.8,217,0.611,218,1.585,219,0.855,228,2.817,229,2.076,230,0.625,232,0.728,234,1.297,236,1.622,237,1.448,238,0.502,242,1.297,244,1.491,245,1.491,246,2.244,247,1.92,248,2.51,249,3.503,250,1.204,251,1.023,254,1.491,255,3.001,256,2.643,257,1.757,258,4.696,260,1.853,261,3.611,263,1.491,264,2.182,265,1.757,266,1.92,267,1.199,268,3.389,269,1.491,270,0.964,271,1.051,272,1.051,273,0.728,274,0.83,275,0.684,276,1.16,277,0.964,281,1.306,282,1.078,283,0.892,284,2.334,286,0.964,287,0.964,288,1.051,289,1.051,290,0.83,291,0.892,292,0.892,293,0.645,295,0.964,296,1.296,297,0.964,298,0.964,299,1.051,300,1.051,301,1.051,304,1.603,307,1.16,308,2.497,315,1.306,317,2.182,318,1.939,319,1.306,320,1.735,322,1.051,323,1.16,325,2.916,357,0.817,383,2.933,505,1.915,596,1.939,601,1.297,602,1.387,639,2.664,658,3.219,660,1.939,661,1.757,677,0.964,683,1.939,687,2.918,690,3.653,693,3.675,699,1.16,700,1.939,701,2.918,702,3.246,707,1.306,710,2.497,711,1.939,714,1.939,716,1.16,725,3.095,734,4.64,736,1.16,804,3.727,904,3.095,1060,3.653,1133,2.182,1149,3.284,1270,3.653,1271,5.555,1329,3.284,1331,2.182,1342,3.653,1409,2.182,1411,1.306,1433,1.306,1434,1.306,1435,5.35,1462,1.16,1463,2.552,1464,2.552,1465,2.552,1466,2.552,1467,2.552,1468,2.552,1469,2.552,1470,2.552,1471,1.527,1472,1.527,1473,2.552,1474,1.527,1475,3.841,1476,2.552,1477,3.287,1478,2.552,1479,2.552,1480,1.527,1481,2.552,1482,2.552,1483,2.552,1484,1.527,1485,2.552,1486,1.527,1487,3.841,1488,4.272,1489,4.272,1490,4.272,1491,2.552,1492,1.527,1493,2.552,1494,1.527,1495,2.552,1496,1.527,1497,2.552,1498,1.527,1499,2.552,1500,2.552,1501,2.552,1502,1.527,1503,1.527,1504,1.527,1505,5.338,1506,2.552,1507,2.552,1508,3.841,1509,1.527,1510,1.527,1511,3.287,1512,3.287,1513,3.287,1514,3.287,1515,1.527,1516,1.527,1517,3.287,1518,3.841,1519,1.527,1520,1.527,1521,1.527,1522,1.527,1523,1.527,1524,1.527,1525,2.552,1526,2.552,1527,2.552,1528,2.552,1529,2.552,1530,2.552,1531,2.552,1532,2.552,1533,2.552,1534,2.552,1535,1.527,1536,1.527,1537,1.527,1538,3.287,1539,1.527,1540,1.527,1541,1.527,1542,1.527]],["title/coverage.html",[1543,4.181]],["body/coverage.html",[0,1.2,1,0.963,9,0.11,10,2.44,21,0.021,24,0.167,31,0.778,141,1.017,144,0.963,146,0.963,148,0.963,150,1.017,152,0.963,154,0.963,156,0.963,159,0.963,161,0.963,164,0.963,166,0.963,169,0.008,170,0.012,171,0.008,196,1.45,203,1.551,205,2.44,215,1.45,217,0.316,230,1.564,231,1.667,233,3.747,241,0.963,242,1.45,273,2.586,283,3.17,284,1.017,291,3.17,326,2.44,367,1.802,369,1.964,373,1.964,405,1.964,450,2.167,451,2.44,469,1.667,483,2.635,485,2.44,498,1.138,511,2.44,522,2.167,527,3.169,530,1.36,540,1.551,611,2.872,639,1.551,640,1.802,641,1.667,642,1.667,643,1.802,644,1.802,648,1.964,649,2.167,651,1.802,658,1.667,659,2.44,668,3.747,717,2.438,719,3.395,723,1.802,728,4.949,729,4.949,735,2.167,737,2.167,738,2.167,739,2.167,741,2.167,743,2.167,744,2.167,745,2.167,750,3.169,751,3.169,752,3.169,773,3.808,800,1.964,801,3.169,806,1.964,809,2.44,810,2.44,830,2.44,882,5.657,893,4.732,894,4.732,929,2.44,939,4.288,946,2.44,960,2.44,1027,2.44,1040,2.44,1047,3.747,1077,1.964,1078,2.167,1079,2.44,1089,2.44,1090,3.169,1104,2.44,1123,2.44,1142,2.44,1143,2.44,1177,2.44,1178,2.167,1179,2.44,1261,2.44,1266,2.44,1267,4.217,1277,2.167,1391,3.567,1431,2.44,1451,2.44,1462,3.747,1543,2.44,1544,2.853,1545,2.853,1546,2.853,1547,2.853,1548,2.853,1549,2.853,1550,5.426,1551,4.172,1552,7.239,1553,7.309,1554,4.172,1555,4.172,1556,2.44,1557,2.44,1558,2.44,1559,2.44,1560,2.44,1561,2.853,1562,2.853,1563,2.853,1564,2.853,1565,4.172,1566,4.172,1567,4.932,1568,4.932,1569,4.172,1570,2.44,1571,2.853,1572,2.853,1573,2.853,1574,2.853,1575,2.853,1576,2.853,1577,2.853,1578,5.426,1579,2.853,1580,2.853,1581,2.853,1582,2.853,1583,2.853,1584,2.853,1585,2.853,1586,2.853,1587,2.853,1588,2.853,1589,2.853,1590,2.853,1591,2.853,1592,2.853,1593,2.853,1594,2.853,1595,2.853,1596,2.853,1597,2.44,1598,2.44,1599,2.44,1600,2.44,1601,3.567,1602,2.44,1603,2.44,1604,2.853,1605,2.853]],["title/dependencies.html",[175,2.048,1606,2.972]],["body/dependencies.html",[21,0.021,22,0.635,169,0.013,170,0.016,171,0.013,175,2.214,187,2.526,189,2.214,192,1.267,194,2.361,248,3.159,275,2.083,286,2.935,287,4.197,343,5.851,346,3.199,347,3.973,396,4.182,397,3.53,399,3.53,401,2.935,402,3.973,403,3.973,435,4.97,436,4.001,441,3.973,442,3.973,444,3.53,841,3.199,1193,3.973,1217,3.973,1607,7.081,1608,4.647,1609,4.647,1610,5.812,1611,4.647,1612,6.646,1613,4.647,1614,4.647,1615,4.647,1616,4.647,1617,4.647,1618,4.647,1619,4.647,1620,4.647,1621,4.647,1622,4.647,1623,4.647,1624,4.647,1625,4.647,1626,4.647,1627,4.647,1628,4.647,1629,4.647,1630,5.812,1631,4.647,1632,4.647,1633,4.647,1634,4.647,1635,4.647]],["title/miscellaneous/functions.html",[1636,2.046,1637,3.675]],["body/miscellaneous/functions.html",[21,0.02,139,0.809,169,0.013,170,0.016,171,0.013,206,0.871,209,0.4,217,0.809,244,2.68,250,1.417,251,1.265,254,2.68,255,2.68,256,2.663,260,2.018,544,4.789,564,3.158,565,2.897,586,4.692,601,2.929,720,4.178,804,2.493,893,3.485,894,5.364,915,3.485,922,5.828,923,5.392,924,3.922,925,3.922,932,3.922,933,3.922,934,3.922,1206,3.485,1277,4.38,1556,4.93,1557,4.93,1558,5.392,1559,4.93,1560,4.93,1636,3.158,1637,3.922,1638,6.956,1639,4.587,1640,4.587,1641,4.587,1642,4.587]],["title/index.html",[209,0.311,1643,3.052]],["body/index.html",[1,1.98,2,1.57,21,0.021,133,1.132,141,2.09,144,2.301,146,1.98,148,1.98,150,2.09,152,1.98,154,1.98,156,1.98,159,1.98,160,1.073,161,1.98,164,1.98,166,1.98,169,0.011,170,0.015,171,0.011,172,1.404,173,4.298,174,1.764,175,1.876,176,2.14,177,2.14,178,2.14,179,2,180,3.366,181,3.366,182,2.839,183,2,190,1.876,204,1.876,231,3.424,232,1.876,241,1.98,242,2.978,426,4.821,427,3.366,428,3.366,429,3.366,430,3.366,431,3.702,432,4.716,484,2.99,516,4.941,517,3.366,518,3.366,540,3.186,637,3.366,638,3.366,639,3.186,640,3.702,641,3.424,642,3.424,643,3.702,644,3.943,718,2.299,887,4.298,888,3.366,889,3.366,1116,4.466,1454,4.941,1455,3.366,1456,3.366,1570,3.366,1643,3.366,1644,3.936,1645,3.936,1646,3.936,1647,3.936]],["title/modules.html",[174,2.191]],["body/modules.html",[21,0.018,169,0.015,170,0.018,171,0.015,173,3.742,174,2.436,353,4.648,426,3.742,431,3.433,432,3.433,436,4.986,516,3.742,887,3.742,1454,3.742,1648,7.242,1649,7.242,1650,7.312,1651,5.435]],["title/routes.html",[190,2.33]],["body/routes.html",[21,0.019,169,0.016,170,0.019,171,0.016,190,2.797]],["title/miscellaneous/variables.html",[1636,2.046,1652,3.675]],["body/miscellaneous/variables.html",[21,0.021,169,0.009,170,0.012,171,0.009,208,1.907,209,0.271,217,0.709,218,0.975,233,2.362,235,4.718,247,3.818,248,3.553,249,3.857,256,2.85,260,2.337,273,3.287,282,2.997,283,3.818,284,2.53,285,3.372,290,3.553,291,3.818,292,3.818,296,1.346,364,3.488,510,2.63,527,2.362,530,2.691,559,2.362,596,4.29,610,3.056,611,3.887,668,2.362,677,3.922,698,3.372,728,2.362,729,5.054,734,4.275,735,3.372,736,3.372,737,3.372,738,3.372,739,3.372,740,4.718,741,3.372,742,3.372,743,3.372,744,3.372,745,3.372,751,2.362,752,3.372,781,2.658,1047,2.362,1462,2.362,1597,2.658,1598,2.658,1599,2.658,1600,2.658,1601,2.658,1602,3.795,1603,3.795,1636,2.14,1652,2.658,1653,4.438,1654,3.108,1655,3.108,1656,3.108,1657,3.108,1658,3.108,1659,3.108,1660,6.536,1661,4.438,1662,4.438,1663,4.438,1664,4.438,1665,3.108,1666,3.108,1667,5.646,1668,3.108,1669,5.972,1670,4.438,1671,5.646,1672,4.438,1673,4.438,1674,4.438,1675,4.438,1676,4.438,1677,3.108,1678,3.108]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":939,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"coverage.html":{}}}],["0.8.29",{"_index":1635,"title":{},"body":{"dependencies.html":{}}}],["0.9.3",{"_index":1625,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1578,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1577,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1579,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1547,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":859,"title":{},"body":{"components/HomePage.html":{}}}],["1.0.0",{"_index":1626,"title":{},"body":{"dependencies.html":{}}}],["1.0.20",{"_index":1629,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1633,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1553,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":1571,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1566,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1564,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1569,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1568,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1562,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1341,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["10).subscribe((data",{"_index":1382,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["100",{"_index":882,"title":{},"body":{"components/HomePage.html":{},"components/LogoutComponent.html":{},"coverage.html":{}}}],["1000",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"injectables/LocalStorageService.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["100px",{"_index":1037,"title":{},"body":{"components/LogoutComponent.html":{}}}],["10px",{"_index":871,"title":{},"body":{"components/HomePage.html":{}}}],["11/11",{"_index":1551,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1561,"title":{},"body":{"coverage.html":{}}}],["12px",{"_index":868,"title":{},"body":{"components/HomePage.html":{}}}],["13",{"_index":1645,"title":{},"body":{"index.html":{}}}],["13/23",{"_index":1596,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1567,"title":{},"body":{"coverage.html":{}}}],["15px",{"_index":1426,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["19/31",{"_index":1592,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1646,"title":{},"body":{"index.html":{}}}],["2.0.6",{"_index":1618,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1628,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1575,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1391,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"coverage.html":{}}}],["20/29",{"_index":1589,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":928,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["24px",{"_index":1256,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["25",{"_index":1563,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":1647,"title":{},"body":{"index.html":{}}}],["2px",{"_index":863,"title":{},"body":{"components/HomePage.html":{},"components/ValidateVolunteerComponent.html":{}}}],["3/3",{"_index":1550,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1586,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1565,"title":{},"body":{"coverage.html":{}}}],["35px",{"_index":1429,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["4.0.3",{"_index":1624,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":1616,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1554,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1583,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":787,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["401",{"_index":786,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["40px",{"_index":1260,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["5",{"_index":1570,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["5.0.0",{"_index":1615,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":1623,"title":{},"body":{"dependencies.html":{}}}],["5.11.0",{"_index":1612,"title":{},"body":{"dependencies.html":{}}}],["5.9.0",{"_index":1610,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1576,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":1585,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1581,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":1549,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":1393,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["55",{"_index":1548,"title":{},"body":{"coverage.html":{}}}],["56",{"_index":1595,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":860,"title":{},"body":{"components/HomePage.html":{},"components/ValidateVolunteerComponent.html":{}}}],["6.4.0",{"_index":1620,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":1631,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1572,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":929,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["61",{"_index":1591,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1580,"title":{},"body":{"coverage.html":{}}}],["68",{"_index":1588,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1644,"title":{},"body":{"index.html":{}}}],["7.1.1",{"_index":1630,"title":{},"body":{"dependencies.html":{}}}],["7.2.2",{"_index":1607,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":1584,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1593,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1116,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"index.html":{}}}],["8.0.0",{"_index":1621,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1555,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":1574,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1582,"title":{},"body":{"coverage.html":{}}}],["80px",{"_index":870,"title":{},"body":{"components/HomePage.html":{}}}],["88",{"_index":1573,"title":{},"body":{"coverage.html":{}}}],["9/12",{"_index":1594,"title":{},"body":{"coverage.html":{}}}],["_credentials",{"_index":529,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["_design",{"_index":1507,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["_errors",{"_index":812,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["_global_",{"_index":796,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["_id",{"_index":211,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["about'},{'name",{"_index":140,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["about.page",{"_index":195,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["about.page.html",{"_index":19,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page.scss",{"_index":17,"title":{},"body":{"components/AboutPage.html":{}}}],["aboutpage",{"_index":1,"title":{"components/AboutPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["aboutpagemodule",{"_index":173,"title":{"modules/AboutPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"index.html":{},"modules.html":{}}}],["absolute",{"_index":1257,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["abstractcontrol",{"_index":1083,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["abstractcontrol.get('confirmpassword').seterrors({matchpassword",{"_index":1088,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["abstractcontrol.get('confirmpassword').value",{"_index":1087,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["abstractcontrol.get('password').value",{"_index":1085,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["accept",{"_index":1113,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["access",{"_index":499,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["accessors",{"_index":536,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["accesstoken",{"_index":537,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["acestei",{"_index":78,"title":{},"body":{"components/AboutPage.html":{}}}],["aceștia",{"_index":90,"title":{},"body":{"components/AboutPage.html":{}}}],["acreditat",{"_index":1408,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["acredited",{"_index":660,"title":{},"body":{"classes/Course.html":{},"injectables/CourseService.html":{},"injectables/VolunteerService.html":{}}}],["action",{"_index":844,"title":{},"body":{"components/HomePage.html":{}}}],["action.title",{"_index":854,"title":{},"body":{"components/HomePage.html":{}}}],["actions",{"_index":833,"title":{},"body":{"components/HomePage.html":{}}}],["activated",{"_index":1160,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["activatedroute",{"_index":1124,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["activatedroutesnapshot",{"_index":1158,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["actual_component",{"_index":168,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["adaug",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["add",{"_index":142,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{}}}],["added",{"_index":288,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["added_by",{"_index":1041,"title":{},"body":{"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["addimage",{"_index":1185,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["additional",{"_index":775,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["address",{"_index":1432,"title":{},"body":{"classes/Volunteer.html":{}}}],["adds",{"_index":753,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{}}}],["addvolunteercomponent",{"_index":141,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["administrare",{"_index":53,"title":{},"body":{"components/AboutPage.html":{}}}],["administrarea",{"_index":104,"title":{},"body":{"components/AboutPage.html":{}}}],["adres",{"_index":1022,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["ajutorul",{"_index":77,"title":{},"body":{"components/AboutPage.html":{}}}],["al",{"_index":72,"title":{},"body":{"components/AboutPage.html":{}}}],["align",{"_index":873,"title":{},"body":{"components/HomePage.html":{},"components/LogoutComponent.html":{}}}],["allocate",{"_index":1289,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["allocated",{"_index":262,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocates",{"_index":1476,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocateuser",{"_index":1273,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["allocateuser(volunteerid",{"_index":1284,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["allocatevolunteer",{"_index":1463,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocatevolunteer(allocationid",{"_index":1473,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocation",{"_index":203,"title":{"classes/Allocation.html":{}},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["allocation.city",{"_index":313,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.county",{"_index":312,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.created_at",{"_index":314,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.organisation",{"_index":316,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.rescue_officer",{"_index":309,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.volunteer",{"_index":306,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocationid",{"_index":1477,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocations",{"_index":235,"title":{},"body":{"injectables/AllocationService.html":{},"classes/DatabaseSyncService.html":{},"miscellaneous/variables.html":{}}}],["allocationservice",{"_index":231,"title":{"injectables/AllocationService.html":{}},"body":{"injectables/AllocationService.html":{},"modules/CoreModule.html":{},"components/ValidateVolunteerComponent.html":{},"coverage.html":{},"index.html":{}}}],["allowed",{"_index":501,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["allowing",{"_index":1144,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["aloc",{"_index":1413,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["aloca",{"_index":116,"title":{},"body":{"components/AboutPage.html":{}}}],["alocat",{"_index":1414,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["already",{"_index":1324,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["alt",{"_index":73,"title":{},"body":{"components/AboutPage.html":{}}}],["android",{"_index":841,"title":{},"body":{"components/HomePage.html":{},"components/LoginComponent.html":{},"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["angular",{"_index":492,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocationsService.html":{},"guards/UnauthenticatedGuard.html":{}}}],["angular/common",{"_index":187,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":608,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocationsService.html":{},"interceptors/RequestInterceptor.html":{}}}],["angular/core",{"_index":22,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":189,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1608,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":192,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["apeleaz",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["api.lxhost.ro",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api.lxhost.ro/api",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aplicația",{"_index":101,"title":{},"body":{"components/AboutPage.html":{}}}],["aplicație",{"_index":29,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["aplicației",{"_index":81,"title":{},"body":{"components/AboutPage.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["app.component",{"_index":439,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":144,"title":{"components/AppComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["application",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["application/json",{"_index":1114,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["appmodule",{"_index":426,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["apppage",{"_index":450,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["apppages",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["approutingmodule",{"_index":431,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["ar",{"_index":45,"title":{},"body":{"components/AboutPage.html":{}}}],["asemenea",{"_index":100,"title":{},"body":{"components/AboutPage.html":{}}}],["async",{"_index":965,"title":{},"body":{"components/LoginComponent.html":{}}}],["attachments",{"_index":1070,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["attributes",{"_index":808,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["auth",{"_index":479,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/logout",{"_index":378,"title":{},"body":{"components/AppComponent.html":{}}}],["authenticated",{"_index":488,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/UnauthenticatedGuard.html":{}}}],["authenticates",{"_index":592,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication",{"_index":278,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{}}}],["authentication'},{'name",{"_index":147,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["authentication.credentials",{"_index":582,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication.loginpayload",{"_index":556,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication.page",{"_index":521,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["authentication.page.html",{"_index":513,"title":{},"body":{"components/AuthenticationPage.html":{}}}],["authentication.page.scss",{"_index":512,"title":{},"body":{"components/AuthenticationPage.html":{}}}],["authentication.service",{"_index":506,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["authentication.user",{"_index":607,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication/authentication.service",{"_index":1110,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["authentication/unauthenticated.guard",{"_index":653,"title":{},"body":{"modules/CoreModule.html":{}}}],["authenticationguard",{"_index":196,"title":{"guards/AuthenticationGuard.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["authenticationpage",{"_index":146,"title":{"components/AuthenticationPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["authenticationpagemodule",{"_index":516,"title":{"modules/AuthenticationPageModule.html":{}},"body":{"modules/AuthenticationPageModule.html":{},"index.html":{},"modules.html":{}}}],["authenticationservice",{"_index":241,"title":{"injectables/AuthenticationService.html":{}},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{},"coverage.html":{},"index.html":{}}}],["authorization",{"_index":1117,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["automatically",{"_index":502,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["available",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"modules.html":{}}}],["avea",{"_index":46,"title":{},"body":{"components/AboutPage.html":{}}}],["await",{"_index":1009,"title":{},"body":{"components/LoginComponent.html":{}}}],["back",{"_index":839,"title":{},"body":{"components/HomePage.html":{},"components/LoginComponent.html":{}}}],["backend",{"_index":552,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["bank",{"_index":132,"title":{},"body":{"components/AboutPage.html":{}}}],["bar",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["bar/ngx",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["base64",{"_index":1195,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["base64image",{"_index":1183,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["basic",{"_index":528,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/LocalStorageService.html":{}}}],["baza",{"_index":113,"title":{},"body":{"components/AboutPage.html":{}}}],["bearer",{"_index":1118,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["being",{"_index":774,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["black",{"_index":865,"title":{},"body":{"components/HomePage.html":{}}}],["blocked",{"_index":840,"title":{},"body":{"components/HomePage.html":{},"components/LoginComponent.html":{}}}],["body",{"_index":560,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["body.user",{"_index":621,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["boolean",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/RouteReusableStrategy.html":{},"guards/UnauthenticatedGuard.html":{}}}],["bootstrap",{"_index":177,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["border",{"_index":1427,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["bottom",{"_index":1014,"title":{},"body":{"components/LoginComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["box",{"_index":857,"title":{},"body":{"components/HomePage.html":{},"components/ValidateVolunteerComponent.html":{}}}],["browse",{"_index":1650,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(destination",{"_index":461,"title":{},"body":{"classes/AppPage.html":{}}}],["browser.gettitle",{"_index":462,"title":{},"body":{"classes/AppPage.html":{}}}],["browsermodule",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["bun",{"_index":121,"title":{},"body":{"components/AboutPage.html":{}}}],["button",{"_index":1254,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["buttons",{"_index":1015,"title":{},"body":{"components/LoginComponent.html":{}}}],["c",{"_index":938,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["ca",{"_index":936,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["calamități",{"_index":42,"title":{},"body":{"components/AboutPage.html":{}}}],["call",{"_index":849,"title":{},"body":{"components/HomePage.html":{}}}],["camera",{"_index":1193,"title":{},"body":{"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["camera.destinationtype.data_url",{"_index":1229,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["camera.getpicture",{"_index":1227,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["canactivate",{"_index":200,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"modules/HomePageModule.html":{},"guards/UnauthenticatedGuard.html":{},"modules/VolunteerPageModule.html":{}}}],["cancel",{"_index":1019,"title":{},"body":{"components/LoginComponent.html":{}}}],["capitalize",{"_index":1425,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["care",{"_index":44,"title":{},"body":{"components/AboutPage.html":{}}}],["case",{"_index":838,"title":{},"body":{"components/HomePage.html":{},"components/LoginComponent.html":{}}}],["catcherror",{"_index":778,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["caut",{"_index":1401,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["caz",{"_index":107,"title":{},"body":{"components/AboutPage.html":{}}}],["cazul",{"_index":67,"title":{},"body":{"components/AboutPage.html":{}}}],["center",{"_index":874,"title":{},"body":{"components/HomePage.html":{},"components/LogoutComponent.html":{}}}],["change",{"_index":597,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ValidateVolunteerComponent.html":{}}}],["changed",{"_index":822,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["changes",{"_index":976,"title":{},"body":{"components/LoginComponent.html":{},"components/SendMessageComponent.html":{}}}],["changing",{"_index":1296,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["charset=utf",{"_index":1115,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["checkpemission",{"_index":1186,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["checks",{"_index":903,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/SendMessageComponent.html":{}}}],["cities",{"_index":949,"title":{},"body":{"injectables/LocationsService.html":{},"components/ValidateVolunteerComponent.html":{}}}],["city",{"_index":212,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["city.county",{"_index":1399,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["city.name",{"_index":1418,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["civil",{"_index":62,"title":{},"body":{"components/AboutPage.html":{}}}],["class",{"_index":24,"title":{"classes/Allocation.html":{},"classes/AppPage.html":{},"classes/Course.html":{},"classes/DatabaseSyncService.html":{},"classes/Organisation.html":{},"classes/PasswordValidation.html":{},"classes/RouteReusableStrategy.html":{},"classes/Volunteer.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["classes",{"_index":204,"title":{},"body":{"classes/Allocation.html":{},"classes/AppPage.html":{},"classes/Course.html":{},"classes/DatabaseSyncService.html":{},"classes/Organisation.html":{},"classes/PasswordValidation.html":{},"classes/RouteReusableStrategy.html":{},"classes/Volunteer.html":{},"index.html":{}}}],["clear",{"_index":813,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["clearall",{"_index":898,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["cleardata",{"_index":1556,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cleardata(type",{"_index":1639,"title":{},"body":{"miscellaneous/functions.html":{}}}],["clearitem",{"_index":899,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["clearitem(key",{"_index":909,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["clears",{"_index":564,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["click",{"_index":851,"title":{},"body":{"components/HomePage.html":{}}}],["closes",{"_index":1323,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["cluster_aboutpagemodule",{"_index":180,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_aboutpagemodule_declarations",{"_index":181,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_authenticationpagemodule",{"_index":517,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"index.html":{}}}],["cluster_authenticationpagemodule_declarations",{"_index":518,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"index.html":{}}}],["cluster_coremodule",{"_index":637,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_coremodule_providers",{"_index":638,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_homepagemodule",{"_index":888,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_declarations",{"_index":889,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_volunteerpagemodule",{"_index":1455,"title":{},"body":{"modules/VolunteerPageModule.html":{},"index.html":{}}}],["cluster_volunteerpagemodule_declarations",{"_index":1456,"title":{},"body":{"modules/VolunteerPageModule.html":{},"index.html":{}}}],["cnp",{"_index":1404,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["cod",{"_index":1023,"title":{},"body":{"components/LoginComponent.html":{}}}],["code",{"_index":127,"title":{},"body":{"components/AboutPage.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/VolunteerService.html":{}}}],["codification",{"_index":1196,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["colaborare",{"_index":98,"title":{},"body":{"components/AboutPage.html":{}}}],["color",{"_index":864,"title":{},"body":{"components/HomePage.html":{},"components/LogoutComponent.html":{}}}],["column",{"_index":855,"title":{},"body":{"components/HomePage.html":{},"components/LogoutComponent.html":{}}}],["columns",{"_index":877,"title":{},"body":{"components/HomePage.html":{}}}],["comments",{"_index":1433,"title":{},"body":{"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["commonmodule",{"_index":186,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["component",{"_index":0,"title":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["component_template",{"_index":138,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["componente",{"_index":79,"title":{},"body":{"components/AboutPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"index.html":{}}}],["confirm",{"_index":1141,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["confirmallocation",{"_index":1274,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["confirmallocation(volunteerid",{"_index":1287,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["confirmpassword",{"_index":1086,"title":{},"body":{"classes/PasswordValidation.html":{},"components/ResetPasswordComponent.html":{}}}],["console.error('request",{"_index":798,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["console.log(response",{"_index":1102,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["console.log(this._errors",{"_index":828,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["console.warn('unmatched",{"_index":424,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":198,"title":{},"body":{"modules/AboutPageModule.html":{},"injectables/AllocationService.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"components/AboutPage.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{}}}],["constructor(authenticationservice",{"_index":240,"title":{},"body":{"injectables/AllocationService.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{}}}],["constructor(courseservice",{"_index":1471,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["constructor(http",{"_index":952,"title":{},"body":{"injectables/LocationsService.html":{}}}],["constructor(httpclient",{"_index":538,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(platform",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":293,"title":{},"body":{"injectables/AllocationService.html":{},"components/HomePage.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["constructor(public",{"_index":1131,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["constructor(route",{"_index":1189,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["constructor(router",{"_index":490,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["constructor(volunteerservice",{"_index":1281,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["containing",{"_index":261,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"components/HomePage.html":{},"injectables/OrganisationService.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["contains",{"_index":263,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/LocationsService.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["content",{"_index":884,"title":{},"body":{"components/HomePage.html":{},"components/LogoutComponent.html":{},"interceptors/RequestInterceptor.html":{}}}],["context",{"_index":1602,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continuous",{"_index":298,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["controller",{"_index":977,"title":{},"body":{"components/LoginComponent.html":{}}}],["convert",{"_index":1197,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["cookie",{"_index":922,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["cookie's",{"_index":933,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["cordova",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["core",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"dependencies.html":{}}}],["core/authentication/authentication.guard",{"_index":197,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["core/authentication/unauthenticated.guard",{"_index":470,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["coremodule",{"_index":432,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"index.html":{},"modules.html":{}}}],["couchdb",{"_index":247,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["counties",{"_index":948,"title":{},"body":{"injectables/LocationsService.html":{},"components/ValidateVolunteerComponent.html":{}}}],["county",{"_index":213,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["county.name",{"_index":1416,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["countyselectionchanged",{"_index":1275,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["countyselectionchanged(event",{"_index":1291,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["course",{"_index":658,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"injectables/CourseService.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["course's",{"_index":680,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.acredited",{"_index":707,"title":{},"body":{"injectables/CourseService.html":{},"injectables/VolunteerService.html":{}}}],["course.name",{"_index":705,"title":{},"body":{"injectables/CourseService.html":{},"components/ValidateVolunteerComponent.html":{}}}],["course.obtained",{"_index":706,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.obtained).subscribe",{"_index":1523,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course.service",{"_index":1503,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course.volunteer_id",{"_index":704,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseid",{"_index":684,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursename",{"_index":690,"title":{},"body":{"injectables/CourseService.html":{},"injectables/VolunteerService.html":{}}}],["courses",{"_index":677,"title":{},"body":{"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["courseservice",{"_index":639,"title":{"injectables/CourseService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"index.html":{}}}],["coverage",{"_index":1543,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createallocation",{"_index":239,"title":{},"body":{"injectables/AllocationService.html":{}}}],["createallocation(volunteer",{"_index":252,"title":{},"body":{"injectables/AllocationService.html":{}}}],["createcookie",{"_index":1557,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createcookie(name",{"_index":925,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["createcourse",{"_index":669,"title":{},"body":{"injectables/CourseService.html":{}}}],["createcourse(name",{"_index":678,"title":{},"body":{"injectables/CourseService.html":{}}}],["created",{"_index":269,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["created_at",{"_index":214,"title":{},"body":{"classes/Allocation.html":{}}}],["createdat",{"_index":726,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["createform",{"_index":964,"title":{},"body":{"components/LoginComponent.html":{}}}],["createorganisation",{"_index":1048,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["createorganisation(name",{"_index":1055,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["creates",{"_index":254,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["createvolunteer",{"_index":1464,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["createvolunteer(name",{"_index":1479,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["creating",{"_index":1126,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["creation",{"_index":974,"title":{},"body":{"components/LoginComponent.html":{}}}],["credentials",{"_index":530,"title":{"interfaces/Credentials.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["credentialskey",{"_index":611,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cu",{"_index":76,"title":{},"body":{"components/AboutPage.html":{}}}],["curr",{"_index":1167,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["curr.routeconfig",{"_index":1175,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["current",{"_index":505,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["currently",{"_index":1346,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["currentuser",{"_index":1071,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["currentuser._id",{"_index":1073,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["custom",{"_index":905,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["către",{"_index":63,"title":{},"body":{"components/AboutPage.html":{}}}],["data",{"_index":586,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/RouteReusableStrategy.html":{},"components/ValidateVolunteerComponent.html":{},"miscellaneous/functions.html":{}}}],["data.docs",{"_index":1383,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["data:image/jpeg;base64",{"_index":1234,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["database",{"_index":249,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"components/LoginComponent.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["databasesyncservice",{"_index":651,"title":{"classes/DatabaseSyncService.html":{}},"body":{"modules/CoreModule.html":{},"classes/DatabaseSyncService.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["databaseurl",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":114,"title":{},"body":{"components/AboutPage.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["date.now",{"_index":827,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["date.settime(date.gettime",{"_index":927,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["date.togmtstring",{"_index":930,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["datepicker",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["days",{"_index":923,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["dd.mm.yyyy",{"_index":1412,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["de",{"_index":52,"title":{},"body":{"components/AboutPage.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["declarations",{"_index":176,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["declare",{"_index":721,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{}}}],["decoration",{"_index":875,"title":{},"body":{"components/HomePage.html":{}}}],["decorators",{"_index":386,"title":{},"body":{"components/AppComponent.html":{}}}],["deeplinks",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["deeplinks.route",{"_index":416,"title":{},"body":{"components/AppComponent.html":{}}}],["default",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":219,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["defining",{"_index":1488,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["definition",{"_index":1150,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["deja",{"_index":87,"title":{},"body":{"components/AboutPage.html":{}}}],["deletecoursebyid",{"_index":670,"title":{},"body":{"injectables/CourseService.html":{}}}],["deletecoursebyid(courseid",{"_index":681,"title":{},"body":{"injectables/CourseService.html":{}}}],["deleteorganisationbyid",{"_index":1049,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["deleteorganisationbyid(organisationid",{"_index":1058,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["deletes",{"_index":683,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["deletevolunteerbyid",{"_index":1465,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["deletevolunteerbyid(volunteerid",{"_index":1483,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["delogare",{"_index":377,"title":{},"body":{"components/AppComponent.html":{}}}],["departamentul",{"_index":64,"title":{},"body":{"components/AboutPage.html":{}}}],["dependencies",{"_index":175,"title":{"dependencies.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{},"index.html":{}}}],["depending",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["description",{"_index":206,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["despre",{"_index":28,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["destination",{"_index":459,"title":{},"body":{"classes/AppPage.html":{}}}],["destinationtype",{"_index":1228,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["detached",{"_index":1173,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["detachedroutehandle",{"_index":1161,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["detachedtree",{"_index":1171,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["details",{"_index":1322,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["detected",{"_index":1297,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["determine",{"_index":1387,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["determines",{"_index":497,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/UnauthenticatedGuard.html":{}}}],["dev",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["developement",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dezastru",{"_index":74,"title":{},"body":{"components/AboutPage.html":{}}}],["dezvoltat",{"_index":126,"title":{},"body":{"components/AboutPage.html":{}}}],["din",{"_index":96,"title":{},"body":{"components/AboutPage.html":{}}}],["direction",{"_index":1039,"title":{},"body":{"components/LogoutComponent.html":{}}}],["directive",{"_index":136,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["directives",{"_index":167,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["disable",{"_index":1388,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["display",{"_index":879,"title":{},"body":{"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["displayed",{"_index":850,"title":{},"body":{"components/HomePage.html":{}}}],["dispoziție",{"_index":60,"title":{},"body":{"components/AboutPage.html":{}}}],["doc",{"_index":710,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["doc.acredited",{"_index":712,"title":{},"body":{"injectables/CourseService.html":{}}}],["doc.allocation",{"_index":1542,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.city",{"_index":1528,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.comments",{"_index":1530,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.county",{"_index":1527,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.job",{"_index":1532,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.name",{"_index":711,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["doc.obtained",{"_index":713,"title":{},"body":{"injectables/CourseService.html":{}}}],["doc.organisation",{"_index":1529,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.phone",{"_index":1526,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.ssn",{"_index":1525,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.updated",{"_index":1533,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["document",{"_index":932,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["document.addeventlistener(\"backbutton",{"_index":1007,"title":{},"body":{"components/LoginComponent.html":{}}}],["document.addeventlistener(\"backbutton\",function(e",{"_index":853,"title":{},"body":{"components/HomePage.html":{}}}],["document.cookie",{"_index":931,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["document.cookie.split",{"_index":937,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["documentation",{"_index":1544,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["dorefresh",{"_index":1276,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["dorefresh(event",{"_index":1298,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["down",{"_index":1316,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["dsu",{"_index":99,"title":{},"body":{"components/AboutPage.html":{}}}],["dup",{"_index":1402,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["dynamic",{"_index":1609,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1008,"title":{},"body":{"components/LoginComponent.html":{}}}],["e2e/src/app.po.ts",{"_index":451,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:12",{"_index":455,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":458,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":456,"title":{},"body":{"classes/AppPage.html":{}}}],["eforturile",{"_index":124,"title":{},"body":{"components/AboutPage.html":{}}}],["element",{"_index":135,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["element(by.tagname('app",{"_index":463,"title":{},"body":{"classes/AppPage.html":{}}}],["elemmatch",{"_index":1541,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["email",{"_index":571,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/RecoverPasswordComponent.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{}}}],["emits",{"_index":594,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["emitts",{"_index":821,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["empty",{"_index":1330,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["end",{"_index":1017,"title":{},"body":{"components/LoginComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["endkey",{"_index":1506,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["entry",{"_index":255,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["entrycomponents",{"_index":446,"title":{},"body":{"modules/AppModule.html":{}}}],["env",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":273,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":797,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["environment.serverurl",{"_index":1106,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["environments/environment",{"_index":274,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/VolunteerService.html":{}}}],["eq",{"_index":702,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["err",{"_index":1236,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["error",{"_index":754,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"interfaces/RootObject.html":{}}}],["errorhandler",{"_index":756,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorhandler(response",{"_index":763,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorhandlerinterceptor",{"_index":640,"title":{"interceptors/ErrorHandlerInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["errormessageobject",{"_index":800,"title":{"interfaces/ErrorMessageObject.html":{}},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["errormessageservice",{"_index":641,"title":{"injectables/ErrorMessageService.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"coverage.html":{},"index.html":{}}}],["errormodel",{"_index":805,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["errormodel.errormessageobject",{"_index":818,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["errorresponse",{"_index":788,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error",{"_index":789,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.error",{"_index":795,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.validation",{"_index":790,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.validation.errors[key",{"_index":793,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.validation.keys.foreach((key",{"_index":791,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errors",{"_index":766,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{}}}],["este",{"_index":33,"title":{},"body":{"components/AboutPage.html":{}}}],["event",{"_index":767,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/ValidateVolunteerComponent.html":{}}}],["event.target",{"_index":1376,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["event.target.complete",{"_index":1385,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["event.target.disabled",{"_index":1392,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["event.target.value",{"_index":1378,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["eventemitter",{"_index":593,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["events",{"_index":595,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["eventualitatea",{"_index":40,"title":{},"body":{"components/AboutPage.html":{}}}],["existenți",{"_index":88,"title":{},"body":{"components/AboutPage.html":{}}}],["existing",{"_index":908,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["expiration",{"_index":924,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["expires",{"_index":926,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["explicit",{"_index":1145,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["export",{"_index":23,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["exports",{"_index":179,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["extends",{"_index":1151,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["extra",{"_index":1109,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["false",{"_index":510,"title":{},"body":{"guards/AuthenticationGuard.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"miscellaneous/variables.html":{}}}],["fields",{"_index":301,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["files",{"_index":956,"title":{},"body":{"injectables/LocationsService.html":{}}}],["filter",{"_index":1466,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["filter(county",{"_index":1485,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["filtered",{"_index":1308,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["filters",{"_index":1487,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["finalize",{"_index":991,"title":{},"body":{"components/LoginComponent.html":{}}}],["find",{"_index":286,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["find/lib/index",{"_index":272,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["finds",{"_index":687,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["flex",{"_index":880,"title":{},"body":{"components/HomePage.html":{},"components/LogoutComponent.html":{}}}],["foarte",{"_index":109,"title":{},"body":{"components/AboutPage.html":{}}}],["following",{"_index":264,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["font",{"_index":866,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["form",{"_index":973,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["form's",{"_index":1293,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["formbuilder",{"_index":968,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["formcontrol",{"_index":1097,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["formgroup",{"_index":989,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["forms",{"_index":1128,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["formsmodule",{"_index":188,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["fotografie",{"_index":1247,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["found",{"_index":543,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["from(localdb.alldocs",{"_index":699,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["from(localdb.find",{"_index":701,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["from(localdb.post(allocation",{"_index":321,"title":{},"body":{"injectables/AllocationService.html":{}}}],["from(localdb.post(course",{"_index":708,"title":{},"body":{"injectables/CourseService.html":{}}}],["from(localdb.post(organisation",{"_index":1074,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["from(localdb.post(volunteer",{"_index":1520,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["full",{"_index":474,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SendMessageComponent.html":{}}}],["function",{"_index":773,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/ValidateVolunteerComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1637,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["future",{"_index":1169,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["future.data.reuse",{"_index":1176,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["future.routeconfig",{"_index":1174,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["generated",{"_index":817,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["get('/logout",{"_index":623,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["get('/profile",{"_index":632,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getaccesstoken",{"_index":603,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getcitylist",{"_index":950,"title":{},"body":{"injectables/LocationsService.html":{},"components/ValidateVolunteerComponent.html":{}}}],["getcitylist(county",{"_index":1303,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["getcountylist",{"_index":951,"title":{},"body":{"injectables/LocationsService.html":{},"components/ValidateVolunteerComponent.html":{}}}],["getcoursebyid",{"_index":671,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyid(courseid",{"_index":685,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyname",{"_index":672,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyname(coursename",{"_index":688,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyvolunteerid",{"_index":673,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyvolunteerid(volunteerid",{"_index":691,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourses",{"_index":674,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcredentials",{"_index":599,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getdata",{"_index":1277,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getdata(type",{"_index":1640,"title":{},"body":{"miscellaneous/functions.html":{}}}],["geterrors",{"_index":823,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["getitem",{"_index":900,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getitem(key",{"_index":913,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getorganisationbyid",{"_index":1050,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisationbyid(organisationid",{"_index":1061,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisationbyname",{"_index":1051,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisationbyname(organisationname",{"_index":1063,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisations",{"_index":1052,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getpageonetitletext",{"_index":452,"title":{},"body":{"classes/AppPage.html":{}}}],["gets",{"_index":1210,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["getsessionname",{"_index":1558,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getter",{"_index":601,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["gettitle",{"_index":453,"title":{},"body":{"classes/AppPage.html":{}}}],["getuser",{"_index":605,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getuserprofile",{"_index":531,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getvolunteerbyid",{"_index":1467,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteerbyid(volunteerid",{"_index":1491,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteerbyssn",{"_index":1468,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteerbyssn(ssn",{"_index":1493,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteers",{"_index":1469,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteers(page",{"_index":1495,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["given",{"_index":1149,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"injectables/VolunteerService.html":{}}}],["granted",{"_index":1200,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["graph",{"_index":1651,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":483,"title":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{},"coverage.html":{}}}],["guards",{"_index":484,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{},"index.html":{}}}],["h",{"_index":1251,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["h:not(.item",{"_index":1420,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["handle",{"_index":906,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["handle(request",{"_index":782,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler",{"_index":755,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{}}}],["handler.interceptor.ts",{"_index":752,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["handler.interceptor.ts:25",{"_index":758,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler.interceptor.ts:45",{"_index":771,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler.interceptor.ts:59",{"_index":765,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handles",{"_index":493,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["handling",{"_index":761,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["height",{"_index":881,"title":{},"body":{"components/HomePage.html":{},"components/LogoutComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["hidden",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["home",{"_index":472,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["home')).element(by.deepcss('ion",{"_index":464,"title":{},"body":{"classes/AppPage.html":{}}}],["home'},{'name",{"_index":149,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["home.page",{"_index":891,"title":{},"body":{"modules/HomePageModule.html":{}}}],["home.page.html",{"_index":832,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":831,"title":{},"body":{"components/HomePage.html":{}}}],["homepage",{"_index":148,"title":{"components/HomePage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["homepagemodule",{"_index":887,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"index.html":{},"modules.html":{}}}],["html",{"_index":134,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["http",{"_index":546,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocationsService.html":{}}}],["http://rvm.lxhost.ro:5984",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":646,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpclient",{"_index":539,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/LocationsService.html":{}}}],["httpclientmodule",{"_index":647,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpevent",{"_index":776,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httphandler",{"_index":770,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httpinterceptor",{"_index":777,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httprequest",{"_index":769,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httpresponse",{"_index":764,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["https://github.com/angular/angular/issues/18374",{"_index":1148,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["https://rvm",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":1255,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["id",{"_index":228,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"injectables/OrganisationService.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["identific",{"_index":94,"title":{},"body":{"components/AboutPage.html":{}}}],["identifier",{"_index":1545,"title":{},"body":{"coverage.html":{}}}],["identifies",{"_index":781,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"miscellaneous/variables.html":{}}}],["identitatea",{"_index":85,"title":{},"body":{"components/AboutPage.html":{}}}],["if(!request.url.includes('assets",{"_index":1120,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["if(county",{"_index":1537,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["if(course",{"_index":1521,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["if(coursename",{"_index":1540,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["if(data.docs.length",{"_index":1384,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["if(event",{"_index":1375,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["if(organisation",{"_index":315,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["if(organisationid",{"_index":1539,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["if(response.docs",{"_index":1373,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["if(this.page",{"_index":1354,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["if(this.platform.is('cordova",{"_index":409,"title":{},"body":{"components/AppComponent.html":{}}}],["if(this.sms.haspermission",{"_index":1242,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["if(this.volunteeridwithdetails",{"_index":1361,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["if(url.includes('tel",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["ig",{"_index":1510,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["ignore",{"_index":25,"title":{},"body":{"components/AboutPage.html":{},"classes/DatabaseSyncService.html":{},"injectables/ErrorMessageService.html":{},"components/VolunteerPage.html":{}}}],["image",{"_index":1192,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["imagedata",{"_index":1235,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AboutPage.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["implicate",{"_index":123,"title":{},"body":{"components/AboutPage.html":{}}}],["import",{"_index":20,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["imports",{"_index":201,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["include_docs",{"_index":700,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["incorecte",{"_index":1012,"title":{},"body":{"components/LoginComponent.html":{}}}],["incorrect",{"_index":984,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":209,"title":{"index.html":{}},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":1389,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["information",{"_index":565,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"interceptors/RequestInterceptor.html":{},"miscellaneous/functions.html":{}}}],["informations",{"_index":1317,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["informații",{"_index":1011,"title":{},"body":{"components/LoginComponent.html":{}}}],["initialisation",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["initializeapp",{"_index":333,"title":{},"body":{"components/AppComponent.html":{}}}],["initializes",{"_index":542,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["injectable",{"_index":230,"title":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}},"body":{"injectables/AllocationService.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["injectables",{"_index":232,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"index.html":{}}}],["injected",{"_index":759,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocationsService.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{}}}],["injection",{"_index":545,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["input",{"_index":1332,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["inserted",{"_index":1214,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["inside",{"_index":921,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["instrument",{"_index":51,"title":{},"body":{"components/AboutPage.html":{}}}],["intent",{"_index":1238,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["intercept",{"_index":757,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["intercept(request",{"_index":768,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["interceptor",{"_index":750,"title":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":656,"title":{},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["intercepts",{"_index":772,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["interface",{"_index":717,"title":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{}},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":718,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{},"index.html":{}}}],["intervenție",{"_index":118,"title":{},"body":{"components/AboutPage.html":{}}}],["ion",{"_index":885,"title":{},"body":{"components/HomePage.html":{},"components/LogoutComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["ionic",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["ionic/angular",{"_index":194,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["ionic/lab",{"_index":1617,"title":{},"body":{"dependencies.html":{}}}],["ionicmodule",{"_index":193,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["ionicmodule.forroot",{"_index":447,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":438,"title":{},"body":{"modules/AppModule.html":{}}}],["ionrouteroutlet",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["ionviewdidenter",{"_index":834,"title":{},"body":{"components/HomePage.html":{},"components/LoginComponent.html":{}}}],["ios",{"_index":1622,"title":{},"body":{"dependencies.html":{}}}],["isauthenticated",{"_index":532,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isn't",{"_index":500,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{}}}],["it's",{"_index":265,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["item",{"_index":912,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["item's",{"_index":918,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["item.sc",{"_index":1419,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["item:not(.item",{"_index":1422,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["items",{"_index":878,"title":{},"body":{"components/HomePage.html":{},"components/LogoutComponent.html":{}}}],["itself",{"_index":919,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["job",{"_index":1434,"title":{},"body":{"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["js",{"_index":1627,"title":{},"body":{"dependencies.html":{}}}],["json.parse(savedcredentials",{"_index":615,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(credentials",{"_index":628,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["jude",{"_index":1415,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["justify",{"_index":883,"title":{},"body":{"components/HomePage.html":{},"components/LogoutComponent.html":{}}}],["key",{"_index":610,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["keyword",{"_index":1270,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["l",{"_index":115,"title":{},"body":{"components/AboutPage.html":{}}}],["la",{"_index":59,"title":{},"body":{"components/AboutPage.html":{}}}],["label",{"_index":1421,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["last",{"_index":1478,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["le",{"_index":57,"title":{},"body":{"components/AboutPage.html":{}}}],["left",{"_index":1258,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["legend",{"_index":133,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["lifecycle",{"_index":837,"title":{},"body":{"components/HomePage.html":{},"components/LoginComponent.html":{},"classes/RouteReusableStrategy.html":{}}}],["limit",{"_index":1271,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["link",{"_index":574,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["list",{"_index":151,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["listvolunteercomponent",{"_index":150,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["literal",{"_index":224,"title":{},"body":{"classes/Allocation.html":{},"classes/Volunteer.html":{}}}],["live",{"_index":295,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["loadchildren",{"_index":475,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaddata",{"_index":1278,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["loaddata(event",{"_index":1310,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["loaded",{"_index":1318,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["loads",{"_index":1312,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["loc",{"_index":47,"title":{},"body":{"components/AboutPage.html":{}}}],["local",{"_index":256,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["localallocationsdb",{"_index":744,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localallocationsdb.sync(remoteallocationsdb",{"_index":749,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localcoursesdb",{"_index":738,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localcoursesdb.sync(remotecoursesdb",{"_index":747,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localdb",{"_index":283,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localdb.createindex",{"_index":300,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localdb.get(course._id).then(function",{"_index":709,"title":{},"body":{"injectables/CourseService.html":{}}}],["localdb.get(courseid).then(doc",{"_index":715,"title":{},"body":{"injectables/CourseService.html":{}}}],["localdb.get(organisation._id).then(function",{"_index":1075,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["localdb.get(organisationid).then(function",{"_index":1076,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["localdb.get(volunteer._id).then(function",{"_index":1524,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["localdb.get(volunteerid).then(function",{"_index":1534,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["localdb.put(doc",{"_index":714,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localdb.remove(doc",{"_index":716,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localdb.sync(remotedb",{"_index":299,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localitate",{"_index":1417,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["localorganisationsdb",{"_index":741,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localorganisationsdb.sync(remoteorganisationsdb",{"_index":748,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localstorage",{"_index":896,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":540,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{},"index.html":{}}}],["localvolunteersdb",{"_index":735,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localvolunteersdb.sync(remotevolunteersdb",{"_index":746,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["location",{"_index":969,"title":{},"body":{"components/LoginComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["locations",{"_index":947,"title":{},"body":{"injectables/LocationsService.html":{},"components/ValidateVolunteerComponent.html":{}}}],["locationsservice",{"_index":642,"title":{"injectables/LocationsService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/LocationsService.html":{},"components/ValidateVolunteerComponent.html":{},"coverage.html":{},"index.html":{}}}],["log",{"_index":589,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logic",{"_index":1386,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["login",{"_index":504,"title":{},"body":{"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{}}}],["login'},{'name",{"_index":153,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["login(payload",{"_index":555,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login(this.loginform.value",{"_index":1000,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":962,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":961,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":523,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["login/logout",{"_index":598,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logincomponent",{"_index":152,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["loginform",{"_index":963,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginpayload",{"_index":723,"title":{"interfaces/LoginPayload.html":{}},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["logout",{"_index":526,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"components/LogoutComponent.html":{}}}],["logout'},{'name",{"_index":155,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["logout.component.html",{"_index":1029,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout.component.scss",{"_index":1028,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout/logout.component",{"_index":524,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["logoutcomponent",{"_index":154,"title":{"components/LogoutComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["mai",{"_index":120,"title":{},"body":{"components/AboutPage.html":{}}}],["major",{"_index":70,"title":{},"body":{"components/AboutPage.html":{}}}],["majore",{"_index":43,"title":{},"body":{"components/AboutPage.html":{}}}],["management",{"_index":32,"title":{},"body":{"components/AboutPage.html":{}}}],["map",{"_index":276,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/VolunteerService.html":{}}}],["map((body",{"_index":618,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["map((response",{"_index":323,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/VolunteerService.html":{}}}],["margin",{"_index":1252,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["match.$args.token",{"_index":421,"title":{},"body":{"components/AppComponent.html":{}}}],["matches",{"_index":1331,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["matching",{"_index":170,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchpassword",{"_index":1081,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["matchpassword(abstractcontrol",{"_index":1082,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["md",{"_index":1250,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["mean",{"_index":846,"title":{},"body":{"components/HomePage.html":{}}}],["menit",{"_index":35,"title":{},"body":{"components/AboutPage.html":{}}}],["menu",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/ValidateVolunteerComponent.html":{}}}],["mesaj",{"_index":1244,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["mesajul",{"_index":1245,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message",{"_index":802,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{}}}],["message'},{'name",{"_index":163,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["message.component",{"_index":1460,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["message.component.html",{"_index":1182,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.scss",{"_index":1181,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts",{"_index":1179,"title":{},"body":{"components/SendMessageComponent.html":{},"coverage.html":{}}}],["message.component.ts:18",{"_index":1212,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:23",{"_index":1216,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:24",{"_index":1215,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:29",{"_index":1209,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:34",{"_index":1190,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:48",{"_index":1205,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:60",{"_index":1201,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:67",{"_index":1191,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:81",{"_index":1208,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:94",{"_index":1198,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.service",{"_index":780,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["message.service.ts",{"_index":810,"title":{},"body":{"injectables/ErrorMessageService.html":{},"coverage.html":{}}}],["message.service.ts:11",{"_index":819,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:16",{"_index":820,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:27",{"_index":824,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:37",{"_index":816,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:51",{"_index":814,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message/send",{"_index":1178,"title":{},"body":{"components/SendMessageComponent.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["messages",{"_index":811,"title":{},"body":{"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"components/SendMessageComponent.html":{}}}],["messagging",{"_index":762,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["method",{"_index":602,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"injectables/OrganisationService.html":{},"classes/RouteReusableStrategy.html":{},"injectables/VolunteerService.html":{}}}],["methods",{"_index":238,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["miscellaneous",{"_index":1636,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":80,"title":{},"body":{"components/AboutPage.html":{}}}],["mobilizați",{"_index":83,"title":{},"body":{"components/AboutPage.html":{}}}],["model",{"_index":207,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["model/allocation.model",{"_index":280,"title":{},"body":{"injectables/AllocationService.html":{}}}],["model/course.model",{"_index":697,"title":{},"body":{"injectables/CourseService.html":{}}}],["model/organisation.model",{"_index":1069,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["model/volunteer.model",{"_index":281,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["models",{"_index":657,"title":{},"body":{"modules/CoreModule.html":{}}}],["module",{"_index":172,"title":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["modules",{"_index":174,"title":{"modules.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{},"modules.html":{}}}],["more",{"_index":1313,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["moz",{"_index":862,"title":{},"body":{"components/HomePage.html":{}}}],["multi",{"_index":654,"title":{},"body":{"modules/CoreModule.html":{}}}],["n",{"_index":39,"title":{},"body":{"components/AboutPage.html":{},"components/ValidateVolunteerComponent.html":{}}}],["name",{"_index":139,"title":{},"body":{"components/AboutPage.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["name,ssn",{"_index":1500,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["nameeq",{"_index":935,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["namespace",{"_index":722,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{}}}],["native/camera",{"_index":1217,"title":{},"body":{"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["native/core",{"_index":1611,"title":{},"body":{"dependencies.html":{}}}],["native/date",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/deeplinks",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["native/sms",{"_index":1614,"title":{},"body":{"dependencies.html":{}}}],["native/sms/ngx",{"_index":445,"title":{},"body":{"modules/AppModule.html":{},"components/SendMessageComponent.html":{}}}],["native/splash",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/status",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["natural",{"_index":75,"title":{},"body":{"components/AboutPage.html":{}}}],["nav",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["navcontroller",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["navigateto",{"_index":454,"title":{},"body":{"classes/AppPage.html":{}}}],["navigateto(destination",{"_index":457,"title":{},"body":{"classes/AppPage.html":{}}}],["navigation",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["neafiliat",{"_index":1407,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["needs",{"_index":1206,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"miscellaneous/functions.html":{}}}],["never",{"_index":591,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["new",{"_index":284,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["next.handle(request",{"_index":1122,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["ngafterviewinit",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["ngmodule",{"_index":185,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["ngondestroy",{"_index":1187,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["ngoninit",{"_index":27,"title":{},"body":{"components/AboutPage.html":{},"components/AuthenticationPage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["nomatch",{"_index":423,"title":{},"body":{"components/AppComponent.html":{}}}],["nothing",{"_index":588,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["nou",{"_index":112,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{}}}],["nregistra",{"_index":108,"title":{},"body":{"components/AboutPage.html":{}}}],["nregistrat",{"_index":1410,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["null",{"_index":266,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"classes/PasswordValidation.html":{},"classes/RouteReusableStrategy.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["number",{"_index":804,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"injectables/LocalStorageService.html":{},"interfaces/RootObject.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["nume",{"_index":1403,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["o",{"_index":34,"title":{},"body":{"components/AboutPage.html":{},"components/SendMessageComponent.html":{}}}],["object",{"_index":208,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":268,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocationsService.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/VolunteerService.html":{}}}],["obtained",{"_index":661,"title":{},"body":{"classes/Course.html":{},"injectables/CourseService.html":{},"classes/Organisation.html":{},"injectables/VolunteerService.html":{}}}],["ofer",{"_index":91,"title":{},"body":{"components/AboutPage.html":{}}}],["ofere",{"_index":37,"title":{},"body":{"components/AboutPage.html":{}}}],["ondestroy",{"_index":1180,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["one",{"_index":572,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["ones",{"_index":1326,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AboutPage.html":{},"components/AuthenticationPage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["open",{"_index":1347,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["opened",{"_index":1325,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["opening",{"_index":847,"title":{},"body":{"components/HomePage.html":{}}}],["openmenu",{"_index":1279,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["openmenu(volunteerid",{"_index":1320,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["opens",{"_index":1286,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["operation",{"_index":975,"title":{},"body":{"components/LoginComponent.html":{}}}],["operations",{"_index":237,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["optional",{"_index":251,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":246,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"components/SendMessageComponent.html":{},"injectables/VolunteerService.html":{}}}],["organisation",{"_index":215,"title":{"classes/Organisation.html":{}},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["organisation's",{"_index":1057,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation._id",{"_index":1519,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["organisation.added_by",{"_index":1072,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.id",{"_index":317,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["organisation.name",{"_index":318,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["organisation.name','course.[].name",{"_index":1504,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["organisation.website",{"_index":319,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["organisationid",{"_index":1060,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["organisationname",{"_index":1065,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisations",{"_index":740,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"miscellaneous/variables.html":{}}}],["organisationservice",{"_index":643,"title":{"injectables/OrganisationService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/OrganisationService.html":{},"coverage.html":{},"index.html":{}}}],["organizație",{"_index":1405,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["otherwise",{"_index":1333,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["out",{"_index":183,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["outlet",{"_index":389,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":1643,"title":{"index.html":{}},"body":{"index.html":{}}}],["p.title",{"_index":425,"title":{},"body":{"components/AppComponent.html":{}}}],["package",{"_index":1606,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":869,"title":{},"body":{"components/HomePage.html":{},"components/ValidateVolunteerComponent.html":{}}}],["page",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["page:number",{"_index":1535,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["pages",{"_index":382,"title":{},"body":{"components/AppComponent.html":{}}}],["pages/about/about.module#aboutpagemodule",{"_index":477,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/authentication/authentication.module#authenticationpagemodule",{"_index":480,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/authentication/reset",{"_index":404,"title":{},"body":{"components/AppComponent.html":{}}}],["pages/home/home.module#homepagemodule",{"_index":476,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/volunteer/volunteer.module#volunteerpagemodule",{"_index":478,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paginate",{"_index":1490,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["paginated",{"_index":1314,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["pagination",{"_index":1344,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["param",{"_index":304,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["parameters",{"_index":250,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1133,"title":{},"body":{"components/ResetPasswordComponent.html":{},"injectables/VolunteerService.html":{}}}],["params['id",{"_index":1222,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["params['token",{"_index":1135,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["parol",{"_index":1140,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["parola",{"_index":1026,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["parte",{"_index":95,"title":{},"body":{"components/AboutPage.html":{}}}],["parteneriat",{"_index":129,"title":{},"body":{"components/AboutPage.html":{}}}],["passowrd",{"_index":635,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["password",{"_index":569,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/User.html":{}}}],["password'},{'name",{"_index":158,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["password.component",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticationPageModule.html":{}}}],["password.component.html",{"_index":1092,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":1091,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":1090,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:16",{"_index":1094,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":1125,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:30",{"_index":1095,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:31",{"_index":1130,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:39",{"_index":1096,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:57",{"_index":1129,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/recover",{"_index":522,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticationPageModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password_confirm",{"_index":636,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["passwordvalidation",{"_index":1077,"title":{"classes/PasswordValidation.html":{}},"body":{"classes/PasswordValidation.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordvalidation.matchpassword",{"_index":1137,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["path",{"_index":199,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"modules/VolunteerPageModule.html":{}}}],["pathmatch",{"_index":473,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":1508,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["payload",{"_index":561,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["payload).pipe",{"_index":617,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["pe",{"_index":56,"title":{},"body":{"components/AboutPage.html":{}}}],["pentru",{"_index":119,"title":{},"body":{"components/AboutPage.html":{},"components/ValidateVolunteerComponent.html":{}}}],["per",{"_index":1342,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["performaction",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["performaction(url",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["performed",{"_index":587,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomePage.html":{}}}],["performes",{"_index":843,"title":{},"body":{"components/HomePage.html":{}}}],["permission",{"_index":1199,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["permite",{"_index":103,"title":{},"body":{"components/AboutPage.html":{}}}],["persoanelor",{"_index":122,"title":{},"body":{"components/AboutPage.html":{}}}],["phone",{"_index":725,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["phone's",{"_index":848,"title":{},"body":{"components/HomePage.html":{}}}],["picker",{"_index":1613,"title":{},"body":{"dependencies.html":{}}}],["picker/ngx",{"_index":443,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe",{"_index":322,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"injectables/VolunteerService.html":{}}}],["pipe(catcherror(error",{"_index":783,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["platform",{"_index":89,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["platforms",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["plugin",{"_index":287,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["position",{"_index":1013,"title":{},"body":{"components/LoginComponent.html":{},"components/SendMessageComponent.html":{}}}],["pouchdb",{"_index":248,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('allocations",{"_index":285,"title":{},"body":{"injectables/AllocationService.html":{},"classes/DatabaseSyncService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('courses",{"_index":698,"title":{},"body":{"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('organisations",{"_index":742,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('volunteers",{"_index":736,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb(environment.databaseurl",{"_index":292,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb.plugin(pouchdbfind",{"_index":289,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["pouchdb/dist/pouchdb",{"_index":270,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["pouchdbfind",{"_index":271,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["prefixes",{"_index":1105,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["preloadallmodules",{"_index":468,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":482,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["presents",{"_index":983,"title":{},"body":{"components/LoginComponent.html":{}}}],["presenttoastwithoptions",{"_index":966,"title":{},"body":{"components/LoginComponent.html":{}}}],["private",{"_index":294,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{}}}],["prod",{"_index":1678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":553,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["properties",{"_index":210,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["protecting",{"_index":487,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["protocolul",{"_index":97,"title":{},"body":{"components/AboutPage.html":{}}}],["protractor",{"_index":460,"title":{},"body":{"classes/AppPage.html":{}}}],["prove",{"_index":579,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["provide",{"_index":448,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["provider",{"_index":234,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["providers",{"_index":178,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["provides",{"_index":486,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/UnauthenticatedGuard.html":{}}}],["public",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{}}}],["pune",{"_index":58,"title":{},"body":{"components/AboutPage.html":{}}}],["puteți",{"_index":82,"title":{},"body":{"components/AboutPage.html":{}}}],["radius",{"_index":1428,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["reactive",{"_index":972,"title":{},"body":{"components/LoginComponent.html":{}}}],["reactiveformsmodule",{"_index":520,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["readcookie",{"_index":1559,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readcookie(name",{"_index":934,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["ready",{"_index":1100,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["receive",{"_index":573,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SendMessageComponent.html":{}}}],["recover",{"_index":157,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["recoverpassword",{"_index":533,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["recoverpassword(email",{"_index":567,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["recoverpasswordcomponent",{"_index":156,"title":{"components/RecoverPasswordComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["recovery",{"_index":570,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["rective",{"_index":1127,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["redirected",{"_index":988,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["redirects",{"_index":503,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["redirectto",{"_index":471,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":282,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/LocationsService.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["referes",{"_index":760,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["refreshes",{"_index":1300,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["regex",{"_index":1511,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["regexp",{"_index":1509,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["related",{"_index":236,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["remote",{"_index":730,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["remoteallocationsdb",{"_index":745,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["remotecoursesdb",{"_index":739,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["remotedb",{"_index":291,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["remoteorganisationsdb",{"_index":743,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["remotevolunteersdb",{"_index":737,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["removed",{"_index":1203,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["removes",{"_index":911,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["replacelinebreaks",{"_index":1237,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["replaceurl",{"_index":509,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["request",{"_index":551,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{}}}],["request.clone",{"_index":1111,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["request.url",{"_index":1121,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["requestinterceptor",{"_index":644,"title":{"interceptors/RequestInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["requests",{"_index":547,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocationsService.html":{},"interceptors/RequestInterceptor.html":{}}}],["require",{"_index":1603,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rescue_officer",{"_index":216,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{}}}],["rescue_officer._id",{"_index":310,"title":{},"body":{"injectables/AllocationService.html":{}}}],["rescue_officer.id",{"_index":303,"title":{},"body":{"injectables/AllocationService.html":{}}}],["rescue_officer.name",{"_index":311,"title":{},"body":{"injectables/AllocationService.html":{}}}],["reset",{"_index":160,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["reset/:token",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticationPageModule.html":{}}}],["resetpassword",{"_index":534,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["resetpassword(password",{"_index":576,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resetpasswordcomponent",{"_index":159,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["resetpasswordform",{"_index":1093,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["resource",{"_index":30,"title":{},"body":{"components/AboutPage.html":{},"injectables/LocationsService.html":{}}}],["response",{"_index":325,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["response.docs",{"_index":1364,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["response.docs.length",{"_index":1374,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["response.docs[0",{"_index":1225,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["response.filter(city",{"_index":1398,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["response.rows.foreach(volunteer",{"_index":1358,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["response.status",{"_index":785,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["response.url",{"_index":794,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["result",{"_index":169,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":171,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resurse",{"_index":55,"title":{},"body":{"components/AboutPage.html":{}}}],["retrieve",{"_index":1152,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["retrieve(route",{"_index":1157,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["retrieved",{"_index":1207,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["retrieves",{"_index":915,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/ValidateVolunteerComponent.html":{},"miscellaneous/functions.html":{}}}],["retrives",{"_index":1306,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["retriving",{"_index":1213,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["retry",{"_index":297,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["return",{"_index":320,"title":{},"body":{"injectables/AllocationService.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"interceptors/RequestInterceptor.html":{},"classes/RouteReusableStrategy.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["returns",{"_index":267,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["reusable",{"_index":649,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["reuse",{"_index":1146,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["rewuest",{"_index":563,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["reîncearc",{"_index":1016,"title":{},"body":{"components/LoginComponent.html":{}}}],["rgba(240,237,240,1",{"_index":861,"title":{},"body":{"components/HomePage.html":{}}}],["right",{"_index":1259,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["role",{"_index":1018,"title":{},"body":{"components/LoginComponent.html":{}}}],["romania",{"_index":128,"title":{},"body":{"components/AboutPage.html":{}}}],["românia",{"_index":48,"title":{},"body":{"components/AboutPage.html":{}}}],["root",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":145,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["rootobject",{"_index":806,"title":{"interfaces/RootObject.html":{}},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["route",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"modules/CoreModule.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["router",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["routereusablestrategy",{"_index":648,"title":{"classes/RouteReusableStrategy.html":{}},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["routereusestrategy",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["routermodule",{"_index":191,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["routermodule.forchild",{"_index":892,"title":{},"body":{"modules/HomePageModule.html":{}}}],["routermodule.forchild(routes",{"_index":202,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["routermodule.forroot(routes",{"_index":481,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":190,"title":{"routes.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"guards/UnauthenticatedGuard.html":{},"modules/VolunteerPageModule.html":{},"index.html":{},"routes.html":{}}}],["routesub",{"_index":1184,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["routing",{"_index":494,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["routing.module",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":467,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":886,"title":{},"body":{"components/HomePage.html":{}}}],["rvm",{"_index":49,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["rxjs",{"_index":275,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocationsService.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":277,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"injectables/VolunteerService.html":{}}}],["s",{"_index":36,"title":{},"body":{"components/AboutPage.html":{}}}],["salvare",{"_index":125,"title":{},"body":{"components/AboutPage.html":{}}}],["same",{"_index":580,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sau",{"_index":71,"title":{},"body":{"components/AboutPage.html":{},"components/ValidateVolunteerComponent.html":{}}}],["savedcredentials",{"_index":612,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["saves",{"_index":584,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sc",{"_index":1248,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["scorll",{"_index":1315,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["screen",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LogoutComponent.html":{},"dependencies.html":{}}}],["screen/ngx",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["scroll",{"_index":1301,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["se",{"_index":93,"title":{},"body":{"components/AboutPage.html":{}}}],["search",{"_index":1329,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["search(keyword",{"_index":1497,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["searches",{"_index":1475,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["searchkeyword",{"_index":1280,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["searchkeyword(event",{"_index":1327,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["securitate",{"_index":1024,"title":{},"body":{"components/LoginComponent.html":{}}}],["security",{"_index":1482,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["seism",{"_index":69,"title":{},"body":{"components/AboutPage.html":{}}}],["selected",{"_index":845,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["selection",{"_index":1283,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["selections",{"_index":1309,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"injectables/CourseService.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{}}}],["selector:any",{"_index":1536,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["selector['$and'].push",{"_index":1538,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["send",{"_index":162,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{}}}],["send/:id",{"_index":1461,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["sending",{"_index":954,"title":{},"body":{"injectables/LocationsService.html":{},"components/SendMessageComponent.html":{}}}],["sendmessage",{"_index":1188,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["sendmessagecomponent",{"_index":161,"title":{"components/SendMessageComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["sends",{"_index":550,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["sent",{"_index":548,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{}}}],["server",{"_index":290,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["serverbaseurl",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverurl",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":495,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{}}}],["service/error",{"_index":779,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["service/locations.service",{"_index":652,"title":{},"body":{"modules/CoreModule.html":{}}}],["services",{"_index":655,"title":{},"body":{"modules/CoreModule.html":{}}}],["serviceurl",{"_index":803,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"interfaces/RootObject.html":{}}}],["session",{"_index":720,"title":{},"body":{"interfaces/Credentials.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["sessionstorage",{"_index":897,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["set",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"injectables/ErrorMessageService.html":{}}}],["set(error",{"_index":815,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["setcredentials",{"_index":535,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setcredentials(credentials",{"_index":581,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setdata",{"_index":1560,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setdata(type",{"_index":1641,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setheaders",{"_index":1112,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["setitem",{"_index":901,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setitem(key",{"_index":916,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["sets",{"_index":244,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["settimeout",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["shadow",{"_index":858,"title":{},"body":{"components/HomePage.html":{}}}],["shadow:none",{"_index":1430,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["shouldattach",{"_index":1153,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldattach(route",{"_index":1162,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shoulddetach",{"_index":1154,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shoulddetach(route",{"_index":1164,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldreuseroute",{"_index":1155,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldreuseroute(future",{"_index":1166,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shows/hides",{"_index":392,"title":{},"body":{"components/AppComponent.html":{}}}],["showsidemenu",{"_index":332,"title":{},"body":{"components/AppComponent.html":{}}}],["side",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{}}}],["simplu",{"_index":110,"title":{},"body":{"components/AboutPage.html":{}}}],["situații",{"_index":65,"title":{},"body":{"components/AboutPage.html":{}}}],["size",{"_index":867,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["skip",{"_index":1505,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["sms",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["social",{"_index":1481,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["societatea",{"_index":61,"title":{},"body":{"components/AboutPage.html":{}}}],["sort",{"_index":703,"title":{},"body":{"injectables/CourseService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["spec\\.ts",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":1035,"title":{},"body":{"components/LogoutComponent.html":{}}}],["splash",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["splashscreen",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["spontani",{"_index":106,"title":{},"body":{"components/AboutPage.html":{}}}],["sprijin",{"_index":38,"title":{},"body":{"components/AboutPage.html":{}}}],["sprijinul",{"_index":130,"title":{},"body":{"components/AboutPage.html":{}}}],["src/.../allocation.service.ts",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authentication.service.ts",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../course.service.ts",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.dev.ts",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.local.ts",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":1638,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../organisation.service.ts",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../volunteer.service.ts",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":466,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:100",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":390,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":379,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:54",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:68",{"_index":384,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:78",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:92",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core",{"_index":992,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["src/app/core/authentication/authentication.guard.ts",{"_index":485,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/app/core/authentication/authentication.guard.ts:10",{"_index":491,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/app/core/authentication/authentication.guard.ts:28",{"_index":496,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/app/core/authentication/authentication.service.ts",{"_index":527,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/authentication/authentication.service.ts:108",{"_index":583,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:125",{"_index":606,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:133",{"_index":549,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:148",{"_index":568,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:158",{"_index":578,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:21",{"_index":590,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:26",{"_index":541,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:48",{"_index":557,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:68",{"_index":562,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:83",{"_index":554,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:91",{"_index":600,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:99",{"_index":604,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/unauthenticated.guard",{"_index":525,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["src/app/core/authentication/unauthenticated.guard.ts",{"_index":1261,"title":{},"body":{"guards/UnauthenticatedGuard.html":{},"coverage.html":{}}}],["src/app/core/authentication/unauthenticated.guard.ts:10",{"_index":1263,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["src/app/core/authentication/unauthenticated.guard.ts:29",{"_index":1264,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["src/app/core/core.module.ts",{"_index":645,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/http/error",{"_index":751,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/http/request.interceptor.ts",{"_index":1104,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["src/app/core/http/request.interceptor.ts:17",{"_index":1107,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/app/core/http/request.interceptor.ts:31",{"_index":1108,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/app/core/local",{"_index":893,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/model/allocation.model.ts",{"_index":205,"title":{},"body":{"classes/Allocation.html":{},"coverage.html":{}}}],["src/app/core/model/allocation.model.ts:10",{"_index":227,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:14",{"_index":222,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:15",{"_index":221,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:16",{"_index":225,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:21",{"_index":223,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:5",{"_index":220,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:6",{"_index":226,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/authentication.model.ts",{"_index":719,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/model/course.model.ts",{"_index":659,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["src/app/core/model/course.model.ts:5",{"_index":664,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:6",{"_index":666,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:7",{"_index":665,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:8",{"_index":667,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:9",{"_index":663,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/error.model.ts",{"_index":801,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["src/app/core/model/organisation.model.ts",{"_index":1040,"title":{},"body":{"classes/Organisation.html":{},"coverage.html":{}}}],["src/app/core/model/organisation.model.ts:5",{"_index":1043,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:6",{"_index":1044,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:7",{"_index":1046,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:8",{"_index":1045,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:9",{"_index":1042,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/volunteer.model",{"_index":1218,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["src/app/core/model/volunteer.model.ts",{"_index":1431,"title":{},"body":{"classes/Volunteer.html":{},"coverage.html":{}}}],["src/app/core/model/volunteer.model.ts:11",{"_index":1446,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:12",{"_index":1449,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:13",{"_index":1448,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:14",{"_index":1444,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:15",{"_index":1442,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:16",{"_index":1440,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:17",{"_index":1439,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:18",{"_index":1441,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:19",{"_index":1445,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:20",{"_index":1438,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:21",{"_index":1443,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:22",{"_index":1450,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:23",{"_index":1436,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:5",{"_index":1437,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:6",{"_index":1447,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/route",{"_index":1142,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["src/app/core/service/allocation.service",{"_index":1350,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["src/app/core/service/allocation.service.ts",{"_index":233,"title":{},"body":{"injectables/AllocationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/allocation.service.ts:31",{"_index":243,"title":{},"body":{"injectables/AllocationService.html":{}}}],["src/app/core/service/allocation.service.ts:60",{"_index":253,"title":{},"body":{"injectables/AllocationService.html":{}}}],["src/app/core/service/course.service.ts",{"_index":668,"title":{},"body":{"injectables/CourseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/course.service.ts:112",{"_index":696,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:125",{"_index":682,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:27",{"_index":676,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:50",{"_index":694,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:61",{"_index":689,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:75",{"_index":686,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:83",{"_index":692,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:98",{"_index":679,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/database",{"_index":728,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/error",{"_index":809,"title":{},"body":{"injectables/ErrorMessageService.html":{},"coverage.html":{}}}],["src/app/core/service/locations.service",{"_index":1351,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["src/app/core/service/locations.service.ts",{"_index":946,"title":{},"body":{"injectables/LocationsService.html":{},"coverage.html":{}}}],["src/app/core/service/locations.service.ts:21",{"_index":957,"title":{},"body":{"injectables/LocationsService.html":{}}}],["src/app/core/service/locations.service.ts:29",{"_index":955,"title":{},"body":{"injectables/LocationsService.html":{}}}],["src/app/core/service/locations.service.ts:9",{"_index":953,"title":{},"body":{"injectables/LocationsService.html":{}}}],["src/app/core/service/organisation.service.ts",{"_index":1047,"title":{},"body":{"injectables/OrganisationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/organisation.service.ts:103",{"_index":1068,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:114",{"_index":1059,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:28",{"_index":1054,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:52",{"_index":1066,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:64",{"_index":1062,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:77",{"_index":1064,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:90",{"_index":1056,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/volunteer.service",{"_index":1349,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["src/app/core/service/volunteer.service.ts",{"_index":1462,"title":{},"body":{"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/volunteer.service.ts:101",{"_index":1492,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:114",{"_index":1494,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:134",{"_index":1480,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:170",{"_index":1502,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:189",{"_index":1484,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:204",{"_index":1486,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:242",{"_index":1474,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:29",{"_index":1472,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:55",{"_index":1496,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:72",{"_index":1498,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/validators/password",{"_index":1078,"title":{},"body":{"classes/PasswordValidation.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/about/about.module.ts",{"_index":184,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["src/app/pages/about/about.page.ts",{"_index":10,"title":{},"body":{"components/AboutPage.html":{},"coverage.html":{}}}],["src/app/pages/authentication/authentication.module.ts",{"_index":519,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["src/app/pages/authentication/authentication.page.ts",{"_index":511,"title":{},"body":{"components/AuthenticationPage.html":{},"coverage.html":{}}}],["src/app/pages/authentication/authentication.page.ts:12",{"_index":515,"title":{},"body":{"components/AuthenticationPage.html":{}}}],["src/app/pages/authentication/authentication.page.ts:8",{"_index":514,"title":{},"body":{"components/AuthenticationPage.html":{}}}],["src/app/pages/authentication/login/login.component.ts",{"_index":960,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/pages/authentication/login/login.component.ts:15",{"_index":971,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:36",{"_index":981,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:43",{"_index":979,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:54",{"_index":985,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:79",{"_index":980,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:87",{"_index":982,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/logout/logout.component.ts",{"_index":1027,"title":{},"body":{"components/LogoutComponent.html":{},"coverage.html":{}}}],["src/app/pages/authentication/logout/logout.component.ts:10",{"_index":1030,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/pages/authentication/logout/logout.component.ts:24",{"_index":1031,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/pages/authentication/recover",{"_index":1089,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/authentication/reset",{"_index":1123,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":890,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":830,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:14",{"_index":852,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:28",{"_index":835,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:41",{"_index":842,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:52",{"_index":836,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/volunteer/add",{"_index":1587,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/volunteer/list",{"_index":1590,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/volunteer/send",{"_index":1177,"title":{},"body":{"components/SendMessageComponent.html":{},"coverage.html":{}}}],["src/app/pages/volunteer/validate",{"_index":1266,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"coverage.html":{}}}],["src/app/pages/volunteer/volunteer.module.ts",{"_index":1457,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["src/app/pages/volunteer/volunteer.page.ts",{"_index":1451,"title":{},"body":{"components/VolunteerPage.html":{},"coverage.html":{}}}],["src/environments/environment.dev.ts",{"_index":1597,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.local.ts",{"_index":1598,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1599,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1600,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1601,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssn",{"_index":1435,"title":{},"body":{"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["start",{"_index":1423,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["starts",{"_index":1295,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["state",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["statements",{"_index":1546,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1080,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["status",{"_index":259,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/UnauthenticatedGuard.html":{}}}],["statusbar",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["statuscode",{"_index":807,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["storage",{"_index":544,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["storage.service",{"_index":609,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["storage.service.ts",{"_index":894,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["storage.service.ts:109",{"_index":920,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:114",{"_index":902,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:221",{"_index":917,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:229",{"_index":914,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:237",{"_index":910,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:244",{"_index":907,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["store",{"_index":1156,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["store(route",{"_index":1170,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["stored",{"_index":1642,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stores",{"_index":559,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{},"miscellaneous/variables.html":{}}}],["storing",{"_index":895,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["strategy",{"_index":650,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["strategy.ts",{"_index":1143,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["strategy.ts:19",{"_index":1165,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:28",{"_index":1172,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:38",{"_index":1163,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:47",{"_index":1159,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:56",{"_index":1168,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strats",{"_index":733,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["string",{"_index":218,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutPage.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutPage.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["submit",{"_index":967,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe",{"_index":1002,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe((match",{"_index":418,"title":{},"body":{"components/AppComponent.html":{}}}],["subscription",{"_index":1211,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["success",{"_index":566,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["successful",{"_index":558,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LogoutComponent.html":{}}}],["such",{"_index":489,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["suport",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["support",{"_index":1648,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1649,"title":{},"body":{"modules.html":{}}}],["sync",{"_index":731,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts",{"_index":729,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sync.service.ts:53",{"_index":732,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["synchronization",{"_index":245,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"components/LoginComponent.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["table",{"_index":1605,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1604,"title":{},"body":{"coverage.html":{}}}],["targetheight",{"_index":1231,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["targetwidth",{"_index":1230,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["tel:89992142265",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["teren",{"_index":92,"title":{},"body":{"components/AboutPage.html":{}}}],["text",{"_index":872,"title":{},"body":{"components/HomePage.html":{},"components/LoginComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["textarea",{"_index":1249,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["then((imagedata",{"_index":1232,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this._credentials",{"_index":614,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._errors",{"_index":825,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this._errors.push",{"_index":826,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this.allocationservice.createallocation(this.volunteers[index",{"_index":1367,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.authenticationservice",{"_index":999,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authenticationservice.accesstoken",{"_index":1119,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.authenticationservice.isauthenticated",{"_index":507,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["this.authenticationservice.logout().subscribe",{"_index":1033,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.authenticationservice.recoverpassword(this.resetpasswordform.value.email).subscribe(response",{"_index":1101,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.authenticationservice.resetpassword(this.resetpasswordform.value.password",{"_index":1138,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authenticationservice.user",{"_index":305,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{}}}],["this.base64image",{"_index":1233,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.cities",{"_index":1397,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.city",{"_index":1369,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.counties",{"_index":1395,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.county",{"_index":1368,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.courses",{"_index":1360,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.courseservice.createcourse(course.name",{"_index":1522,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["this.courseservice.getcoursebyvolunteerid(volunteerid).subscribe(response",{"_index":1363,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.createform",{"_index":993,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.credentials",{"_index":625,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials$.emit(this._credentials",{"_index":629,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials.token",{"_index":626,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials.user",{"_index":631,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.databasesyncservice.sync",{"_index":1004,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.errorhandler(error",{"_index":784,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.errormessageservice.set",{"_index":792,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.errors$.emit(this._errors",{"_index":829,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this.formbuilder.group",{"_index":995,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.getcitylist(event.detail.value",{"_index":1400,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.getcountylist",{"_index":1353,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.getdata",{"_index":1352,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.getuserprofile().subscribe((response",{"_index":620,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.http.get('/assets/files/cities.json",{"_index":959,"title":{},"body":{"injectables/LocationsService.html":{}}}],["this.http.get('/assets/files/counties.json",{"_index":958,"title":{},"body":{"injectables/LocationsService.html":{}}}],["this.httpclient",{"_index":622,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpclient.post('/login",{"_index":616,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpclient.post('/password/recovery",{"_index":633,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpclient.post('/password/reset",{"_index":634,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.initializeapp",{"_index":407,"title":{},"body":{"components/AppComponent.html":{}}}],["this.keyword",{"_index":1377,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.keyword.trim",{"_index":1379,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.limit).subscribe((response",{"_index":1357,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.localstorage",{"_index":940,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.clear",{"_index":945,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.getitem(key",{"_index":943,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.removeitem(key",{"_index":944,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.setitem(key",{"_index":942,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorageservice.clearitem(credentialskey",{"_index":630,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.localstorageservice.getitem(credentialskey",{"_index":613,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.localstorageservice.setitem",{"_index":627,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.location.replacestate(this.router.serializeurl(this.router.createurltree(['home",{"_index":1005,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.locationsservice.getcitylist().subscribe((response",{"_index":1396,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.locationsservice.getcountylist().subscribe((response",{"_index":1394,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.loginform",{"_index":994,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.markaspristine",{"_index":1001,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.message",{"_index":1240,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.page",{"_index":1381,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.platform.ready().then",{"_index":408,"title":{},"body":{"components/AppComponent.html":{}}}],["this.presenttoastwithoptions",{"_index":1006,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.resetpasswordform",{"_index":1098,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.route.params.subscribe",{"_index":1132,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.route.params.subscribe(params",{"_index":1220,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.router.navigate(['../auth/login",{"_index":1034,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.router.navigate(['../home",{"_index":1003,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":508,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/auth/reset",{"_index":420,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/home",{"_index":1265,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["this.router.navigate([url",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["this.routesub",{"_index":1219,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.routesub.unsubscribe",{"_index":1226,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.sendmessage",{"_index":1243,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.sessionstorage",{"_index":941,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.setcredentials",{"_index":624,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.setcredentials(body",{"_index":619,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.sms.haspermission",{"_index":1241,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.sms.send(this.volunteer.phone",{"_index":1239,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.splashscreen.hide",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["this.statusbar.backgroundcolorbyhexstring('#264998",{"_index":410,"title":{},"body":{"components/AppComponent.html":{}}}],["this.statusbar.styledefault",{"_index":411,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toastcontroller.create",{"_index":1010,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.token",{"_index":1134,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.token).subscribe(response",{"_index":1139,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.volunteer",{"_index":1224,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.volunteerid",{"_index":1221,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.volunteeridwithdetails",{"_index":1362,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.volunteers",{"_index":1355,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.volunteers.findindex(volunteer",{"_index":1365,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.volunteers.length",{"_index":1390,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.volunteers.push(volunteer.doc",{"_index":1359,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.volunteers[index",{"_index":1371,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.volunteers[index].isinallocation",{"_index":1366,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.volunteers[index].organisation).subscribe",{"_index":1370,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.volunteerservice.allocatevolunteer(response.id",{"_index":324,"title":{},"body":{"injectables/AllocationService.html":{}}}],["this.volunteerservice.getvolunteerbyid(this.volunteerid).subscribe((response",{"_index":1223,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.volunteerservice.getvolunteerbyid(volunteerid).subscribe((response",{"_index":1372,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.volunteerservice.getvolunteers(this.page",{"_index":1356,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.volunteerservice.search(this.keyword.tolowercase",{"_index":1380,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["through",{"_index":1032,"title":{},"body":{"components/LogoutComponent.html":{}}}],["throw",{"_index":799,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["title",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["title')).gettext",{"_index":465,"title":{},"body":{"classes/AppPage.html":{}}}],["toast",{"_index":978,"title":{},"body":{"components/LoginComponent.html":{}}}],["toast.dismiss",{"_index":1020,"title":{},"body":{"components/LoginComponent.html":{}}}],["toast.present",{"_index":1021,"title":{},"body":{"components/LoginComponent.html":{}}}],["toastcontroller",{"_index":970,"title":{},"body":{"components/LoginComponent.html":{}}}],["todo",{"_index":1099,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["token",{"_index":577,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/User.html":{}}}],["top",{"_index":1253,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["total",{"_index":1489,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["toți",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["transform",{"_index":1424,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["triggered",{"_index":1202,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["trimite",{"_index":1103,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["true",{"_index":296,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/RouteReusableStrategy.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["truth",{"_index":575,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tslib",{"_index":1632,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":217,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types/pouchdb",{"_index":1619,"title":{},"body":{"dependencies.html":{}}}],["tău",{"_index":1246,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["uitat",{"_index":1025,"title":{},"body":{"components/LoginComponent.html":{}}}],["un",{"_index":50,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["unauthenticated",{"_index":1262,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["unauthenticatedguard",{"_index":469,"title":{"guards/UnauthenticatedGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"guards/UnauthenticatedGuard.html":{},"coverage.html":{}}}],["underline",{"_index":876,"title":{},"body":{"components/HomePage.html":{}}}],["unei",{"_index":41,"title":{},"body":{"components/AboutPage.html":{}}}],["unor",{"_index":86,"title":{},"body":{"components/AboutPage.html":{}}}],["unsubscribes",{"_index":1204,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["unui",{"_index":68,"title":{},"body":{"components/AboutPage.html":{}}}],["up",{"_index":1302,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["updatecourse",{"_index":675,"title":{},"body":{"injectables/CourseService.html":{}}}],["updatecourse(course",{"_index":695,"title":{},"body":{"injectables/CourseService.html":{}}}],["updated",{"_index":1294,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{}}}],["updatedat",{"_index":727,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["updateorganisation",{"_index":1053,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["updateorganisation(organisation",{"_index":1067,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["updates",{"_index":257,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["updatevolunteer",{"_index":1470,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["updatevolunteer(volunteer",{"_index":1501,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["urgen",{"_index":66,"title":{},"body":{"components/AboutPage.html":{}}}],["url",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{}}}],["useclass",{"_index":449,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["used",{"_index":904,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"injectables/VolunteerService.html":{}}}],["user",{"_index":498,"title":{"interfaces/User.html":{}},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"coverage.html":{}}}],["user's",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{}}}],["username",{"_index":724,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["uses",{"_index":1194,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["using",{"_index":1290,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["va",{"_index":102,"title":{},"body":{"components/AboutPage.html":{}}}],["validate",{"_index":165,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{}}}],["validated",{"_index":987,"title":{},"body":{"components/LoginComponent.html":{}}}],["validatevolunteercomponent",{"_index":164,"title":{"components/ValidateVolunteerComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["validation",{"_index":986,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validation.ts",{"_index":1079,"title":{},"body":{"classes/PasswordValidation.html":{},"coverage.html":{}}}],["validation.ts:5",{"_index":1084,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["validator",{"_index":1136,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["validators",{"_index":990,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.email",{"_index":997,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.minlength(6",{"_index":998,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.required",{"_index":996,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validați",{"_index":84,"title":{},"body":{"components/AboutPage.html":{}}}],["valideaz",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["value",{"_index":260,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":596,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":137,"title":{},"body":{"components/AboutPage.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{}}}],["variable",{"_index":1552,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1652,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vezi",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["viewchild",{"_index":395,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(ionrouteroutlet",{"_index":387,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["voluntar",{"_index":111,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/ValidateVolunteerComponent.html":{}}}],["voluntari",{"_index":54,"title":{},"body":{"components/AboutPage.html":{}}}],["voluntarii",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["voluntarilor",{"_index":105,"title":{},"body":{"components/AboutPage.html":{}}}],["volunteer",{"_index":31,"title":{"classes/Volunteer.html":{}},"body":{"components/AboutPage.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["volunteer's",{"_index":258,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/VolunteerService.html":{}}}],["volunteer'},{'name",{"_index":143,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["volunteer._id",{"_index":307,"title":{},"body":{"injectables/AllocationService.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["volunteer.allocation",{"_index":1516,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.city",{"_index":1514,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.comments",{"_index":1531,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.component",{"_index":1459,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["volunteer.component.html",{"_index":1269,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.scss",{"_index":1268,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts",{"_index":1267,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"coverage.html":{}}}],["volunteer.component.ts:103",{"_index":1288,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:123",{"_index":1328,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:13",{"_index":1348,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:14",{"_index":1340,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:149",{"_index":1311,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:167",{"_index":1299,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:178",{"_index":1305,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:188",{"_index":1304,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:19",{"_index":1345,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:198",{"_index":1292,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:21",{"_index":1339,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:22",{"_index":1337,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:23",{"_index":1335,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:24",{"_index":1338,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:25",{"_index":1336,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:30",{"_index":1343,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:35",{"_index":1282,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:52",{"_index":1319,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:60",{"_index":1307,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:76",{"_index":1321,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:92",{"_index":1285,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.county",{"_index":1513,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.created",{"_index":1411,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["volunteer.id",{"_index":302,"title":{},"body":{"injectables/AllocationService.html":{}}}],["volunteer.job",{"_index":1409,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["volunteer.name",{"_index":308,"title":{},"body":{"injectables/AllocationService.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["volunteer.organisation",{"_index":1518,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.organisation.name",{"_index":1406,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.page",{"_index":1458,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["volunteer.page.html",{"_index":1453,"title":{},"body":{"components/VolunteerPage.html":{}}}],["volunteer.page.scss",{"_index":1452,"title":{},"body":{"components/VolunteerPage.html":{}}}],["volunteer.phone",{"_index":1517,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.service",{"_index":279,"title":{},"body":{"injectables/AllocationService.html":{}}}],["volunteer.ssn",{"_index":1512,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.updated",{"_index":1515,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer/add",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["volunteer/list",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["volunteer/validate",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/ValidateVolunteerComponent.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["volunteer_id",{"_index":662,"title":{},"body":{"classes/Course.html":{},"injectables/CourseService.html":{}}}],["volunteerid",{"_index":693,"title":{},"body":{"injectables/CourseService.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["volunteeridwithdetails",{"_index":1272,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteerpage",{"_index":166,"title":{"components/VolunteerPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["volunteerpagemodule",{"_index":1454,"title":{"modules/VolunteerPageModule.html":{}},"body":{"modules/VolunteerPageModule.html":{},"index.html":{},"modules.html":{}}}],["volunteers",{"_index":734,"title":{},"body":{"classes/DatabaseSyncService.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["volunteerservice",{"_index":242,"title":{"injectables/VolunteerService.html":{}},"body":{"injectables/AllocationService.html":{},"modules/CoreModule.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"index.html":{}}}],["webkit",{"_index":856,"title":{},"body":{"components/HomePage.html":{}}}],["website",{"_index":229,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["white",{"_index":1036,"title":{},"body":{"components/LogoutComponent.html":{}}}],["whole",{"_index":1334,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["whose",{"_index":1499,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["width",{"_index":1038,"title":{},"body":{"components/LogoutComponent.html":{}}}],["window.open(url",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["workaround",{"_index":1147,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["world",{"_index":131,"title":{},"body":{"components/AboutPage.html":{}}}],["yes",{"_index":585,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["zone",{"_index":117,"title":{},"body":{"components/AboutPage.html":{}}}],["zone.js",{"_index":1634,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":182,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutPage.html":{"url":"components/AboutPage.html","title":"component - AboutPage","body":"\n                   \n\n\n\n\n\n  Components\n  AboutPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/about/about.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                ./about.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.page.html',\n  styleUrls: ['./about.page.scss'],\n})\nexport class AboutPage implements OnInit {\n\n  /**\n  * @ignore\n  */\n  constructor() { }\n\n  /**\n  * @ignore\n  */\n ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n  \n\n\n  \n    \n      Despre Aplicație\n    \n  \n  \n    \n      Resource and Volunteer Management este o aplicație menită să ofere sprijin în eventualitatea unei calamități majore care ar avea loc în România. RVM este un instrument de administrare de voluntari și resurse pe care le pune la dispoziție societatea civilă către Departamentul de Situații de Urgență în cazul unui seism major sau al unui alt dezastru natural. \n    \n  \n  \n    \n      Cu ajutorul acestei componente mobile a aplicației puteți să mobilizați voluntari sau să validați identitatea unor voluntari deja existenți în platformă în cazul în care aceștia își oferă ajutorul în teren și se identifică parte din protocolul de colaborare cu DSU.\n    \n  \n  \n    \n      De asemenea, aplicația va permite și administrarea voluntarilor spontani care își oferă ajutorul în caz de dezastru. Puteți înregistra foarte simplu un voluntar nou în baza de date și îl puteți aloca unei zone de intervenție pentru un mai bun management al persoanelor implicate în eforturile de salvare din teren.  \n    \n  \n  \n    \n      Aplicația RVM este dezvoltată de Code for Romania, în parteneriat cu Departamentul pentru Situații de Urgență și cu sprijinul World Bank. \n    \n  \n\n  \n    \n      \n        \n      \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n      \n        \n      \n        \n  \n\n    \n\n    \n                \n                    ./about.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Despre Aplicație                  Resource and Volunteer Management este o aplicație menită să ofere sprijin în eventualitatea unei calamități majore care ar avea loc în România. RVM este un instrument de administrare de voluntari și resurse pe care le pune la dispoziție societatea civilă către Departamentul de Situații de Urgență în cazul unui seism major sau al unui alt dezastru natural.                   Cu ajutorul acestei componente mobile a aplicației puteți să mobilizați voluntari sau să validați identitatea unor voluntari deja existenți în platformă în cazul în care aceștia își oferă ajutorul în teren și se identifică parte din protocolul de colaborare cu DSU.                  De asemenea, aplicația va permite și administrarea voluntarilor spontani care își oferă ajutorul în caz de dezastru. Puteți înregistra foarte simplu un voluntar nou în baza de date și îl puteți aloca unei zone de intervenție pentru un mai bun management al persoanelor implicate în eforturile de salvare din teren.                    Aplicația RVM este dezvoltată de Code for Romania, în parteneriat cu Departamentul pentru Situații de Urgență și cu sprijinul World Bank.                                                                                                                   '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageModule.html":{"url":"modules/AboutPageModule.html","title":"module - AboutPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AboutPage } from './about.page';\nimport { AuthenticationGuard } from '../../core/authentication/authentication.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AboutPage,\n    canActivate: [AuthenticationGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AboutPage]\n})\nexport class AboutPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Allocation.html":{"url":"classes/Allocation.html","title":"class - Allocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Allocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/allocation.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for allocation object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                city\n                            \n                            \n                                county\n                            \n                            \n                                created_at\n                            \n                            \n                                organisation\n                            \n                            \n                                rescue_officer\n                            \n                            \n                                volunteer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organisation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rescue_officer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volunteer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Allocation {\n    _id: string;\n    rescue_officer: {\n        id: string;\n        name: string;\n    };\n    volunteer: {\n        id: string;\n        name: string;\n    };\n    county: string;\n    city: string;\n    organisation: {\n        id: string;\n        name: string;\n        website: string;\n    };\n    created_at: Date;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllocationService.html":{"url":"injectables/AllocationService.html","title":"injectable - AllocationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/allocation.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for allocations related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAllocation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, volunteerService: VolunteerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/allocation.service.ts:31\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Allocations Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        volunteerService\n                                                  \n                                                        \n                                                                        VolunteerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createAllocation\n                        \n                        \n                    \n                \n            \n            \n                \ncreateAllocation(volunteer: Volunteer, county: string, city: string, organisation: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/allocation.service.ts:60\n                \n            \n\n\n            \n                \n                    Creates an allocation entry in the local database and updates volunteer's allocation status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteer\n                                    \n                                                Volunteer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer object\n\n                                    \n                                \n                                \n                                    county\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the county in which the volunteer is allocated\n\n                                    \n                                \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the county in which the volunteer is allocated\n\n                                    \n                                \n                                \n                                    organisation\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object value containing the allocated volunteer's organisation \nEither contains an object with the following properties {id, name, website}, or it's null\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        An Observable with the created object\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { from } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthenticationService } from '../authentication';\nimport { VolunteerService } from './volunteer.service';\nimport { Allocation } from '../model/allocation.model';\nimport { Volunteer } from '../model/volunteer.model';\n\n/**\n * Reference for local PouchDB Allocations Database\n */\nvar localDB = new PouchDB('allocations');\n\n/**\n * PouchDB find plugin added \n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Allocations Database\n */\nvar remoteDB = new PouchDB(environment.databaseURL + '/allocations');\n\n/**\n * Provider for allocations related operations\n */\n@Injectable()\nexport class AllocationService {\n\n  /**\n  * Class constructor, sets the synchronization options for CouchDB and PouchDB Allocations Database\n  */\n  constructor(private authenticationService: AuthenticationService,\n    private volunteerService: VolunteerService) {\n    let options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);    \n\n    localDB.createIndex({\n      index: {fields: ['volunteer.id', 'rescue_officer.id']}\n    });\n   }\n\n    /**\n   *  Creates an allocation entry in the local database and updates volunteer's allocation status\n   * @param volunteer Volunteer object\n   * @param county String value containing the county in which the volunteer is allocated\n   * @param city String value containing the county in which the volunteer is allocated\n   * @param organisation Object value containing the allocated volunteer's organisation \n   * Either contains an object with the following properties {id, name, website}, or it's null\n   * @returns An Observable with the created object\n   */\n   createAllocation(volunteer: Volunteer, county: string, city: string, organisation: any) {\n    const rescue_officer = this.authenticationService.user;\n    const allocation= new Allocation();\n    allocation.volunteer = {\n      'id': volunteer._id,\n      'name': volunteer.name\n    };\n    allocation.rescue_officer = {\n      'id': rescue_officer._id,\n      'name': rescue_officer.name\n    };\n    allocation.county = county;\n    allocation.city = city;\n    allocation.created_at = new Date();\n\n    if(organisation) {\n        allocation.organisation = {\n          'id': organisation.id,\n          'name': organisation.name,\n          'website': organisation.website\n        };\n    }\n\n    return from(localDB.post(allocation))\n    .pipe(\n        map((response: any) => {\n          this.volunteerService.allocateVolunteer(response.id, volunteer._id);\n          return response;\n        })\n      );\n   }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appPages\n                            \n                            \n                                    Public\n                                authenticationService\n                            \n                            \n                                routerOutlet\n                            \n                            \n                                showSideMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                performAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar, authenticationService: AuthenticationService, router: Router, nav: NavController)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for cordova platforms\n\n                                                        \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for splash screen\n\n                                                        \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for status bar\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operations\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route navigation\n\n                                                        \n                                                \n                                                \n                                                        nav\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeApp\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:78\n                \n            \n\n\n            \n                \n                    Application initialisation\nIf cordova is available then the splash screen is hidden and status bar style is set\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            performAction\n                        \n                        \n                    \n                \n            \n            \n                \nperformAction(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains the value of the next application state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appPages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      title: 'Despre Aplicație',\n      url: '/about'\n    },\n    {\n      title: 'Validează un voluntar',\n      url: '/volunteer/validate'\n    },\n    {\n      title: 'Adaugă voluntar nou',\n      url: '/volunteer/add'\n    },\n    {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    },\n    {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    }, \n    {\n      title: 'Delogare',\n      url: '/auth/logout'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n                \n                    \n                        Side menu navigation pages (page name and page url)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authenticationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:68\n                            \n                        \n\n                \n                    \n                        Provider for authentication related operations\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routerOutlet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IonRouterOutlet\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(IonRouterOutlet)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n                \n                    \n                        Router outlet reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSideMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n                \n                    \n                        Boolean value that shows/hides the side menu depending on user's state\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\n\nimport { IonRouterOutlet, Platform, NavController } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { AuthenticationService } from './core';\nimport { Router } from '@angular/router';\nimport { Deeplinks } from '@ionic-native/deeplinks';\nimport { ResetPasswordComponent } from './pages/authentication/reset-password/reset-password.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n  /**\n   * Router outlet reference\n   */\n  @ViewChild(IonRouterOutlet) routerOutlet: IonRouterOutlet;\n  \n  /**\n   * Boolean value that shows/hides the side menu depending on user's state\n   */\n  showSideMenu = true;\n\n  /**\n   * Side menu navigation pages (page name and page url)\n   */\n  public appPages = [\n    {\n      title: 'Despre Aplicație',\n      url: '/about'\n    },\n    {\n      title: 'Validează un voluntar',\n      url: '/volunteer/validate'\n    },\n    {\n      title: 'Adaugă voluntar nou',\n      url: '/volunteer/add'\n    },\n    {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    },\n    {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    }, \n    {\n      title: 'Delogare',\n      url: '/auth/logout'\n    }\n  ];\n\n  /**\n   * \n   * @param platform Provider for cordova platforms\n   * @param splashScreen Provider for splash screen\n   * @param statusBar Provider for status bar\n   * @param authenticationService Provider for authentication related operations\n   * @param router Provider for route navigation\n   */\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar,\n    public authenticationService: AuthenticationService,\n    private router: Router,\n    private nav: NavController) {\n    this.initializeApp();\n  }\n\n  /**\n   * Application initialisation\n   * If cordova is available then the splash screen is hidden and status bar style is set\n   */\n  initializeApp() {\n    this.platform.ready().then(() => {\n      if(this.platform.is('cordova')){\n        this.statusBar.backgroundColorByHexString('#264998');\n        this.statusBar.styleDefault();\n        this.splashScreen.hide();\n      }\n    });\n  }\n\n  /**\n   * \n   * @param url Contains the value of the next application state\n   */\n  performAction(url: string) {\n    if(url.includes('tel')) {\n      window.open(url);\n    } else {\n      this.router.navigate([url]);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.platform.ready().then(() => {\n      Deeplinks.route({\n        '/reset/:token': ResetPasswordComponent\n      }).subscribe((match) => {\n        setTimeout(() => {\n          this.router.navigate(['/auth/reset/', match.$args.token])\n        }, 1000);\n      }, (nomatch) => {\n        console.warn('Unmatched Route', nomatch);\n      });\n    });\n    \n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n          \n            RVM\n          \n        \n      \n      \n        \n          \n            \n              \n                \n                  {{p.title}}\n                \n              \n            \n          \n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          RVM                                                                                                            {{p.title}}                                                                            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CoreModule } from './core';\nimport { DatePicker } from '@ionic-native/date-picker/ngx';\nimport { SMS } from '@ionic-native/sms/ngx';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  entryComponents: [],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n    CoreModule\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    DatePicker,\n    SMS\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPageOneTitleText\n                            \n                            \n                                getTitle\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPageOneTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetPageOneTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo(destination)\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    destination\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(destination) {\n    return browser.get(destination);\n  }\n\n  getTitle() {\n    return browser.getTitle();\n  }\n\n  getPageOneTitleText() {\n    return element(by.tagName('app-home')).element(by.deepCss('ion-title')).getText();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthenticationGuard } from './core';\nimport { UnauthenticatedGuard } from './core/authentication/unauthenticated.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    loadChildren: './pages/home/home.module#HomePageModule',\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'about',\n    loadChildren: './pages/about/about.module#AboutPageModule',\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'volunteer',\n    loadChildren: './pages/volunteer/volunteer.module#VolunteerPageModule',\n    canActivate: [AuthenticationGuard]\n  },\n  { \n    path: 'auth', \n    loadChildren: './pages/authentication/authentication.module#AuthenticationPageModule' \n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/authentication/authentication.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Provides a guard for protecting authenticated routes (such as home, validate-volunteer)\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.guard.ts:10\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular value which handles routing operations\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service which handles the authentication operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.guard.ts:28\n                \n            \n\n\n            \n                \n                    Determines if a user can access a route, depending on its state\nIf the route isn't allowed, it automatically redirects to login page\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        a boolean value, current user's status: authenticated or not\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { AuthenticationService } from './authentication.service';\n\n/**\n * Provides a guard for protecting authenticated routes (such as home, validate-volunteer)\n */\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  /**\n   * Class constructor\n   * \n   * @param router Angular value which handles routing operations\n   * @param authenticationService The service which handles the authentication operations\n   */\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  /**\n   * Determines if a user can access a route, depending on its state\n   * If the route isn't allowed, it automatically redirects to login page\n   * \n   * @returns a boolean value, current user's status: authenticated or not\n   */\n  canActivate(): boolean {\n    if (this.authenticationService.isAuthenticated()) {\n      return true;\n    }\n\n    this.router.navigate(['/auth/login'], {\n      replaceUrl: true\n    });\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthenticationPage.html":{"url":"components/AuthenticationPage.html","title":"component - AuthenticationPage","body":"\n                   \n\n\n\n\n\n  Components\n  AuthenticationPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/authentication.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-authentication\n            \n\n            \n                styleUrls\n                ./authentication.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./authentication.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/authentication.page.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/authentication.page.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-authentication',\n  templateUrl: './authentication.page.html',\n  styleUrls: ['./authentication.page.scss'],\n})\nexport class AuthenticationPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./authentication.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthenticationPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationPageModule.html":{"url":"modules/AuthenticationPageModule.html","title":"module - AuthenticationPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthenticationPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationPageModule\n\n\n\ncluster_AuthenticationPageModule_declarations\n\n\n\n\nAuthenticationPage\n\nAuthenticationPage\n\n\n\nAuthenticationPageModule\n\nAuthenticationPageModule\n\nAuthenticationPageModule -->\n\nAuthenticationPage->AuthenticationPageModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthenticationPageModule -->\n\nLoginComponent->AuthenticationPageModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAuthenticationPageModule -->\n\nLogoutComponent->AuthenticationPageModule\n\n\n\n\n\nRecoverPasswordComponent\n\nRecoverPasswordComponent\n\nAuthenticationPageModule -->\n\nRecoverPasswordComponent->AuthenticationPageModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationPageModule -->\n\nResetPasswordComponent->AuthenticationPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/authentication/authentication.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthenticationPage\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            LogoutComponent\n                        \n                        \n                            RecoverPasswordComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthenticationPage } from './authentication.page';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { RecoverPasswordComponent } from './recover-password/recover-password.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { UnauthenticatedGuard } from 'src/app/core/authentication/unauthenticated.guard';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthenticationPage,\n  }, \n  {\n    path: 'login',\n    component: LoginComponent,\n    canActivate: [UnauthenticatedGuard]\n  },\n  {\n    path: 'logout',\n    component: LogoutComponent\n  },\n\t{\n    path: 'reset/:token',\n    component: ResetPasswordComponent,\n    canActivate: [UnauthenticatedGuard]\n  },\n  {\n    path: 'recover',\n    component: RecoverPasswordComponent,\n    canActivate: [UnauthenticatedGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [\n    AuthenticationPage,\n    ResetPasswordComponent,\n    RecoverPasswordComponent,\n    LoginComponent,\n    LogoutComponent\n  ]\n})\nexport class AuthenticationPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides the basic authentication operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _credentials\n                            \n                            \n                                    Public\n                                credentials$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getUserProfile\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Public\n                                recoverPassword\n                            \n                            \n                                    Public\n                                resetPassword\n                            \n                            \n                                    Private\n                                setCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    credentials\n                                \n                                \n                                    accessToken\n                                \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.service.ts:26\n                            \n                        \n\n                \n                    \n                            Class constructor, initializes current credentials value if some credentials are found in local storage\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Class reference injection, handles http requests sent from this service\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service reference injection, handles operations on local storage\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getUserProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:133\n                \n            \n\n\n            \n                \n                    Sends a request to the backend server for current user's profile\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable that contains the current user's profile\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:83\n                \n            \n\n\n            \n                \n                    Determines if the current user is authenticated\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        A boolean value with the authenticated status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(payload: Authentication.LoginPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:48\n                \n            \n\n\n            \n                \n                    Sends a login request to the backend server\nIf it's successful stores the credentials and returns the response body\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Authentication.LoginPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable that contains the authentication credentials\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:68\n                \n            \n\n\n            \n                \n                    Sends a logout rewuest to the backend server\nIf it's successful clears the credentials information from local storage\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable with a boolean value for success (true)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            recoverPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    recoverPassword(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:148\n                \n            \n\n\n            \n                \n                    Sends a request to the backend server for password recovery\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's email, it's the one that will receive the password reset link\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable that contains a truth value: successful or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(password: string, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:158\n                \n            \n\n\n            \n                \n                    Sends a request to the backend server for password reset\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's new password\n\n                                    \n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The token from the email send by password recovery to prove that it's the same user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable that contains a truth value: successful or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setCredentials\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCredentials(credentials?: Authentication.Credentials)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:108\n                \n            \n\n\n            \n                \n                    Saves current user's credentials in local storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                Authentication.Credentials\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An object that contains the authentication token and data from server if user performed a login,\nor nothing if user just performed a log out\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _credentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Authentication.Credentials | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:21\n                            \n                        \n\n                \n                    \n                        Value that stores user's credentials after authentication\nIt's null if the user never authenticates\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            credentials$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:26\n                            \n                        \n\n                \n                    \n                        Value which emits events when credentials' values change (on login/logout)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        credentials\n                    \n                \n\n                \n                    \n                        getcredentials()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:91\n                                \n                            \n                    \n                        \n                                Getter method for the credentials object\n\n\n                                \n                                \n                                \n                                    Returns :         Authentication.Credentials | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:99\n                                \n                            \n                    \n                        \n                                Getter method for the authentication token\n\n\n                                \n                                \n                                \n                                    Returns :     string | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:125\n                                \n                            \n                    \n                        \n                                Getter method for current user's profile\n\n\n                                \n                                \n                                \n                                    Returns :         Authentication.User | null\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LocalStorageService } from '../local-storage.service';\n\n/**\n * Stores the value of credentials' key\n */\nconst credentialsKey = 'credentials';\n\n/**\n * Provides the basic authentication operations.\n */\n@Injectable()\nexport class AuthenticationService {\n  /**\n   * Value that stores user's credentials after authentication\n   * It's null if the user never authenticates\n   */\n  private _credentials: Authentication.Credentials | null;\n\n  /**\n   * Value which emits events when credentials' values change (on login/logout)\n   */\n  public credentials$ = new EventEmitter();\n\n  /**\n   * Class constructor, initializes current credentials value if some credentials are found in local storage\n   * @param httpClient Class reference injection, handles http requests sent from this service\n   * @param localStorageService Service reference injection, handles operations on local storage\n   */\n  constructor(\n    private httpClient: HttpClient,\n    private localStorageService: LocalStorageService) {\n    const savedCredentials = this.localStorageService.getItem(credentialsKey);\n    if (savedCredentials) {\n      this._credentials = JSON.parse(savedCredentials);\n    }\n  }\n\n  /**\n   * Sends a login request to the backend server\n   * If it's successful stores the credentials and returns the response body\n   * @param payload \n   * @returns An observable that contains the authentication credentials\n   */\n  login(\n    payload: Authentication.LoginPayload\n  ): Observable {\n    return this.httpClient.post('/login', payload).pipe(\n      map((body: Authentication.Credentials) => {\n        this.setCredentials(body);\n        this.getUserProfile().subscribe((response) => {\n          body.user = response;\n          this.setCredentials(body);\n        });\n        return body;\n      })\n    );\n  }\n\n  /**\n   * Sends a logout rewuest to the backend server\n   * If it's successful clears the credentials information from local storage\n   * @returns An observable with a boolean value for success (true)\n   */\n  logout(): Observable {\n    return this.httpClient\n      .get('/logout')\n      .pipe(\n        map(() => {\n          this.setCredentials();\n          return true;\n        })\n      );\n  }\n\n  /**\n   * Determines if the current user is authenticated\n   * @returns A boolean value with the authenticated status\n   */\n  isAuthenticated(): boolean {\n    return !!this.credentials;\n  }\n\n  /**\n   * Getter method for the credentials object\n   * @returns The current credentials\n   */\n  get credentials(): Authentication.Credentials | null {\n    return this._credentials;\n  }\n\n  /**\n   * Getter method for the authentication token\n   * @returns The current token\n   */\n  get accessToken(): string | null {\n    return this.credentials ? this.credentials.token : null;\n  }\n\n  /**\n   * Saves current user's credentials in local storage\n   * @param credentials An object that contains the authentication token and data from server if user performed a login,\n   * or nothing if user just performed a log out\n   */\n  private setCredentials(credentials?: Authentication.Credentials) {\n    this._credentials = credentials || null;\n    if (credentials) {\n      this.localStorageService.setItem(\n        credentialsKey,\n        JSON.stringify(credentials)\n      );\n      this.credentials$.emit(this._credentials);\n    } else {\n      this.localStorageService.clearItem(credentialsKey);\n    }\n  }\n\n   /**\n   * Getter method for current user's profile\n   * @returns The current user\n   */\n  get user(): Authentication.User | null {\n    return this.credentials ? this.credentials.user : null;\n  }\n\n  /**\n   * Sends a request to the backend server for current user's profile\n   * @returns An observable that contains the current user's profile\n   */\n  private getUserProfile(): Observable { \n    return this.httpClient\n    .get('/profile')\n    .pipe(\n      map((response: Authentication.User) => {\n        return response;\n      })\n    );\n  }\n\n  /**\n  * Sends a request to the backend server for password recovery\n  * @param email User's email, it's the one that will receive the password reset link\n  * @returns an observable that contains a truth value: successful or not\n  */\n  public recoverPassword(email: string) {\n    return this.httpClient.post('/password/recovery', {email: email});\n  }\n\n   /**\n  * Sends a request to the backend server for password reset\n  * @param password User's new password\n  * @param token The token from the email send by password recovery to prove that it's the same user\n  * @returns an observable that contains a truth value: successful or not\n  */\n  public resetPassword(password: string, token: string) {\n    return this.httpClient.post('/password/reset', {passowrd: password, password_confirm: password, token: token});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nAllocationService\n\nAllocationService\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAllocationService->CoreModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nCoreModule -->\n\nAuthenticationService->CoreModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nCoreModule -->\n\nCourseService->CoreModule\n\n\n\n\n\nErrorHandlerInterceptor\n\nErrorHandlerInterceptor\n\nCoreModule -->\n\nErrorHandlerInterceptor->CoreModule\n\n\n\n\n\nErrorMessageService\n\nErrorMessageService\n\nCoreModule -->\n\nErrorMessageService->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\nLocationsService\n\nLocationsService\n\nCoreModule -->\n\nLocationsService->CoreModule\n\n\n\n\n\nOrganisationService\n\nOrganisationService\n\nCoreModule -->\n\nOrganisationService->CoreModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\n\n\nVolunteerService\n\nVolunteerService\n\nCoreModule -->\n\nVolunteerService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AllocationService\n                        \n                        \n                            AuthenticationService\n                        \n                        \n                            CourseService\n                        \n                        \n                            ErrorHandlerInterceptor\n                        \n                        \n                            ErrorMessageService\n                        \n                        \n                            LocalStorageService\n                        \n                        \n                            LocationsService\n                        \n                        \n                            OrganisationService\n                        \n                        \n                            RequestInterceptor\n                        \n                        \n                            RequestInterceptor\n                        \n                        \n                            VolunteerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  HTTP_INTERCEPTORS,\n  HttpClient,\n  HttpClientModule\n} from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\nimport {\n  AuthenticationGuard,\n  AuthenticationService,\n} from './authentication';\nimport {\n  RequestInterceptor,\n  ErrorHandlerInterceptor\n} from './http';\nimport { LocalStorageService } from './local-storage.service';\nimport { RouteReusableStrategy } from './route-reusable-strategy';\nimport {\n  ErrorMessageService,\n  CourseService,\n  VolunteerService,\n  OrganisationService,\n  DatabaseSyncService,\n  AllocationService\n} from './service';\nimport { LocationsService } from './service/locations.service';\nimport { UnauthenticatedGuard } from './authentication/unauthenticated.guard';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule, RouterModule],\n  declarations: [],\n  providers: [\n    LocalStorageService,\n    AuthenticationService,\n    AuthenticationGuard,\n    UnauthenticatedGuard,\n    RequestInterceptor,\n    ErrorHandlerInterceptor,\n    VolunteerService,\n    ErrorMessageService,\n    LocationsService,\n    CourseService,\n    OrganisationService,\n    DatabaseSyncService,\n    AllocationService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: RequestInterceptor,\n      multi: true\n    },\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy\n    }\n  ]\n})\n\n/**\n * Module for all core related services, interceptors and models\n */\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/course.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for course object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                acredited\n                            \n                            \n                                name\n                            \n                            \n                                obtained\n                            \n                            \n                                volunteer_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/model/course.model.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acredited\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            obtained\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volunteer_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Course {\n    _id: string;\n    name: string;\n    acredited: string;\n    obtained: Date;\n    volunteer_id: string;\n\n    constructor() {}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseService.html":{"url":"injectables/CourseService.html","title":"injectable - CourseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/course.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for course related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCourse\n                            \n                            \n                                deleteCourseById\n                            \n                            \n                                getCourseById\n                            \n                            \n                                getCourseByName\n                            \n                            \n                                getCourseByVolunteerId\n                            \n                            \n                                getCourses\n                            \n                            \n                                updateCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/course.service.ts:27\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Courses Database\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createCourse\n                        \n                        \n                    \n                \n            \n            \n                \ncreateCourse(name: string, volunteer_id: string, acredited: string, obtained: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:98\n                \n            \n\n\n            \n                \n                    Creates a course entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new course's name\n\n                                    \n                                \n                                \n                                    volunteer_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the volunteer's id\n\n                                    \n                                \n                                \n                                    acredited\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    obtained\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Date value when a course was obtained\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with the created object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteCourseById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteCourseById(courseId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:125\n                \n            \n\n\n            \n                \n                    Deletes an entry by its id from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The course id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourseById\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourseById(courseId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:75\n                \n            \n\n\n            \n                \n                    Finds a course by its id in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course's id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the course with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourseByName\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourseByName(courseName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:61\n                \n            \n\n\n            \n                \n                    Finds a course by its name in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    courseName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the course\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all courses with that name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourseByVolunteerId\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourseByVolunteerId(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourses\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourses()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:50\n                \n            \n\n\n            \n                \n                    Getter method for all courses from the local database\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all courses\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateCourse\n                        \n                        \n                    \n                \n            \n            \n                \nupdateCourse(course: Course)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:112\n                \n            \n\n\n            \n                \n                    Updates a course entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new course entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { from, Observable } from 'rxjs';\nimport { Course } from '../model/course.model';\n\n/**\n * Reference for local PouchDB Courses Database\n */\nvar localDB = new PouchDB('courses');\n\n/**\n * PouchDB find plugin added \n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Courses Database\n */\nvar remoteDB = new PouchDB(environment.databaseURL + '/courses');\n\n/**\n * Provider for course related operations\n */\n@Injectable()\nexport class CourseService {\n\n  /**\n   * Class constructor, sets the synchronization options for CouchDB and PouchDB Courses Database\n   */\n  constructor() {\n    let options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);    \n\n    localDB.createIndex({\n      index: {fields: ['name', 'volunteer_id', 'acredited']}\n    });\n   }\n\n  /**\n   * Getter method for all courses from the local database\n  * @returns An Observable with all courses\n  */\n  getCourses(): Observable {\n    return from(localDB.allDocs({\n      include_docs: true\n    }));\n  }\n  \n  /**\n  * Finds a course by its name in the local database\n  * @param courseName The name of the course\n  * @returns An Observable with all courses with that name\n  */\n  getCourseByName(courseName: string): Observable {\n    return from(localDB.find({\n      selector: {\n        name: {$eq: courseName},\n      },\n      sort: ['name'],\n    }));\n  }\n\n  /**\n  * Finds a course by its id in the local database\n  * @param courseId Course's id\n  * @returns An Observable containing the course with that id\n  */\n  getCourseById(courseId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        _id: {$eq: courseId},\n      }\n    }));\n  }\n\n  getCourseByVolunteerId(volunteerId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        'volunteer_id': {$eq: volunteerId}\n      }\n    }));\n  }\n\n  /**\n   * Creates a course entry in the local database\n   * @param name String value containing the new course's name\n   * @param volunteer_id String value containing the volunteer's id\n   * @param obtained Date value when a course was obtained\n   * @returns An Observable with the created object\n   */\n  createCourse(name: string, volunteer_id: string, acredited: string, obtained: Date): Observable {\n    const course = new Course();\n    course.volunteer_id = volunteer_id;\n    course.name = name;\n    course.obtained = obtained;\n    course.acredited = acredited;\n\n    return from(localDB.post(course));\n  }\n \n  /**\n  * Updates a course entry in the local database\n  * @param course The new course entry\n  */\n  updateCourse(course: Course): void {\n    localDB.get(course._id).then(function (doc) {\n      doc.name = course.name ? course.name : doc.name;\n      doc.acredited = course.acredited ? course.acredited : doc.acredited;\n      doc.obtained = course.obtained ? course.obtained : doc.obtained;\n      localDB.put(doc);\n    });\n  }\n\n  /**\n   * Deletes an entry by its id from the local database\n   * @param courseId The course id\n   */\n  deleteCourseById(courseId: string): void {\n    localDB.get(courseId).then(doc => {\n      return localDB.remove(doc);\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Credentials.html":{"url":"interfaces/Credentials.html","title":"interface - Credentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Credentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for credentials object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        session\n                                \n                                \n                                        token\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        session\n                                    \n                                \n                                \n                                    \n                                        session:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  /**\n * Interface for login payload\n */\n  export interface LoginPayload {\n    username: string;\n    password: string;\n  }\n\n  /**\n * Interface for user object\n */\n  export interface User {\n    _id: string;\n    name: string;\n    phone?: any;\n    email: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n\n  /**\n * Interface for credentials object\n */\n  export interface Credentials {\n    user: User;\n    token: string;\n    session: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseSyncService.html":{"url":"classes/DatabaseSyncService.html","title":"class - DatabaseSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/database-sync.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for database synchronization (local and remote)\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sync\n                        \n                        \n                    \n                \n            \n            \n                \nsync()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/database-sync.service.ts:53\n                \n            \n\n\n            \n                \n                    Strats database synchronization\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as PouchDB from 'pouchdb/dist/pouchdb';\nimport { environment } from '../../../environments/environment';\n\n/**\n * Reference for local PouchDB Volunteers Database\n */\nvar localVolunteersDB = new PouchDB('volunteers');\n/**\n * Reference for server CouchDB Volunteers Database\n */\nvar remoteVolunteersDB = new PouchDB(environment.databaseURL + '/volunteers');\n\n/**\n * Reference for local PouchDB Courses Database\n */\nvar localCoursesDB = new PouchDB('courses');\n/**\n * Reference for server CouchDB Courses Database\n */\nvar remoteCoursesDB = new PouchDB(environment.databaseURL + '/courses');\n\n/**\n * Reference for local PouchDB Organisations Database\n */\nvar localOrganisationsDB = new PouchDB('organisations');\n/**\n * Reference for server CouchDB Organisations Database\n */\nvar remoteOrganisationsDB = new PouchDB(environment.databaseURL + '/organisations');\n\n/**\n * Reference for local PouchDB Allocations Database\n */\nvar localAllocationsDB = new PouchDB('allocations');\n/**\n * Reference for server CouchDB Allocations Database\n */\nvar remoteAllocationsDB = new PouchDB(environment.databaseURL + '/allocations');\n\n/**\n * Service for database synchronization (local and remote)\n */\nexport class DatabaseSyncService { \n\n    /**\n     * @ignore\n     */\n    constructor() { }\n\n    /**\n     * Strats database synchronization\n     */\n    sync() {\n        let options = {\n            live: true,\n            retry: true,\n            continuous: true\n          };\n\n        localVolunteersDB.sync(remoteVolunteersDB, options);    \n        localCoursesDB.sync(remoteCoursesDB, options); \n        localOrganisationsDB.sync(remoteOrganisationsDB, options); \n        localAllocationsDB.sync(remoteAllocationsDB, options); \n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorHandlerInterceptor.html":{"url":"interceptors/ErrorHandlerInterceptor.html","title":"interceptor - ErrorHandlerInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorHandlerInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/error-handler.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Adds a default error handler to all requests.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, localStorageService: LocalStorageService, errorMessageService: ErrorMessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/error-handler.interceptor.ts:25\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular value which handles routing operations\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected service referes the LocalStorageService for handling operations related to storage\n\n                                                        \n                                                \n                                                \n                                                        errorMessageService\n                                                  \n                                                        \n                                                                        ErrorMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected service referes the ErrorMessageService for handling operations related to error messagging\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            errorHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    errorHandler(response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/error-handler.interceptor.ts:59\n                \n            \n\n\n            \n                \n                    Handles the request errors depending on its code\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request response\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable with the http event\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/error-handler.interceptor.ts:45\n                \n            \n\n\n            \n                \n                    Intercepts all requests that are sent and adds an error handling function to them\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current request that is being sent\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Handles the next state of the request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable with the new request, with the additional information\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from '../local-storage.service';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ErrorMessageService } from '../service/error-message.service';\nimport { environment } from '../../../environments/environment';\n\n/**\n * Key that identifies the credentials\n */\nconst credentialsKey = 'credentials';\n\n/**\n * Adds a default error handler to all requests.\n */\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n  \n  /**\n   * Class constructor\n   * @param router Angular value which handles routing operations\n   * @param localStorageService Injected service referes the LocalStorageService for handling operations related to storage\n   * @param errorMessageService Injected service referes the ErrorMessageService for handling operations related to error messagging\n   */\n  constructor(\n    private router: Router,\n    private localStorageService: LocalStorageService,\n    private errorMessageService: ErrorMessageService\n  ) {}\n\n   /**\n   * Intercepts all requests that are sent and adds an error handling function to them\n   * @param request The current request that is being sent\n   * @param next Handles the next state of the request\n   * @returns An observable with the new request, with the additional information\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return next\n      .handle(request)\n      .pipe(catchError(error => this.errorHandler(error)));\n  }\n\n  /**\n   * Handles the request errors depending on its code\n   * @param response Request response\n   * @returns An observable with the http event\n   */\n  private errorHandler(\n    response: HttpResponse\n  ): Observable> {\n    if (response.status === 401) {\n      this.localStorageService.clearItem(credentialsKey);\n      this.router.navigate(['/auth/login'], {\n        replaceUrl: true\n      });\n    } else if (response.status === 400) {\n      const errorResponse: any = response;\n      if (errorResponse.error) {\n        if (errorResponse.error.validation) {\n          errorResponse.error.validation.keys.forEach((key: string) => {\n            this.errorMessageService.set(\n              errorResponse.error.validation.errors[key],\n              key,\n              response.url\n            );\n          });\n        } else {\n          this.errorMessageService.set(\n            errorResponse.error.error,\n            '_GLOBAL_',\n            response.url\n          );\n        }\n      }\n    }\n\n    if (!environment.production) {\n      console.error('Request error', response);\n    }\n    throw response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorMessageObject.html":{"url":"interfaces/ErrorMessageObject.html","title":"interface - ErrorMessageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorMessageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/error.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for error message\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        id\n                                \n                                \n                                        serviceUrl\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceUrl\n                                    \n                                \n                                \n                                    \n                                        serviceUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace ErrorModel {\n  /**\n   * Interface for error object\n   */\n  export interface RootObject {\n    statusCode: number;\n    error: string;\n    message: string;\n    attributes?: any;\n  }\n\n  /**\n   * Interface for error message\n   */\n  export interface ErrorMessageObject {\n    id: number;\n    error: string;\n    type: string;\n    serviceUrl: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorMessageService.html":{"url":"injectables/ErrorMessageService.html","title":"injectable - ErrorMessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorMessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/error-message.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for error messages\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _errors\n                            \n                            \n                                    Public\n                                errors$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errors\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/error-message.service.ts:51\n                \n            \n\n\n            \n                \n                    Clears the error messages and emits an event\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            set\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    set(error: string, type: string, serviceUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/error-message.service.ts:37\n                \n            \n\n\n            \n                \n                    Sets the error messages and emits an event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error message\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error type\n\n                                    \n                                \n                                \n                                    serviceUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Service Url that generated the error\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorModel.ErrorMessageObject[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/error-message.service.ts:11\n                            \n                        \n\n                \n                    \n                        Value that stores the error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errors$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/error-message.service.ts:16\n                            \n                        \n\n                \n                    \n                        Value that emitts events when error messages are changed\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errors\n                    \n                \n\n                \n                    \n                        geterrors()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/service/error-message.service.ts:27\n                                \n                            \n                    \n                        \n                                Getter for current error messages\n\n\n                                \n                                \n                                \n                                    Returns :         ErrorModel.ErrorMessageObject[]\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\n\n/**\n * Provider for error messages\n */\n@Injectable()\nexport class ErrorMessageService {\n  /**\n   * Value that stores the error messages\n   */\n  private _errors: ErrorModel.ErrorMessageObject[] = [];\n\n  /**\n   * Value that emitts events when error messages are changed\n   */\n  public errors$ = new EventEmitter();\n\n  /**\n   * @ignore\n   */\n  constructor() {}\n\n  /**\n   * Getter for current error messages\n   * @returns current error messages\n   */\n  get errors(): ErrorModel.ErrorMessageObject[] {\n    return this._errors;\n  }\n\n  /**\n   * Sets the error messages and emits an event\n   * @param error Error message\n   * @param type Error type\n   * @param serviceUrl Service Url that generated the error\n   */\n  public set(error: string, type: string, serviceUrl: string) {\n    this._errors.push({\n      id: Date.now(),\n      error: error,\n      type: type,\n      serviceUrl: serviceUrl\n    });\n    console.log(this._errors);\n    this.errors$.emit(this._errors);\n  }\n\n  /**\n   * Clears the error messages and emits an event\n   */\n  public clear() {\n    this._errors = [];\n    this.errors$.emit(this._errors);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewDidEnter\n                            \n                            \n                                performAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.page.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/home.page.ts:52\n                \n            \n\n\n            \n                \n                    Ionic lifecycle method, in this case the default back navigation is blocked (android)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            performAction\n                        \n                        \n                    \n                \n            \n            \n                \nperformAction(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/home.page.ts:41\n                \n            \n\n\n            \n                \n                    Performes the action selected by the user from the side-menu list;\nIt can either mean navigation to a new page or opening the phone's call screen\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String containing the url for the route that will be displayed on user click\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      title: 'Validează voluntar',\n      url: '/volunteer/validate'\n    }, {\n      title: 'Adaugă voluntar nou',\n      url: '/volunteer/add'\n    }, {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    }, {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/home/home.page.ts:14\n                            \n                        \n\n                \n                    \n                        Actions that can be performed from the side-menu\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component,   } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n  \n  /**\n   * Actions that can be performed from the side-menu\n   */\n  actions = [\n    {\n      title: 'Validează voluntar',\n      url: '/volunteer/validate'\n    }, {\n      title: 'Adaugă voluntar nou',\n      url: '/volunteer/add'\n    }, {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    }, {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    }\n  ];\n  \n  /**\n  * \n  * @param router Provider for route navigation\n  */\n  constructor(private router: Router) { }\n\n  /**\n   * Performes the action selected by the user from the side-menu list;\n   * It can either mean navigation to a new page or opening the phone's call screen\n   * @param url String containing the url for the route that will be displayed on user click\n   */\n  performAction(url: string) {\n    if(url.includes('tel')) {\n      window.open(url);\n    } else {\n      this.router.navigate([url]);\n    }\n  }\n  \n  /**\n   * Ionic lifecycle method, in this case the default back navigation is blocked (android)\n   */\n  ionViewDidEnter() {\n    document.addEventListener(\"backbutton\",function(e) {\n    }, false);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n  \n\n\n\n  \n    \n      \n          \n            {{action.title}}\n          \n      \n    \n  \n\n    \n\n    \n                \n                    home.page.scss\n                \n                .menu-column {\n  -webkit-box-shadow: 0px 0px 0px 5px rgba(240,237,240,1);\n  -moz-box-shadow: 0px 0px 0px 5px rgba(240,237,240,1);\n  box-shadow: 0px 0px 5px 2px rgba(240,237,240,1);\n  color: black;\n  font-size: 12px;\n  padding: 80px 10px;\n  text-align: center;\n  text-decoration: underline;\n\n  a {\n    color: black;\n  }\n}\n\n.home-columns {\n  align-items: center;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  \n  ion-row {\n    justify-content: center;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{action.title}}                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { HomePage } from './home.page';\nimport { AuthenticationGuard } from '../../core/authentication/authentication.guard';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage,\n        canActivate: [AuthenticationGuard]\n      }\n    ])\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/local-storage.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for storing information in local storage\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                localStorage\n                            \n                            \n                                sessionStorage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearAll\n                            \n                            \n                                    Public\n                                clearItem\n                            \n                            \n                                    Public\n                                getItem\n                            \n                            \n                                    Public\n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/local-storage.service.ts:114\n                            \n                        \n\n                \n                    \n                            Checks if localStorage can be used for basic storing operations\nIf not, then a custom storage is created to handle this operations\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clearAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:244\n                \n            \n\n\n            \n                \n                    Clears the existing storage\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clearItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:237\n                \n            \n\n\n            \n                \n                    Removes an item from storage by its key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:229\n                \n            \n\n\n            \n                \n                    Retrieves an item by its key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setItem(key: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:221\n                \n            \n\n\n            \n                \n                    Adds an item to storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item's key\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item itself\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localStorage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:109\n                            \n                        \n\n                \n                    \n                        Handles storing inside local storage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionStorage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:114\n                            \n                        \n\n                \n                    \n                        Handles storing inside session storage\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Creates a cookie entry\n * @param name Cookie name\n * @param value Cookie value\n * @param days Cookie expiration number of days\n */\nfunction createCookie(name: any, value: any, days: any) {\n  let date: any, expires;\n\n  if (days) {\n    date = new Date();\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    expires = '; expires=' + date.toGMTString();\n  } else {\n    expires = '';\n  }\n  document.cookie = name + '=' + value + expires + '; path=/';\n}\n\n/**\n * Getter for a cookie document by its name\n * @param name Cookie's name\n * @returns cookie document \n */\nfunction readCookie(name: any) {\n  const nameEQ = name + '=',\n    ca = document.cookie.split(';');\n  let i, c;\n\n  for (i = 0; i  localStorage\n      });\n      this.localStorage = localStorage;\n      this.sessionStorage = sessionStorage;\n    }\n  }\n\n  /**\n   * Adds an item to storage\n   * @param key Item's key\n   * @param value Item itself\n  */\n  public setItem(key: string, value: any) {\n    return this.localStorage.setItem(key, value);\n  }\n\n   /**\n    * Retrieves an item by its key\n    * @param key Item key\n    */\n  public getItem(key: string) {\n    return this.localStorage.getItem(key);\n  }\n\n  /**\n  * Removes an item from storage by its key\n  * @param key Item key\n  */\n  public clearItem(key: string) {\n    return this.localStorage.removeItem(key);\n  }\n  \n  /**\n   * Clears the existing storage\n   */\n  public clearAll() {\n    return this.localStorage.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationsService.html":{"url":"injectables/LocationsService.html","title":"injectable - LocationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/locations.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for locations: counties and cities\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCityList\n                            \n                            \n                                    Public\n                                getCountyList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/locations.service.ts:9\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Http service injected reference for sending http requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCityList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCityList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/locations.service.ts:29\n                \n            \n\n\n            \n                \n                    Getter for the list of cities\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that contains the list of cities from resource files\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCountyList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCountyList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/locations.service.ts:21\n                \n            \n\n\n            \n                \n                    Getter for the list of counties\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that contains the list of counties from resource files\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/**\n * Provider for locations: counties and cities\n */\n@Injectable()\nexport class LocationsService {\n\n    /**\n     * Class constructor\n     * @param http Angular Http service injected reference for sending http requests\n     */\n    constructor(private http: HttpClient) {}\n\n    /**\n     * Getter for the list of counties\n     * @returns An observable that contains the list of counties from resource files\n     */\n    public getCountyList(): Observable {\n        return this.http.get('/assets/files/counties.json');\n    }\n\n    /**\n     * Getter for the list of cities\n     * @returns An observable that contains the list of cities from resource files\n     */\n    public getCityList(): Observable {\n        return this.http.get('/assets/files/cities.json');\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                ionViewDidEnter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentToastWithOptions\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, formBuilder: FormBuilder, authenticationService: AuthenticationService, databaseSyncService: DatabaseSyncService, location: Location, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/login/login.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route navigation\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for reactive form creation\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operation\n\n                                                        \n                                                \n                                                \n                                                        databaseSyncService\n                                                  \n                                                        \n                                                                        DatabaseSyncService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for database synchronization\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for location changes\n\n                                                        \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller for toast messages display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/login/login.component.ts:43\n                \n            \n\n\n            \n                \n                    Form initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/login/login.component.ts:79\n                \n            \n\n\n            \n                \n                    Ionic lifecycle method, in this case the default back navigation is blocked (android)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/login/login.component.ts:36\n                \n            \n\n\n            \n                \n                    Page initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentToastWithOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToastWithOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/login/login.component.ts:87\n                \n            \n\n\n            \n                \n                    Presents a toast with an error message if the credentials are incorrect\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/login/login.component.ts:54\n                \n            \n\n\n            \n                \n                    Authentication credentials from the form are sent to the authentication service for validation\nIf they are validated, the user will be redirected to the home page, if not, a toast will display an error message\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { Location } from '@angular/common';\nimport { ToastController } from '@ionic/angular';\nimport { DatabaseSyncService, AuthenticationService } from 'src/app/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n\n  /**\n   * \n  * @param router Provider for route navigation\n   * @param formBuilder Provider for reactive form creation\n   * @param authenticationService Provider for authentication related operation\n   * @param databaseSyncService Provider for database synchronization\n   * @param location Provider for location changes\n   * @param toastController Controller for toast messages display\n   */\n  constructor(private router: Router,\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService,\n    private databaseSyncService: DatabaseSyncService,\n    private location: Location,\n    private toastController: ToastController) { }\n\n  /**\n   * Page initialisation\n   */\n  ngOnInit() {\n    this.createForm();\n  }\n\n  /**\n   * Form initialisation\n   */\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  /**\n   * Authentication credentials from the form are sent to the authentication service for validation\n   * If they are validated, the user will be redirected to the home page, if not, a toast will display an error message\n   */\n  submit() {\n    this.authenticationService\n      .login(this.loginForm.value)\n      .pipe(\n        finalize(() => {\n          this.loginForm.markAsPristine();\n        })\n      )\n      .subscribe(\n        (credentials) => {\n          this.router.navigate(['../home'], {\n            replaceUrl: true\n          });\n          this.databaseSyncService.sync();\n          this.location.replaceState(this.router.serializeUrl(this.router.createUrlTree(['home'])));\n        },\n        (error: any) => {\n          this.presentToastWithOptions();\n        }\n      );\n  }\n\n  /**\n    * Ionic lifecycle method, in this case the default back navigation is blocked (android)\n    */\n  ionViewDidEnter() {\n    document.addEventListener(\"backbutton\", function (e) {\n    }, false);\n  }\n\n  /**\n   * Presents a toast with an error message if the credentials are incorrect\n   */\n  async presentToastWithOptions() {\n    const toast = await this.toastController.create({\n      message: 'Informații incorecte',\n      position: 'bottom',\n      buttons: [\n        {\n          text: 'Reîncearcă',\n          side: 'end',\n          role: 'cancel',\n          handler: () => {\n            toast.dismiss();\n          }\n        }\n      ]\n    });\n    toast.present();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      Adresă de email\n      \n    \n    \n      Cod de securitate\n      \n    \n    Am uitat parola\n    Login\n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Adresă de email                    Cod de securitate              Am uitat parola    Login  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginPayload.html":{"url":"interfaces/LoginPayload.html","title":"interface - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for login payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  /**\n * Interface for login payload\n */\n  export interface LoginPayload {\n    username: string;\n    password: string;\n  }\n\n  /**\n * Interface for user object\n */\n  export interface User {\n    _id: string;\n    name: string;\n    phone?: any;\n    email: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n\n  /**\n * Interface for credentials object\n */\n  export interface Credentials {\n    user: User;\n    token: string;\n    session: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutComponent.html":{"url":"components/LogoutComponent.html","title":"component - LogoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LogoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/logout/logout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout\n            \n\n            \n                styleUrls\n                ./logout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/logout/logout.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operations\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/logout/logout.component.ts:24\n                \n            \n\n\n            \n                \n                    A request through the authentication service is sent for logout;\nIf its successful the user will be redirected to the login screen\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss'],\n})\nexport class LogoutComponent implements OnInit {\n\n  /**\n   * \n   * @param authenticationService Provider for authentication related operations\n   * @param router Provider for router navigation\n   */\n  constructor(private authenticationService: AuthenticationService,\n    private router: Router) { }\n\n  /**\n  * A request through the authentication service is sent for logout;\n  * If its successful the user will be redirected to the login screen\n  */\n  ngOnInit() {\n    this.authenticationService.logout().subscribe(() => {\n      this.router.navigate(['../auth/login'], {\n        replaceUrl: true\n      });\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n  \n\n    \n\n    \n                \n                    ./logout.component.scss\n                \n                ion-spinner {\n    color: white;\n    height: 100px;\n    width: 100px;\n}\n\n.center-spinner {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Organisation.html":{"url":"classes/Organisation.html","title":"class - Organisation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Organisation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/organisation.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for organisation object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                added_by\n                            \n                            \n                                name\n                            \n                            \n                                obtained\n                            \n                            \n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/model/organisation.model.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            added_by\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            obtained\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            website\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Organisation {\n    _id: string;\n    name: string;\n    website: string;\n    obtained: Date;\n    added_by: string;\n\n    constructor() {}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganisationService.html":{"url":"injectables/OrganisationService.html","title":"injectable - OrganisationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OrganisationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/organisation.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for organisation related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createOrganisation\n                            \n                            \n                                deleteOrganisationById\n                            \n                            \n                                getOrganisationById\n                            \n                            \n                                getOrganisationByName\n                            \n                            \n                                getOrganisations\n                            \n                            \n                                updateOrganisation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/organisation.service.ts:28\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Organisations Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected reference for AuthenticationService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createOrganisation\n                        \n                        \n                    \n                \n            \n            \n                \ncreateOrganisation(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:90\n                \n            \n\n\n            \n                \n                    Creates an organisation entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new organisation's name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with the created object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteOrganisationById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteOrganisationById(organisationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:114\n                \n            \n\n\n            \n                \n                    Deletes an entry by its id from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The organisation id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrganisationById\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrganisationById(organisationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:64\n                \n            \n\n\n            \n                \n                    Finds an organisation by its id in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Organisation's id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the organisation with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrganisationByName\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrganisationByName(organisationName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:77\n                \n            \n\n\n            \n                \n                    Finds an organisation by its name in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisationName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the organisation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all organisation with that name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrganisations\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrganisations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:52\n                \n            \n\n\n            \n                \n                    Getter method for all organisations from the local database\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all organisations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOrganisation\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOrganisation(organisation: Organisation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:103\n                \n            \n\n\n            \n                \n                    Updates an organisation entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisation\n                                    \n                                                Organisation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new organisation entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { from, Observable } from 'rxjs';\nimport { AuthenticationService } from '../authentication';\nimport { Organisation } from '../model/organisation.model';\n\n/**\n * Reference for local PouchDB Organisations Database\n */\nvar localDB = new PouchDB('organisations');\n\n/**\n * PouchDB find plugin added \n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Organisations Database\n */\nvar remoteDB = new PouchDB(environment.databaseURL + '/organisations');\n\n/**\n * Provider for organisation related operations\n */\n@Injectable()\nexport class OrganisationService {\n  \n  /**\n  * Class constructor, sets the synchronization options for CouchDB and PouchDB Organisations Database\n  * @param authenticationService Injected reference for AuthenticationService\n  */\n  constructor(private authenticationService: AuthenticationService) {\n    let options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n   localDB.sync(remoteDB, options);    \n\n    localDB.createIndex({\n      index: {fields: ['name']}\n    });\n   }\n\n  /**\n   * Getter method for all organisations from the local database\n  * @returns An Observable with all organisations\n  */\n  getOrganisations(): Observable {\n    return from(localDB.allDocs({\n      include_docs: true,\n      attachments: true\n    }));\n  }\n\n  /**\n  * Finds an organisation by its id in the local database\n  * @param organisationId Organisation's id\n  * @returns An Observable containing the organisation with that id\n  */\n  getOrganisationById(organisationId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        _id: {$eq: organisationId},\n      }\n    }));    \n  }\n\n  /**\n  * Finds an organisation by its name in the local database\n  * @param organisationName The name of the organisation\n  * @returns An Observable with all organisation with that name\n  */\n  getOrganisationByName(organisationName: string): Observable {\n    return from(localDB.find({\n      selector: {\n        name: {$eq: organisationName},\n      }\n    }));\n  }\n\n  /**\n   * Creates an organisation entry in the local database\n   * @param name String value containing the new organisation's name\n   * @returns An Observable with the created object\n   */\n  createOrganisation(name: string) : Observable {\n    const currentUser = this.authenticationService.user;\n    let organisation = new Organisation();\n    organisation.name = name;\n    organisation.added_by = currentUser._id;\n \n    return from(localDB.post(organisation));\n  }\n\n   /**\n  * Updates an organisation entry in the local database\n  * @param organisation The new organisation entry\n  */\n  updateOrganisation(organisation: Organisation) {\n    localDB.get(organisation._id).then(function (doc) {\n      doc.name = organisation.name ? organisation.name : doc.name;\n      localDB.put(doc);\n    });\n  }\n\n  /**\n  * Deletes an entry by its id from the local database\n  * @param organisationId The organisation id\n  */\n  deleteOrganisationById(organisationId: string) {\n    localDB.get(organisationId).then(function (doc) {\n      return localDB.remove(doc);\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordValidation.html":{"url":"classes/PasswordValidation.html","title":"class - PasswordValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/password-validation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                MatchPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            MatchPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    MatchPassword(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/password-validation.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AbstractControl} from '@angular/forms';\n\nexport class PasswordValidation {\n\n\tstatic MatchPassword(abstractControl: AbstractControl): any {\n\t\tconst password = abstractControl.get('password').value;\n\t\tconst confirmPassword = abstractControl.get('confirmPassword').value;\n\n\t\tif (password !== confirmPassword) {\n\t\t\tabstractControl.get('confirmPassword').setErrors({MatchPassword: true});\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecoverPasswordComponent.html":{"url":"components/RecoverPasswordComponent.html","title":"component - RecoverPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecoverPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/recover-password/recover-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recover-password\n            \n\n            \n                styleUrls\n                ./recover-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./recover-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resetPasswordForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:16\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected reference for AuthenticationService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:30\n                \n            \n\n\n            \n                \n                    Page initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:39\n                \n            \n\n\n            \n                \n                    Sends the recover password request\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPasswordForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:16\n                            \n                        \n\n                \n                    \n                        Form reference\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core';\n\n\n@Component({\n  selector: 'app-recover-password',\n  templateUrl: './recover-password.component.html',\n  styleUrls: ['./recover-password.component.scss'],\n})\nexport class RecoverPasswordComponent implements OnInit {\n\t/**\n\t * Form reference\n\t */\n  \tresetPasswordForm: FormGroup;\n\n\t/**\n   \t* Class constructor\n   \t* \n   \t* @param router Provider for router navigation\n   \t* @param authenticationService Injected reference for AuthenticationService\n   \t*/\n\tconstructor(private router: Router,\n\t\tprivate authenticationService: AuthenticationService) { }\n\n\t/**\n  \t* Page initialisation\n  \t*/\n\tngOnInit() {\n\t\tthis.resetPasswordForm = new FormGroup({\n\t\t\temail: new FormControl('', [Validators.required])\n\t\t});\n\t}\n\n\t/**\n\t * Sends the recover password request\n\t */\n\tresetPassword() {\n\t\t// TODO handles this when backend ready\n\t\tthis.authenticationService.recoverPassword(this.resetPasswordForm.value.email).subscribe(response => {\n\t\t\tconsole.log(response);\n\t\t\tthis.router.navigate(['/auth/login']);\n\t\t});\n\t}\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      Adresă de email\n      \n    \n    Trimite\n  \n\n\n    \n\n    \n                \n                    ./recover-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Adresă de email              Trimite  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecoverPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RequestInterceptor.html":{"url":"interceptors/RequestInterceptor.html","title":"interceptor - RequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  RequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/request.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Prefixes all requests with environment.serverUrl and adds the authentication token to requests\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/request.interceptor.ts:17\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected service referes the AuthenticationService for handling authentication related operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/request.interceptor.ts:31\n                \n            \n\n\n            \n                \n                    Intercepts all requests that are sent and adds extra information to them\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current request that is being sent\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Handles the next state of the request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The new request, with the additional information\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { Observable } from 'rxjs';\n\nimport { AuthenticationService } from '../authentication/authentication.service';\n\n/**\n * Prefixes all requests with `environment.serverUrl` and adds the authentication token to requests\n */\n@Injectable()\nexport class RequestInterceptor implements HttpInterceptor {\n  \n  /**\n   * Class constructor\n   * @param authenticationService Injected service referes the AuthenticationService for handling authentication related operations\n   */\n  constructor(private authenticationService: AuthenticationService) {}\n\n  /**\n   * Intercepts all requests that are sent and adds extra information to them\n   * @param request The current request that is being sent\n   * @param next Handles the next state of the request\n   * @returns The new request, with the additional information\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    request = request.clone({\n      setHeaders: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json; charset=utf-8',\n      'Authorization': `Bearer ${this.authenticationService.accessToken}`,\n      }\n    });\n\n    if(!request.url.includes('assets')) {\n      request = request.clone({\n        url: environment.serverUrl + request.url\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/reset-password/reset-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                ./reset-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resetPasswordForm\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService, formBuilder: FormBuilder, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected reference for AuthenticationService\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder reference, used in creating rective forms\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for current route\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:39\n                \n            \n\n\n            \n                \n                    Page initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:57\n                \n            \n\n\n            \n                \n                    Sends the reset password request\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPasswordForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:16\n                            \n                        \n\n                \n                    \n                        Form reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:31\n                            \n                        \n\n                \n                    \n                        Provider for router navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:21\n                            \n                        \n\n                \n                    \n                        Token for password reset\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core';\nimport { PasswordValidation } from 'src/app/core/validators/password-validation';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss'],\n})\nexport class ResetPasswordComponent implements OnInit {\n\t/**\n\t * Form reference\n\t */\n \tresetPasswordForm: FormGroup;\n\t\n\t /**\n\t * Token for password reset\n\t */\n\ttoken: string;\n\n\n\t/**\n\t* \n\t* @param router Provider for router navigation\n   \t* @param authenticationService Injected reference for AuthenticationService\n\t* @param formBuilder FormBuilder reference, used in creating rective forms\n\t* @param route Provider for current route\n\t*/\n\tconstructor(public router: Router,\n\t\tprivate authenticationService: AuthenticationService,\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate route: ActivatedRoute) { }\n\n\t/**\n  \t* Page initialisation\n  \t*/\n\tngOnInit() {\n\t\tthis.route.params.subscribe(\n\t\t\t(params) => {\n\t\t\t\tthis.token = params['token'];\n\t\t\t}\n    \t);\n    \n\t\tthis.resetPasswordForm = this.formBuilder.group({\n\t\t\tpassword: ['', Validators.required],\n\t\t\tconfirmPassword: ['', Validators.required],\n\t\t\t}, {\n\t\t\t\tvalidator: PasswordValidation.MatchPassword\n\t\t\t});\n\t}\n\n\t/**\n\t * Sends the reset password request\n\t */\n\tresetPassword() {\n\t\t// TODO handles this when backend ready\n\t\tthis.authenticationService.resetPassword(this.resetPasswordForm.value.password, this.token).subscribe(response => {\n\t\t\tconsole.log(response);\n\t\t\tthis.router.navigate(['/auth/login']);\n\t\t});\n\t}\n}\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      Parolă\n      \n    \n\n    \n      Confirmă Parola\n      \n    \n    Trimite\n  \n\n\n    \n\n    \n                \n                    ./reset-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Parolă                    Confirmă Parola              Trimite  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RootObject.html":{"url":"interfaces/RootObject.html","title":"interface - RootObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RootObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/error.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for error object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attributes\n                                \n                                \n                                        error\n                                \n                                \n                                        message\n                                \n                                \n                                        statusCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                    \n                                \n                                \n                                    \n                                        attributes:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace ErrorModel {\n  /**\n   * Interface for error object\n   */\n  export interface RootObject {\n    statusCode: number;\n    error: string;\n    message: string;\n    attributes?: any;\n  }\n\n  /**\n   * Interface for error message\n   */\n  export interface ErrorMessageObject {\n    id: number;\n    error: string;\n    type: string;\n    serviceUrl: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteReusableStrategy.html":{"url":"classes/RouteReusableStrategy.html","title":"class - RouteReusableStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteReusableStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/route-reusable-strategy.ts\n        \n\n            \n                Description\n            \n            \n                A route strategy allowing for explicit route reuse.\nUsed as a workaround for https://github.com/angular/angular/issues/18374\nTo reuse a given route, add data: { reuse: true } to the route definition.\n\n            \n\n            \n                Extends\n            \n            \n                        RouteReuseStrategy\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                retrieve\n                            \n                            \n                                    Public\n                                shouldAttach\n                            \n                            \n                                    Public\n                                shouldDetach\n                            \n                            \n                                    Public\n                                shouldReuseRoute\n                            \n                            \n                                    Public\n                                store\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            retrieve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    retrieve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:47\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DetachedRouteHandle | null\n\n                    \n                    \n                        null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldAttach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldAttach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:38\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        false\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldDetach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldDetach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:19\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        false\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldReuseRoute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:56\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    future\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Future activated route\n\n                                    \n                                \n                                \n                                    curr\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            store\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:28\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                                \n                                    detachedTree\n                                    \n                                            DetachedRouteHandle | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The detached tree\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ActivatedRouteSnapshot,\n  DetachedRouteHandle,\n  RouteReuseStrategy\n} from '@angular/router';\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n  \n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @returns false\n   */\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @param detachedTree The detached tree\n   */\n  public store(\n    route: ActivatedRouteSnapshot,\n    detachedTree: DetachedRouteHandle | null\n  ): void {}\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @returns false\n   */\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @returns null\n   */\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param future Future activated route\n   * @param curr Current activated route\n   */\n  public shouldReuseRoute(\n    future: ActivatedRouteSnapshot,\n    curr: ActivatedRouteSnapshot\n  ): boolean {\n    return future.routeConfig === curr.routeConfig || future.data.reuse;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SendMessageComponent.html":{"url":"components/SendMessageComponent.html","title":"component - SendMessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SendMessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/volunteer/send-message/send-message.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-send-message\n            \n\n            \n                styleUrls\n                ./send-message.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./send-message.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                base64Image\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Private\n                                routeSub\n                            \n                            \n                                    Private\n                                volunteer\n                            \n                            \n                                    Private\n                                volunteerId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addImage\n                            \n                            \n                                checkPemission\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, sms: SMS, volunteerService: VolunteerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/volunteer/send-message/send-message.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for current route\n\n                                                        \n                                                \n                                                \n                                                        sms\n                                                  \n                                                        \n                                                                    SMS\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for sending SMS messages\n\n                                                        \n                                                \n                                                \n                                                        volunteerService\n                                                  \n                                                        \n                                                                        VolunteerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addImage\n                        \n                        \n                    \n                \n            \n            \n                \naddImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:67\n                \n            \n\n\n            \n                \n                    Adds an image from camera to the app and uses base64 codification to convert it into a string\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkPemission\n                        \n                        \n                    \n                \n            \n            \n                \ncheckPemission()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:94\n                \n            \n\n\n            \n                \n                    Checks for SMS permission, if granted sends the SMS\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:60\n                \n            \n\n\n            \n                \n                    Triggered when page is removed, unsubscribes from the route changes\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:48\n                \n            \n\n\n            \n                \n                    Page initialisation: the volunteer id needs to be retrieved from the url\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:81\n                \n            \n\n\n            \n                \n                    Sends the message and image to the selected volunteer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            base64Image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:34\n                            \n                        \n\n                \n                    \n                        Codification of the image that will be sent\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:29\n                            \n                        \n\n                \n                    \n                        The message that gets sent\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            routeSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:18\n                            \n                        \n\n                \n                    \n                        Route subscription, used for retriving parameters inserted in url route\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            volunteer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Volunteer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            volunteerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:23\n                            \n                        \n\n                \n                    \n                        The id of the volunteer that will receive the message\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Camera } from '@ionic-native/camera';\nimport { SMS } from '@ionic-native/sms/ngx';\nimport { VolunteerService } from 'src/app/core';\nimport { Volunteer } from 'src/app/core/model/volunteer.model';\n\n@Component({\n  selector: 'app-send-message',\n  templateUrl: './send-message.component.html',\n  styleUrls: ['./send-message.component.scss']\n})\nexport class SendMessageComponent implements OnInit, OnDestroy {\n  /**\n   * Route subscription, used for retriving parameters inserted in url route\n   */\n  private routeSub: Subscription;\n\n  /**\n   * The id of the volunteer that will receive the message\n   */\n  private volunteerId: string;\n  private volunteer: Volunteer;\n\n  /**\n   * The message that gets sent\n   */\n  public message = '';\n\n  /**\n   * Codification of the image that will be sent\n   */\n  public base64Image: string;\n\n  /**\n   * \n   * @param route Provider for current route\n   * @param sms Provider for sending SMS messages\n   */\n  constructor(private route: ActivatedRoute,\n    private sms: SMS,\n    private volunteerService: VolunteerService) { }\n\n  /**\n   * Page initialisation: the volunteer id needs to be retrieved from the url\n   */\n  ngOnInit() {\n    this.routeSub = this.route.params.subscribe(params => {\n      this.volunteerId = params['id'];\n      this.volunteerService.getVolunteerById(this.volunteerId).subscribe((response) => {\n        this.volunteer = response.docs[0]\n      });\n    });\n  }\n\n  /**\n   * Triggered when page is removed, unsubscribes from the route changes\n   */\n  ngOnDestroy() {\n    this.routeSub.unsubscribe();\n  }\n\n  /**\n   * Adds an image from camera to the app and uses base64 codification to convert it into a string\n   */\n  addImage() {\n    Camera.getPicture({\n      destinationType: Camera.DestinationType.DATA_URL,\n      targetWidth: 1000,\n      targetHeight: 1000\n    }).then((imageData) => {\n      this.base64Image = \"data:image/jpeg;base64,\" + imageData;\n    }, (err) => {\n    });\n  }\n\n  /**\n   * Sends the message and image to the selected volunteer\n   */\n  sendMessage() {\n    const options = {\n        replaceLineBreaks: false,\n        android: {\n            intent: 'INTENT'\n        }\n    };\n    this.sms.send(this.volunteer.phone, this.message, options);\n  }\n\n  /**\n   * Checks for SMS permission, if granted sends the SMS\n   */\n  checkPemission(){\n    this.sms.hasPermission();\n    if(this.sms.hasPermission()) {\n      this.sendMessage();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n  \n\n\n\n   -->\n  \n    \n    \n      Trimite mesaj\n    \n  \n\n  \n    \n      \n        Mesajul tău\n      \n    \n    \n      \n    \n    \n      \n        \n        \n            Adaugă o fotografie\n        \n      \n      \n        \n          \n        \n      \n    \n  \n\n  Trimite mesaj\n\n    \n\n    \n                \n                    ./send-message.component.scss\n                \n                .sc-ion-textarea-md-h {\n    margin-top: 0;\n}\n\nion-button ion-icon {\n    font-size: 24px;\n}\n\n.full-button-bottom {\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    height: 40px;\n    margin: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                       -->                Trimite mesaj                          Mesajul tău                                                              Adaugă o fotografie                                                            Trimite mesaj'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SendMessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UnauthenticatedGuard.html":{"url":"guards/UnauthenticatedGuard.html","title":"guard - UnauthenticatedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    UnauthenticatedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/authentication/unauthenticated.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Provides a guard for protecting unauthenticated routes (such as login)\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/unauthenticated.guard.ts:10\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular value which handles routing operations\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service which handles the authentication operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/unauthenticated.guard.ts:29\n                \n            \n\n\n            \n                \n                    Determines if a user can access a route, depending on its state\nIf the route isn't allowed, it automatically redirects to home page\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        a boolean value, current user's status: unauthenticated or authenticated\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { AuthenticationService } from './authentication.service';\n\n/**\n * Provides a guard for protecting unauthenticated routes (such as login)\n */\n@Injectable()\nexport class UnauthenticatedGuard implements CanActivate {\n\n   /**\n   * Class constructor\n   * \n   * @param router Angular value which handles routing operations\n   * @param authenticationService The service which handles the authentication operations\n   */\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n   /**\n   * Determines if a user can access a route, depending on its state\n   * If the route isn't allowed, it automatically redirects to home page\n   * \n   * @returns a boolean value, current user's status: unauthenticated or authenticated\n   */\n  canActivate(): boolean {\n    if (!this.authenticationService.isAuthenticated()) {\n      return true;\n    }\n\n    this.router.navigate(['/home'], {\n      replaceUrl: true\n    });\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for user object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        phone\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  /**\n * Interface for login payload\n */\n  export interface LoginPayload {\n    username: string;\n    password: string;\n  }\n\n  /**\n * Interface for user object\n */\n  export interface User {\n    _id: string;\n    name: string;\n    phone?: any;\n    email: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n\n  /**\n * Interface for credentials object\n */\n  export interface Credentials {\n    user: User;\n    token: string;\n    session: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ValidateVolunteerComponent.html":{"url":"components/ValidateVolunteerComponent.html","title":"component - ValidateVolunteerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ValidateVolunteerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-validate-volunteer\n            \n\n            \n                styleUrls\n                ./validate-volunteer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./validate-volunteer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cities\n                            \n                            \n                                city\n                            \n                            \n                                counties\n                            \n                            \n                                county\n                            \n                            \n                                courses\n                            \n                            \n                                keyword\n                            \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                            \n                                volunteerIdWithDetails\n                            \n                            \n                                volunteers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allocateUser\n                            \n                            \n                                confirmAllocation\n                            \n                            \n                                countySelectionChanged\n                            \n                            \n                                doRefresh\n                            \n                            \n                                getCityList\n                            \n                            \n                                getCountyList\n                            \n                            \n                                getData\n                            \n                            \n                                loadData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openMenu\n                            \n                            \n                                searchKeyword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(volunteerService: VolunteerService, allocationService: AllocationService, locationsService: LocationsService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        volunteerService\n                                                  \n                                                        \n                                                                        VolunteerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for volunteer related operations\n\n                                                        \n                                                \n                                                \n                                                        allocationService\n                                                  \n                                                        \n                                                                        AllocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for volunteer allocation related operations\n\n                                                        \n                                                \n                                                \n                                                        locationsService\n                                                  \n                                                        \n                                                                        LocationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for location selection\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                        CourseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for course related operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allocateUser\n                        \n                        \n                    \n                \n            \n            \n                \nallocateUser(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:92\n                \n            \n\n\n            \n                \n                    Opens the allocation menu for the selected user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String containing the id of the volunteer that was selected for allocation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmAllocation\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmAllocation(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:103\n                \n            \n\n\n            \n                \n                    Allocate the selected volunteer for a location using the allocation service\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String containing the id of the volunteer that was selected for allocation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            countySelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncountySelectionChanged(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:198\n                \n            \n\n\n            \n                \n                    When a county is selected, the form's value is updated and starts retriving the list of cities from that county\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changing event, triggered when a change is detected on an element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doRefresh\n                        \n                        \n                    \n                \n            \n            \n                \ndoRefresh(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:167\n                \n            \n\n\n            \n                \n                    Refreshes the data, on scroll up the page is reset\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Scroll event \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCityList\n                        \n                        \n                    \n                \n            \n            \n                \ngetCityList(county: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    county\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Retrieves the list of cities from the selected county\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCountyList\n                        \n                        \n                    \n                \n            \n            \n                \ngetCountyList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:178\n                \n            \n\n\n            \n                \n                    Retrives the list of counties from the locations service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:60\n                \n            \n\n\n            \n                \n                    Retrieves data, filtered by user's selections\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadData\n                        \n                        \n                    \n                \n            \n            \n                \nloadData(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:149\n                \n            \n\n\n            \n                \n                    Loads more data, the response is paginated so on scorll down more informations needs to be loaded \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Scroll event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:52\n                \n            \n\n\n            \n                \n                    Page initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openMenu\n                        \n                        \n                    \n                \n            \n            \n                \nopenMenu(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:76\n                \n            \n\n\n            \n                \n                    Opens a details menu for the selected volunteer and closes all already opened ones\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String containing the id of the volunteer that was selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchKeyword\n                        \n                        \n                    \n                \n            \n            \n                \nsearchKeyword(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:123\n                \n            \n\n\n            \n                \n                    When a value is inserted in the search box, the function gets triggered and sends the inserted value to the volunteer service\nif the value isn't null or empty, the response matches the user's input\notherwise it's the whole list of volunteers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Change event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:35\n                            \n                        \n\n                \n                    \n                        Limit of volunteers per page\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:30\n                            \n                        \n\n                \n                    \n                        Pagination\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volunteerIdWithDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:19\n                            \n                        \n\n                \n                    \n                        String that contains the id of the volunteer that currently has the open details\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volunteers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { VolunteerService } from 'src/app/core/service/volunteer.service';\nimport { AllocationService } from 'src/app/core/service/allocation.service';\nimport { LocationsService } from 'src/app/core/service/locations.service';\nimport { CourseService } from 'src/app/core';\n\n@Component({\n  selector: 'app-validate-volunteer',\n  templateUrl: './validate-volunteer.component.html',\n  styleUrls: ['./validate-volunteer.component.scss'],\n})\nexport class ValidateVolunteerComponent implements OnInit {\n  volunteers = [];\n  keyword = '';\n\n  /**\n   * String that contains the id of the volunteer that currently has the open details\n   */\n  volunteerIdWithDetails: string;\n  \n  courses = [];\n  counties = [];\n  cities = [];\n  county = '';\n  city = '';\n\n  /**\n   * Pagination\n   */\n  page = 0;\n  \n  /**\n   * Limit of volunteers per page\n   */\n  limit = 10;\n\n  /**\n   * \n   * @param volunteerService Provider for volunteer related operations\n   * @param allocationService Provider for volunteer allocation related operations\n   * @param locationsService Provider for location selection\n   * @param courseService Provider for course related operations\n   */\n  constructor(private volunteerService: VolunteerService,\n    private allocationService: AllocationService,\n    private locationsService: LocationsService,\n    private courseService: CourseService) { }\n\n  /**\n  * Page initialisation\n  */\n  ngOnInit() {\n   this.getData();\n   this.getCountyList();\n  }\n\n    /**\n   * Retrieves data, filtered by user's selections\n   */\n  getData() {\n    if(this.page === 0) {\n      this.volunteers = [];\n    }\n\n    this.volunteerService.getVolunteers(this.page, this.limit).subscribe((response: any) => {\n      response.rows.forEach(volunteer => {\n        this.volunteers.push(volunteer.doc);\n      });\n    });\n  }\n\n  /**\n   * Opens a details menu for the selected volunteer and closes all already opened ones\n   * @param volunteerId String containing the id of the volunteer that was selected\n   */\n  openMenu(volunteerId: string) {\n    this.courses = [];\n    if(this.volunteerIdWithDetails === volunteerId){\n      this.volunteerIdWithDetails = null;\n    } else{\n      this.volunteerIdWithDetails = volunteerId;\n      this.courseService.getCourseByVolunteerId(volunteerId).subscribe(response => {\n        this.courses = response.docs;\n      });\n    }\n  }\n\n    /**\n   * Opens the allocation menu for the selected user\n   * @param volunteerId String containing the id of the volunteer that was selected for allocation\n   */\n  allocateUser(volunteerId: string) {\n    const index = this.volunteers.findIndex(volunteer => volunteer._id === volunteerId);\n    if (index >= 0) {\n      this.volunteers[index].isInAllocation = true;\n    }\n  }\n\n   /**\n   * Allocate the selected volunteer for a location using the allocation service\n   * @param volunteerId String containing the id of the volunteer that was selected for allocation\n   */\n  confirmAllocation(volunteerId: string) {\n    const index = this.volunteers.findIndex(volunteer => volunteer._id === volunteerId);\n    if (index >= 0) {\n      this.allocationService.createAllocation(this.volunteers[index], this.county, this.city, this.volunteers[index].organisation).subscribe(() => {   \n        this.volunteers[index] = this.volunteerService.getVolunteerById(volunteerId).subscribe((response) => {\n          if(response.docs && response.docs.length > 0) {\n            this.volunteers[index] = response.docs[0];\n          }\n          this.volunteers[index].isInAllocation = false;\n        });\n      });\n    }\n  }\n\n  /**\n   * When a value is inserted in the search box, the function gets triggered and sends the inserted value to the volunteer service\n   * if the value isn't null or empty, the response matches the user's input\n   * otherwise it's the whole list of volunteers\n   * @param event Change event\n   */\n  searchKeyword(event: any) {\n    if(event && event.target){\n      this.keyword = event.target.value;\n\n      if (this.keyword && this.keyword.trim() != '') {\n        this.volunteerService.search(this.keyword.toLowerCase(), this.page, 10).subscribe((data: any) => {\n          this.volunteers = data.docs;\n          if(data.docs.length >= 10) {\n            this.page++;\n          }\n        });\n      } else {\n        this.page = 0;\n        this.getData();\n      }\n      \n    } else {\n      this.page = 0;\n      this.getData();\n    }\n  }\n\n   /**\n   * Loads more data, the response is paginated so on scorll down more informations needs to be loaded \n   * @param event Scroll event\n   */\n  loadData(event) {\n    setTimeout(() => {\n      this.page++;\n      this.getData();\n      event.target.complete();\n\n      // App logic to determine if all data is loaded\n      // and disable the infinite scroll\n      if (this.volunteers.length == 20) {\n        event.target.disabled = true;\n      }\n    }, 500);\n  }\n\n  /**\n   * Refreshes the data, on scroll up the page is reset\n   * @param event Scroll event \n   */\n  doRefresh(event) {\n    setTimeout(() => {\n      this.page = 0;\n      this.getData();\n      event.target.complete();\n    }, 1000);\n  }\n\n  /**\n   * Retrives the list of counties from the locations service\n   */\n  getCountyList() {\n    this.locationsService.getCountyList().subscribe((response) => {\n      this.counties = response;\n    });\n  }\n\n  /**\n   * \n   * @param county Retrieves the list of cities from the selected county\n   */\n  getCityList(county: string) {\n    this.locationsService.getCityList().subscribe((response) => {\n      this.cities = response.filter(city => city.county === county);\n    });\n  }\n\n  /**\n   * When a county is selected, the form's value is updated and starts retriving the list of cities from that county\n   * @param event Changing event, triggered when a change is detected on an element\n   */\n  countySelectionChanged(event) {\n    this.getCityList(event.detail.value);\n  }\n}\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n  \n\n\n  \n    \n  \n\n  \n    Caută după nume, CNP sau organizație\n  \n\n  \n    \n    \n      Caută\n    \n  \n\n  \n    \n      \n        \n          {{volunteer.name}}\n        \n        \n          \n            {{(volunteer.organisation.name)}}\n          \n          \n            Neafiliat\n          \n        \n        \n        \n        \n        \n      \n\n      \n        \n          \n            Voluntar acreditat pentru {{course.name}}.\n          \n        \n\n        \n          \n            {{volunteer.job}}.\n          \n        \n\n        \n          \n            Înregistrat în {{volunteer.created | date: 'dd.MM.yyyy'}}.\n          \n        \n\n        \n          \n            \n              Trimite mesaj\n            \n          \n          \n            \n              Alocă voluntar\n            \n          \n          \n            \n              Voluntar alocat\n            \n          \n        \n\n        \n          \n            \n              Județ\n              \n                {{county.name}}\n              \n            \n            \n              Localitate\n              \n                {{city.name}}\n              \n            \n          \n          \n            \n            \n              \n                Confirmă\n              \n            \n          \n        \n      \n    \n  \n\n  \n    \n    \n  \n\n    \n\n    \n                \n                    ./validate-volunteer.component.scss\n                \n                .search-box ion-item.sc-ion-input-md-h:not(.item-label), ion-item:not(.item-label) .sc-ion-input-md-h {\n    --padding-start: 5px;\n}\n\n.search-box ion-button {\n    text-transform: capitalize;\n    margin: 0;\n    --padding-bottom: 15px;\n    --padding-top: 15px;\n    --padding-end: 15px;\n    --padding-start: 15px;\n    margin-top: 0;\n    --border-radius: 0 2px 2px 0;\n    height: 35px;\n    --box-shadow:none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  Caută după nume, CNP sau organizație                  Caută                                    {{volunteer.name}}                                      {{(volunteer.organisation.name)}}                                Neafiliat                                                                                            Voluntar acreditat pentru {{course.name}}.                                                {{volunteer.job}}.                                                Înregistrat în {{volunteer.created | date: \\'dd.MM.yyyy\\'}}.                                                              Trimite mesaj                                                          Alocă voluntar                                                          Voluntar alocat                                                                          Județ                              {{county.name}}                                                    Localitate                              {{city.name}}                                                                                                    Confirmă                                                                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ValidateVolunteerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Volunteer.html":{"url":"classes/Volunteer.html","title":"class - Volunteer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Volunteer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/volunteer.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for volunteer object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                added_by\n                            \n                            \n                                address\n                            \n                            \n                                allocation\n                            \n                            \n                                city\n                            \n                            \n                                comments\n                            \n                            \n                                county\n                            \n                            \n                                created\n                            \n                            \n                                email\n                            \n                            \n                                job\n                            \n                            \n                                name\n                            \n                            \n                                organisation\n                            \n                            \n                                phone\n                            \n                            \n                                ssn\n                            \n                            \n                                updated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/model/volunteer.model.ts:23\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            added_by\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            job\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organisation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ssn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Volunteer {\n    _id: string;\n    organisation: {\n       id: string,\n       name: string,\n       website: string\n    };\n    name: string;\n    ssn: string;\n    phone: string;\n    email: string;\n    county: string;\n    city: string;\n    address: string;\n    comments: string;\n    job: string;\n    added_by: number;\n    created: Date;\n    updated: Date;\n    allocation: string;\n    \n    constructor() {}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VolunteerPage.html":{"url":"components/VolunteerPage.html","title":"component - VolunteerPage","body":"\n                   \n\n\n\n\n\n  Components\n  VolunteerPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/volunteer/volunteer.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-volunteer\n            \n\n            \n                styleUrls\n                ./volunteer.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./volunteer.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-volunteer',\n  templateUrl: './volunteer.page.html',\n  styleUrls: ['./volunteer.page.scss'],\n})\nexport class VolunteerPage implements OnInit {\n\n  /**\n  * @ignore\n  */\n  constructor() { }\n\n  /**\n  * @ignore\n  */\n ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./volunteer.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VolunteerPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VolunteerPageModule.html":{"url":"modules/VolunteerPageModule.html","title":"module - VolunteerPageModule","body":"\n                   \n\n\n\n\n    Modules\n    VolunteerPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VolunteerPageModule\n\n\n\ncluster_VolunteerPageModule_declarations\n\n\n\n\nAddVolunteerComponent\n\nAddVolunteerComponent\n\n\n\nVolunteerPageModule\n\nVolunteerPageModule\n\nVolunteerPageModule -->\n\nAddVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nListVolunteerComponent\n\nListVolunteerComponent\n\nVolunteerPageModule -->\n\nListVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nSendMessageComponent\n\nSendMessageComponent\n\nVolunteerPageModule -->\n\nSendMessageComponent->VolunteerPageModule\n\n\n\n\n\nValidateVolunteerComponent\n\nValidateVolunteerComponent\n\nVolunteerPageModule -->\n\nValidateVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nVolunteerPage\n\nVolunteerPage\n\nVolunteerPageModule -->\n\nVolunteerPage->VolunteerPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/volunteer/volunteer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddVolunteerComponent\n                        \n                        \n                            ListVolunteerComponent\n                        \n                        \n                            SendMessageComponent\n                        \n                        \n                            ValidateVolunteerComponent\n                        \n                        \n                            VolunteerPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { VolunteerPage } from './volunteer.page';\nimport { AddVolunteerComponent } from './add-volunteer/add-volunteer.component';\nimport { ListVolunteerComponent } from './list-volunteer/list-volunteer.component';\nimport { ValidateVolunteerComponent } from './validate-volunteer/validate-volunteer.component';\nimport { AuthenticationGuard } from '../../core/authentication/authentication.guard';\nimport { SendMessageComponent } from './send-message/send-message.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VolunteerPage,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'add',\n    component: AddVolunteerComponent,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'list',\n    component: ListVolunteerComponent,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'validate',\n    component: ValidateVolunteerComponent,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'send/:id',\n    component: SendMessageComponent,\n    canActivate: [AuthenticationGuard]\n  }\n\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n  ],\n  declarations: [\n    VolunteerPage,\n    AddVolunteerComponent,\n    ListVolunteerComponent,\n    ValidateVolunteerComponent,\n    SendMessageComponent\n  ]\n})\nexport class VolunteerPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VolunteerService.html":{"url":"injectables/VolunteerService.html","title":"injectable - VolunteerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  VolunteerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/volunteer.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for volunteer related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allocateVolunteer\n                            \n                            \n                                createVolunteer\n                            \n                            \n                                deleteVolunteerById\n                            \n                            \n                                filter\n                            \n                            \n                                getVolunteerById\n                            \n                            \n                                getVolunteerBySsn\n                            \n                            \n                                getVolunteers\n                            \n                            \n                                search\n                            \n                            \n                                updateVolunteer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/volunteer.service.ts:29\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Volunteers Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                        CourseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for course related operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allocateVolunteer\n                        \n                        \n                    \n                \n            \n            \n                \nallocateVolunteer(allocationId: string, volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:242\n                \n            \n\n\n            \n                \n                    Searches for a volunteer with the given volunteer id and allocates it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    allocationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Last allocation id\n\n                                    \n                                \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createVolunteer\n                        \n                        \n                    \n                \n            \n            \n                \ncreateVolunteer(name: string, ssn: string, phone: string, county: string, city: string, organisation: any, course: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:134\n                \n            \n\n\n            \n                \n                    Creates a volunteer entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's name\n\n                                    \n                                \n                                \n                                    ssn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's ssn (Social Security Number)\n\n                                    \n                                \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's phone number\n\n                                    \n                                \n                                \n                                    county\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's county\n\n                                    \n                                \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's city\n\n                                    \n                                \n                                \n                                    organisation\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object value containing the new volunteer's organisation \nEither contains an object with the following properties {id, name, website}, or it's null\n\n                                    \n                                \n                                \n                                    course\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer's course with properties: {id, name, acredited, obtained}\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with the created object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteVolunteerById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteVolunteerById(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:189\n                \n            \n\n\n            \n                \n                    Deletes an entry by its id from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The volunteer id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter(county: string, organisationId: string, courseName: string, page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:204\n                \n            \n\n\n            \n                \n                    Filters local Volunteers database by the given parameters' values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    county\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        County name\n\n                                    \n                                \n                                \n                                    organisationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Organisation id\n\n                                    \n                                \n                                \n                                    courseName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course Name\n\n                                    \n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A number defining the current page of volunteers from the total list (used to paginate the response)\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of volunteers per page\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all volunteers matching the filters\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolunteerById\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolunteerById(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:101\n                \n            \n\n\n            \n                \n                    Finds a volunteer by its id in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer's id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the volunteer with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolunteerBySsn\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolunteerBySsn(ssn: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:114\n                \n            \n\n\n            \n                \n                    Finds a volunteer by its ssn in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ssn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A ssn code\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the volunteer with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolunteers\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolunteers(page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:55\n                \n            \n\n\n            \n                \n                    Getter method for all volunteers from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all volunteers\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(keyword: string, page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:72\n                \n            \n\n\n            \n                \n                    Searches for all volunteers from the local database whose name,ssn or organisation name matches the keyword\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    keyword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The string used for search\n\n                                    \n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A number defining the current page of volunteers from the total list (used to paginate the response)\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of volunteers per page\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all volunteers\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateVolunteer\n                        \n                        \n                    \n                \n            \n            \n                \nupdateVolunteer(volunteer: Volunteer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:170\n                \n            \n\n\n            \n                \n                    Updates a volunteer entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteer\n                                    \n                                                Volunteer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new volunteer entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { Volunteer } from '../model/volunteer.model';\nimport { from, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CourseService } from './course.service';\n\n/**\n * Reference for local PouchDB Volunteers Database\n */\nvar localDB = new PouchDB('volunteers');\n\n/**\n * PouchDB find plugin added \n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Volunteers Database\n */\nvar remoteDB = new PouchDB(environment.databaseURL + '/volunteers');\n\n/**\n * Provider for volunteer related operations\n */\n@Injectable()\nexport class VolunteerService {\n\n   /**\n   * Class constructor, sets the synchronization options for CouchDB and PouchDB Volunteers Database\n   * @param courseService Provider for course related operations\n   */\n  constructor(private courseService: CourseService) {\n    let options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);    \n\n    localDB.createIndex({\n      index: {fields: ['name', 'ssn', 'organisation.name','course.[].name', 'organisation.id', 'county', 'city', 'job', 'comments']}\n    });\n   }\n\n  /**\n  * Getter method for all volunteers from the local database\n  * @params page A number defining the current page of volunteers from the total list (used to paginate the response)\n  * @params limit The number of volunteers per page\n  * @returns An Observable with all volunteers\n  */\n  getVolunteers(page: number, limit: number): Observable {\n    const skip = page * limit;\n    return from(localDB.allDocs({\n        limit: limit,\n        include_docs: true,\n        skip: skip,\n        endkey: \"_design\"\n    }));\n  }\n \n  /**\n  * Searches for all volunteers from the local database whose name,ssn or organisation name matches the keyword\n  * @param keyword The string used for search\n  * @param page A number defining the current page of volunteers from the total list (used to paginate the response)\n  * @param limit The number of volunteers per page\n  * @returns An Observable with all volunteers\n  */\n  search(keyword: string, page: number, limit: number): Observable {\n    const skip = page * limit;\n    const pattern = new RegExp('.*' + keyword + '.*','ig');\n    return from(localDB.find({\n      selector: {\n        \"$or\": [\n          {\n          \"name\": {$regex: pattern},\n          },\n           {\n             \"ssn\": {$regex: pattern},\n           },\n           {\n             \"organisation.name\": {$regex: pattern},\n           },\n        ]        \n      },\n      limit: limit,\n      include_docs: true,\n      skip: skip,\n      endkey: \"_design\"\n    }));\n  }\n\n   /**\n  * Finds a volunteer by its id in the local database\n  * @param volunteerId Volunteer's id\n  * @returns An Observable containing the volunteer with that id\n  */\n  getVolunteerById(volunteerId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        _id: {$eq: volunteerId},\n      }\n    }));\n  }\n\n  /**\n  * Finds a volunteer by its ssn in the local database\n  * @param ssn A ssn code\n  * @returns An Observable containing the volunteer with that id\n  */\n  getVolunteerBySsn(ssn: string): Observable {\n    return from(localDB.find({\n      selector: {\n        ssn: {$eq: ssn},\n      }\n    }));\n  }\n\n  /**\n   *  Creates a volunteer entry in the local database\n   * @param name String value containing the new volunteer's name\n   * @param ssn String value containing the new volunteer's ssn (Social Security Number)\n   * @param phone String value containing the new volunteer's phone number\n   * @param county String value containing the new volunteer's county\n   * @param city String value containing the new volunteer's city\n   * @param organisation Object value containing the new volunteer's organisation \n   * Either contains an object with the following properties {id, name, website}, or it's null\n   * @param course Volunteer's course with properties: {id, name, acredited, obtained}\n   * @returns An Observable with the created object\n   */\n  createVolunteer(name: string, ssn: string, phone: string, county: string, city: string, organisation: any, course: any): Observable {\n    let volunteer = new Volunteer;\n    volunteer.name = name;\n    volunteer.ssn = ssn;\n    volunteer.county = county;\n    volunteer.city = city;\n    volunteer.created = new Date();\n    volunteer.updated = new Date();\n    volunteer.allocation = '';\n    volunteer.phone = phone;\n\n    if(organisation) {\n      volunteer.organisation = {\n        \"id\": organisation._id,\n        \"name\": organisation.name,\n        \"website\": organisation.website\n      };\n    } else {\n      volunteer.organisation = null;\n    }\n\n    return from(localDB.post(volunteer))\n    .pipe(\n        map((response) => {\n          if(course) {\n            this.courseService.createCourse(course.name, volunteer._id, course.acredited, course.obtained).subscribe(() => {});\n          }\n          return response;\n        })\n      );\n  }\n\n   /**\n  * Updates a volunteer entry in the local database\n  * @param volunteer The new volunteer entry\n  */\n  updateVolunteer(volunteer: Volunteer) {\n    localDB.get(volunteer._id).then(function (doc) {\n      doc.name = volunteer.name ? volunteer.name : doc.name;\n      doc.ssn = volunteer.ssn ? volunteer.ssn : doc.ssn;\n      doc.phone = volunteer.phone ? volunteer.phone : doc.phone;\n      doc.county = volunteer.county ? volunteer.county : doc.county;\n      doc.city = volunteer.city ? volunteer.city : doc.city;\n      doc.organisation = volunteer.organisation ? volunteer.organisation : doc.organisation;\n      doc.comments = volunteer.comments ? volunteer.comments : doc.comments;\n      doc.job = volunteer.job ? volunteer.job : doc.job;\n      doc.updated = new Date();\n      localDB.put(doc);\n    });\n  }\n\n   /**\n   * Deletes an entry by its id from the local database\n   * @param volunteerId The volunteer id\n   */\n  deleteVolunteerById(volunteerId: string) {\n    localDB.get(volunteerId).then(function (doc) {\n      localDB.remove(doc);\n    });\n  }\n\n  /**\n   * Filters local Volunteers database by the given parameters' values\n   * @param county County name\n   * @param organisationId Organisation id\n   * @param courseName Course Name\n   * @param page A number defining the current page of volunteers from the total list (used to paginate the response)\n   * @param limit The number of volunteers per page\n   * @returns An Observable with all volunteers matching the filters\n   */\n  filter(county: string, organisationId: string, courseName: string, page:number, limit: number): Observable {\n    const skip = page * limit;\n    let selector:any = {\"$and\" : []};\n\n      \n    if(county !== 'all') {\n      selector['$and'].push( {\n        \"county\": {$eq: county},\n      });\n    }\n\n    if(organisationId) {\n      selector['$and'].push(  {\n        \"organisation.id\": {$eq: organisationId},\n      });\n    }\n\n    if(courseName) {\n      selector['$and'].push( {\"courses\": {\n        \"$elemMatch\" : {\n          \"name\": {$eq: courseName},\n          }\n        }\n      });\n    }\n\n    return from(localDB.find({\n      selector: selector,\n      limit: limit,\n      skip: skip\n    }));\n  }\n\n  /**\n   * Searches for a volunteer with the given volunteer id and allocates it\n   * @param allocationId Last allocation id\n   * @param volunteerId Volunteer id\n   */\n  allocateVolunteer(allocationId: string, volunteerId: string) {\n    return localDB.get(volunteerId).then(function (doc) {\n      doc.allocation = allocationId;\n      doc.updated = new Date();\n      localDB.put(doc);\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.service.ts\n            \n            variable\n            credentialsKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/authentication/unauthenticated.guard.ts\n            \n            guard\n            UnauthenticatedGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/http/error-handler.interceptor.ts\n            \n            interceptor\n            ErrorHandlerInterceptor\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/http/error-handler.interceptor.ts\n            \n            variable\n            credentialsKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/http/request.interceptor.ts\n            \n            interceptor\n            RequestInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            clearData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            createCookie\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            getData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            getSessionName\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            readCookie\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            setData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/model/allocation.model.ts\n            \n            class\n            Allocation\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            interface\n            Credentials\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            interface\n            LoginPayload\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            interface\n            User\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/core/model/course.model.ts\n            \n            class\n            Course\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/core/model/error.model.ts\n            \n            interface\n            ErrorMessageObject\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/core/model/error.model.ts\n            \n            interface\n            RootObject\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/core/model/organisation.model.ts\n            \n            class\n            Organisation\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/core/model/volunteer.model.ts\n            \n            class\n            Volunteer\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                src/app/core/route-reusable-strategy.ts\n            \n            class\n            RouteReusableStrategy\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/service/allocation.service.ts\n            \n            injectable\n            AllocationService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/service/allocation.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/allocation.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/course.service.ts\n            \n            injectable\n            CourseService\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/core/service/course.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/course.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            class\n            DatabaseSyncService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            localAllocationsDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            localCoursesDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            localOrganisationsDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            localVolunteersDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            remoteAllocationsDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            remoteCoursesDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            remoteOrganisationsDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            remoteVolunteersDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/error-message.service.ts\n            \n            injectable\n            ErrorMessageService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/service/locations.service.ts\n            \n            injectable\n            LocationsService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/service/organisation.service.ts\n            \n            injectable\n            OrganisationService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/service/organisation.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/organisation.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/volunteer.service.ts\n            \n            injectable\n            VolunteerService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/core/service/volunteer.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/volunteer.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/password-validation.ts\n            \n            class\n            PasswordValidation\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/pages/about/about.page.ts\n            \n            component\n            AboutPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/authentication.page.ts\n            \n            component\n            AuthenticationPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/logout/logout.component.ts\n            \n            component\n            LogoutComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/recover-password/recover-password.component.ts\n            \n            component\n            RecoverPasswordComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            component\n            HomePage\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/add-volunteer/add-volunteer.component.ts\n            \n            component\n            AddVolunteerComponent\n            \n                68 %\n                (20/29)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/list-volunteer/list-volunteer.component.ts\n            \n            component\n            ListVolunteerComponent\n            \n                61 %\n                (19/31)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/send-message/send-message.component.ts\n            \n            component\n            SendMessageComponent\n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts\n            \n            component\n            ValidateVolunteerComponent\n            \n                56 %\n                (13/23)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/volunteer.page.ts\n            \n            component\n            VolunteerPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.local.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^7.2.2\n        \n            @angular/core : ^7.2.2\n        \n            @angular/forms : ^7.2.2\n        \n            @angular/http : ^7.2.2\n        \n            @angular/platform-browser : ^7.2.2\n        \n            @angular/platform-browser-dynamic : ^7.2.2\n        \n            @angular/router : ^7.2.2\n        \n            @ionic-native/camera : ^5.9.0\n        \n            @ionic-native/core : ^5.11.0\n        \n            @ionic-native/date-picker : ^5.11.0\n        \n            @ionic-native/deeplinks : ^5.11.0\n        \n            @ionic-native/sms : ^5.11.0\n        \n            @ionic-native/splash-screen : ^5.0.0\n        \n            @ionic-native/status-bar : ^5.9.0\n        \n            @ionic/angular : ^4.6.2\n        \n            @ionic/lab : ^2.0.6\n        \n            @types/pouchdb : ^6.4.0\n        \n            cordova-android : ^8.0.0\n        \n            cordova-ios : ^5.0.1\n        \n            cordova-plugin-camera : ^4.0.3\n        \n            cordova-plugin-datepicker : ^0.9.3\n        \n            cordova-sms-plugin : ^1.0.0\n        \n            core-js : ^2.5.4\n        \n            ionic-plugin-deeplinks : ^1.0.20\n        \n            pouchdb : ^7.1.1\n        \n            pouchdb-find : ^7.1.1\n        \n            rxjs : ~6.5.1\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            clearData   (src/.../local-storage.service.ts)\n                        \n                        \n                            createCookie   (src/.../local-storage.service.ts)\n                        \n                        \n                            getData   (src/.../local-storage.service.ts)\n                        \n                        \n                            getSessionName   (src/.../local-storage.service.ts)\n                        \n                        \n                            readCookie   (src/.../local-storage.service.ts)\n                        \n                        \n                            setData   (src/.../local-storage.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/local-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            clearData\n                        \n                        \n                    \n                \n            \n            \n                \nclearData(type: any)\n                \n            \n\n\n\n\n            \n                \n                    Clears data from storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Storage type (local or session)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createCookie\n                        \n                        \n                    \n                \n            \n            \n                \ncreateCookie(name: any, value: any, days: any)\n                \n            \n\n\n\n\n            \n                \n                    Creates a cookie entry\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie name\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie value\n\n                                    \n                                \n                                \n                                    days\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie expiration number of days\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData(type: any)\n                \n            \n\n\n\n\n            \n                \n                    Retrieves all data from storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Storage type (local or session)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSessionName\n                        \n                        \n                    \n                \n            \n            \n                \ngetSessionName()\n                \n            \n\n\n\n\n            \n                \n                    Getter for session name\n\n\n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readCookie\n                        \n                        \n                    \n                \n            \n            \n                \nreadCookie(name: any)\n                \n            \n\n\n\n\n            \n                \n                    Getter for a cookie document by its name\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie's name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setData\n                        \n                        \n                    \n                \n            \n            \n                \nsetData(type: any, data: any)\n                \n            \n\n\n\n\n            \n                \n                    Sets data into storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Storage type (local or session)\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Information that needs to be stored\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthenticationPageModule\n\n\n\ncluster_AuthenticationPageModule_declarations\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_VolunteerPageModule\n\n\n\ncluster_VolunteerPageModule_declarations\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nAuthenticationPage\n\nAuthenticationPage\n\n\n\nAuthenticationPageModule\n\nAuthenticationPageModule\n\nAuthenticationPageModule -->\n\nAuthenticationPage->AuthenticationPageModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthenticationPageModule -->\n\nLoginComponent->AuthenticationPageModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAuthenticationPageModule -->\n\nLogoutComponent->AuthenticationPageModule\n\n\n\n\n\nRecoverPasswordComponent\n\nRecoverPasswordComponent\n\nAuthenticationPageModule -->\n\nRecoverPasswordComponent->AuthenticationPageModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationPageModule -->\n\nResetPasswordComponent->AuthenticationPageModule\n\n\n\n\n\nAllocationService\n\nAllocationService\n\nCoreModule -->\n\nAllocationService->CoreModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nCoreModule -->\n\nAuthenticationService->CoreModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nCoreModule -->\n\nCourseService->CoreModule\n\n\n\n\n\nErrorHandlerInterceptor\n\nErrorHandlerInterceptor\n\nCoreModule -->\n\nErrorHandlerInterceptor->CoreModule\n\n\n\n\n\nErrorMessageService\n\nErrorMessageService\n\nCoreModule -->\n\nErrorMessageService->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\nLocationsService\n\nLocationsService\n\nCoreModule -->\n\nLocationsService->CoreModule\n\n\n\n\n\nOrganisationService\n\nOrganisationService\n\nCoreModule -->\n\nOrganisationService->CoreModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\n\n\nVolunteerService\n\nVolunteerService\n\nCoreModule -->\n\nVolunteerService->CoreModule\n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nAddVolunteerComponent\n\nAddVolunteerComponent\n\n\n\nVolunteerPageModule\n\nVolunteerPageModule\n\nVolunteerPageModule -->\n\nAddVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nListVolunteerComponent\n\nListVolunteerComponent\n\nVolunteerPageModule -->\n\nListVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nSendMessageComponent\n\nSendMessageComponent\n\nVolunteerPageModule -->\n\nSendMessageComponent->VolunteerPageModule\n\n\n\n\n\nValidateVolunteerComponent\n\nValidateVolunteerComponent\n\nVolunteerPageModule -->\n\nValidateVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nVolunteerPage\n\nVolunteerPage\n\nVolunteerPageModule -->\n\nVolunteerPage->VolunteerPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        27 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AboutPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VolunteerPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            credentialsKey   (src/.../authentication.service.ts)\n                        \n                        \n                            credentialsKey   (src/.../error-handler.interceptor.ts)\n                        \n                        \n                            environment   (src/.../environment.dev.ts)\n                        \n                        \n                            environment   (src/.../environment.local.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            localAllocationsDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            localCoursesDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            localDB   (src/.../course.service.ts)\n                        \n                        \n                            localDB   (src/.../allocation.service.ts)\n                        \n                        \n                            localDB   (src/.../volunteer.service.ts)\n                        \n                        \n                            localDB   (src/.../organisation.service.ts)\n                        \n                        \n                            localOrganisationsDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            localVolunteersDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            remoteAllocationsDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            remoteCoursesDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            remoteDB   (src/.../course.service.ts)\n                        \n                        \n                            remoteDB   (src/.../allocation.service.ts)\n                        \n                        \n                            remoteDB   (src/.../volunteer.service.ts)\n                        \n                        \n                            remoteDB   (src/.../organisation.service.ts)\n                        \n                        \n                            remoteOrganisationsDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            remoteVolunteersDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/core/authentication/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            credentialsKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'credentials'\n                        \n                    \n\n                \n                    \n                        Stores the value of credentials' key\n\n                    \n                \n\n            \n        \n\n    src/app/core/http/error-handler.interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            credentialsKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'credentials'\n                        \n                    \n\n                \n                    \n                        Key that identifies the credentials\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.dev.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'DEV',\n  production: false,\n  serverBaseUrl: 'https://rvm-api.lxhost.ro',\n  serverUrl: 'https://rvm-api.lxhost.ro/api',\n  databaseURL: 'http://rvm.lxhost.ro:5984'\n}\n                        \n                    \n\n                \n                    \n                        Developement environment values\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.local.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'LOCAL',\n  production: false\n}\n                        \n                    \n\n                \n                    \n                        Local environment values\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'PROD',\n  production: true\n}\n                        \n                    \n\n                \n                    \n                        Production environment values\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'DEFAULT',\n  production: false,\n  serverBaseUrl: 'https://rvm-api.lxhost.ro',\n  serverUrl: 'https://rvm-api.lxhost.ro/api',\n  databaseURL: 'http://rvm.lxhost.ro:5984'\n}\n                        \n                    \n\n                \n                    \n                        Default environment values\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/database-sync.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localAllocationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('allocations')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localCoursesDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('courses')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Courses Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localOrganisationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('organisations')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Organisations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localVolunteersDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('volunteers')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteAllocationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/allocations')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteCoursesDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/courses')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Courses Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteOrganisationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/organisations')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Organisations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteVolunteersDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/volunteers')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/course.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('courses')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Courses Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/courses')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Courses Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/allocation.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('allocations')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/allocations')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Allocations Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/volunteer.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('volunteers')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/volunteers')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/organisation.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('organisations')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Organisations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/organisations')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Organisations Database\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
