var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AboutPage.html",[0,0.682,1,1.262]],["body/components/AboutPage.html",[0,0.973,1,1.97,2,1.801,3,0.128,4,0.128,5,1.321,6,1.399,7,1.321,8,1.25,9,0.11,10,2.625,11,1.321,12,2.633,13,2.647,14,2.015,15,5.169,16,1.903,17,4.41,18,0.312,19,0.019,20,0.46,21,1.809,22,1.184,23,2.625,24,0.146,25,0.024,26,3.782,27,4.85,28,3.782,29,1.329,30,4.85,31,5.354,32,3.058,33,4.41,34,4.33,35,4.41,36,4.41,37,6.308,38,4.41,39,5.656,40,4.41,41,4.41,42,6.587,43,4.41,44,4.41,45,4.41,46,4.41,47,4.85,48,4.768,49,4.41,50,5.13,51,4.41,52,6.244,53,4.41,54,4.41,55,4.41,56,4.41,57,4.41,58,4.41,59,4.41,60,4.41,61,4.41,62,5.656,63,5.656,64,5.656,65,5.656,66,5.656,67,4.41,68,4.41,69,5.656,70,5.656,71,4.41,72,5.656,73,4.41,74,5.648,75,6.244,76,4.41,77,4.41,78,3.058,79,4.41,80,6.244,81,4.41,82,4.41,83,4.41,84,4.41,85,4.41,86,4.41,87,3.782,88,4.41,89,5.656,90,5.656,91,4.41,92,4.41,93,4.41,94,4.319,95,4.41,96,4.41,97,4.41,98,4.41,99,4.85,100,4.41,101,4.41,102,4.41,103,4.41,104,4.41,105,4.41,106,4.41,107,4.41,108,4.41,109,3.368,110,3.368,111,4.41,112,1.903,113,4.41,114,4.41,115,4.41,116,4.41,117,4.85,118,4.41,119,4.41,120,4.41,121,4.41,122,4.41,123,4.41,124,4.41,125,2.606,126,4.41,127,4.41,128,4.41,129,4.41,130,4.41,131,0.915,132,1.903,133,1.801,134,1.321,135,2.441,136,1.321,137,0.449,138,1.321,139,1.123,140,1.184,141,2.231,142,1.066,143,1.321,144,1.066,145,1.321,146,1.066,147,1.25,148,1.321,149,1.066,150,1.321,151,1.123,152,1.013,153,1.066,154,1.321,155,1.066,156,1.321,157,1.066,158,1.25,159,1.903,160,1.066,161,0.827,162,1.066,163,1.184,164,1.321,165,1.123,166,1.184,167,1.066,168,1.321,169,1.321,170,0.008,171,0.011,172,0.008]],["title/modules/AboutPageModule.html",[173,1.33,174,2.513]],["body/modules/AboutPageModule.html",[0,0.941,1,2.537,3,0.208,4,0.208,9,0.179,18,0.741,19,0.02,20,0.752,24,0.239,25,0.039,131,1.494,161,1.35,170,0.013,171,0.016,172,0.013,173,1.833,174,4.987,175,2.283,176,2.423,177,3.642,178,2.753,179,2.753,180,2.578,181,4.284,182,4.284,183,3.37,184,2.423,185,4.997,186,3.37,187,3.899,188,2.753,189,3.899,190,1.833,191,3.206,192,2.952,193,1.42,194,3.614,195,2.157,196,4.997,197,3.156,198,3.815,199,1.284,200,2.952,201,2.753,202,2.753,203,3.815]],["title/classes/Allocation.html",[25,0.028,204,2.141]],["body/classes/Allocation.html",[3,0.155,4,0.155,9,0.133,19,0.02,24,0.178,25,0.029,29,1.802,112,2.66,137,0.722,170,0.01,171,0.013,172,0.01,204,4.017,205,1.521,206,3.194,207,0.407,208,2.583,209,1.367,210,0.325,211,1.059,212,2.986,213,3.984,214,3.807,215,4.017,216,3.984,217,3.508,218,4.926,219,0.705,220,3.984,221,1.243,222,1.067,223,3.724,224,2.249,225,3.724,226,2.183,227,3.508,228,1.957,229,2.989,230,4.469,231,3.724,232,3.661,233,5.075,234,3.724,235,3.724,236,2.986,237,2.61,238,3.724,239,3.225,240,3.724,241,4.338,242,4.338,243,1.591,244,3.225,245,3.724,246,3.929,247,2.989,248,3.724,249,2.61,250,2.787,251,3.724,252,2.989,253,5.059]],["title/injectables/AllocationService.html",[254,0.931,255,2.31]],["body/injectables/AllocationService.html",[3,0.136,4,0.136,9,0.116,18,0.71,19,0.02,20,0.489,24,0.155,25,0.042,29,1.72,137,0.681,170,0.008,171,0.012,172,0.008,199,1.577,204,3.87,207,0.503,209,2.455,210,0.402,211,1.217,212,2.509,214,3.87,215,3.764,217,3.38,218,2.787,219,0.632,221,0.548,222,0.804,224,1.523,226,2.307,233,3.515,236,2.75,239,3.705,244,2.934,246,4.338,247,2.72,254,1.183,255,2.934,256,1.576,257,2.482,258,1.689,259,1.781,260,1.781,261,1.923,262,0.867,263,4.603,264,1.374,265,2.254,266,2.108,267,3.87,268,4.603,269,2.375,270,2.536,271,3.434,272,3.287,273,2.978,274,0.867,275,0.777,276,4.603,277,3.251,278,2.72,279,2.068,280,3.192,281,2.232,282,3.202,283,1.062,284,2.934,285,2.536,286,3.947,287,3.192,288,1.781,289,0.867,290,2.375,291,1.132,292,2.934,293,1.921,294,2.072,295,2.072,296,1.486,297,1.677,298,1.486,299,2.482,300,2.072,301,1.132,302,3.251,303,3.251,304,2.787,305,2.934,306,1.523,307,1.791,308,1.519,309,2.482,310,1.921,311,1.921,312,1.677,313,2.072,314,1.677,315,1.791,316,1.791,317,1.403,318,2.072,319,1.598,320,2.072,321,2.072,322,2.254,323,2.254,324,1.921,325,3.251,326,3.251,327,1.217,328,2.787,329,3.251,330,4.603,331,2.787,332,3.251,333,3.251,334,3.251,335,3.251,336,3.251,337,3.251,338,3.251,339,3.192,340,3.192,341,3.192,342,3.192,343,3.251,344,3.251,345,2.254,346,3.251,347,3.251,348,2.482,349,1.308,350,3.251,351,2.254,352,2.787,353,3.251,354,2.254]],["title/components/AppComponent.html",[0,0.682,142,1.262]],["body/components/AppComponent.html",[0,0.775,1,0.732,2,1.355,3,0.088,4,0.088,5,0.907,7,0.907,8,0.858,9,0.075,11,0.907,12,2.468,13,2.543,16,1.433,18,0.614,19,0.02,20,0.316,22,1.807,24,0.1,25,0.017,26,2.846,27,2.846,29,0.54,30,2.846,47,2.846,48,2.534,87,4.853,94,1.605,99,1.803,109,3.567,110,3.141,117,1.803,131,0.628,132,1.433,133,1.355,134,0.907,135,2.016,136,0.907,137,0.55,138,0.907,139,0.771,140,0.813,141,1.775,142,1.627,143,0.907,144,0.732,145,0.907,146,0.732,147,0.858,148,0.907,149,0.732,150,0.907,151,0.771,152,0.696,153,0.732,154,0.907,155,0.732,156,0.907,157,0.732,158,0.858,159,1.433,160,1.433,161,0.568,162,0.732,163,0.813,164,0.907,165,0.771,166,0.813,167,0.732,168,0.907,169,0.907,170,0.005,171,0.009,172,0.005,188,1.158,193,0.598,195,0.907,199,0.853,207,0.363,210,0.183,211,0.695,219,0.48,221,0.694,222,0.93,228,1.284,229,2.76,252,1.61,258,2.49,259,1.968,260,1.968,261,2.087,262,0.625,264,0.853,266,2.087,270,1.829,273,1.433,274,0.625,275,0.56,281,2.265,283,1.124,285,1.829,289,0.88,291,1.433,301,1.433,306,1.098,319,1.23,327,1.295,349,0.598,355,1.803,356,1.433,357,4.113,358,3.319,359,3.319,360,2.789,361,4.113,362,4.113,363,4.113,364,4.113,365,4.672,366,4.672,367,2.846,368,3.141,369,3.567,370,2.102,371,5.031,372,5.031,373,2.826,374,2.845,375,6.183,376,3.74,377,4.672,378,3.567,379,3.319,380,4.006,381,3.319,382,4.672,383,3.239,384,4.006,385,2.92,386,2.978,387,2.534,388,2.846,389,2.302,390,3.527,391,2.102,392,4.672,393,2.76,394,2.846,395,3.319,396,3.319,397,4.635,398,4.128,399,2.846,400,2.016,401,3.319,402,2.846,403,3.319,404,3.319,405,3.319,406,3.319,407,3.239,408,3.567,409,2.846,410,2.846,411,3.319,412,1.509,413,2.102,414,2.302,415,2.846,416,1.961,417,3.319,418,2.846,419,2.534,420,2.846,421,2.102,422,3.471,423,2.534,424,3.194,425,2.102,426,2.534,427,2.534,428,5.499,429,2.846,430,2.302,431,2.534,432,2.302,433,2.846,434,2.846,435,2.846,436,2.302,437,2.846,438,2.846,439,2.846,440,3.319,441,3.319,442,2.102,443,4.006,444,4.006,445,2.534,446,2.102,447,2.466,448,2.116,449,3.319,450,3.319,451,3.319,452,3.319,453,3.319,454,4.113,455,2.102,456,3.319,457,2.102,458,3.319,459,2.102,460,2.116,461,3.319,462,2.302,463,2.102,464,2.852,465,1.605,466,1.803,467,1.605,468,1.803,469,1.34,470,1.803,471,1.803,472,2.102,473,1.458,474,1.803,475,2.102,476,3.319,477,3.319,478,2.102,479,2.102,480,2.102,481,1.458,482,2.102,483,2.102,484,2.102,485,2.102,486,2.102,487,2.102,488,1.517,489,2.102,490,4.113,491,2.102,492,2.302,493,2.302,494,2.102,495,2.102,496,2.102,497,2.102,498,3.319,499,2.102,500,1.803,501,1.803,502,1.803,503,2.102,504,2.102,505,2.102,506,2.102,507,2.102,508,1.605,509,3.319,510,2.102,511,1.458,512,2.102,513,0.858,514,2.102,515,2.102,516,1.458,517,1.34,518,1.605,519,1.605,520,3.319]],["title/modules/AppModule.html",[173,1.33,521,2.513]],["body/modules/AppModule.html",[3,0.186,4,0.186,9,0.16,13,2.091,18,0.754,19,0.02,20,0.671,24,0.213,25,0.035,131,1.334,142,2.581,161,1.206,170,0.012,171,0.015,172,0.012,173,1.637,175,2.039,176,2.164,177,3.459,178,3.459,179,3.139,180,2.302,183,3.139,184,2.164,186,3.139,193,1.268,194,2.636,195,1.926,202,3.139,371,4.887,372,4.887,464,4.74,465,3.407,466,3.826,467,3.407,468,3.826,469,2.844,521,5.111,522,3.826,523,3.826,524,3.826,525,3.826,526,4.456,527,4.456,528,4.462,529,5.699,530,3.826,531,3.094,532,4.351,533,5.699,534,4.462,535,4.462,536,4.887,537,3.826,538,4.462,539,4.351,540,3.826,541,4.887,542,3.826,543,4.462,544,3.826,545,4.462,546,3.826,547,3.826]],["title/classes/AppPage.html",[25,0.028,548,2.767]],["body/classes/AppPage.html",[3,0.221,4,0.221,9,0.189,18,0.538,19,0.02,24,0.253,25,0.042,133,2.158,137,0.538,170,0.014,171,0.016,172,0.014,205,2.158,210,0.461,222,1.019,262,1.192,274,0.995,275,0.892,289,1.276,349,1.925,531,3.665,548,4.832,549,4.532,550,7.021,551,7.021,552,6.328,553,5.285,554,5.285,555,6.328,556,5.285,557,5.285,558,5.285,559,5.285,560,5.285,561,5.285,562,5.285,563,5.285]],["title/modules/AppRoutingModule.html",[173,1.33,526,2.31]],["body/modules/AppRoutingModule.html",[3,0.213,4,0.213,9,0.182,18,0.678,19,0.02,20,0.766,24,0.244,25,0.04,29,1.309,170,0.013,171,0.016,172,0.013,175,2.328,180,2.629,186,3.41,191,3.233,192,3.657,193,1.448,197,3.578,199,1.309,200,4.198,201,3.673,202,2.807,469,3.248,526,3.946,564,5.095,565,5.095,566,6.19,567,5.095,568,3.946,569,5.095,570,4.369,571,6.935,572,5.095,573,5.095,574,5.095,575,5.095,576,5.095,577,5.095,578,5.095]],["title/guards/AuthenticationGuard.html",[197,1.87,579,2.31]],["body/guards/AuthenticationGuard.html",[3,0.181,4,0.181,9,0.155,18,0.631,19,0.02,20,0.653,22,2.166,24,0.207,25,0.049,29,1.439,137,0.442,166,2.166,170,0.011,171,0.015,172,0.011,191,2.714,193,1.233,197,2.888,201,3.823,207,0.612,210,0.379,219,0.41,222,0.842,228,2.166,243,1.76,252,2.714,254,1.439,260,2.533,261,1.852,262,1.054,264,1.683,266,2.367,274,0.817,275,0.732,281,2.714,283,1.301,289,1.054,301,1.95,319,1.673,327,1.172,349,1.591,356,1.873,373,3.226,385,3.378,400,2.416,414,3.882,424,3.307,447,2.104,460,4.173,462,3.882,568,3.568,579,3.568,580,3.313,581,3.721,582,4.274,583,4.8,584,4.54,585,4.8,586,2.391,587,4.34,588,3.868,589,4.274,590,2.416,591,4.34,592,4.274,593,4.8,594,4.8,595,4.8,596,4.8,597,2.714,598,3.721,599,3.313,600,3.009,601,2.766]],["title/components/AuthenticationPage.html",[0,0.682,144,1.262]],["body/components/AuthenticationPage.html",[0,1.205,1,1.62,2,2.389,3,0.194,4,0.194,5,2.008,6,2.126,7,2.008,8,1.9,9,0.167,11,2.008,12,2.772,13,2.772,14,2.674,16,2.526,18,0.473,19,0.02,20,0.7,22,1.8,24,0.222,25,0.037,29,1.196,131,1.391,132,2.526,133,2.389,134,2.008,135,2.899,136,2.008,137,0.595,138,2.008,139,1.707,140,1.8,141,2.763,142,1.62,143,2.008,144,2.34,145,2.008,146,1.62,147,1.9,148,2.008,149,1.62,150,2.008,151,1.707,152,1.539,153,1.62,154,2.008,155,1.62,156,2.008,157,1.62,158,1.9,159,2.526,160,1.62,161,1.258,162,1.62,163,1.8,164,2.008,165,1.707,166,1.8,167,1.62,168,2.008,169,2.008,170,0.012,171,0.015,172,0.012,259,1.8,301,2.23,445,3.553,602,3.989,603,6.402,604,5.852,605,3.553,606,3.989,607,4.653,608,2.256]],["title/modules/AuthenticationPageModule.html",[173,1.33,609,2.513]],["body/modules/AuthenticationPageModule.html",[0,1.276,3,0.181,4,0.181,9,0.155,18,0.747,19,0.02,20,0.653,24,0.207,25,0.034,131,1.297,144,2.459,153,2.459,155,2.459,157,2.459,158,2.286,160,2.459,161,1.513,170,0.011,171,0.015,172,0.011,173,1.592,175,1.983,176,2.104,177,3.414,178,2.391,179,2.391,180,2.239,183,3.084,184,2.104,186,3.084,187,3.568,188,2.391,189,3.568,190,1.592,191,3.005,192,2.564,193,1.233,194,3.307,195,1.873,199,1.115,200,4.004,201,3.084,202,2.391,203,3.313,473,3.009,474,4.8,597,2.104,609,5.165,610,3.721,611,3.721,612,4.34,613,4.8,614,4.34,615,3.313,616,4.34,617,4.34,618,3.95,619,4.34,620,3.009,621,4.34]],["title/injectables/AuthenticationService.html",[254,0.931,266,1.199]],["body/injectables/AuthenticationService.html",[3,0.094,4,0.094,9,0.08,18,0.534,19,0.02,20,0.338,21,2.067,23,3.001,24,0.107,25,0.041,78,2.979,137,0.534,161,1.31,163,1.354,170,0.006,171,0.009,172,0.006,184,1.697,199,1.104,207,0.608,209,1.778,210,0.196,211,0.733,219,0.525,221,1.083,222,0.981,243,2.103,247,3.725,252,3.057,254,0.899,256,1.09,260,1.875,261,1.986,262,0.659,264,1.246,266,1.158,274,0.989,275,0.886,279,2.386,281,1.697,283,1.354,285,3.307,288,2.557,289,1.312,290,3.41,291,0.783,298,1.028,299,2.672,300,1.433,301,2.196,306,1.604,308,1.378,314,3.253,319,1.284,327,1.216,349,1.792,351,1.559,354,2.427,360,3.182,374,2.911,388,3.001,400,2.771,412,0.825,416,3.286,448,3.348,460,3.545,582,2.672,584,3.361,588,2.864,590,2.092,592,2.672,597,2.99,606,3.001,608,3.243,620,3.856,622,1.717,623,3.001,624,4.296,625,3.553,626,4.847,627,3.499,628,2.672,629,3.499,630,3.001,631,4.296,632,2.249,633,5.806,634,3.499,635,3.499,636,3.827,637,4.847,638,2.672,639,2.672,640,1.928,641,2.249,642,2.249,643,4.296,644,2.249,645,4.163,646,3.286,647,6.003,648,5.148,649,4.296,650,3.361,651,2.249,652,3.499,653,2.067,654,3.499,655,3.499,656,2.249,657,4.847,658,2.815,659,3.499,660,3.499,661,3.499,662,4.847,663,3.499,664,3.853,665,2.249,666,3.499,667,3.499,668,3.499,669,5.806,670,2.249,671,3.499,672,2.249,673,2.427,674,3.701,675,3.499,676,3.499,677,2.249,678,3.001,679,3.499,680,3.683,681,3.001,682,3.001,683,2.427,684,2.249,685,2.249,686,2.869,687,2.249,688,2.249,689,2.249,690,2.249,691,3.499,692,3.499,693,1.559,694,1.559,695,1.559,696,2.427,697,3.499,698,2.249,699,4.296,700,2.249,701,2.249,702,2.249,703,2.249,704,2.249,705,2.249,706,2.249,707,2.249,708,2.249,709,2.249,710,4.296,711,2.249,712,2.249,713,2.249,714,2.249,715,1.928,716,2.249,717,2.249,718,3.499,719,2.249,720,2.249]],["title/modules/CoreModule.html",[173,1.33,527,2.31]],["body/modules/CoreModule.html",[3,0.163,4,0.163,9,0.14,18,0.748,19,0.02,20,0.587,24,0.187,25,0.031,131,1.167,146,2.436,161,1.055,170,0.01,171,0.014,172,0.01,173,1.916,175,1.784,176,1.893,177,3.241,178,2.15,179,3.241,180,2.014,183,2.877,184,1.893,186,2.877,187,3.329,188,2.15,189,3.329,190,1.432,192,3.085,193,1.11,194,3.085,195,1.685,197,2.694,202,2.15,255,4.295,259,1.51,266,2.23,267,3.981,279,1.51,301,1.36,319,1.167,374,3.268,376,3.329,385,2.014,469,2.488,527,4.849,532,3.987,544,4.477,546,4.477,547,4.477,590,1.685,618,3.329,638,2.981,693,2.707,694,2.707,721,3.347,722,3.347,723,3.347,724,3.981,725,4.295,726,3.981,727,4.295,728,4.514,729,4.295,730,3.904,731,5.222,732,5.222,733,3.621,734,2.981,735,3.347,736,3.904,737,3.904,738,3.904,739,2.981,740,3.904,741,3.904,742,3.904,743,2.981,744,3.904]],["title/classes/Course.html",[25,0.028,745,2.141]],["body/classes/Course.html",[3,0.164,4,0.164,9,0.141,19,0.02,24,0.188,25,0.031,29,1.621,112,3.025,137,0.713,170,0.01,171,0.014,172,0.01,205,1.61,207,0.431,208,2.733,209,1.446,210,0.344,211,1.1,212,2.835,213,4.1,216,4.1,219,0.703,220,4.1,221,1.241,222,1.078,224,2.319,226,2.268,227,3.644,228,2.033,229,3.105,230,3.644,236,2.916,237,2.712,243,1.653,247,3.105,249,2.712,250,2.895,273,2.916,312,2.712,745,4.399,746,3.38,747,4.1,748,4.515,749,5.633,750,5.016,751,5.07,752,3.942,753,3.942,754,3.942,755,6.307,756,5.256,757,3.942,758,3.942,759,3.942,760,3.942,761,3.942,762,4.013,763,3.105,764,3.942,765,3.942,766,5.256]],["title/injectables/CourseService.html",[254,0.931,724,2.141]],["body/injectables/CourseService.html",[3,0.101,4,0.101,9,0.087,12,1.995,18,0.626,19,0.02,20,0.365,24,0.116,25,0.035,29,1.473,112,1.047,137,0.684,152,1.669,170,0.006,171,0.01,172,0.006,199,1.297,207,0.673,210,0.324,211,0.777,212,1.047,219,0.662,221,1.166,222,0.968,224,2.287,226,1.944,236,2.778,239,2.365,254,0.953,256,1.176,258,1.851,259,1.952,260,1.952,261,1.49,262,0.699,264,1.158,266,1.669,269,1.914,270,2.044,271,2.981,272,2.958,273,3.058,274,1.123,275,1.007,278,2.192,279,2.6,280,2.572,282,2.779,283,0.895,284,3.216,289,1.279,290,3.637,291,0.845,292,2.365,293,1.433,294,1.546,295,1.546,296,1.108,297,1.251,298,1.108,301,1.569,305,2.365,306,1.227,307,1.336,308,1.63,310,1.433,311,1.433,312,1.251,313,1.546,314,1.251,315,1.336,316,1.336,317,1.047,318,1.546,319,1.783,320,1.546,321,1.546,322,1.682,323,1.682,324,1.433,327,1.288,339,2.572,340,2.572,341,2.572,342,2.572,345,3.77,349,1.696,412,1.851,416,2.192,686,1.914,724,2.192,745,4.36,747,2.572,751,5.115,763,4.207,767,1.852,768,3.71,769,3.71,770,3.71,771,3.71,772,3.71,773,5.045,774,5.045,775,3.71,776,2.426,777,3.71,778,4.505,779,3.71,780,2.426,781,4.505,782,3.71,783,2.426,784,2.833,785,4.662,786,3.71,787,2.426,788,3.852,789,3.181,790,3.71,791,2.426,792,4.505,793,3.71,794,2.426,795,3.71,796,4.326,797,3.863,798,2.833,799,2.426,800,3.71,801,3.71,802,2.426,803,3.71,804,2.426,805,2.365,806,2.426,807,1.852,808,4.505,809,2.426,810,4.151,811,2.572,812,3.181,813,3.44,814,2.426,815,2.426,816,4.505,817,2.426,818,2.426,819,2.426,820,2.426,821,2.426,822,2.426,823,2.426,824,3.71,825,3.71,826,3.71,827,3.71,828,3.71,829,2.08,830,1.852,831,2.426,832,1.852,833,2.426]],["title/interfaces/Credentials.html",[625,1.757,834,1.564]],["body/interfaces/Credentials.html",[3,0.192,4,0.192,9,0.164,19,0.02,24,0.304,112,2.886,137,0.591,170,0.012,171,0.015,172,0.012,207,0.502,209,2.53,210,0.401,211,1.215,212,1.982,219,0.548,221,1.221,224,1.519,237,2.369,243,2.373,249,2.369,250,2.53,252,2.227,301,2.216,597,3.086,608,2.814,625,3.242,650,3.184,658,2.814,664,4.161,834,3.087,835,2.713,836,3.184,837,2.927,838,2.927,839,2.927,840,3.507,841,3.507,842,2.995,843,1.777,844,2.713,845,3.507,846,3.507,847,3.507]],["title/components/CustomSelectorComponent.html",[0,0.682,146,1.262]],["body/components/CustomSelectorComponent.html",[0,0.944,1,1.01,2,1.731,3,0.121,4,0.121,5,1.251,6,1.325,7,1.251,8,1.184,9,0.104,11,1.251,12,2.64,13,2.612,14,1.937,16,1.83,18,0.561,19,0.02,20,0.436,22,2.602,24,0.139,25,0.023,29,0.745,131,0.867,132,1.83,133,1.731,134,1.251,135,2.38,136,1.251,137,0.561,138,1.251,139,1.064,140,1.121,141,2.163,142,1.01,143,1.251,144,1.01,145,1.251,146,1.92,147,2.65,148,1.251,149,1.01,150,1.251,151,1.064,152,0.959,153,1.01,154,1.251,155,1.01,156,1.251,157,1.01,158,1.184,159,1.83,160,1.01,161,0.784,162,1.01,163,1.121,164,1.251,165,1.064,166,1.121,167,1.01,168,1.251,169,1.251,170,0.008,171,0.011,172,0.008,195,1.251,199,1.089,207,0.463,210,0.253,211,0.888,219,0.521,222,0.952,236,2.645,243,1.734,259,1.64,260,1.64,261,0.959,262,0.798,264,1.288,269,2.845,274,0.798,275,0.715,279,2.448,283,1.095,289,1.154,298,1.325,306,1.824,317,1.251,319,0.867,327,1.049,356,1.83,374,3.147,387,3.237,389,2.939,393,3.257,397,5.254,398,4.833,399,5.427,402,4.728,409,5.913,410,3.635,412,2.023,418,3.635,419,4.21,448,2.702,481,4.068,488,1.937,511,2.01,516,2.01,517,1.848,590,1.83,636,3.906,640,2.335,653,2.504,673,2.939,694,2.01,739,4.955,848,5.564,849,2.486,850,2.961,851,5.011,852,5.011,853,4.239,854,4.239,855,5.513,856,5.513,857,3.257,858,3.635,859,4.297,860,2.899,861,5.513,862,4.239,863,5.011,864,4.239,865,2.899,866,4.239,867,4.239,868,4.239,869,2.899,870,4.239,871,4.239,872,3.823,873,2.899,874,2.899,875,4.239,876,4.239,877,2.899,878,4.239,879,4.239,880,4.239,881,4.239,882,4.239,883,4.239,884,4.239,885,2.335,886,2.899,887,2.899,888,2.899,889,2.899,890,2.899,891,2.899,892,2.899,893,2.899,894,2.899,895,2.899,896,2.899,897,2.899,898,4.239,899,4.239,900,2.899,901,2.899,902,2.899,903,2.213,904,2.899,905,2.899,906,2.486,907,2.899,908,2.899,909,2.01,910,2.486,911,2.486,912,3.635,913,2.213,914,2.899]],["title/classes/DatabaseSyncService.html",[25,0.028,376,2.31]],["body/classes/DatabaseSyncService.html",[3,0.141,4,0.141,9,0.121,18,0.482,19,0.02,24,0.162,25,0.027,170,0.009,171,0.012,172,0.009,205,1.383,207,0.37,210,0.296,211,0.992,219,0.657,222,1.058,226,3.004,246,4.224,262,0.892,264,0.87,270,3.261,272,3.629,273,3.237,279,2.746,282,3.01,289,0.892,293,2.001,296,1.548,297,1.747,306,2.446,308,1.978,309,2.586,314,3.591,316,3.432,349,1.347,376,3.02,419,3.618,488,1.548,590,2.045,763,3.68,807,2.586,915,6.086,916,2.904,917,4.738,918,5.465,919,5.465,920,5.465,921,5.465,922,5.465,923,5.465,924,5.465,925,5.465,926,5.465,927,5.465,928,5.919,929,3.387,930,3.387,931,3.387,932,4.32,933,3.387,934,3.387,935,3.971,936,3.387,937,3.387,938,3.387,939,3.387,940,3.387,941,3.387,942,4.738,943,5.919,944,4.738,945,4.738,946,4.738,947,2.904,948,3.387,949,2.586,950,3.387,951,3.387,952,3.387,953,3.387,954,2.586,955,3.387,956,3.387,957,3.387,958,3.387,959,2.586,960,3.387,961,3.387,962,3.387,963,3.387,964,3.387,965,3.387,966,3.387,967,3.387,968,2.904,969,3.387,970,3.387,971,3.387,972,1.383]],["title/classes/EmailValidation.html",[25,0.028,973,2.31]],["body/classes/EmailValidation.html",[3,0.194,4,0.194,9,0.167,18,0.474,19,0.02,24,0.223,25,0.05,31,3.996,50,3.232,137,0.474,170,0.012,171,0.015,172,0.012,190,1.71,199,1.505,205,1.903,207,0.64,210,0.407,219,0.44,221,0.988,222,0.701,228,2.266,232,3.227,262,1.103,274,0.878,275,0.786,283,1.164,288,2.478,289,1.103,306,1.938,308,1.325,324,3.461,327,0.976,349,1.665,513,2.392,658,3.479,805,4.084,844,3.461,885,3.227,972,2.392,973,4.284,974,4.062,975,2.971,976,5.858,977,5.858,978,4.902,979,3.558,980,3.734,981,4.062,982,4.062,983,4.062,984,3.734,985,4.062,986,3.734,987,3.734,988,3.558,989,3.996,990,4.66,991,5.858,992,4.66,993,3.558,994,4.66,995,4.66,996,3.996,997,4.66,998,3.996,999,4.66,1000,4.66,1001,4.66]],["title/interceptors/ErrorHandlerInterceptor.html",[725,2.31,1002,2.767]],["body/interceptors/ErrorHandlerInterceptor.html",[3,0.139,4,0.139,9,0.119,18,0.685,19,0.02,20,0.502,21,2.769,24,0.159,25,0.043,125,2.769,137,0.551,170,0.009,171,0.012,172,0.009,193,0.948,199,1.205,207,0.643,210,0.291,219,0.512,221,0.563,222,0.815,232,2.582,254,1.205,259,2.274,260,2.485,261,2.125,262,0.883,264,1.511,274,1.021,275,0.914,279,1.29,283,0.931,289,1.107,290,3.532,291,1.633,296,1.524,297,1.721,298,1.524,300,2.126,308,1.332,319,0.997,327,1.345,349,0.948,354,4.67,356,1.439,373,3.015,374,3.364,400,2.023,414,3.25,423,5.038,424,2.769,462,3.25,481,3.25,586,1.837,588,3.795,589,3.579,590,2.537,600,2.313,601,2.126,625,2.273,636,2.988,638,3.579,639,4.489,640,3.239,646,4.215,693,2.313,694,2.313,695,3.25,696,2.313,715,2.86,725,2.988,726,4.099,743,2.546,972,2.694,1003,4.489,1004,2.546,1005,4.077,1006,4.687,1007,5.42,1008,4.647,1009,3.335,1010,3.747,1011,5.041,1012,5.508,1013,4.687,1014,3.335,1015,5.879,1016,3.335,1017,4.019,1018,2.86,1019,5.041,1020,5.041,1021,3.335,1022,4.019,1023,3.579,1024,3.25,1025,2.86,1026,4.019,1027,3.335,1028,3.335,1029,3.335,1030,2.86,1031,3.335,1032,3.335,1033,3.335,1034,4.687,1035,3.335,1036,3.335,1037,3.335,1038,3.335,1039,3.335,1040,3.335,1041,4.687,1042,3.335,1043,4.687,1044,3.335,1045,3.335,1046,3.335,1047,3.335,1048,3.335]],["title/interfaces/ErrorMessageObject.html",[834,1.564,1049,2.513]],["body/interfaces/ErrorMessageObject.html",[3,0.195,4,0.195,9,0.167,19,0.02,24,0.281,125,2.762,170,0.012,171,0.015,172,0.012,207,0.511,209,1.716,210,0.408,211,1.229,219,0.697,221,1.252,224,2.341,281,2.267,422,3.029,513,2.965,834,2.992,835,2.762,837,2.98,838,2.98,843,2.603,972,3.112,1049,4.07,1050,3.57,1051,5.138,1052,4.009,1053,3.242,1054,4.009,1055,5.033]],["title/injectables/ErrorMessageService.html",[254,0.931,726,2.141]],["body/injectables/ErrorMessageService.html",[3,0.163,4,0.163,9,0.14,18,0.397,19,0.02,20,0.586,24,0.186,25,0.031,137,0.397,170,0.01,171,0.014,172,0.01,207,0.57,210,0.34,211,1.092,219,0.675,221,1.194,222,0.985,224,1.29,229,3.082,254,1.341,256,1.89,258,1.914,261,1.945,262,0.982,264,1.002,269,2.692,274,0.734,275,0.658,283,1.338,289,1.182,291,1.817,308,1.483,327,1.231,349,1.108,360,3.653,400,2.538,412,1.914,422,2.692,448,3.325,481,4.354,513,2.13,590,2.252,630,4.473,653,3.082,680,5.042,681,5.384,682,4.473,686,2.692,726,3.082,947,3.343,972,3.082,1017,5.776,1051,5.143,1056,5.776,1057,3.343,1058,4.659,1059,5.88,1060,6.279,1061,3.898,1062,5.217,1063,3.898,1064,5.217,1065,6.279,1066,3.898,1067,3.898,1068,5.217,1069,5.217,1070,3.898,1071,3.898,1072,5.217,1073,3.898,1074,3.898,1075,3.898,1076,5.217]],["title/components/HomePage.html",[0,0.682,149,1.262]],["body/components/HomePage.html",[0,1,1,1.119,2,1.865,3,0.134,4,0.134,5,1.387,6,1.469,7,1.387,8,1.312,9,0.115,11,1.387,12,2.652,13,2.665,14,2.087,16,1.971,18,0.465,19,0.02,20,0.483,22,2.237,24,0.154,25,0.025,29,0.826,109,4.416,131,0.961,132,1.971,133,1.865,134,1.387,135,2.496,136,1.387,137,0.588,138,1.387,139,1.179,140,1.243,141,2.292,142,1.119,143,1.387,144,1.119,145,1.387,146,1.119,147,1.312,148,1.387,149,2.014,150,1.387,151,1.179,152,1.757,153,1.119,154,1.387,155,1.119,156,1.387,157,1.119,158,1.312,159,1.971,160,1.119,161,0.869,162,1.119,163,1.243,164,1.387,165,1.179,166,1.243,167,1.119,168,1.387,169,1.387,170,0.008,171,0.012,172,0.008,193,0.914,207,0.499,210,0.28,211,0.956,219,0.501,221,1.031,222,0.799,243,1.921,258,1.675,262,0.86,264,0.826,274,0.86,275,0.77,283,0.638,284,2.911,289,0.605,291,1.119,308,1.298,317,1.387,327,0.956,367,3.915,373,2.983,383,3.166,385,2.984,386,3.186,412,1.179,420,3.915,422,3.628,428,5.721,429,3.915,430,3.166,431,3.487,432,3.166,433,3.915,434,3.915,435,3.915,436,3.166,437,3.915,438,3.915,439,3.915,443,4.959,444,5.442,500,2.756,501,2.756,502,2.756,568,3.386,584,2.229,586,1.771,605,2.454,674,3.487,859,2.756,872,3.166,903,2.454,909,2.229,910,4.554,911,4.554,912,5.721,913,2.454,1077,2.756,1078,5.311,1079,4.566,1080,6.109,1081,3.214,1082,3.214,1083,4.566,1084,4.566,1085,4.566,1086,4.566,1087,4.566,1088,4.566,1089,3.166,1090,4.566,1091,3.214,1092,3.214,1093,4.566,1094,3.214,1095,3.214,1096,5.311,1097,5.311,1098,3.214,1099,3.214,1100,3.915,1101,4.566,1102,2.756,1103,2.756,1104,3.214,1105,3.214,1106,3.166,1107,3.915,1108,4.959,1109,3.214,1110,3.214,1111,3.214,1112,2.049,1113,3.214,1114,2.756,1115,4.566,1116,3.915,1117,2.756,1118,3.214]],["title/modules/HomePageModule.html",[173,1.33,1119,2.513]],["body/modules/HomePageModule.html",[0,0.951,3,0.211,4,0.211,9,0.181,18,0.743,19,0.02,20,0.76,24,0.241,25,0.04,131,1.51,149,2.542,161,1.365,170,0.013,171,0.016,172,0.013,173,1.853,175,2.308,176,2.449,177,3.659,178,2.782,179,2.782,180,2.606,183,3.391,184,2.449,186,3.391,187,3.924,188,2.782,189,3.924,190,1.853,192,2.984,193,1.435,194,3.637,195,2.18,197,3.176,198,3.856,200,2.984,201,2.782,202,2.782,1119,4.999,1120,4.33,1121,4.33,1122,5.05,1123,5.05,1124,5.05]],["title/injectables/LocalStorageService.html",[254,0.931,374,1.757]],["body/injectables/LocalStorageService.html",[3,0.145,4,0.145,9,0.125,18,0.354,19,0.02,20,0.524,21,2.057,112,2.394,137,0.712,147,1.422,170,0.009,171,0.013,172,0.009,199,0.895,200,2.057,207,0.655,210,0.304,211,1.011,219,0.594,221,1.166,222,1.004,236,1.503,244,2.22,254,0.895,256,1.689,258,1.278,260,1.869,262,0.91,264,1.241,274,1.044,275,0.936,278,2.057,279,1.869,283,1.373,289,1.185,308,0.99,327,1.425,349,1.703,360,3.68,374,1.689,387,4.805,488,1.591,508,2.659,588,2.854,623,2.986,636,4.461,653,2.854,686,1.797,695,5.067,843,1.347,1005,3.35,1023,3.689,1125,5.198,1126,2.659,1127,5.991,1128,5.547,1129,5.991,1130,4.831,1131,4.831,1132,4.831,1133,4.831,1134,2.986,1135,2.22,1136,3.482,1137,3.482,1138,4.831,1139,4.831,1140,3.482,1141,3.689,1142,7.132,1143,4.831,1144,3.482,1145,4.142,1146,4.831,1147,3.482,1148,4.831,1149,4.831,1150,3.482,1151,4.831,1152,2.986,1153,5.584,1154,5.396,1155,2.986,1156,2.986,1157,6.293,1158,3.482,1159,3.482,1160,4.831,1161,3.482,1162,3.482,1163,4.142,1164,2.986,1165,2.986,1166,3.482,1167,3.482,1168,3.482,1169,3.482,1170,3.482,1171,3.482,1172,3.482,1173,3.482,1174,3.482,1175,3.482]],["title/components/LoginComponent.html",[0,0.682,153,1.262]],["body/components/LoginComponent.html",[0,1.049,1,1.033,2,1.76,3,0.124,4,0.124,5,1.28,6,1.355,7,1.28,8,1.211,9,0.106,11,1.28,12,2.621,13,2.621,14,1.97,16,1.86,18,0.628,19,0.02,20,0.446,22,2.466,24,0.142,25,0.04,29,0.762,50,2.989,131,0.886,132,1.86,133,1.76,134,1.28,135,2.405,136,1.28,137,0.517,138,1.28,139,1.088,140,1.147,141,2.191,142,1.033,143,1.28,144,1.033,145,1.28,146,1.033,147,1.211,148,1.28,149,1.033,150,1.28,151,1.088,152,0.981,153,1.941,154,1.28,155,1.033,156,1.28,157,1.033,158,1.211,159,1.86,160,1.033,161,0.802,162,1.033,163,1.147,164,1.28,165,1.088,166,1.147,167,1.033,168,1.28,169,1.28,170,0.008,171,0.011,172,0.008,190,1.088,193,0.843,207,0.324,210,0.259,211,0.902,219,0.479,221,0.727,222,0.959,237,2.224,243,1.355,252,2.09,258,2.266,259,1.667,261,1.959,262,0.812,264,1.305,266,2.16,274,0.558,275,0.5,283,0.589,288,1.147,289,0.956,291,1.033,300,1.89,301,2.151,317,1.28,319,1.666,327,1.063,351,2.056,356,1.86,373,2.913,385,2.619,386,2.374,390,2.989,393,3.293,412,1.863,424,2.546,447,2.995,492,2.056,493,2.056,513,2.276,568,2.747,586,1.634,590,1.86,597,3.091,601,1.89,608,1.438,625,2.871,640,2.374,658,2.462,850,3,857,3.293,972,2.417,973,1.89,974,2.056,984,2.747,1089,2.989,1112,2.747,1135,2.747,1176,2.543,1177,5.077,1178,4.31,1179,4.52,1180,4.52,1181,5.077,1182,5.573,1183,5.573,1184,5.599,1185,4.31,1186,4.31,1187,4.528,1188,4.31,1189,2.965,1190,2.965,1191,2.965,1192,3.877,1193,3.695,1194,2.965,1195,4.31,1196,4.31,1197,4.31,1198,4.31,1199,4.31,1200,3.521,1201,2.965,1202,2.056,1203,4.31,1204,2.056,1205,2.965,1206,2.965,1207,2.965,1208,2.543,1209,2.989,1210,2.543,1211,3.877,1212,2.965,1213,2.965,1214,2.965,1215,2.965,1216,2.965,1217,3.291,1218,2.965,1219,2.965,1220,3.695,1221,3.695,1222,4.31,1223,4.31,1224,3.695]],["title/interfaces/LoginPayload.html",[834,1.564,839,2.31]],["body/interfaces/LoginPayload.html",[3,0.192,4,0.192,9,0.164,19,0.02,24,0.304,112,2.886,137,0.591,170,0.012,171,0.015,172,0.012,207,0.502,209,2.335,210,0.401,211,1.215,212,1.982,219,0.548,221,1.241,224,1.519,237,2.369,243,2.313,249,2.369,250,2.53,252,2.227,301,2.021,597,3.415,608,3.415,625,2.814,650,4.025,658,2.814,664,3.429,834,3.087,835,2.713,836,3.184,837,2.927,838,2.927,839,3.7,840,4.432,841,5.105,842,2.995,843,1.777,844,2.713,845,3.507,846,3.507,847,3.507]],["title/components/LogoutComponent.html",[0,0.682,155,1.262]],["body/components/LogoutComponent.html",[0,1.116,1,1.381,2,2.154,3,0.165,4,0.165,5,1.711,6,1.811,7,1.711,8,1.619,9,0.142,11,1.711,12,2.724,13,2.724,14,2.411,16,2.277,18,0.603,19,0.02,20,0.596,24,0.189,25,0.047,29,1.019,131,1.185,132,2.277,133,2.154,134,1.711,135,2.728,136,1.711,137,0.603,138,1.711,139,1.454,140,1.533,141,2.559,142,1.381,143,1.711,144,1.381,145,1.711,146,1.381,147,1.619,148,1.711,149,1.381,150,1.711,151,1.454,152,1.311,153,1.381,154,1.711,155,2.202,156,1.711,157,1.381,158,1.619,159,2.277,160,1.381,161,1.071,162,1.381,163,1.533,164,1.711,165,1.454,166,1.533,167,1.381,168,1.711,169,1.711,170,0.01,171,0.014,172,0.01,193,1.127,207,0.433,210,0.346,219,0.374,222,0.793,243,1.659,258,2.319,259,2.041,260,2.041,261,1.311,262,0.993,264,1.524,265,2.749,266,2.285,274,0.746,275,0.669,289,0.746,301,2.202,317,1.711,319,1.185,327,1.105,356,2.277,373,3.279,383,3.658,386,2.906,412,1.454,590,2.277,597,2.558,601,2.527,620,4.383,640,2.906,646,3.117,648,4.523,850,3.503,857,3.734,1193,4.523,1204,2.749,1225,3.399,1226,5.929,1227,5.275,1228,3.964,1229,3.964,1230,5.275,1231,3.964,1232,3.964]],["title/classes/Organisation.html",[25,0.028,217,1.87]],["body/classes/Organisation.html",[3,0.136,4,0.136,9,0.116,13,1.69,19,0.02,24,0.156,25,0.026,78,3.195,112,2.51,137,0.723,170,0.008,171,0.012,172,0.008,205,1.329,207,0.356,208,2.257,209,1.194,210,0.284,211,0.965,212,2.649,213,3.709,214,3.871,215,3.871,216,3.709,217,3.715,219,0.704,220,3.709,221,1.274,222,1.099,224,2.109,226,1.988,227,3.195,228,1.782,229,2.722,230,3.195,236,2.751,237,2.377,243,1.449,249,2.377,250,2.538,273,2.751,281,2.976,282,3.204,283,0.915,287,4.256,312,3.001,422,2.377,658,2.976,748,4.084,762,3.518,842,3.167,843,1.782,844,3.871,932,4.033,1024,3.195,1233,2.791,1234,4.084,1235,5.348,1236,6.138,1237,4.256,1238,3.255,1239,3.255,1240,3.255,1241,3.255,1242,3.255,1243,5.111,1244,3.255,1245,3.95,1246,3.255,1247,4.607,1248,4.607,1249,3.255,1250,3.255,1251,4.607,1252,4.607,1253,3.255,1254,3.255,1255,3.255,1256,3.255,1257,3.255,1258,3.195,1259,3.195,1260,3.95,1261,3.518,1262,3.95,1263,3.255,1264,4.607,1265,4.607,1266,3.95,1267,3.255,1268,3.255,1269,3.255]],["title/injectables/OrganisationService.html",[254,0.931,727,2.31]],["body/injectables/OrganisationService.html",[3,0.106,4,0.106,9,0.091,12,1.697,18,0.635,19,0.02,20,0.381,24,0.121,25,0.036,137,0.726,170,0.007,171,0.01,172,0.007,199,1.672,207,0.682,209,1.406,210,0.334,211,0.802,212,1.093,217,3.782,219,0.657,221,1.23,222,0.96,224,2.153,226,1.996,236,2.691,244,2.443,254,0.985,256,1.228,258,1.406,259,1.483,260,1.483,261,1.929,262,0.722,264,1.189,265,1.755,266,2.112,269,1.977,270,2.111,271,3.047,272,3.008,273,3.005,274,1.14,275,1.022,278,2.264,279,2.623,280,2.658,283,0.919,284,3.288,289,1.262,290,3.618,291,0.882,292,2.443,293,1.496,294,1.614,295,1.614,296,1.157,297,1.306,298,1.157,301,0.882,305,2.443,306,1.706,307,1.395,308,1.85,310,1.496,311,1.496,312,1.306,313,1.614,314,1.306,315,1.395,316,1.395,317,1.093,318,1.614,319,1.656,320,1.614,321,1.614,322,1.755,323,1.755,324,1.496,327,1.268,328,2.171,339,2.658,340,2.658,341,2.658,342,2.658,345,3.577,348,3.938,349,1.575,412,1.406,416,2.264,488,1.157,686,1.977,727,2.443,784,2.926,788,3.938,810,3.531,811,1.755,812,2.171,813,2.926,830,1.933,832,1.933,885,2.111,932,4.586,954,1.933,1010,2.443,1106,2.658,1141,2.926,1237,1.755,1243,3.938,1258,2.658,1259,4.042,1266,2.171,1270,1.933,1271,3.833,1272,3.833,1273,3.833,1274,3.833,1275,5.158,1276,3.286,1277,3.833,1278,3.833,1279,3.833,1280,2.532,1281,3.833,1282,2.532,1283,4.751,1284,3.833,1285,2.532,1286,3.833,1287,2.532,1288,4.625,1289,2.532,1290,3.286,1291,2.532,1292,3.833,1293,2.532,1294,2.532,1295,2.532,1296,2.171,1297,2.171,1298,2.532,1299,2.532,1300,2.532,1301,2.532,1302,2.532,1303,2.532,1304,2.532,1305,2.532,1306,3.286,1307,3.286,1308,2.171,1309,2.532,1310,2.171,1311,2.171,1312,2.171,1313,2.171,1314,2.171,1315,2.171,1316,2.171,1317,3.286,1318,2.171]],["title/classes/PasswordValidation.html",[25,0.028,1319,2.513]],["body/classes/PasswordValidation.html",[3,0.144,4,0.144,9,0.123,18,0.35,19,0.02,24,0.165,25,0.043,32,4.346,34,4.843,48,5.332,137,0.488,161,1.296,170,0.009,171,0.017,172,0.009,190,1.264,199,1.711,205,1.406,207,0.603,210,0.301,219,0.453,221,0.809,222,0.721,228,2.307,232,3.285,262,0.903,274,0.903,275,0.809,283,0.952,288,2.425,289,1.123,306,1.973,308,1.695,324,2.832,327,1.004,349,1.782,513,2.435,608,3.567,683,3.324,805,4.137,843,1.332,858,5.112,885,2.641,972,2.435,975,2.195,978,4.893,980,4.137,981,4.134,982,4.134,983,4.134,984,3.801,985,3.324,986,3.056,987,3.801,988,2.63,1261,4.955,1319,4.134,1320,4.211,1321,4.794,1322,4.794,1323,5.962,1324,5.112,1325,4.794,1326,4.794,1327,4.794,1328,3.444,1329,4.794,1330,4.794,1331,4.794,1332,3.444,1333,3.444,1334,3.444,1335,3.444,1336,6.268,1337,6.268,1338,6.268,1339,6.268,1340,6.268,1341,4.346,1342,6.268,1343,6.268,1344,6.268,1345,6.268,1346,6.268,1347,3.444,1348,3.444,1349,4.794,1350,4.794,1351,3.444,1352,3.444,1353,3.444,1354,3.444,1355,3.444,1356,3.444,1357,3.444]],["title/classes/PhoneValidation.html",[25,0.028,1358,2.767]],["body/classes/PhoneValidation.html",[3,0.194,4,0.194,9,0.167,18,0.474,19,0.02,24,0.223,25,0.05,137,0.474,170,0.012,171,0.015,172,0.012,190,1.71,199,1.505,205,1.903,207,0.64,210,0.407,219,0.44,221,0.988,222,0.701,228,2.266,232,3.227,262,1.103,274,0.878,275,0.786,283,1.164,288,2.478,289,1.103,306,1.938,308,1.325,327,0.976,349,1.325,488,2.13,513,2.392,805,4.084,842,3.573,843,2.266,885,3.703,972,2.392,975,2.971,978,4.902,979,3.558,980,4.284,981,4.062,982,4.062,983,4.062,984,3.734,985,4.062,986,3.734,987,3.734,988,3.558,989,3.996,993,3.558,1358,5.132,1359,5.023,1360,5.023,1361,5.858,1362,4.66,1363,4.66,1364,6.407,1365,5.023,1366,4.66,1367,5.858]],["title/components/RecoverPasswordComponent.html",[0,0.682,157,1.262]],["body/components/RecoverPasswordComponent.html",[0,0.949,1,1.02,2,1.744,3,0.122,4,0.122,5,1.264,6,1.338,7,1.264,8,1.196,9,0.105,11,1.264,12,2.616,13,2.616,14,1.952,16,1.843,18,0.626,19,0.02,20,0.441,22,2.143,24,0.14,25,0.04,29,0.753,34,2.962,37,3.662,50,3.496,94,2.236,110,2.236,131,0.875,132,1.843,133,1.744,134,1.264,135,2.391,136,1.264,137,0.564,138,1.264,139,1.075,140,1.133,141,2.176,142,1.02,143,1.264,144,1.02,145,1.264,146,1.02,147,1.196,148,1.264,149,1.02,150,1.264,151,1.075,152,0.969,153,1.02,154,1.264,155,1.02,156,1.264,157,1.93,158,2.753,159,1.843,160,1.02,161,0.792,162,1.02,163,1.133,164,1.264,165,1.075,166,1.133,167,1.02,168,1.264,169,1.264,170,0.008,171,0.011,172,0.008,190,1.075,193,0.832,195,1.264,199,0.753,207,0.467,210,0.256,211,0.894,219,0.523,221,0.994,222,0.955,228,1.652,258,1.567,261,1.413,262,0.804,264,1.295,266,2.231,274,0.804,275,0.721,283,0.848,288,1.95,289,0.949,291,1.488,306,1.833,308,1.214,317,1.264,319,0.875,327,1.16,356,1.843,368,3.849,369,3.261,373,3.033,378,4.969,386,2.353,389,2.962,390,4.403,393,2.523,407,2.962,408,3.261,412,1.567,426,3.261,427,3.261,447,2.687,492,2.031,493,2.962,511,2.031,513,2.593,516,2.031,517,1.867,518,2.236,519,2.236,586,1.613,600,2.031,608,2.687,615,4.969,628,4.23,645,2.962,646,2.523,658,2.687,850,2.978,857,3.273,972,2.058,973,1.867,974,2.031,996,2.511,998,2.511,1010,2.722,1058,2.722,1089,2.962,1112,2.722,1179,4.498,1180,4.498,1187,2.962,1192,2.236,1200,3.842,1202,2.031,1204,2.031,1209,2.031,1210,2.511,1211,3.849,1217,3.261,1220,3.662,1368,5.58,1369,2.236,1370,4.322,1371,3.662,1372,4.322,1373,4.271,1374,2.929,1375,3.662,1376,2.929,1377,2.929,1378,2.929,1379,2.929,1380,3.662,1381,2.511,1382,2.929,1383,2.929,1384,2.929,1385,2.929,1386,2.511,1387,3.662,1388,2.929,1389,2.929,1390,2.929,1391,2.929,1392,2.929,1393,2.929,1394,2.929,1395,2.929,1396,2.929,1397,2.929,1398,2.511,1399,4.271,1400,3.662,1401,3.261]],["title/interceptors/RequestInterceptor.html",[728,2.31,1002,2.767]],["body/interceptors/RequestInterceptor.html",[3,0.174,4,0.174,9,0.149,18,0.681,19,0.02,20,0.628,21,3.811,24,0.199,25,0.048,137,0.555,170,0.011,171,0.014,172,0.011,207,0.665,210,0.364,219,0.574,222,0.821,232,3.007,254,1.403,259,2.111,260,2.111,262,1.028,264,1.563,265,2.894,266,2.374,274,1.028,275,0.921,289,1.028,290,3.138,296,1.907,297,2.153,298,1.907,301,2.247,308,1.551,317,1.801,327,1.273,349,1.186,356,1.801,400,2.356,422,2.153,423,5.243,424,3.225,588,3.225,590,2.356,639,5.243,640,3.553,646,4.278,664,3.225,693,2.894,728,3.479,743,3.187,1005,4.473,1008,5.215,1010,3.479,1011,4.68,1012,4.68,1018,3.579,1019,5.531,1020,5.531,1022,4.68,1024,3.785,1025,3.579,1026,4.68,1116,3.579,1341,2.894,1402,3.579,1403,5.458,1404,6.082,1405,4.174,1406,4.174,1407,5.458,1408,4.174,1409,4.174,1410,4.174,1411,4.174,1412,5.458,1413,4.174,1414,4.174,1415,4.174,1416,4.174,1417,4.174,1418,4.174]],["title/components/ResetPasswordComponent.html",[0,0.682,160,1.262]],["body/components/ResetPasswordComponent.html",[0,0.861,1,0.866,2,1.543,3,0.104,4,0.104,5,1.073,6,1.136,7,1.073,8,1.015,9,0.089,11,1.073,12,2.547,13,2.547,14,1.727,16,1.631,18,0.589,19,0.02,20,0.374,22,2.399,24,0.119,25,0.02,29,0.639,32,1.723,74,2.131,131,0.743,132,1.631,133,1.543,134,1.073,135,2.205,136,1.073,137,0.559,138,1.073,139,0.912,140,0.961,141,1.973,142,0.866,143,1.073,144,0.866,145,1.073,146,0.866,147,1.015,148,1.073,149,0.866,150,1.073,151,0.912,152,0.822,153,0.866,154,1.073,155,0.866,156,1.073,157,0.866,158,1.015,159,1.631,160,1.779,161,1.804,162,0.866,163,0.961,164,1.073,165,0.912,166,0.961,167,0.866,168,1.073,169,1.073,170,0.006,171,0.01,172,0.006,184,1.832,190,0.912,193,0.706,195,1.073,199,0.639,207,0.5,210,0.217,211,0.791,219,0.568,221,1.093,222,0.99,228,1.462,243,1.606,258,2.016,261,1.69,262,0.712,264,0.639,266,2.143,274,0.861,275,0.771,283,0.908,288,0.961,289,1.035,291,0.866,306,1.915,319,0.743,327,1.26,356,1.631,360,1.95,368,3.491,369,2.885,373,3.087,378,4.734,385,2.986,386,2.519,389,2.62,390,4.172,393,3.018,400,1.631,407,3.543,408,3.901,412,1.875,426,2.885,427,2.885,447,2.477,473,4.629,492,1.723,493,2.62,511,1.723,513,2.787,516,1.723,517,1.584,518,1.897,519,1.897,586,1.369,599,1.897,600,1.723,608,2.917,620,2.62,628,3.901,645,2.62,646,2.233,653,2.233,664,3.247,674,2.885,850,2.702,857,3.018,972,2.457,980,1.584,1010,2.409,1058,2.409,1089,3.543,1112,2.409,1135,2.409,1179,3.491,1180,4.196,1184,5.553,1187,2.62,1192,1.897,1200,3.171,1202,1.723,1204,1.723,1208,2.131,1209,2.62,1211,3.491,1217,2.885,1221,3.24,1224,3.24,1319,1.723,1320,1.897,1324,2.131,1369,1.897,1370,3.921,1371,3.24,1372,3.921,1375,3.24,1381,2.131,1386,2.131,1387,2.131,1398,2.131,1400,3.24,1401,2.885,1419,5.724,1420,5.109,1421,3.779,1422,5.109,1423,3.779,1424,3.779,1425,3.779,1426,3.779,1427,2.485,1428,5.109,1429,3.779,1430,2.485,1431,3.779,1432,3.779,1433,2.485,1434,2.485,1435,3.779,1436,2.485,1437,3.779,1438,2.485,1439,2.485,1440,2.485,1441,2.485,1442,2.485,1443,2.485,1444,3.779,1445,3.779,1446,2.485,1447,2.485,1448,2.485,1449,2.485,1450,2.485,1451,2.485,1452,2.485,1453,2.485,1454,2.485,1455,2.485,1456,2.485,1457,2.485,1458,2.485,1459,2.485,1460,3.779,1461,3.779,1462,3.779,1463,3.779]],["title/interfaces/RootObject.html",[834,1.564,1053,2.513]],["body/interfaces/RootObject.html",[3,0.195,4,0.195,9,0.168,19,0.02,24,0.281,125,3.472,170,0.012,171,0.015,172,0.012,207,0.512,209,2.156,210,0.409,211,1.23,219,0.668,221,1.236,224,1.944,275,0.991,281,2.849,422,2.416,513,2.992,834,2.993,835,2.767,837,2.985,838,2.985,843,2.605,972,3.113,1049,3.248,1050,3.576,1051,3.576,1052,4.016,1053,4.075,1054,5.774,1055,6.069]],["title/classes/RouteReusableStrategy.html",[25,0.028,733,2.513]],["body/classes/RouteReusableStrategy.html",[3,0.138,4,0.138,8,1.904,9,0.119,18,0.337,19,0.02,24,0.158,25,0.026,137,0.629,140,1.804,170,0.009,171,0.012,172,0.009,193,0.941,205,1.352,207,0.7,210,0.289,219,0.583,222,0.929,262,0.878,274,1.163,275,1.042,288,2.601,289,1.266,319,1.394,327,1.379,349,1.666,360,3.725,385,3.929,400,2.99,412,1.711,415,5.94,416,4.093,447,3.108,460,4.085,532,4.122,673,3.234,733,3.234,734,4.894,735,6.062,798,3.561,1135,2.973,1464,5.495,1465,2.839,1466,4.664,1467,4.664,1468,7.257,1469,4.664,1470,4.664,1471,4.664,1472,4.664,1473,4.664,1474,4.664,1475,4.664,1476,5.399,1477,5.399,1478,4.664,1479,7.35,1480,3.312,1481,7.07,1482,6.409,1483,4.664,1484,3.312,1485,4.664,1486,3.312,1487,3.312,1488,5.861,1489,3.312,1490,6.178,1491,3.312,1492,5.861,1493,3.312,1494,4.664,1495,3.312,1496,3.312,1497,3.312]],["title/components/SendMessageComponent.html",[0,0.682,162,1.262]],["body/components/SendMessageComponent.html",[0,0.905,1,0.941,2,1.643,3,0.113,4,0.113,5,1.165,6,1.234,7,1.165,8,1.103,9,0.097,11,1.165,12,2.583,13,2.614,14,1.838,16,1.736,18,0.608,19,0.02,20,0.406,22,1.556,24,0.129,25,0.021,29,1.464,32,2.789,131,0.807,132,1.736,133,1.643,134,1.165,135,2.299,136,1.165,137,0.489,138,1.165,139,0.991,140,1.045,141,2.075,142,0.941,143,1.165,144,0.941,145,1.165,146,0.941,147,1.103,148,1.165,149,0.941,150,1.165,151,0.991,152,1.591,153,0.941,154,1.165,155,0.941,156,1.165,157,0.941,158,1.103,159,1.736,160,0.941,161,0.73,162,1.855,163,2.46,164,1.165,165,0.991,166,1.045,167,0.941,168,1.165,169,1.165,170,0.007,171,0.01,172,0.007,190,0.991,193,0.768,199,1.235,207,0.295,210,0.236,211,0.842,219,0.503,221,1.008,222,0.956,224,1.331,258,1.955,261,1.763,262,0.757,264,0.694,271,2.377,274,0.508,275,0.456,283,0.536,285,2.216,289,1.003,291,0.941,308,1.143,317,1.165,327,0.842,356,1.736,360,2.48,373,3.023,386,2.935,393,2.377,398,3.072,412,1.955,422,2.076,431,3.072,447,1.309,464,2.789,488,1.838,508,3.072,513,2.596,517,1.721,539,5.245,540,2.315,570,2.315,640,2.216,645,3.694,842,2.076,850,2.84,857,3.147,872,3.694,903,2.062,906,2.315,909,1.872,913,2.062,935,3.064,1005,2.789,1058,2.564,1100,2.315,1102,4.122,1103,4.122,1106,1.872,1107,2.315,1108,2.315,1112,1.721,1114,4.568,1117,5.121,1134,3.449,1187,2.789,1200,3.694,1202,1.872,1209,1.872,1380,3.449,1401,4.068,1498,5.572,1499,4.961,1500,2.315,1501,4.808,1502,4.023,1503,4.808,1504,4.808,1505,4.808,1506,5.327,1507,5.327,1508,5.327,1509,2.7,1510,4.023,1511,4.023,1512,2.7,1513,5.973,1514,4.122,1515,4.023,1516,4.023,1517,5.327,1518,4.023,1519,2.7,1520,4.023,1521,4.023,1522,2.7,1523,3.449,1524,4.023,1525,2.7,1526,4.023,1527,2.7,1528,2.7,1529,4.023,1530,2.315,1531,2.7,1532,2.7,1533,2.7,1534,2.7,1535,2.7,1536,2.7,1537,2.7,1538,2.7,1539,2.7,1540,2.7,1541,2.7,1542,2.7,1543,2.7,1544,2.7,1545,2.7,1546,2.7,1547,2.7,1548,2.7,1549,2.7,1550,2.315,1551,4.023,1552,2.7,1553,2.7,1554,4.023,1555,2.7,1556,5.327,1557,4.023,1558,4.023,1559,4.023,1560,2.7,1561,5.327,1562,2.7,1563,2.7,1564,4.023,1565,2.7,1566,4.023,1567,2.7,1568,2.7,1569,2.7,1570,2.7,1571,2.7,1572,2.7,1573,2.7,1574,2.7,1575,2.7,1576,2.7,1577,2.7,1578,2.7]],["title/classes/SsnValidation.html",[25,0.028,1579,2.767]],["body/classes/SsnValidation.html",[3,0.185,4,0.185,9,0.158,18,0.451,19,0.02,24,0.212,25,0.049,34,3.07,137,0.451,170,0.011,171,0.015,172,0.011,190,1.625,199,1.793,205,1.808,207,0.62,210,0.386,219,0.418,221,0.957,222,0.666,228,2.194,232,3.124,262,1.068,274,0.834,275,0.747,283,1.126,288,2.194,289,1.068,306,1.876,327,0.927,407,3.932,488,2.859,513,2.315,805,3.988,843,1.713,885,3.124,972,2.315,975,2.822,978,4.837,979,3.381,980,4.205,981,3.932,982,3.932,983,3.932,984,3.615,985,3.932,986,3.615,987,3.615,993,4.777,1341,3.932,1360,4.862,1365,4.862,1579,5.037,1580,4.862,1581,5.207,1582,5.364,1583,5.671,1584,4.428,1585,4.428,1586,4.428,1587,4.428,1588,4.428,1589,5.364,1590,5.364,1591,5.671,1592,5.671,1593,5.671,1594,4.862,1595,4.428,1596,4.862,1597,4.428,1598,4.428,1599,4.428,1600,5.671,1601,4.428,1602,5.671]],["title/injectables/StaticsService.html",[254,0.931,729,2.31]],["body/injectables/StaticsService.html",[3,0.154,4,0.154,9,0.132,18,0.654,19,0.02,20,0.555,24,0.176,25,0.045,28,5.265,137,0.376,152,2.284,170,0.01,171,0.013,172,0.01,199,1.469,207,0.55,210,0.322,211,1.053,214,2.97,215,3.627,219,0.64,221,1.084,222,0.966,224,1.663,226,2.468,254,1.292,256,1.79,258,1.845,262,0.947,264,1.651,269,2.594,270,2.77,271,3.627,272,3.42,273,2.65,274,0.695,275,0.623,279,1.428,282,3.539,283,0.999,285,3.382,288,1.428,289,1.156,290,3.612,291,1.751,293,2.18,294,2.352,295,2.352,296,1.687,297,1.904,298,1.687,306,1.663,307,2.033,308,1.429,310,2.18,311,2.18,312,1.904,313,2.352,314,1.904,315,2.033,316,2.033,318,2.352,319,1.835,320,2.352,321,2.352,327,0.773,349,1.429,360,3.42,686,3.168,729,3.205,811,2.559,872,3.486,959,2.818,1603,2.818,1604,5.028,1605,6.903,1606,7.079,1607,5.718,1608,5.718,1609,5.028,1610,6.14,1611,5.028,1612,5.028,1613,3.691,1614,5.265,1615,6.14,1616,3.691,1617,3.691,1618,6.14,1619,3.691,1620,3.691,1621,5.028,1622,3.691,1623,5.028,1624,3.691,1625,3.691]],["title/guards/UnauthenticatedGuard.html",[579,2.31,618,2.31]],["body/guards/UnauthenticatedGuard.html",[3,0.182,4,0.182,9,0.156,18,0.631,19,0.02,20,0.655,22,2.17,24,0.208,25,0.049,137,0.443,170,0.011,171,0.015,172,0.011,191,2.72,193,1.237,201,3.826,207,0.613,210,0.38,219,0.411,222,0.844,228,2.17,243,1.764,252,2.72,254,1.441,260,2.536,261,1.856,262,1.056,264,1.684,266,2.368,274,0.82,275,0.734,281,2.72,283,1.302,289,1.056,301,1.954,319,1.677,327,1.174,349,1.594,356,1.879,373,3.229,385,3.382,400,2.421,414,3.889,424,3.314,447,2.111,460,4.178,462,3.889,568,3.575,579,3.575,580,3.324,582,4.283,583,4.809,584,3.889,585,4.809,586,2.398,588,3.872,589,4.283,590,2.421,592,4.283,593,4.809,594,4.809,595,4.809,596,4.809,597,2.72,598,3.732,599,3.324,601,2.775,618,3.575,1626,3.732,1627,6.555,1628,4.353,1629,4.353,1630,4.353]],["title/interfaces/User.html",[243,1.14,834,1.564]],["body/interfaces/User.html",[3,0.179,4,0.179,9,0.154,19,0.02,24,0.295,112,3.141,137,0.704,170,0.011,171,0.014,172,0.011,207,0.47,209,2.394,210,0.375,211,1.165,212,2.816,219,0.654,221,1.244,224,1.841,237,2.871,243,2.363,249,2.871,250,3.066,252,2.698,275,0.939,301,1.938,597,2.992,608,2.698,625,2.698,650,2.982,658,3.357,664,3.288,834,3.041,835,2.541,836,2.982,837,2.741,838,2.741,839,2.741,840,3.283,841,3.283,842,3.572,843,2.153,844,3.288,845,4.982,846,4.249,847,4.982]],["title/classes/Volunteer.html",[25,0.028,29,0.931]],["body/classes/Volunteer.html",[3,0.117,4,0.117,9,0.1,19,0.02,24,0.134,25,0.022,29,1.83,78,2.86,112,2.494,125,2.437,137,0.732,152,1.365,170,0.007,171,0.011,172,0.007,204,3.696,205,1.141,207,0.305,208,1.937,209,1.8,210,0.244,211,0.864,212,2.7,213,3.401,214,3.696,215,3.696,216,3.401,217,3.12,219,0.697,220,3.401,221,1.264,222,1.077,224,2.238,226,1.78,227,2.86,228,1.596,229,2.437,230,3.756,233,3.15,236,2.338,237,2.128,239,4.641,241,3.537,242,3.537,243,1.297,246,2.629,247,2.437,249,2.794,250,2.272,273,3.034,281,2.626,282,2.984,283,0.819,285,2.272,287,2.86,288,2.095,312,2.128,400,2.338,658,2.802,678,3.537,745,3.414,747,2.86,748,3.745,749,2.395,750,3.15,762,4.617,763,3.696,789,3.537,796,3.537,842,2.981,843,2.095,844,2.437,935,2.629,987,2.629,1024,2.86,1234,3.745,1237,4.007,1243,4.617,1245,3.537,1258,3.401,1259,3.401,1260,3.537,1261,3.15,1262,3.537,1581,4.412,1582,3.537,1631,2.395,1632,4.954,1633,2.793,1634,2.793,1635,2.793,1636,2.793,1637,4.125,1638,2.793,1639,2.793,1640,2.793,1641,2.793,1642,4.125,1643,4.125,1644,2.793,1645,2.793,1646,2.793,1647,2.793,1648,2.793,1649,4.125,1650,4.125,1651,4.125,1652,2.793,1653,2.793,1654,2.793,1655,2.793,1656,2.793,1657,2.395]],["title/components/VolunteerPage.html",[0,0.682,167,1.262]],["body/components/VolunteerPage.html",[0,1.204,1,1.615,2,2.385,3,0.194,4,0.194,5,2.001,6,2.119,7,2.001,8,1.894,9,0.166,11,2.001,12,2.771,13,2.771,14,2.669,16,2.52,18,0.472,19,0.02,20,0.698,22,1.794,24,0.222,25,0.036,29,1.724,131,1.386,132,2.52,133,2.385,134,2.001,135,2.896,136,2.001,137,0.594,138,2.001,139,1.702,140,2.259,141,2.759,142,1.615,143,2.001,144,1.615,145,2.001,146,1.615,147,1.894,148,2.001,149,1.615,150,2.001,151,1.702,152,1.932,153,1.615,154,2.001,155,1.615,156,2.001,157,1.615,158,1.894,159,2.52,160,1.615,161,1.253,162,1.615,163,2.259,164,2.001,165,1.702,166,2.259,167,2.337,168,2.001,169,2.001,170,0.012,171,0.015,172,0.012,259,1.794,445,3.541,605,3.541,1058,2.956,1658,3.976,1659,6.392,1660,5.84]],["title/modules/VolunteerPageModule.html",[173,1.33,1661,2.513]],["body/modules/VolunteerPageModule.html",[0,1.27,3,0.178,4,0.178,9,0.153,18,0.745,19,0.02,20,0.643,24,0.204,25,0.034,131,1.278,139,2.581,140,2.144,151,2.581,152,1.834,161,1.155,162,2.45,163,2.144,165,2.581,166,2.144,167,2.45,170,0.011,171,0.014,172,0.011,173,1.568,175,1.953,176,2.073,177,3.389,178,2.355,179,2.355,180,2.205,183,3.054,184,2.073,186,3.054,187,3.533,188,2.355,189,3.533,190,1.568,191,2.983,192,2.525,193,1.215,194,3.275,195,1.845,197,3.566,198,3.264,199,1.098,200,3.985,201,3.715,202,2.355,203,3.264,430,2.964,432,2.964,436,2.964,613,4.753,1499,3.264,1661,5.156,1662,3.665,1663,3.665,1664,4.274,1665,4.274,1666,6.152,1667,4.274]],["title/injectables/VolunteerService.html",[254,0.931,267,2.141]],["body/injectables/VolunteerService.html",[3,0.063,4,0.063,9,0.054,12,1.692,18,0.545,19,0.02,20,0.225,22,2.606,24,0.072,25,0.026,29,1.794,112,1.087,125,1.488,137,0.699,152,1.526,170,0.004,171,0.01,172,0.004,199,1.553,204,1.488,207,0.636,209,1.692,210,0.22,211,0.965,212,1.837,214,2.724,215,3.04,217,2.932,219,0.624,221,1.242,222,0.875,224,2.264,226,1.406,236,2.221,239,3.969,244,1.606,247,1.488,249,1.3,254,0.647,256,0.727,258,1.401,259,1.477,260,1.477,261,1.526,262,0.474,264,0.837,267,1.488,269,1.3,270,1.388,271,2.256,272,2.379,273,2.805,274,1.118,275,0.959,278,1.488,279,2.439,280,1.747,283,1.18,284,3.969,285,1.388,286,2.16,287,2.259,288,1.647,289,1.187,290,3.476,291,0.522,292,1.606,293,0.886,294,0.956,295,0.956,296,0.685,297,0.773,298,0.685,299,1.145,300,0.956,304,1.285,305,1.606,306,0.834,307,0.826,308,1.891,310,0.886,311,0.886,312,0.773,313,0.956,314,0.773,315,0.826,316,0.826,317,0.647,318,0.956,319,1.273,320,0.956,321,0.956,322,1.04,323,1.04,324,0.886,327,1.41,331,3.274,339,1.747,340,1.747,341,1.747,342,1.747,345,3.197,348,1.145,349,1.462,351,1.04,352,1.285,354,3.399,400,1.99,412,0.924,416,1.488,488,0.685,683,1.747,686,1.3,724,2.896,745,3.358,747,2.259,750,2.488,763,0.886,784,1.924,785,3.954,788,2.916,797,4.589,798,2.916,810,3.251,811,1.747,813,3.251,829,2.16,830,1.924,832,1.145,842,2.529,843,2.71,885,1.388,935,4.418,949,1.145,968,5.467,986,2.434,1106,1.747,1135,3.279,1141,1.924,1234,1.145,1237,2.259,1258,1.747,1259,3.197,1276,2.16,1283,3.954,1290,2.16,1296,2.16,1297,1.285,1306,2.16,1307,2.16,1308,1.285,1310,1.285,1311,1.285,1312,3.274,1313,2.16,1314,1.285,1315,1.285,1316,1.285,1317,2.16,1318,1.285,1581,4.814,1614,3.274,1632,1.285,1657,2.16,1668,1.145,1669,2.519,1670,2.519,1671,2.519,1672,2.519,1673,2.519,1674,2.519,1675,2.519,1676,3.818,1677,2.519,1678,1.499,1679,2.519,1680,2.519,1681,1.499,1682,3.818,1683,2.519,1684,3.258,1685,2.519,1686,1.499,1687,2.519,1688,2.519,1689,2.519,1690,1.499,1691,2.519,1692,1.499,1693,3.818,1694,4.611,1695,4.611,1696,4.611,1697,4.611,1698,2.519,1699,1.499,1700,2.519,1701,1.499,1702,2.519,1703,1.499,1704,1.499,1705,2.519,1706,1.499,1707,2.519,1708,2.519,1709,2.519,1710,4.257,1711,2.519,1712,1.499,1713,1.499,1714,1.499,1715,3.258,1716,2.519,1717,1.499,1718,4.611,1719,1.499,1720,3.258,1721,3.258,1722,1.499,1723,1.499,1724,3.258,1725,1.499,1726,1.499,1727,1.499,1728,1.499,1729,3.258,1730,3.258,1731,1.499,1732,1.499,1733,3.818,1734,1.499,1735,3.258,1736,1.499,1737,1.499,1738,1.499,1739,1.499,1740,1.499,1741,1.499,1742,1.499,1743,1.499,1744,1.499,1745,1.499,1746,2.519,1747,2.519,1748,2.519,1749,2.519,1750,2.519,1751,2.519,1752,2.519,1753,2.519,1754,2.519,1755,2.519,1756,2.519,1757,2.519,1758,3.258,1759,2.519,1760,3.818,1761,1.499]],["title/coverage.html",[1762,4.258]],["body/coverage.html",[0,1.338,1,1.086,9,0.112,10,2.674,19,0.02,25,0.054,29,0.801,139,1.144,142,1.086,144,1.086,146,1.086,149,1.086,151,1.144,153,1.086,155,1.086,157,1.086,160,1.086,162,1.086,165,1.144,167,1.086,170,0.008,171,0.012,172,0.008,197,1.609,204,1.843,206,2.674,217,1.609,219,0.294,243,0.981,254,1.701,255,1.988,257,3.988,266,1.032,267,1.843,292,1.988,296,2.607,307,3.326,308,0.886,315,3.326,355,2.674,374,1.512,376,1.988,430,2.163,432,2.163,436,2.163,473,2.163,488,2.872,548,2.381,549,2.674,579,2.849,581,2.674,602,2.674,615,2.381,618,1.988,622,3.413,625,1.512,696,3.099,724,1.843,725,1.988,726,1.843,727,1.988,728,1.988,729,1.988,733,2.163,734,2.381,739,2.381,745,1.843,746,2.674,767,3.988,834,2.606,836,3.622,839,1.988,848,2.674,849,2.674,909,5.301,915,2.674,916,2.674,973,1.988,974,2.163,975,3.636,1002,3.413,1003,3.413,1004,3.413,1023,4.798,1049,2.163,1050,3.413,1053,2.163,1056,2.674,1057,2.674,1077,2.674,1125,4.941,1126,4.941,1176,2.674,1225,2.674,1233,2.674,1270,3.988,1319,2.163,1320,2.381,1358,2.381,1359,2.674,1368,2.674,1369,3.413,1402,2.674,1419,2.674,1464,2.674,1465,2.674,1498,2.674,1499,2.381,1500,2.674,1579,2.381,1580,2.674,1603,3.988,1626,2.674,1631,2.674,1658,2.674,1668,3.988,1762,2.674,1763,3.119,1764,3.119,1765,3.119,1766,3.119,1767,3.119,1768,3.119,1769,6.284,1770,4.469,1771,7.267,1772,7.372,1773,5.223,1774,5.223,1775,4.469,1776,3.119,1777,2.674,1778,2.674,1779,2.674,1780,2.674,1781,2.674,1782,2.674,1783,5.223,1784,3.119,1785,5.223,1786,4.469,1787,4.469,1788,3.119,1789,3.119,1790,5.223,1791,6.038,1792,3.119,1793,3.119,1794,3.119,1795,3.119,1796,3.119,1797,3.119,1798,3.119,1799,5.223,1800,3.119,1801,3.119,1802,3.119,1803,3.119,1804,3.119,1805,3.119,1806,3.119,1807,3.119,1808,3.119,1809,3.119,1810,2.674,1811,2.674,1812,2.674,1813,2.674,1814,3.832,1815,2.674,1816,2.674,1817,3.119]],["title/dependencies.html",[176,2.116,1818,3.017]],["body/dependencies.html",[13,1.733,19,0.02,20,0.71,170,0.012,171,0.015,172,0.012,176,2.29,188,2.601,190,1.733,193,1.342,195,2.038,272,3.047,298,2.158,305,3.01,310,2.79,311,4.108,380,6.081,383,3.275,384,4.049,464,5.088,465,3.606,467,3.606,469,3.01,470,4.049,471,4.049,530,5.065,531,4.469,536,4.049,537,4.049,539,3.606,541,4.049,542,4.049,1514,4.049,1530,4.049,1550,4.049,1819,7.196,1820,4.722,1821,4.722,1822,5.907,1823,4.722,1824,6.753,1825,4.722,1826,4.722,1827,4.722,1828,4.722,1829,4.722,1830,4.722,1831,4.722,1832,4.722,1833,4.722,1834,4.722,1835,4.722,1836,4.722,1837,4.722,1838,4.722,1839,4.722,1840,4.722,1841,4.722,1842,4.722,1843,4.722,1844,4.722,1845,5.907,1846,4.722,1847,4.722,1848,4.722,1849,4.722,1850,4.722]],["title/miscellaneous/functions.html",[1851,2.092,1852,3.742]],["body/miscellaneous/functions.html",[19,0.019,21,2.823,137,0.757,170,0.012,171,0.015,172,0.012,207,0.763,210,0.417,219,0.703,236,2.062,269,2.465,274,1.314,275,1.177,278,2.823,279,2.507,283,1.287,636,4.534,653,2.823,673,4.838,686,3.07,843,1.848,1125,3.648,1126,5.508,1145,4.097,1152,5.815,1153,5.982,1154,5.556,1155,4.097,1156,4.097,1163,4.097,1164,4.097,1165,4.097,1523,4.097,1777,5.102,1778,5.102,1779,5.102,1780,5.556,1781,5.102,1782,5.102,1851,3.313,1852,4.097,1853,7.113,1854,4.778,1855,4.778,1856,4.778,1857,4.778]],["title/index.html",[210,0.316,1858,3.108]],["body/index.html",[1,2.102,2,1.677,19,0.02,131,1.228,139,2.214,142,2.427,144,2.102,146,2.102,149,2.102,151,2.214,153,2.102,155,2.102,157,2.102,160,2.102,161,1.11,162,2.102,165,2.214,167,2.102,170,0.011,171,0.014,172,0.011,173,1.507,174,4.445,175,1.877,176,1.992,177,2.263,178,2.263,179,2.263,180,2.119,181,3.522,182,3.522,183,2.975,184,1.992,191,1.992,205,1.677,255,3.846,256,1.992,266,1.996,267,3.565,374,2.926,521,4.96,522,3.522,523,3.522,524,3.522,525,3.522,526,3.846,527,4.86,580,3.136,609,5.078,610,3.522,611,3.522,721,3.522,722,3.522,723,3.522,724,3.565,725,3.846,726,3.565,727,3.846,728,4.086,729,3.846,835,2.427,1119,4.445,1120,3.522,1121,3.522,1341,2.848,1589,3.522,1590,3.522,1594,3.522,1596,3.522,1661,5.078,1662,3.522,1663,3.522,1858,3.522,1859,4.107,1860,4.107]],["title/modules.html",[175,2.269]],["body/modules.html",[19,0.017,170,0.014,171,0.017,172,0.014,174,3.866,175,2.548,394,4.781,521,3.866,526,3.554,527,3.554,531,5.114,609,3.866,1119,3.866,1661,3.866,1861,7.375,1862,7.375,1863,7.444,1864,5.576]],["title/routes.html",[191,2.408]],["body/routes.html",[19,0.018,170,0.016,171,0.018,172,0.016,191,2.897]],["title/miscellaneous/variables.html",[1851,2.092,1865,3.742]],["body/miscellaneous/variables.html",[19,0.02,170,0.01,171,0.013,172,0.01,209,2.254,210,0.322,219,0.641,221,0.849,226,2.774,246,3.647,257,2.822,272,3.316,273,3.056,279,2.625,282,3.152,283,1.473,291,2.591,296,3.292,306,2.343,307,3.901,308,2.013,309,2.822,314,3.316,315,3.901,316,3.54,319,1.504,447,2.775,448,2.356,622,2.822,625,2.979,683,4.26,695,3.489,696,4.26,763,3.381,767,2.822,807,2.822,932,3.968,935,3.647,949,2.822,954,2.822,959,2.822,1003,2.822,1004,3.842,1030,3.169,1270,2.822,1603,2.822,1668,2.822,1810,3.169,1811,3.169,1812,3.169,1813,3.169,1814,3.169,1815,4.315,1816,4.315,1851,2.562,1865,3.169,1866,5.032,1867,3.695,1868,3.695,1869,3.695,1870,3.695,1871,3.695,1872,3.695,1873,5.032,1874,5.032,1875,5.032,1876,5.032,1877,5.032,1878,3.695,1879,3.695,1880,6.143,1881,3.695,1882,6.427,1883,5.722,1884,6.631,1885,5.722,1886,5.722,1887,5.722,1888,5.722,1889,5.722,1890,3.695,1891,3.695]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":488,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"classes/PhoneValidation.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["0.8.29",{"_index":1850,"title":{},"body":{"dependencies.html":{}}}],["0.9.3",{"_index":1838,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1791,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1766,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":912,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{}}}],["1",{"_index":1591,"title":{},"body":{"classes/SsnValidation.html":{}}}],["1.0.0",{"_index":1840,"title":{},"body":{"dependencies.html":{}}}],["1.0.20",{"_index":1843,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1848,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1772,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1365,"title":{},"body":{"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["10/10",{"_index":1770,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":1795,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":909,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{},"coverage.html":{}}}],["1000",{"_index":508,"title":{},"body":{"components/AppComponent.html":{},"injectables/LocalStorageService.html":{},"components/SendMessageComponent.html":{}}}],["100px",{"_index":1572,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["10px",{"_index":913,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["11",{"_index":1596,"title":{},"body":{"classes/SsnValidation.html":{},"index.html":{}}}],["11/11",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1366,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["12/12",{"_index":1788,"title":{},"body":{"coverage.html":{}}}],["12px",{"_index":1104,"title":{},"body":{"components/HomePage.html":{}}}],["13",{"_index":1586,"title":{},"body":{"classes/SsnValidation.html":{}}}],["13/13",{"_index":1789,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1859,"title":{},"body":{"index.html":{}}}],["15px",{"_index":905,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["19/19",{"_index":1786,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1589,"title":{},"body":{"classes/SsnValidation.html":{},"index.html":{}}}],["2.0.6",{"_index":1831,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":1844,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1842,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1790,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1793,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1797,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":904,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["23/25",{"_index":1809,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":1159,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["24/28",{"_index":1801,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":1567,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["25px",{"_index":1577,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["27",{"_index":1860,"title":{},"body":{"index.html":{}}}],["2px",{"_index":1099,"title":{},"body":{"components/HomePage.html":{}}}],["3",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/SsnValidation.html":{}}}],["3.1.0",{"_index":1839,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1769,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":493,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["300px",{"_index":1578,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["30px",{"_index":1573,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["32/34",{"_index":1804,"title":{},"body":{"coverage.html":{}}}],["35px",{"_index":1574,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["4",{"_index":1592,"title":{},"body":{"classes/SsnValidation.html":{}}}],["4.0.3",{"_index":1837,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":1829,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1775,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1036,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["401",{"_index":1035,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["5",{"_index":1594,"title":{},"body":{"classes/SsnValidation.html":{},"index.html":{}}}],["5.0.0",{"_index":1828,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":1836,"title":{},"body":{"dependencies.html":{}}}],["5.11.0",{"_index":1824,"title":{},"body":{"dependencies.html":{}}}],["5.12.0",{"_index":1826,"title":{},"body":{"dependencies.html":{}}}],["5.9.0",{"_index":1822,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1796,"title":{},"body":{"coverage.html":{}}}],["50px",{"_index":1568,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["5px",{"_index":1096,"title":{},"body":{"components/HomePage.html":{}}}],["6",{"_index":1593,"title":{},"body":{"classes/SsnValidation.html":{}}}],["6.4.0",{"_index":1833,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":1846,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1787,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1160,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["66",{"_index":1792,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1590,"title":{},"body":{"classes/SsnValidation.html":{},"index.html":{}}}],["7.1.1",{"_index":1845,"title":{},"body":{"dependencies.html":{}}}],["7.2.2",{"_index":1819,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1774,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":1806,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":1767,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1805,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1341,"title":{},"body":{"classes/PasswordValidation.html":{},"interceptors/RequestInterceptor.html":{},"classes/SsnValidation.html":{},"index.html":{}}}],["8.0.0",{"_index":1834,"title":{},"body":{"dependencies.html":{}}}],["8/11",{"_index":1768,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1776,"title":{},"body":{"coverage.html":{}}}],["80px",{"_index":1105,"title":{},"body":{"components/HomePage.html":{}}}],["83",{"_index":1794,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1800,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1773,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":993,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["9._",{"_index":992,"title":{},"body":{"classes/EmailValidation.html":{}}}],["92",{"_index":1808,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1803,"title":{},"body":{"coverage.html":{}}}],["_credentials",{"_index":624,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["_errors",{"_index":1059,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["_global_",{"_index":1045,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["_id",{"_index":212,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["_rev",{"_index":213,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["aaist",{"_index":1311,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["about'},{'name",{"_index":138,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["about.page",{"_index":196,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["about.page.html",{"_index":17,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page.scss",{"_index":15,"title":{},"body":{"components/AboutPage.html":{}}}],["aboutpage",{"_index":1,"title":{"components/AboutPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["aboutpagemodule",{"_index":174,"title":{"modules/AboutPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"index.html":{},"modules.html":{}}}],["abstract",{"_index":981,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["abstractcontrol",{"_index":978,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["abstractcontrol.get('confirmpassword').seterrors",{"_index":1335,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["abstractcontrol.get('confirmpassword').value",{"_index":1334,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["abstractcontrol.get('password').value",{"_index":1333,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["abstractcontrol.value",{"_index":988,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{}}}],["accept",{"_index":1411,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["access",{"_index":593,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["accessed",{"_index":1432,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["accessors",{"_index":630,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["accesstoken",{"_index":631,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["acestei",{"_index":76,"title":{},"body":{"components/AboutPage.html":{}}}],["aceștia",{"_index":88,"title":{},"body":{"components/AboutPage.html":{}}}],["acredited",{"_index":747,"title":{},"body":{"classes/Course.html":{},"injectables/CourseService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["acredited.id",{"_index":809,"title":{},"body":{"injectables/CourseService.html":{}}}],["acreditor",{"_index":755,"title":{},"body":{"classes/Course.html":{}}}],["action",{"_index":1084,"title":{},"body":{"components/HomePage.html":{}}}],["action.title",{"_index":1093,"title":{},"body":{"components/HomePage.html":{}}}],["actions",{"_index":1080,"title":{},"body":{"components/HomePage.html":{}}}],["activ'/'inactiv",{"_index":1264,"title":{},"body":{"classes/Organisation.html":{}}}],["activated",{"_index":1481,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["activatedroute",{"_index":1422,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["activatedroutesnapshot",{"_index":1479,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["actual_component",{"_index":169,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["adaug",{"_index":431,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["add",{"_index":140,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{}}}],["added",{"_index":312,"title":{},"body":{"injectables/AllocationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["added_by",{"_index":748,"title":{},"body":{"classes/Course.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["addimage",{"_index":1506,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["additional",{"_index":1024,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"classes/Organisation.html":{},"interceptors/RequestInterceptor.html":{},"classes/Volunteer.html":{}}}],["address",{"_index":844,"title":{},"body":{"interfaces/Credentials.html":{},"classes/EmailValidation.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{}}}],["adds",{"_index":1005,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{}}}],["addvolunteercomponent",{"_index":139,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["administrare",{"_index":51,"title":{},"body":{"components/AboutPage.html":{}}}],["administrarea",{"_index":102,"title":{},"body":{"components/AboutPage.html":{}}}],["adres",{"_index":1220,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["adresa",{"_index":996,"title":{},"body":{"classes/EmailValidation.html":{},"components/RecoverPasswordComponent.html":{}}}],["afterviewinit",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["ajutorul",{"_index":75,"title":{},"body":{"components/AboutPage.html":{}}}],["al",{"_index":70,"title":{},"body":{"components/AboutPage.html":{}}}],["align",{"_index":1107,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["allocated",{"_index":233,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Volunteer.html":{}}}],["allocates",{"_index":1683,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocatevolunteer",{"_index":1669,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocatevolunteer(allocationid",{"_index":1680,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocation",{"_index":204,"title":{"classes/Allocation.html":{}},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["allocation.city",{"_index":337,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.county",{"_index":335,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.created_at",{"_index":338,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.organisation",{"_index":346,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.rescue_officer",{"_index":332,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.type",{"_index":344,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.updated_at",{"_index":343,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.volunteer",{"_index":329,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocationid",{"_index":1684,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocations",{"_index":246,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/DatabaseSyncService.html":{},"classes/Volunteer.html":{},"miscellaneous/variables.html":{}}}],["allocationservice",{"_index":255,"title":{"injectables/AllocationService.html":{}},"body":{"injectables/AllocationService.html":{},"modules/CoreModule.html":{},"coverage.html":{},"index.html":{}}}],["allowed",{"_index":595,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["allowing",{"_index":1466,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["aloca",{"_index":114,"title":{},"body":{"components/AboutPage.html":{}}}],["already",{"_index":1431,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["alt",{"_index":71,"title":{},"body":{"components/AboutPage.html":{}}}],["always",{"_index":1265,"title":{},"body":{"classes/Organisation.html":{}}}],["android",{"_index":1550,"title":{},"body":{"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["angular",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["angular/common",{"_index":188,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":693,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["angular/core",{"_index":20,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":190,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"classes/EmailValidation.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1820,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":530,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":193,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["apeleaz",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["api.lxhost.ro",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api.lxhost.ro/api",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aplicația",{"_index":99,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["aplicație",{"_index":27,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["aplicației",{"_index":79,"title":{},"body":{"components/AboutPage.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"dependencies.html":{}}}],["app.component",{"_index":534,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":142,"title":{"components/AppComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["application",{"_index":392,"title":{},"body":{"components/AppComponent.html":{}}}],["application/json",{"_index":1412,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["appmodule",{"_index":521,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["apppage",{"_index":548,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["apppages",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["approutingmodule",{"_index":526,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["apărut",{"_index":1457,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["apăsați",{"_index":514,"title":{},"body":{"components/AppComponent.html":{}}}],["ar",{"_index":43,"title":{},"body":{"components/AboutPage.html":{}}}],["area",{"_index":1251,"title":{},"body":{"classes/Organisation.html":{}}}],["array.from(string(ssn",{"_index":1587,"title":{},"body":{"classes/SsnValidation.html":{}}}],["asemenea",{"_index":98,"title":{},"body":{"components/AboutPage.html":{}}}],["async",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["attachments",{"_index":812,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{}}}],["attributes",{"_index":1055,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["atât",{"_index":1389,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["autentificare",{"_index":1400,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["auth",{"_index":575,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/login",{"_index":1205,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth/logout",{"_index":441,"title":{},"body":{"components/AppComponent.html":{}}}],["auth/reset/:token",{"_index":504,"title":{},"body":{"components/AppComponent.html":{}}}],["authenticated",{"_index":584,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"components/HomePage.html":{},"guards/UnauthenticatedGuard.html":{}}}],["authenticates",{"_index":679,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication",{"_index":301,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{}}}],["authentication'},{'name",{"_index":145,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["authentication.credentials",{"_index":669,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication.loginpayload",{"_index":643,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication.page",{"_index":614,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["authentication.page.html",{"_index":604,"title":{},"body":{"components/AuthenticationPage.html":{}}}],["authentication.page.scss",{"_index":603,"title":{},"body":{"components/AuthenticationPage.html":{}}}],["authentication.service",{"_index":598,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["authentication.user",{"_index":692,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication/authentication.service",{"_index":1408,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["authentication/unauthenticated.guard",{"_index":737,"title":{},"body":{"modules/CoreModule.html":{}}}],["authenticationguard",{"_index":197,"title":{"guards/AuthenticationGuard.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["authenticationpage",{"_index":144,"title":{"components/AuthenticationPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["authenticationpagemodule",{"_index":609,"title":{"modules/AuthenticationPageModule.html":{}},"body":{"modules/AuthenticationPageModule.html":{},"index.html":{},"modules.html":{}}}],["authenticationservice",{"_index":266,"title":{"injectables/AuthenticationService.html":{}},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{},"coverage.html":{},"index.html":{}}}],["authorization",{"_index":1414,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["authservice",{"_index":778,"title":{},"body":{"injectables/CourseService.html":{}}}],["automatically",{"_index":228,"title":{},"body":{"classes/Allocation.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"classes/Course.html":{},"classes/EmailValidation.html":{},"classes/Organisation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/SsnValidation.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{}}}],["available",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"modules.html":{}}}],["avea",{"_index":44,"title":{},"body":{"components/AboutPage.html":{}}}],["await",{"_index":511,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["b",{"_index":1602,"title":{},"body":{"classes/SsnValidation.html":{}}}],["back",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["backbutton",{"_index":890,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["backend",{"_index":647,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["background",{"_index":906,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/SendMessageComponent.html":{}}}],["bank",{"_index":130,"title":{},"body":{"components/AboutPage.html":{}}}],["bar",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["bar/ngx",{"_index":468,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["base64",{"_index":1516,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["base64image",{"_index":1503,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["basic",{"_index":623,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/LocalStorageService.html":{}}}],["baza",{"_index":111,"title":{},"body":{"components/AboutPage.html":{}}}],["bearer",{"_index":1415,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["before",{"_index":1637,"title":{},"body":{"classes/Volunteer.html":{}}}],["being",{"_index":232,"title":{},"body":{"classes/Allocation.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"interceptors/RequestInterceptor.html":{},"classes/SsnValidation.html":{}}}],["belong",{"_index":796,"title":{},"body":{"injectables/CourseService.html":{},"classes/Volunteer.html":{}}}],["belongs",{"_index":766,"title":{},"body":{"classes/Course.html":{}}}],["black",{"_index":1101,"title":{},"body":{"components/HomePage.html":{}}}],["block",{"_index":1576,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["body",{"_index":649,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["boolean",{"_index":460,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/RouteReusableStrategy.html":{},"guards/UnauthenticatedGuard.html":{}}}],["bootstrap",{"_index":178,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["both",{"_index":1322,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["bottom",{"_index":517,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["box",{"_index":910,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{}}}],["browse",{"_index":1863,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":531,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(destination",{"_index":559,"title":{},"body":{"classes/AppPage.html":{}}}],["browser.gettitle",{"_index":560,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/ngx",{"_index":543,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":529,"title":{},"body":{"modules/AppModule.html":{}}}],["bun",{"_index":119,"title":{},"body":{"components/AboutPage.html":{}}}],["button",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/SendMessageComponent.html":{}}}],["c",{"_index":1169,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["ca",{"_index":1167,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["calamități",{"_index":40,"title":{},"body":{"components/AboutPage.html":{}}}],["call",{"_index":1088,"title":{},"body":{"components/HomePage.html":{}}}],["calling",{"_index":871,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["camera",{"_index":1514,"title":{},"body":{"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["camera.destinationtype.data_url",{"_index":1541,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["camera.getpicture",{"_index":1539,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["canactivate",{"_index":201,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"modules/HomePageModule.html":{},"guards/UnauthenticatedGuard.html":{},"modules/VolunteerPageModule.html":{}}}],["cancel",{"_index":899,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["caracter",{"_index":1346,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["caractere",{"_index":1342,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["care",{"_index":42,"title":{},"body":{"components/AboutPage.html":{}}}],["case",{"_index":762,"title":{},"body":{"classes/Course.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["catch(error",{"_index":969,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["catcherror",{"_index":1027,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["caz",{"_index":105,"title":{},"body":{"components/AboutPage.html":{}}}],["cazul",{"_index":65,"title":{},"body":{"components/AboutPage.html":{}}}],["center",{"_index":1108,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["change",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{}}}],["changed",{"_index":1069,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["changes",{"_index":1437,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["changeselectedentry",{"_index":854,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["changeselectedentry(entry",{"_index":868,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["characters",{"_index":1262,"title":{},"body":{"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["charset=utf",{"_index":1413,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["checkpemission",{"_index":1507,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["checks",{"_index":1134,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/SendMessageComponent.html":{}}}],["cities",{"_index":1606,"title":{},"body":{"injectables/StaticsService.html":{}}}],["city",{"_index":214,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Organisation.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["city's",{"_index":253,"title":{},"body":{"classes/Allocation.html":{}}}],["city._id.tostring",{"_index":1725,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["city.id",{"_index":1717,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["city.name",{"_index":1726,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["city_type",{"_index":1607,"title":{},"body":{"injectables/StaticsService.html":{}}}],["civil",{"_index":60,"title":{},"body":{"components/AboutPage.html":{}}}],["class",{"_index":25,"title":{"classes/Allocation.html":{},"classes/AppPage.html":{},"classes/Course.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"classes/Organisation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/RouteReusableStrategy.html":{},"classes/SsnValidation.html":{},"classes/Volunteer.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["classes",{"_index":205,"title":{},"body":{"classes/Allocation.html":{},"classes/AppPage.html":{},"classes/Course.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"classes/Organisation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/RouteReusableStrategy.html":{},"classes/SsnValidation.html":{},"classes/Volunteer.html":{},"index.html":{}}}],["clear",{"_index":1060,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["clearall",{"_index":1129,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["cleardata",{"_index":1777,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cleardata(type",{"_index":1854,"title":{},"body":{"miscellaneous/functions.html":{}}}],["clearitem",{"_index":1130,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["clearitem(key",{"_index":1139,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["clears",{"_index":653,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/functions.html":{}}}],["click",{"_index":1090,"title":{},"body":{"components/HomePage.html":{}}}],["close",{"_index":900,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["closes",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["cluster_aboutpagemodule",{"_index":181,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_aboutpagemodule_declarations",{"_index":182,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":522,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":525,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":523,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":524,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_authenticationpagemodule",{"_index":610,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"index.html":{}}}],["cluster_authenticationpagemodule_declarations",{"_index":611,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"index.html":{}}}],["cluster_coremodule",{"_index":721,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_coremodule_declarations",{"_index":722,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_coremodule_providers",{"_index":723,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_homepagemodule",{"_index":1120,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_declarations",{"_index":1121,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_volunteerpagemodule",{"_index":1662,"title":{},"body":{"modules/VolunteerPageModule.html":{},"index.html":{}}}],["cluster_volunteerpagemodule_declarations",{"_index":1663,"title":{},"body":{"modules/VolunteerPageModule.html":{},"index.html":{}}}],["cnp",{"_index":1582,"title":{},"body":{"classes/SsnValidation.html":{},"classes/Volunteer.html":{}}}],["cnp[x",{"_index":1599,"title":{},"body":{"classes/SsnValidation.html":{}}}],["code",{"_index":125,"title":{},"body":{"components/AboutPage.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["codification",{"_index":1517,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["coefs",{"_index":1588,"title":{},"body":{"classes/SsnValidation.html":{}}}],["coefs[x",{"_index":1598,"title":{},"body":{"classes/SsnValidation.html":{}}}],["colaborare",{"_index":96,"title":{},"body":{"components/AboutPage.html":{}}}],["color",{"_index":1100,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["column",{"_index":1094,"title":{},"body":{"components/HomePage.html":{}}}],["columns",{"_index":1111,"title":{},"body":{"components/HomePage.html":{}}}],["comments",{"_index":1234,"title":{},"body":{"classes/Organisation.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["comments/details",{"_index":1245,"title":{},"body":{"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["commonmodule",{"_index":187,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["completely",{"_index":403,"title":{},"body":{"components/AppComponent.html":{}}}],["component",{"_index":0,"title":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["component_template",{"_index":136,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["componente",{"_index":77,"title":{},"body":{"components/AboutPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"index.html":{}}}],["components/custom",{"_index":738,"title":{},"body":{"modules/CoreModule.html":{}}}],["confirm",{"_index":1460,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["confirmpassword",{"_index":1324,"title":{},"body":{"classes/PasswordValidation.html":{},"components/ResetPasswordComponent.html":{}}}],["console.error('request",{"_index":1047,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["console.log(`error",{"_index":970,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["console.log(this._errors",{"_index":1075,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["console.warn('unmatched",{"_index":510,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":199,"title":{},"body":{"modules/AboutPageModule.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["constructor",{"_index":264,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["constructor(authenticationservice",{"_index":265,"title":{},"body":{"injectables/AllocationService.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{}}}],["constructor(authservice",{"_index":776,"title":{},"body":{"injectables/CourseService.html":{}}}],["constructor(courseservice",{"_index":1678,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["constructor(httpclient",{"_index":632,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(modalctrl",{"_index":860,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["constructor(platform",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":317,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{},"injectables/VolunteerService.html":{}}}],["constructor(public",{"_index":1442,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["constructor(router",{"_index":586,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["constructor(sms",{"_index":1509,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["contact",{"_index":1247,"title":{},"body":{"classes/Organisation.html":{}}}],["contact_person",{"_index":1235,"title":{},"body":{"classes/Organisation.html":{}}}],["containing",{"_index":284,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"components/HomePage.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["contains",{"_index":285,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["content",{"_index":1116,"title":{},"body":{"components/HomePage.html":{},"interceptors/RequestInterceptor.html":{}}}],["context",{"_index":1815,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continuous",{"_index":321,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["control",{"_index":982,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["controller",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["convert",{"_index":1518,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["conțin",{"_index":1339,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["cookie",{"_index":1153,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["cookie's",{"_index":1164,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["cordova",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["core",{"_index":469,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"dependencies.html":{}}}],["core/authentication/authentication.guard",{"_index":198,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["coremodule",{"_index":527,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"index.html":{},"modules.html":{}}}],["corespund",{"_index":1338,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["couchdb",{"_index":226,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["counties",{"_index":1605,"title":{},"body":{"injectables/StaticsService.html":{}}}],["county",{"_index":215,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Organisation.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["county._id",{"_index":336,"title":{},"body":{"injectables/AllocationService.html":{}}}],["county._id.tostring",{"_index":1722,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["county.id",{"_index":1716,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["county.name",{"_index":1723,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["county_romania_",{"_index":1622,"title":{},"body":{"injectables/StaticsService.html":{}}}],["county_romania_\\ufff0",{"_index":1624,"title":{},"body":{"injectables/StaticsService.html":{}}}],["county_type",{"_index":1608,"title":{},"body":{"injectables/StaticsService.html":{}}}],["countyid",{"_index":1614,"title":{},"body":{"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["course",{"_index":745,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"injectables/CourseService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["course's",{"_index":789,"title":{},"body":{"injectables/CourseService.html":{},"classes/Volunteer.html":{}}}],["course.[].course_name_id",{"_index":1714,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course._id",{"_index":1741,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course.acredited",{"_index":826,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.added_by",{"_index":819,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.course_name",{"_index":816,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.created_at",{"_index":817,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.name",{"_index":1742,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course.obtained",{"_index":828,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.service",{"_index":1713,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course.type",{"_index":821,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.updated_at",{"_index":818,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.volunteer_id",{"_index":815,"title":{},"body":{"injectables/CourseService.html":{}}}],["course_acreditors",{"_index":756,"title":{},"body":{"classes/Course.html":{}}}],["course_name",{"_index":749,"title":{},"body":{"classes/Course.html":{},"classes/Volunteer.html":{}}}],["course_name.id",{"_index":808,"title":{},"body":{"injectables/CourseService.html":{}}}],["course_name_id",{"_index":1657,"title":{},"body":{"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["course_names",{"_index":833,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseid",{"_index":785,"title":{},"body":{"injectables/CourseService.html":{},"injectables/VolunteerService.html":{}}}],["coursename",{"_index":781,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursenameid",{"_index":792,"title":{},"body":{"injectables/CourseService.html":{}}}],["courses",{"_index":763,"title":{},"body":{"classes/Course.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["courseservice",{"_index":724,"title":{"injectables/CourseService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/CourseService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"index.html":{}}}],["cover",{"_index":1236,"title":{},"body":{"classes/Organisation.html":{}}}],["coverage",{"_index":1762,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createallocation",{"_index":263,"title":{},"body":{"injectables/AllocationService.html":{}}}],["createallocation(volunteer",{"_index":276,"title":{},"body":{"injectables/AllocationService.html":{}}}],["createcookie",{"_index":1778,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createcookie(name",{"_index":1156,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["createcourse",{"_index":768,"title":{},"body":{"injectables/CourseService.html":{}}}],["createcourse(coursename",{"_index":779,"title":{},"body":{"injectables/CourseService.html":{}}}],["created",{"_index":244,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["created_at",{"_index":216,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["createdat",{"_index":845,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["createform",{"_index":1182,"title":{},"body":{"components/LoginComponent.html":{}}}],["createorganisation",{"_index":1271,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["createorganisation(name",{"_index":1279,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["creates",{"_index":278,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["createvolunteer",{"_index":1670,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["createvolunteer(name",{"_index":1685,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["creating",{"_index":1424,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["creation",{"_index":237,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{}}}],["credentials",{"_index":625,"title":{"interfaces/Credentials.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["credentialskey",{"_index":696,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cu",{"_index":74,"title":{},"body":{"components/AboutPage.html":{},"components/ResetPasswordComponent.html":{}}}],["curr",{"_index":1488,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["curr.routeconfig",{"_index":1496,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["current",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["currentpath",{"_index":482,"title":{},"body":{"components/AppComponent.html":{}}}],["currentpath.indexof('home",{"_index":489,"title":{},"body":{"components/AppComponent.html":{}}}],["currentpath.indexof('login",{"_index":487,"title":{},"body":{"components/AppComponent.html":{}}}],["currentuser",{"_index":1295,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["currentuser._id",{"_index":1299,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["custom",{"_index":147,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["customselectorcomponent",{"_index":146,"title":{"components/CustomSelectorComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["cât",{"_index":1391,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["către",{"_index":61,"title":{},"body":{"components/AboutPage.html":{}}}],["data",{"_index":673,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"classes/RouteReusableStrategy.html":{},"miscellaneous/functions.html":{}}}],["data.id",{"_index":1740,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["data:image/jpeg;base64",{"_index":1546,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["database",{"_index":273,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["databasesyncservice",{"_index":376,"title":{"classes/DatabaseSyncService.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"classes/DatabaseSyncService.html":{},"coverage.html":{}}}],["databaseurl",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":112,"title":{},"body":{"components/AboutPage.html":{},"classes/Allocation.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["date.now",{"_index":1074,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["date.settime(date.gettime",{"_index":1158,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["date.togmtstring",{"_index":1161,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["datepicker",{"_index":536,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["days",{"_index":1154,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["dd",{"_index":341,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["de",{"_index":50,"title":{},"body":{"components/AboutPage.html":{},"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["declarations",{"_index":177,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["declare",{"_index":837,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{}}}],["decoration",{"_index":1109,"title":{},"body":{"components/HomePage.html":{}}}],["decorators",{"_index":455,"title":{},"body":{"components/AppComponent.html":{}}}],["deeplinks",{"_index":470,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["deeplinks.route",{"_index":503,"title":{},"body":{"components/AppComponent.html":{}}}],["default",{"_index":291,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":222,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["defining",{"_index":1694,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["definition",{"_index":1471,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["deja",{"_index":85,"title":{},"body":{"components/AboutPage.html":{}}}],["deletecoursebyid",{"_index":769,"title":{},"body":{"injectables/CourseService.html":{}}}],["deletecoursebyid(courseid",{"_index":782,"title":{},"body":{"injectables/CourseService.html":{}}}],["deleteorganisationbyid",{"_index":1272,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["deleteorganisationbyid(organisationid",{"_index":1281,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["deletes",{"_index":784,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["deletevolunteerbyid",{"_index":1671,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["deletevolunteerbyid(volunteerid",{"_index":1689,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["delogare",{"_index":440,"title":{},"body":{"components/AppComponent.html":{}}}],["departamentul",{"_index":62,"title":{},"body":{"components/AboutPage.html":{}}}],["dependencies",{"_index":176,"title":{"dependencies.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{},"index.html":{}}}],["depending",{"_index":462,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["description",{"_index":207,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["design",{"_index":1199,"title":{},"body":{"components/LoginComponent.html":{}}}],["despre",{"_index":26,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["destination",{"_index":557,"title":{},"body":{"classes/AppPage.html":{}}}],["destinationtype",{"_index":1540,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["destroy",{"_index":884,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["detached",{"_index":1494,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["detachedroutehandle",{"_index":1482,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["detachedtree",{"_index":1492,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["determines",{"_index":592,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/UnauthenticatedGuard.html":{}}}],["dev",{"_index":1881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["developement",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["device",{"_index":718,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["dezastru",{"_index":72,"title":{},"body":{"components/AboutPage.html":{}}}],["dezvoltat",{"_index":124,"title":{},"body":{"components/AboutPage.html":{}}}],["diacritics",{"_index":1259,"title":{},"body":{"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["didn't",{"_index":1196,"title":{},"body":{"components/LoginComponent.html":{}}}],["din",{"_index":94,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["directive",{"_index":134,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["directives",{"_index":168,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["dismessed",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dismiss",{"_index":855,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["display",{"_index":1112,"title":{},"body":{"components/HomePage.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["displayed",{"_index":1089,"title":{},"body":{"components/HomePage.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dispoziție",{"_index":58,"title":{},"body":{"components/AboutPage.html":{}}}],["doc.acredited",{"_index":825,"title":{},"body":{"injectables/CourseService.html":{}}}],["doc.allocation",{"_index":1758,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.city",{"_index":1751,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.comments",{"_index":1754,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.county",{"_index":1750,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.course_name",{"_index":824,"title":{},"body":{"injectables/CourseService.html":{}}}],["doc.courses",{"_index":1753,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.email",{"_index":1747,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.job",{"_index":1756,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.name",{"_index":1306,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["doc.obtained",{"_index":827,"title":{},"body":{"injectables/CourseService.html":{}}}],["doc.organisation",{"_index":1752,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.phone",{"_index":1749,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.slug",{"_index":1307,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["doc.ssn",{"_index":1746,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.updated_at",{"_index":829,"title":{},"body":{"injectables/CourseService.html":{},"injectables/VolunteerService.html":{}}}],["document",{"_index":1163,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["document.addeventlistener('backbutton",{"_index":480,"title":{},"body":{"components/AppComponent.html":{}}}],["document.cookie",{"_index":1162,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["document.cookie.split",{"_index":1168,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["documentation",{"_index":1763,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["double",{"_index":404,"title":{},"body":{"components/AppComponent.html":{}}}],["dsu",{"_index":97,"title":{},"body":{"components/AboutPage.html":{}}}],["duration",{"_index":518,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dynamic",{"_index":1821,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/app.po.ts",{"_index":549,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:12",{"_index":553,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":556,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":554,"title":{},"body":{"classes/AppPage.html":{}}}],["eforturile",{"_index":122,"title":{},"body":{"components/AboutPage.html":{}}}],["element",{"_index":133,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["element(by.tagname('app",{"_index":561,"title":{},"body":{"classes/AppPage.html":{}}}],["elemmatch",{"_index":1761,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["email",{"_index":658,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"components/RecoverPasswordComponent.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{}}}],["email@email.com",{"_index":1001,"title":{},"body":{"classes/EmailValidation.html":{}}}],["emailvalidation",{"_index":973,"title":{"classes/EmailValidation.html":{}},"body":{"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["emailvalidation(abstractcontrol",{"_index":977,"title":{},"body":{"classes/EmailValidation.html":{}}}],["emailvalidation.emailvalidation",{"_index":1210,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["emits",{"_index":681,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["emitts",{"_index":1068,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["empty",{"_index":1642,"title":{},"body":{"classes/Volunteer.html":{}}}],["endkey",{"_index":1623,"title":{},"body":{"injectables/StaticsService.html":{}}}],["entries",{"_index":1618,"title":{},"body":{"injectables/StaticsService.html":{}}}],["entry",{"_index":236,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"injectables/LocalStorageService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["entrycomponents",{"_index":544,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["env",{"_index":1880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":296,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":1046,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["environment.serverurl",{"_index":1404,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["environments/environment",{"_index":297,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["eq",{"_index":813,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["eroare",{"_index":1458,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["err",{"_index":1548,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["error",{"_index":972,"title":{},"body":{"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/SsnValidation.html":{}}}],["errorhandler",{"_index":1007,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorhandler(response",{"_index":1014,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorhandlerinterceptor",{"_index":725,"title":{"interceptors/ErrorHandlerInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["errormessage",{"_index":1179,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errormessageobject",{"_index":1049,"title":{"interfaces/ErrorMessageObject.html":{}},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["errormessageservice",{"_index":726,"title":{"injectables/ErrorMessageService.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"coverage.html":{},"index.html":{}}}],["errormodel",{"_index":1052,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["errormodel.errormessageobject",{"_index":1065,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["errorresponse",{"_index":1037,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error",{"_index":1038,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.error",{"_index":1044,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.validation",{"_index":1039,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.validation.errors[key",{"_index":1042,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.validation.keys.foreach((key",{"_index":1040,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errors",{"_index":1017,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{}}}],["este",{"_index":31,"title":{},"body":{"components/AboutPage.html":{},"classes/EmailValidation.html":{}}}],["event",{"_index":481,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{}}}],["event.preventdefault",{"_index":485,"title":{},"body":{"components/AppComponent.html":{}}}],["event.stopimmediatepropagation",{"_index":486,"title":{},"body":{"components/AppComponent.html":{}}}],["event.subscribe(async",{"_index":892,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["eventemitter",{"_index":680,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["events",{"_index":682,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["eventualitatea",{"_index":38,"title":{},"body":{"components/AboutPage.html":{}}}],["ex",{"_index":1000,"title":{},"body":{"classes/EmailValidation.html":{}}}],["exist",{"_index":1394,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["existenți",{"_index":86,"title":{},"body":{"components/AboutPage.html":{}}}],["existing",{"_index":1138,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["exiting",{"_index":453,"title":{},"body":{"components/AppComponent.html":{}}}],["expiration",{"_index":1155,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["expires",{"_index":1157,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["explicit",{"_index":1467,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["export",{"_index":24,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["exports",{"_index":180,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["extends",{"_index":1472,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["extra",{"_index":1407,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["f9f9f9",{"_index":1570,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["false",{"_index":447,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"miscellaneous/variables.html":{}}}],["fff",{"_index":907,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["field",{"_index":1360,"title":{},"body":{"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["fields",{"_index":324,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/EmailValidation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"injectables/VolunteerService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["files",{"_index":1615,"title":{},"body":{"injectables/StaticsService.html":{}}}],["filter",{"_index":1672,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["filter(countyid",{"_index":1691,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["filters",{"_index":1693,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["finalize",{"_index":1203,"title":{},"body":{"components/LoginComponent.html":{}}}],["find",{"_index":310,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["find/lib/index",{"_index":295,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["finds",{"_index":788,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["finished",{"_index":945,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["first",{"_index":1092,"title":{},"body":{"components/HomePage.html":{}}}],["fixed",{"_index":901,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["flex",{"_index":1113,"title":{},"body":{"components/HomePage.html":{}}}],["foarte",{"_index":107,"title":{},"body":{"components/AboutPage.html":{}}}],["following",{"_index":286,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["font",{"_index":1102,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["form",{"_index":1187,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["formbuilder",{"_index":1184,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["formcontrol",{"_index":1380,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["formgroup",{"_index":1200,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["forms",{"_index":1426,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["formsmodule",{"_index":189,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["fost",{"_index":1384,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["fotografie",{"_index":1559,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["found",{"_index":23,"title":{},"body":{"components/AboutPage.html":{},"injectables/AuthenticationService.html":{}}}],["from(localdb.alldocs",{"_index":1620,"title":{},"body":{"injectables/StaticsService.html":{}}}],["from(localdb.find",{"_index":810,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["from(localdb.post(allocation",{"_index":350,"title":{},"body":{"injectables/AllocationService.html":{}}}],["from(localdb.post(course",{"_index":822,"title":{},"body":{"injectables/CourseService.html":{}}}],["from(localdb.post(organisation",{"_index":1304,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["from(localdb.post(volunteer",{"_index":1736,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["from(localdb.query('cities/slug",{"_index":1625,"title":{},"body":{"injectables/StaticsService.html":{}}}],["fromevent",{"_index":886,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["fromevent(document",{"_index":889,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["full",{"_index":570,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SendMessageComponent.html":{}}}],["function",{"_index":1023,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["functions",{"_index":1852,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["future",{"_index":1490,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["future.data.reuse",{"_index":1497,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["future.routeconfig",{"_index":1495,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["g",{"_index":1314,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["generated",{"_index":1064,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["get('/logout",{"_index":708,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getaccesstoken",{"_index":687,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getcitylist",{"_index":1609,"title":{},"body":{"injectables/StaticsService.html":{}}}],["getcitylist(countyid",{"_index":1612,"title":{},"body":{"injectables/StaticsService.html":{}}}],["getcountylist",{"_index":1610,"title":{},"body":{"injectables/StaticsService.html":{}}}],["getcoursebyid",{"_index":770,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyid(courseid",{"_index":786,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyname",{"_index":771,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyname(coursenameid",{"_index":790,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyvolunteerid",{"_index":772,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyvolunteerid(volunteerid",{"_index":793,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursenames",{"_index":773,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourses",{"_index":774,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcredentials",{"_index":684,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getdata",{"_index":1779,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getdata(type",{"_index":1855,"title":{},"body":{"miscellaneous/functions.html":{}}}],["geterrors",{"_index":1070,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["getitem",{"_index":1131,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getitem(key",{"_index":1143,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getorganisationbyid",{"_index":1273,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisationbyid(organisationid",{"_index":1284,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisationbyname",{"_index":1274,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisationbyname(organisationname",{"_index":1286,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisations",{"_index":1275,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getpageonetitletext",{"_index":550,"title":{},"body":{"classes/AppPage.html":{}}}],["gets",{"_index":417,"title":{},"body":{"components/AppComponent.html":{}}}],["getsessionname",{"_index":1780,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getter",{"_index":686,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["gettitle",{"_index":551,"title":{},"body":{"classes/AppPage.html":{}}}],["getuser",{"_index":689,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getvolunteerbyid",{"_index":1673,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteerbyid(volunteerid",{"_index":1698,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteerbyssn",{"_index":1674,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteerbyssn(ssn",{"_index":1700,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteers",{"_index":1675,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteers(page",{"_index":1702,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["given",{"_index":798,"title":{},"body":{"injectables/CourseService.html":{},"classes/RouteReusableStrategy.html":{},"injectables/VolunteerService.html":{}}}],["go",{"_index":1197,"title":{},"body":{"components/LoginComponent.html":{}}}],["granted",{"_index":1521,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["graph",{"_index":1864,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":579,"title":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{},"coverage.html":{}}}],["guards",{"_index":580,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{},"index.html":{}}}],["h",{"_index":1563,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["h:mm:ss",{"_index":342,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["handle",{"_index":1136,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["handle(request",{"_index":1031,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler",{"_index":1006,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler.interceptor.ts",{"_index":1004,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["handler.interceptor.ts:25",{"_index":1009,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler.interceptor.ts:45",{"_index":1021,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler.interceptor.ts:59",{"_index":1016,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handles",{"_index":588,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["handling",{"_index":1012,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["header",{"_index":1569,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["height",{"_index":1114,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["hidden",{"_index":395,"title":{},"body":{"components/AppComponent.html":{}}}],["home",{"_index":568,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["home')).element(by.deepcss('ion",{"_index":562,"title":{},"body":{"classes/AppPage.html":{}}}],["home'},{'name",{"_index":150,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["home.page",{"_index":1123,"title":{},"body":{"modules/HomePageModule.html":{}}}],["home.page.html",{"_index":1079,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":1078,"title":{},"body":{"components/HomePage.html":{}}}],["homepage",{"_index":149,"title":{"components/HomePage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["homepagemodule",{"_index":1119,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"index.html":{},"modules.html":{}}}],["html",{"_index":132,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["http",{"_index":638,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["http://rvm.lxhost.ro:5984",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":731,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpclient",{"_index":633,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["httpclientmodule",{"_index":732,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpevent",{"_index":1025,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httphandler",{"_index":1020,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httpinterceptor",{"_index":1026,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httprequest",{"_index":1019,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httpresponse",{"_index":1015,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["https://github.com/angular/angular/issues/18374",{"_index":1470,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["https://rvm",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":1566,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["id",{"_index":224,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["identific",{"_index":92,"title":{},"body":{"components/AboutPage.html":{}}}],["identifier",{"_index":1764,"title":{},"body":{"coverage.html":{}}}],["identifies",{"_index":1030,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"miscellaneous/variables.html":{}}}],["identitatea",{"_index":83,"title":{},"body":{"components/AboutPage.html":{}}}],["idx",{"_index":1595,"title":{},"body":{"classes/SsnValidation.html":{}}}],["idx.map((x",{"_index":1597,"title":{},"body":{"classes/SsnValidation.html":{}}}],["ig",{"_index":1719,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["ignore",{"_index":947,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/ErrorMessageService.html":{}}}],["ignored",{"_index":411,"title":{},"body":{"components/AppComponent.html":{}}}],["image",{"_index":1513,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["imagedata",{"_index":1547,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["implements",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["implicate",{"_index":121,"title":{},"body":{"components/AboutPage.html":{}}}],["import",{"_index":18,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["imports",{"_index":202,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["inactiv",{"_index":1266,"title":{},"body":{"classes/Organisation.html":{},"injectables/OrganisationService.html":{}}}],["inappbrowser",{"_index":541,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["inbox",{"_index":1390,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["include_docs",{"_index":811,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["incorecte",{"_index":1219,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":210,"title":{"index.html":{}},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexed",{"_index":946,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["information",{"_index":21,"title":{},"body":{"components/AboutPage.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"interceptors/RequestInterceptor.html":{},"miscellaneous/functions.html":{}}}],["informații",{"_index":1218,"title":{},"body":{"components/LoginComponent.html":{}}}],["initialisation",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["initialiseview",{"_index":1420,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["initializeapp",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["initializes",{"_index":635,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["injectable",{"_index":254,"title":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}},"body":{"injectables/AllocationService.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["injectables",{"_index":256,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"index.html":{}}}],["injected",{"_index":1010,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{}}}],["injection",{"_index":637,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["input",{"_index":885,"title":{},"body":{"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{},"injectables/VolunteerService.html":{}}}],["inputs",{"_index":858,"title":{},"body":{"components/CustomSelectorComponent.html":{},"classes/PasswordValidation.html":{}}}],["inside",{"_index":1151,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["instrument",{"_index":49,"title":{},"body":{"components/AboutPage.html":{}}}],["intent",{"_index":1551,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["intercept",{"_index":1008,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["intercept(request",{"_index":1018,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["interceptor",{"_index":1002,"title":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":743,"title":{},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["intercepts",{"_index":1022,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["interface",{"_index":834,"title":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{}},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":835,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{},"index.html":{}}}],["intervenție",{"_index":116,"title":{},"body":{"components/AboutPage.html":{}}}],["introdus",{"_index":997,"title":{},"body":{"classes/EmailValidation.html":{}}}],["ion",{"_index":1117,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["ionic",{"_index":464,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["ionic/angular",{"_index":195,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"modules/HomePageModule.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["ionic/lab",{"_index":1830,"title":{},"body":{"dependencies.html":{}}}],["ionicmodule",{"_index":194,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["ionicmodule.forroot",{"_index":545,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":533,"title":{},"body":{"modules/AppModule.html":{}}}],["ionrouteroutlet",{"_index":454,"title":{},"body":{"components/AppComponent.html":{}}}],["ios",{"_index":1835,"title":{},"body":{"dependencies.html":{}}}],["isauthenticated",{"_index":626,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isdoubletap",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["isn't",{"_index":594,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["it's",{"_index":247,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["item",{"_index":1142,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["item's",{"_index":1148,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["item.name",{"_index":898,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["items",{"_index":859,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{}}}],["itself",{"_index":1149,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["job",{"_index":1632,"title":{},"body":{"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["js",{"_index":1841,"title":{},"body":{"dependencies.html":{}}}],["json.parse(savedcredentials",{"_index":700,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(credentials",{"_index":713,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["justify",{"_index":1115,"title":{},"body":{"components/HomePage.html":{}}}],["key",{"_index":695,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["keyword",{"_index":1710,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["know",{"_index":879,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["l",{"_index":113,"title":{},"body":{"components/AboutPage.html":{}}}],["la",{"_index":57,"title":{},"body":{"components/AboutPage.html":{}}}],["label",{"_index":1575,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["last",{"_index":249,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["le",{"_index":55,"title":{},"body":{"components/AboutPage.html":{}}}],["left",{"_index":902,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["legend",{"_index":131,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["lifecycle",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"classes/RouteReusableStrategy.html":{}}}],["limit",{"_index":968,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/VolunteerService.html":{}}}],["link",{"_index":661,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["list",{"_index":152,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["listener",{"_index":876,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["listvolunteercomponent",{"_index":151,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["liter",{"_index":1343,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["literal",{"_index":230,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["live",{"_index":318,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["loadchildren",{"_index":571,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loading",{"_index":1180,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["loc",{"_index":45,"title":{},"body":{"components/AboutPage.html":{}}}],["local",{"_index":279,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["localallocationsdb",{"_index":918,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localcoursesdb",{"_index":919,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localdb",{"_index":307,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localdb.createindex",{"_index":323,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localdb.get(course._id).then((doc",{"_index":823,"title":{},"body":{"injectables/CourseService.html":{}}}],["localdb.get(courseid).then(doc",{"_index":831,"title":{},"body":{"injectables/CourseService.html":{}}}],["localdb.get(organisation._id).then((doc",{"_index":1305,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["localdb.get(organisationid).then((doc",{"_index":1309,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["localdb.get(volunteer._id).then((doc",{"_index":1744,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["localdb.get(volunteerid).then((doc",{"_index":1759,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["localdb.put(doc",{"_index":830,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localdb.remove(doc",{"_index":832,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localdb.replicate.from(remotedb",{"_index":1619,"title":{},"body":{"injectables/StaticsService.html":{}}}],["localdb.sync(remotedb",{"_index":322,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localorganisationsdb",{"_index":920,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localstaticsdb",{"_index":921,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localstorage",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":374,"title":{"injectables/LocalStorageService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{},"index.html":{}}}],["localvolunteersdb",{"_index":922,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["locală'/'național",{"_index":1252,"title":{},"body":{"classes/Organisation.html":{}}}],["location",{"_index":375,"title":{},"body":{"components/AppComponent.html":{}}}],["locations",{"_index":1604,"title":{},"body":{"injectables/StaticsService.html":{}}}],["log",{"_index":676,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logged",{"_index":1428,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["login",{"_index":597,"title":{},"body":{"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{}}}],["login'},{'name",{"_index":154,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["login(payload",{"_index":642,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login(this.loginform.value",{"_index":1213,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1178,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1177,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/home",{"_index":401,"title":{},"body":{"components/AppComponent.html":{}}}],["login/login.component",{"_index":616,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["login/logout",{"_index":606,"title":{},"body":{"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{}}}],["logincomponent",{"_index":153,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["loginform",{"_index":1181,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.controls.email.errors?.email",{"_index":1222,"title":{},"body":{"components/LoginComponent.html":{}}}],["logininfo",{"_index":701,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logininfo).pipe",{"_index":704,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logininfo.device",{"_index":702,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginpayload",{"_index":839,"title":{"interfaces/LoginPayload.html":{}},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["logout",{"_index":620,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"components/LogoutComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["logout'},{'name",{"_index":156,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["logout.component.html",{"_index":1227,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout.component.scss",{"_index":1226,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout/logout.component",{"_index":617,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["logoutcomponent",{"_index":155,"title":{"components/LogoutComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["lookup",{"_index":1316,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["lowercase",{"_index":1351,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["lowercase.test(password",{"_index":1355,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["m",{"_index":1317,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["mai",{"_index":118,"title":{},"body":{"components/AboutPage.html":{}}}],["main",{"_index":605,"title":{},"body":{"components/AuthenticationPage.html":{},"components/HomePage.html":{},"components/VolunteerPage.html":{}}}],["major",{"_index":68,"title":{},"body":{"components/AboutPage.html":{}}}],["majore",{"_index":41,"title":{},"body":{"components/AboutPage.html":{}}}],["management",{"_index":30,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["map",{"_index":299,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/VolunteerService.html":{}}}],["map((body",{"_index":705,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["map((response",{"_index":352,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["mare",{"_index":1344,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["margin",{"_index":1564,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["match",{"_index":1330,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["match.$args.token",{"_index":507,"title":{},"body":{"components/AppComponent.html":{}}}],["matches",{"_index":1709,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["matching",{"_index":171,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchpassword",{"_index":1326,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["matchpassword(abstractcontrol",{"_index":1327,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["md",{"_index":1562,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["mean",{"_index":1085,"title":{},"body":{"components/HomePage.html":{}}}],["means",{"_index":1650,"title":{},"body":{"classes/Volunteer.html":{}}}],["menit",{"_index":33,"title":{},"body":{"components/AboutPage.html":{}}}],["menu",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["mesaj",{"_index":1556,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["mesajul",{"_index":1557,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message",{"_index":513,"title":{},"body":{"components/AppComponent.html":{},"classes/EmailValidation.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{}}}],["message'},{'name",{"_index":164,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["message.component",{"_index":1667,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["message.component.html",{"_index":1502,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.scss",{"_index":1501,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts",{"_index":1500,"title":{},"body":{"components/SendMessageComponent.html":{},"coverage.html":{}}}],["message.component.ts:19",{"_index":1528,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:24",{"_index":1527,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:29",{"_index":1510,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:41",{"_index":1522,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:58",{"_index":1512,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:72",{"_index":1525,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:85",{"_index":1519,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.service",{"_index":1029,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["message.service.ts",{"_index":1057,"title":{},"body":{"injectables/ErrorMessageService.html":{},"coverage.html":{}}}],["message.service.ts:11",{"_index":1066,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:16",{"_index":1067,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:27",{"_index":1071,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:37",{"_index":1063,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:51",{"_index":1061,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message/send",{"_index":1499,"title":{},"body":{"components/SendMessageComponent.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["messageform",{"_index":1504,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["messages",{"_index":1058,"title":{},"body":{"injectables/ErrorMessageService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["messagging",{"_index":1013,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["method",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"classes/RouteReusableStrategy.html":{},"injectables/VolunteerService.html":{}}}],["methods",{"_index":262,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["min",{"_index":1571,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["minim",{"_index":1340,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["miscellaneous",{"_index":1851,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":340,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["mobile",{"_index":78,"title":{},"body":{"components/AboutPage.html":{},"injectables/AuthenticationService.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["mobilizați",{"_index":81,"title":{},"body":{"components/AboutPage.html":{}}}],["modal",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["modal.dismiss",{"_index":894,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["modalcontroller",{"_index":861,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["modalctrl",{"_index":863,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["model",{"_index":208,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["model/allocation.model",{"_index":303,"title":{},"body":{"injectables/AllocationService.html":{}}}],["model/course.model",{"_index":806,"title":{},"body":{"injectables/CourseService.html":{}}}],["model/organisation.model",{"_index":1294,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["model/volunteer.model",{"_index":304,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["models",{"_index":744,"title":{},"body":{"modules/CoreModule.html":{}}}],["module",{"_index":173,"title":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["modules",{"_index":175,"title":{"modules.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{},"modules.html":{}}}],["moment",{"_index":305,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["moment().format('y",{"_index":339,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["moz",{"_index":1098,"title":{},"body":{"components/HomePage.html":{}}}],["multi",{"_index":741,"title":{},"body":{"modules/CoreModule.html":{}}}],["n",{"_index":37,"title":{},"body":{"components/AboutPage.html":{},"components/RecoverPasswordComponent.html":{}}}],["name",{"_index":137,"title":{},"body":{"components/AboutPage.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["name,ssn",{"_index":1708,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["nameeq",{"_index":1166,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["names",{"_index":800,"title":{},"body":{"injectables/CourseService.html":{}}}],["namespace",{"_index":838,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{}}}],["native/camera",{"_index":1530,"title":{},"body":{"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["native/core",{"_index":1823,"title":{},"body":{"dependencies.html":{}}}],["native/date",{"_index":537,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/deeplinks",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["native/in",{"_index":542,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/sms",{"_index":1827,"title":{},"body":{"dependencies.html":{}}}],["native/sms/ngx",{"_index":540,"title":{},"body":{"modules/AppModule.html":{},"components/SendMessageComponent.html":{}}}],["native/splash",{"_index":465,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/status",{"_index":467,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["natural",{"_index":73,"title":{},"body":{"components/AboutPage.html":{}}}],["navigateto",{"_index":552,"title":{},"body":{"classes/AppPage.html":{}}}],["navigateto(destination",{"_index":555,"title":{},"body":{"classes/AppPage.html":{}}}],["navigation",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["navigation.extras",{"_index":1533,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["navigation.extras.state",{"_index":1534,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["navigation.extras.state.volunteers",{"_index":1535,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["navigator['app'].exitapp",{"_index":494,"title":{},"body":{"components/AppComponent.html":{}}}],["ncerci",{"_index":1397,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["neafiliat",{"_index":1651,"title":{},"body":{"classes/Volunteer.html":{}}}],["neccessary",{"_index":1429,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["needs",{"_index":1523,"title":{},"body":{"components/SendMessageComponent.html":{},"miscellaneous/functions.html":{}}}],["never",{"_index":678,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Volunteer.html":{}}}],["new",{"_index":308,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":423,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["next.handle(request",{"_index":1418,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["ngafterviewinit",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["ngmodule",{"_index":186,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["ngondestroy",{"_index":856,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["ngoninit",{"_index":857,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["nomatch",{"_index":509,"title":{},"body":{"components/AppComponent.html":{}}}],["nothing",{"_index":675,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["nou",{"_index":110,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["nregistra",{"_index":106,"title":{},"body":{"components/AboutPage.html":{}}}],["nregistrat",{"_index":1385,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["nu",{"_index":998,"title":{},"body":{"classes/EmailValidation.html":{},"components/RecoverPasswordComponent.html":{}}}],["null",{"_index":288,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["number",{"_index":843,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"interfaces/RootObject.html":{},"classes/SsnValidation.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["number.test(password",{"_index":1353,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["numbers",{"_index":1529,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["număr",{"_index":1345,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["o",{"_index":32,"title":{},"body":{"components/AboutPage.html":{},"classes/PasswordValidation.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["object",{"_index":209,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":290,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["obtained",{"_index":750,"title":{},"body":{"classes/Course.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["ofer",{"_index":89,"title":{},"body":{"components/AboutPage.html":{}}}],["ofere",{"_index":35,"title":{},"body":{"components/AboutPage.html":{}}}],["officer",{"_index":242,"title":{},"body":{"classes/Allocation.html":{},"classes/Volunteer.html":{}}}],["once",{"_index":451,"title":{},"body":{"components/AppComponent.html":{}}}],["ondestroy",{"_index":851,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["one",{"_index":659,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["oninit",{"_index":850,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["open",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["opening",{"_index":1086,"title":{},"body":{"components/HomePage.html":{}}}],["operation",{"_index":1188,"title":{},"body":{"components/LoginComponent.html":{}}}],["operations",{"_index":260,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["optional",{"_index":275,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":271,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["order",{"_index":878,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["organisation",{"_index":217,"title":{"classes/Organisation.html":{}},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["organisation's",{"_index":1243,"title":{},"body":{"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{}}}],["organisation._id",{"_index":1715,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["organisation.added_by",{"_index":1298,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.created_at",{"_index":1300,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.id",{"_index":347,"title":{},"body":{"injectables/AllocationService.html":{}}}],["organisation.name",{"_index":348,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["organisation.slug",{"_index":1296,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["organisation.status",{"_index":1303,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.type",{"_index":1302,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.updated_at",{"_index":1301,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.website",{"_index":1734,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["organisationid",{"_index":1283,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["organisationname",{"_index":1288,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisations",{"_index":932,"title":{},"body":{"classes/DatabaseSyncService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"miscellaneous/variables.html":{}}}],["organisationservice",{"_index":727,"title":{"injectables/OrganisationService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/OrganisationService.html":{},"coverage.html":{},"index.html":{}}}],["otherwise",{"_index":987,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{},"classes/Volunteer.html":{}}}],["out",{"_index":184,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"components/ResetPasswordComponent.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["outlet",{"_index":458,"title":{},"body":{"components/AppComponent.html":{}}}],["output",{"_index":1310,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["overview",{"_index":1858,"title":{"index.html":{}},"body":{"index.html":{}}}],["p.title",{"_index":520,"title":{},"body":{"components/AppComponent.html":{}}}],["package",{"_index":1818,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":903,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["page",{"_index":22,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{}}}],["pages",{"_index":445,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/VolunteerPage.html":{}}}],["pages/about/about.module#aboutpagemodule",{"_index":573,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/authentication/authentication.module#authenticationpagemodule",{"_index":576,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/authentication/reset",{"_index":472,"title":{},"body":{"components/AppComponent.html":{}}}],["pages/home/home.module#homepagemodule",{"_index":572,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/volunteer/volunteer.module#volunteerpagemodule",{"_index":574,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paginate",{"_index":1696,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["param",{"_index":327,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["parameter",{"_index":227,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["parameters",{"_index":274,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1448,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["params['token",{"_index":1450,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["parol",{"_index":1221,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["parola",{"_index":1224,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["parolele",{"_index":1336,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["parseint(abstractcontrol.value",{"_index":1584,"title":{},"body":{"classes/SsnValidation.html":{}}}],["parte",{"_index":93,"title":{},"body":{"components/AboutPage.html":{}}}],["parteneriat",{"_index":127,"title":{},"body":{"components/AboutPage.html":{}}}],["password",{"_index":608,"title":{},"body":{"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/User.html":{}}}],["password'},{'name",{"_index":159,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["password.component",{"_index":474,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticationPageModule.html":{}}}],["password.component.html",{"_index":1371,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":1370,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":1369,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:103",{"_index":1436,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:114",{"_index":1433,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":1439,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:18",{"_index":1379,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:22",{"_index":1441,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:23",{"_index":1378,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:27",{"_index":1438,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:28",{"_index":1373,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:32",{"_index":1423,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:42",{"_index":1440,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:44",{"_index":1374,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:52",{"_index":1430,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:53",{"_index":1377,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:72",{"_index":1376,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:76",{"_index":1427,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:87",{"_index":1434,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.length",{"_index":1357,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["password/recover",{"_index":615,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":473,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticationPageModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password_confirmation",{"_index":720,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["passwords",{"_index":1323,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordvalidation",{"_index":1319,"title":{"classes/PasswordValidation.html":{}},"body":{"classes/PasswordValidation.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordvalidation(abstractcontrol",{"_index":1331,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordvalidation.matchpassword",{"_index":1446,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordvalidation.passwordvalidation",{"_index":1445,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["path",{"_index":200,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"modules/VolunteerPageModule.html":{}}}],["pathmatch",{"_index":569,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":986,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{},"injectables/VolunteerService.html":{}}}],["payload",{"_index":650,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["pe",{"_index":54,"title":{},"body":{"components/AboutPage.html":{}}}],["pentru",{"_index":117,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["per",{"_index":1697,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["performaction",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["performaction(url",{"_index":420,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["performed",{"_index":674,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomePage.html":{},"components/ResetPasswordComponent.html":{}}}],["performes",{"_index":1083,"title":{},"body":{"components/HomePage.html":{}}}],["permission",{"_index":1520,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["permite",{"_index":101,"title":{},"body":{"components/AboutPage.html":{}}}],["persoanelor",{"_index":120,"title":{},"body":{"components/AboutPage.html":{}}}],["person",{"_index":1248,"title":{},"body":{"classes/Organisation.html":{}}}],["phone",{"_index":842,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"classes/PhoneValidation.html":{},"components/SendMessageComponent.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["phone's",{"_index":1087,"title":{},"body":{"components/HomePage.html":{}}}],["phone.indexof",{"_index":1367,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["phone.length",{"_index":1364,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["phonenumbers",{"_index":1505,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["phonevalidation",{"_index":1358,"title":{"classes/PhoneValidation.html":{}},"body":{"classes/PhoneValidation.html":{},"coverage.html":{}}}],["phonevalidation(abstractcontrol",{"_index":1361,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["picker",{"_index":1825,"title":{},"body":{"dependencies.html":{}}}],["picker/ngx",{"_index":538,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe",{"_index":351,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"injectables/VolunteerService.html":{}}}],["pipe(catcherror(error",{"_index":1032,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["planned",{"_index":1198,"title":{},"body":{"components/LoginComponent.html":{}}}],["platform",{"_index":87,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["platforms",{"_index":381,"title":{},"body":{"components/AppComponent.html":{}}}],["plugin",{"_index":311,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["pop",{"_index":880,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["position",{"_index":516,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["pouchdb",{"_index":272,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('allocations",{"_index":309,"title":{},"body":{"injectables/AllocationService.html":{},"classes/DatabaseSyncService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('courses",{"_index":807,"title":{},"body":{"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('organisations",{"_index":954,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('statics",{"_index":959,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/StaticsService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('volunteers",{"_index":949,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb(environment.databaseurl",{"_index":316,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb.plugin(pouchdbfind",{"_index":313,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["pouchdb/dist/pouchdb",{"_index":293,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["pouchdbfind",{"_index":294,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["prefixes",{"_index":1403,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["preloadallmodules",{"_index":566,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":578,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["presents",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["presenttoast",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["presenttoast(message",{"_index":1375,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["private",{"_index":261,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["prod",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":691,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["progile",{"_index":846,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["promise",{"_index":943,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["promise.all",{"_index":961,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["promises",{"_index":971,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["properties",{"_index":211,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["protecting",{"_index":583,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["protocolul",{"_index":95,"title":{},"body":{"components/AboutPage.html":{}}}],["protractor",{"_index":558,"title":{},"body":{"classes/AppPage.html":{}}}],["prove",{"_index":666,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["provide",{"_index":546,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["provider",{"_index":258,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["providers",{"_index":179,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["provides",{"_index":582,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/UnauthenticatedGuard.html":{}}}],["public",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{}}}],["pune",{"_index":56,"title":{},"body":{"components/AboutPage.html":{}}}],["puteți",{"_index":80,"title":{},"body":{"components/AboutPage.html":{}}}],["părăsi",{"_index":515,"title":{},"body":{"components/AppComponent.html":{}}}],["reactive",{"_index":1186,"title":{},"body":{"components/LoginComponent.html":{}}}],["reactiveformsmodule",{"_index":613,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["readcookie",{"_index":1781,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readcookie(name",{"_index":1165,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["receive",{"_index":660,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["recover",{"_index":158,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["recover/reset",{"_index":607,"title":{},"body":{"components/AuthenticationPage.html":{}}}],["recoverpassword",{"_index":627,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["recoverpassword(email",{"_index":655,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["recoverpasswordcomponent",{"_index":157,"title":{"components/RecoverPasswordComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["recovery",{"_index":657,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["rective",{"_index":1425,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["redirected",{"_index":1193,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["redirects",{"_index":596,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["redirectto",{"_index":567,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":306,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["referes",{"_index":1011,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["reg",{"_index":989,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PhoneValidation.html":{}}}],["reg.test(email",{"_index":995,"title":{},"body":{"classes/EmailValidation.html":{}}}],["reg.test(phone",{"_index":1363,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["regex",{"_index":1312,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["regexp",{"_index":1313,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["regexp('[a",{"_index":1349,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["regexp('\\\\d",{"_index":1347,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["regexp('^[+]{0,1}[0",{"_index":1362,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["regexp('^[a",{"_index":990,"title":{},"body":{"classes/EmailValidation.html":{}}}],["regexp(/[!#$%&\\‘\\(\\)\\*?@\\[\\]^_",{"_index":1352,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["related",{"_index":259,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{}}}],["remote",{"_index":917,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["remoteallocationsdb",{"_index":923,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["remotecoursesdb",{"_index":924,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["remotedb",{"_index":315,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["remoteorganisationsdb",{"_index":925,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["remotestaticsdb",{"_index":926,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["remotevolunteersdb",{"_index":927,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["removes",{"_index":1141,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["removespecialchars",{"_index":1276,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["removespecialchars(text",{"_index":1290,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["replacelinebreaks",{"_index":1549,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["replaceurl",{"_index":601,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["represent",{"_index":866,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["request",{"_index":646,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{}}}],["request.clone",{"_index":1409,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["request.url",{"_index":1417,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["requestinterceptor",{"_index":728,"title":{"interceptors/RequestInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["requests",{"_index":639,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["require",{"_index":1816,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":1600,"title":{},"body":{"classes/SsnValidation.html":{}}}],["rescue",{"_index":241,"title":{},"body":{"classes/Allocation.html":{},"classes/Volunteer.html":{}}}],["rescue_officer",{"_index":218,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{}}}],["rescue_officer._id",{"_index":333,"title":{},"body":{"injectables/AllocationService.html":{}}}],["rescue_officer.id",{"_index":326,"title":{},"body":{"injectables/AllocationService.html":{}}}],["rescue_officer.name",{"_index":334,"title":{},"body":{"injectables/AllocationService.html":{}}}],["reset",{"_index":161,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["reset/:token",{"_index":621,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["resetat",{"_index":1454,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpassword",{"_index":628,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["resetpassword(password",{"_index":663,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resetpassword.errors?.password",{"_index":1461,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordcomponent",{"_index":160,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["resetpasswordform",{"_index":1372,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["resetpasswordform.controls.confirmpassword.errors?.password",{"_index":1462,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordform.controls.email.errors?.email",{"_index":1399,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["resetpasswordform.controls.password.errors?.password",{"_index":1463,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resource",{"_index":28,"title":{},"body":{"components/AboutPage.html":{},"injectables/StaticsService.html":{}}}],["respects",{"_index":985,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["response",{"_index":354,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/VolunteerService.html":{}}}],["response.status",{"_index":1034,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["response.url",{"_index":1043,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["result",{"_index":170,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":172,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resurse",{"_index":53,"title":{},"body":{"components/AboutPage.html":{}}}],["retrieve",{"_index":1473,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["retrieve(route",{"_index":1478,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["retrieved",{"_index":1524,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["retrieves",{"_index":1145,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["retrives",{"_index":795,"title":{},"body":{"injectables/CourseService.html":{}}}],["retry",{"_index":320,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["return",{"_index":349,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"interceptors/RequestInterceptor.html":{},"classes/RouteReusableStrategy.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["returns",{"_index":289,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["reusable",{"_index":734,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["reuse",{"_index":1468,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["rewuest",{"_index":652,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["reîncercați",{"_index":1459,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["rgba(0,0,0,0.05",{"_index":914,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["rgba(240,237,240,1",{"_index":1097,"title":{},"body":{"components/HomePage.html":{}}}],["romania",{"_index":126,"title":{},"body":{"components/AboutPage.html":{}}}],["romanian",{"_index":1260,"title":{},"body":{"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["românia",{"_index":46,"title":{},"body":{"components/AboutPage.html":{}}}],["root",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":143,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["rootobject",{"_index":1053,"title":{"interfaces/RootObject.html":{}},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["route",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"modules/CoreModule.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"guards/UnauthenticatedGuard.html":{}}}],["router",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["routereusablestrategy",{"_index":733,"title":{"classes/RouteReusableStrategy.html":{}},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["routereusestrategy",{"_index":532,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["routermodule",{"_index":192,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["routermodule.forchild",{"_index":1124,"title":{},"body":{"modules/HomePageModule.html":{}}}],["routermodule.forchild(routes",{"_index":203,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["routermodule.forroot(routes",{"_index":577,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":191,"title":{"routes.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"guards/UnauthenticatedGuard.html":{},"modules/VolunteerPageModule.html":{},"index.html":{},"routes.html":{}}}],["routing",{"_index":589,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["routing.module",{"_index":535,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":565,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":1118,"title":{},"body":{"components/HomePage.html":{}}}],["rugăm",{"_index":1387,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["rvm",{"_index":47,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["rxjs",{"_index":298,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":300,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"injectables/VolunteerService.html":{}}}],["s",{"_index":34,"title":{},"body":{"components/AboutPage.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"classes/SsnValidation.html":{}}}],["s.reduce((a",{"_index":1601,"title":{},"body":{"classes/SsnValidation.html":{}}}],["salvare",{"_index":123,"title":{},"body":{"components/AboutPage.html":{}}}],["same",{"_index":667,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sau",{"_index":69,"title":{},"body":{"components/AboutPage.html":{}}}],["savedcredentials",{"_index":697,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["saves",{"_index":671,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sc",{"_index":1560,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["screen",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LogoutComponent.html":{},"dependencies.html":{}}}],["screen/ngx",{"_index":466,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["se",{"_index":91,"title":{},"body":{"components/AboutPage.html":{}}}],["search",{"_index":1676,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["search(keyword",{"_index":1705,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["searches",{"_index":1682,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["second",{"_index":1649,"title":{},"body":{"classes/Volunteer.html":{}}}],["seconds",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["security",{"_index":1688,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["seism",{"_index":67,"title":{},"body":{"components/AboutPage.html":{}}}],["selected",{"_index":872,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{}}}],["selection",{"_index":801,"title":{},"body":{"injectables/CourseService.html":{}}}],["selections",{"_index":867,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{}}}],["selector'},{'name",{"_index":148,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["selector.component",{"_index":740,"title":{},"body":{"modules/CoreModule.html":{}}}],["selector.component.html",{"_index":853,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.scss",{"_index":852,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts",{"_index":849,"title":{},"body":{"components/CustomSelectorComponent.html":{},"coverage.html":{}}}],["selector.component.ts:16",{"_index":865,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts:22",{"_index":862,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts:37",{"_index":869,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts:45",{"_index":877,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts:60",{"_index":874,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts:68",{"_index":873,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector/custom",{"_index":739,"title":{},"body":{"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"coverage.html":{}}}],["selector['$and'].push",{"_index":1760,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["selects",{"_index":870,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["send",{"_index":163,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{}}}],["sending",{"_index":1511,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["sendmessage",{"_index":1508,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["sendmessagecomponent",{"_index":162,"title":{"components/SendMessageComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["sends",{"_index":645,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["sent",{"_index":640,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{}}}],["server",{"_index":314,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["serverbaseurl",{"_index":1883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverurl",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":590,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["service/error",{"_index":1028,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["service/statics.service",{"_index":736,"title":{},"body":{"modules/CoreModule.html":{}}}],["services",{"_index":742,"title":{},"body":{"modules/CoreModule.html":{}}}],["serviceurl",{"_index":1051,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"interfaces/RootObject.html":{}}}],["session",{"_index":1152,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["sessionstorage",{"_index":1128,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["set",{"_index":229,"title":{},"body":{"classes/Allocation.html":{},"components/AppComponent.html":{},"classes/Course.html":{},"injectables/ErrorMessageService.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["set(error",{"_index":1062,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["setcredentials",{"_index":629,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setcredentials(credentials",{"_index":668,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setdata",{"_index":1782,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setdata(type",{"_index":1856,"title":{},"body":{"miscellaneous/functions.html":{}}}],["seterrormessage",{"_index":1421,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["seterrormessage(message",{"_index":1435,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["setheaders",{"_index":1410,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["setitem",{"_index":1132,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setitem(key",{"_index":1146,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["sets",{"_index":269,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"injectables/ErrorMessageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["settimeout",{"_index":492,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["shadow",{"_index":911,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{}}}],["shouldattach",{"_index":1474,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldattach(route",{"_index":1483,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shoulddetach",{"_index":1475,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shoulddetach(route",{"_index":1485,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldreuseroute",{"_index":1476,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldreuseroute(future",{"_index":1487,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shows/hides",{"_index":461,"title":{},"body":{"components/AppComponent.html":{}}}],["showsidemenu",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["side",{"_index":443,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["simple",{"_index":1325,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["simplu",{"_index":108,"title":{},"body":{"components/AboutPage.html":{}}}],["situații",{"_index":63,"title":{},"body":{"components/AboutPage.html":{}}}],["size",{"_index":1103,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["skip",{"_index":1718,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["slug",{"_index":1237,"title":{},"body":{"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["sms",{"_index":539,"title":{},"body":{"modules/AppModule.html":{},"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["social",{"_index":1687,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["societatea",{"_index":59,"title":{},"body":{"components/AboutPage.html":{}}}],["something",{"_index":1195,"title":{},"body":{"components/LoginComponent.html":{}}}],["sort",{"_index":814,"title":{},"body":{"injectables/CourseService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["spam",{"_index":1392,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["spec\\.ts",{"_index":1879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":1261,"title":{},"body":{"classes/Organisation.html":{},"classes/PasswordValidation.html":{},"classes/Volunteer.html":{}}}],["special.test(password",{"_index":1356,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["specialisation",{"_index":1643,"title":{},"body":{"classes/Volunteer.html":{}}}],["specificat",{"_index":1393,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["splash",{"_index":382,"title":{},"body":{"components/AppComponent.html":{}}}],["splashscreen",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["spontani",{"_index":104,"title":{},"body":{"components/AboutPage.html":{}}}],["sprijin",{"_index":36,"title":{},"body":{"components/AboutPage.html":{}}}],["sprijinul",{"_index":128,"title":{},"body":{"components/AboutPage.html":{}}}],["src/.../allocation.service.ts",{"_index":1873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authentication.service.ts",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../course.service.ts",{"_index":1874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.dev.ts",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.local.ts",{"_index":1870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":1853,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../organisation.service.ts",{"_index":1875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../statics.service.ts",{"_index":1876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../volunteer.service.ts",{"_index":1877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":564,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:141",{"_index":421,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:152",{"_index":413,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:171",{"_index":425,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":457,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":459,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":442,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:60",{"_index":379,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:78",{"_index":446,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:94",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":528,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core",{"_index":1204,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["src/app/core/authentication/authentication.guard.ts",{"_index":581,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/app/core/authentication/authentication.guard.ts:10",{"_index":587,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/app/core/authentication/authentication.guard.ts:26",{"_index":591,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/app/core/authentication/authentication.service.ts",{"_index":622,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/authentication/authentication.service.ts:106",{"_index":670,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:123",{"_index":690,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:132",{"_index":656,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:142",{"_index":665,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:21",{"_index":677,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:26",{"_index":634,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:48",{"_index":644,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:66",{"_index":651,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:81",{"_index":641,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:89",{"_index":685,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:97",{"_index":688,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/unauthenticated.guard",{"_index":619,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["src/app/core/authentication/unauthenticated.guard.ts",{"_index":1626,"title":{},"body":{"guards/UnauthenticatedGuard.html":{},"coverage.html":{}}}],["src/app/core/authentication/unauthenticated.guard.ts:10",{"_index":1628,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["src/app/core/authentication/unauthenticated.guard.ts:27",{"_index":1629,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["src/app/core/components/custom",{"_index":848,"title":{},"body":{"components/CustomSelectorComponent.html":{},"coverage.html":{}}}],["src/app/core/core.module.ts",{"_index":730,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/http/error",{"_index":1003,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/http/request.interceptor.ts",{"_index":1402,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["src/app/core/http/request.interceptor.ts:17",{"_index":1405,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/app/core/http/request.interceptor.ts:31",{"_index":1406,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/app/core/local",{"_index":1125,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/model/allocation.model.ts",{"_index":206,"title":{},"body":{"classes/Allocation.html":{},"coverage.html":{}}}],["src/app/core/model/allocation.model.ts:103",{"_index":245,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:13",{"_index":225,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:18",{"_index":240,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:33",{"_index":251,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:48",{"_index":234,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:63",{"_index":231,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:78",{"_index":238,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:8",{"_index":223,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:93",{"_index":235,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:98",{"_index":248,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/authentication.model.ts",{"_index":836,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/model/course.model.ts",{"_index":746,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["src/app/core/model/course.model.ts:13",{"_index":753,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:18",{"_index":765,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:23",{"_index":758,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:38",{"_index":754,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:53",{"_index":760,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:58",{"_index":759,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:63",{"_index":764,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:68",{"_index":757,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:73",{"_index":761,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:8",{"_index":752,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/error.model.ts",{"_index":1050,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["src/app/core/model/organisation.model.ts",{"_index":1233,"title":{},"body":{"classes/Organisation.html":{},"coverage.html":{}}}],["src/app/core/model/organisation.model.ts:104",{"_index":1267,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:109",{"_index":1263,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:114",{"_index":1250,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:13",{"_index":1239,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:18",{"_index":1255,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:23",{"_index":1257,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:28",{"_index":1269,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:33",{"_index":1246,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:38",{"_index":1256,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:43",{"_index":1241,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:48",{"_index":1254,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:53",{"_index":1249,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:69",{"_index":1242,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:8",{"_index":1238,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:84",{"_index":1244,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:89",{"_index":1253,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:94",{"_index":1268,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:99",{"_index":1240,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/volunteer.model",{"_index":1531,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["src/app/core/model/volunteer.model.ts",{"_index":1631,"title":{},"body":{"classes/Volunteer.html":{},"coverage.html":{}}}],["src/app/core/model/volunteer.model.ts:100",{"_index":1641,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:13",{"_index":1634,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:131",{"_index":1636,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:136",{"_index":1639,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:141",{"_index":1646,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:146",{"_index":1644,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:151",{"_index":1656,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:156",{"_index":1635,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:161",{"_index":1655,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:18",{"_index":1647,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:23",{"_index":1653,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:28",{"_index":1654,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:33",{"_index":1645,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:38",{"_index":1652,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:43",{"_index":1640,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:58",{"_index":1638,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:74",{"_index":1648,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:8",{"_index":1633,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/route",{"_index":1464,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["src/app/core/service/allocation.service.ts",{"_index":257,"title":{},"body":{"injectables/AllocationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/allocation.service.ts:36",{"_index":268,"title":{},"body":{"injectables/AllocationService.html":{}}}],["src/app/core/service/allocation.service.ts:65",{"_index":277,"title":{},"body":{"injectables/AllocationService.html":{}}}],["src/app/core/service/course.service.ts",{"_index":767,"title":{},"body":{"injectables/CourseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/course.service.ts:102",{"_index":794,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:116",{"_index":780,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:132",{"_index":804,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:146",{"_index":783,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:155",{"_index":799,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:34",{"_index":777,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:58",{"_index":802,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:73",{"_index":791,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:88",{"_index":787,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/database",{"_index":915,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{}}}],["src/app/core/service/error",{"_index":1056,"title":{},"body":{"injectables/ErrorMessageService.html":{},"coverage.html":{}}}],["src/app/core/service/organisation.service.ts",{"_index":1270,"title":{},"body":{"injectables/OrganisationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/organisation.service.ts:100",{"_index":1280,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:118",{"_index":1293,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:130",{"_index":1282,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:141",{"_index":1291,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:33",{"_index":1278,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:57",{"_index":1289,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:72",{"_index":1285,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:86",{"_index":1287,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/statics.service.ts",{"_index":1603,"title":{},"body":{"injectables/StaticsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/statics.service.ts:30",{"_index":1617,"title":{},"body":{"injectables/StaticsService.html":{}}}],["src/app/core/service/statics.service.ts:35",{"_index":1611,"title":{},"body":{"injectables/StaticsService.html":{}}}],["src/app/core/service/statics.service.ts:54",{"_index":1616,"title":{},"body":{"injectables/StaticsService.html":{}}}],["src/app/core/service/statics.service.ts:69",{"_index":1613,"title":{},"body":{"injectables/StaticsService.html":{}}}],["src/app/core/service/volunteer.service.ts",{"_index":1668,"title":{},"body":{"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/volunteer.service.ts:128",{"_index":1699,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:142",{"_index":1701,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:163",{"_index":1686,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:219",{"_index":1712,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:242",{"_index":1690,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:257",{"_index":1692,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:298",{"_index":1681,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:311",{"_index":1704,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:35",{"_index":1679,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:73",{"_index":1703,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:93",{"_index":1706,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/validators/email",{"_index":974,"title":{},"body":{"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["src/app/core/validators/password",{"_index":1320,"title":{},"body":{"classes/PasswordValidation.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/core/validators/phone",{"_index":1359,"title":{},"body":{"classes/PhoneValidation.html":{},"coverage.html":{}}}],["src/app/core/validators/ssn",{"_index":1580,"title":{},"body":{"classes/SsnValidation.html":{},"coverage.html":{}}}],["src/app/pages/about/about.module.ts",{"_index":185,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["src/app/pages/about/about.page.ts",{"_index":10,"title":{},"body":{"components/AboutPage.html":{},"coverage.html":{}}}],["src/app/pages/authentication/authentication.module.ts",{"_index":612,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["src/app/pages/authentication/authentication.page.ts",{"_index":602,"title":{},"body":{"components/AuthenticationPage.html":{},"coverage.html":{}}}],["src/app/pages/authentication/login/login.component.ts",{"_index":1176,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/pages/authentication/login/login.component.ts:22",{"_index":1201,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:27",{"_index":1194,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:32",{"_index":1185,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:47",{"_index":1190,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:54",{"_index":1189,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:65",{"_index":1191,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/logout/logout.component.ts",{"_index":1225,"title":{},"body":{"components/LogoutComponent.html":{},"coverage.html":{}}}],["src/app/pages/authentication/logout/logout.component.ts:10",{"_index":1228,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/pages/authentication/logout/logout.component.ts:24",{"_index":1229,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/pages/authentication/recover",{"_index":1368,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/authentication/reset",{"_index":1419,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":1122,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":1077,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:18",{"_index":1091,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:32",{"_index":1081,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:45",{"_index":1082,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/volunteer/add",{"_index":1798,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/volunteer/list",{"_index":1802,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/volunteer/send",{"_index":1498,"title":{},"body":{"components/SendMessageComponent.html":{},"coverage.html":{}}}],["src/app/pages/volunteer/validate",{"_index":1807,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/volunteer/volunteer.module.ts",{"_index":1664,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["src/app/pages/volunteer/volunteer.page.ts",{"_index":1658,"title":{},"body":{"components/VolunteerPage.html":{},"coverage.html":{}}}],["src/environments/environment.dev.ts",{"_index":1810,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.local.ts",{"_index":1811,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1812,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1813,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1814,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssn",{"_index":1581,"title":{},"body":{"classes/SsnValidation.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["ssn.tostring().length",{"_index":1585,"title":{},"body":{"classes/SsnValidation.html":{}}}],["ssnvalidation",{"_index":1579,"title":{"classes/SsnValidation.html":{}},"body":{"classes/SsnValidation.html":{},"coverage.html":{}}}],["ssnvalidation(abstractcontrol",{"_index":1583,"title":{},"body":{"classes/SsnValidation.html":{}}}],["startkey",{"_index":1621,"title":{},"body":{"injectables/StaticsService.html":{}}}],["starts",{"_index":942,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["state",{"_index":424,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["statements",{"_index":1765,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":805,"title":{},"body":{"injectables/CourseService.html":{},"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["statics",{"_index":282,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/Organisation.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"miscellaneous/variables.html":{}}}],["staticsservice",{"_index":729,"title":{"injectables/StaticsService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/StaticsService.html":{},"coverage.html":{},"index.html":{}}}],["status",{"_index":281,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/ErrorMessageObject.html":{},"classes/Organisation.html":{},"interfaces/RootObject.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{}}}],["statusbar",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["statuscode",{"_index":1054,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["storage",{"_index":636,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["storage.service",{"_index":694,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["storage.service.ts",{"_index":1126,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["storage.service.ts:109",{"_index":1150,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:114",{"_index":1133,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:221",{"_index":1147,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:229",{"_index":1144,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:237",{"_index":1140,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:244",{"_index":1137,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["store",{"_index":1477,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["store(route",{"_index":1491,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["store/clear",{"_index":864,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["stored",{"_index":1857,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stores",{"_index":448,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"injectables/ErrorMessageService.html":{},"miscellaneous/variables.html":{}}}],["storing",{"_index":1127,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["strategy",{"_index":735,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["strategy.ts",{"_index":1465,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["strategy.ts:19",{"_index":1486,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:28",{"_index":1493,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:38",{"_index":1484,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:47",{"_index":1480,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:56",{"_index":1489,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["string",{"_index":221,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":1329,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["style",{"_index":396,"title":{},"body":{"components/AppComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutPage.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["styleurls",{"_index":14,"title":{},"body":{"components/AboutPage.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["submit",{"_index":1183,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe",{"_index":1215,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe((match",{"_index":505,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribed",{"_index":882,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["subscription",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["succes",{"_index":1455,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["success",{"_index":654,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["successful",{"_index":648,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LogoutComponent.html":{}}}],["such",{"_index":585,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["suport",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["support",{"_index":1861,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1862,"title":{},"body":{"modules.html":{}}}],["sync",{"_index":928,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts",{"_index":916,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{}}}],["sync.service.ts:11",{"_index":934,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:15",{"_index":940,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:20",{"_index":930,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:24",{"_index":937,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:29",{"_index":931,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:33",{"_index":938,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:38",{"_index":929,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:42",{"_index":936,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:47",{"_index":933,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:51",{"_index":939,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:77",{"_index":941,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["synchronisations",{"_index":944,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["synchronization",{"_index":270,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["table",{"_index":292,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1817,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":983,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["tap",{"_index":405,"title":{},"body":{"components/AppComponent.html":{}}}],["tapped",{"_index":450,"title":{},"body":{"components/AppComponent.html":{}}}],["tapping",{"_index":449,"title":{},"body":{"components/AppComponent.html":{}}}],["targetheight",{"_index":1543,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["targetwidth",{"_index":1542,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["te",{"_index":1395,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["tel:89992142265",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["teren",{"_index":90,"title":{},"body":{"components/AboutPage.html":{}}}],["text",{"_index":1106,"title":{},"body":{"components/HomePage.html":{},"injectables/OrganisationService.html":{},"components/SendMessageComponent.html":{},"injectables/VolunteerService.html":{}}}],["textarea",{"_index":1561,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["then((imagedata",{"_index":1544,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this._credentials",{"_index":699,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._errors",{"_index":1072,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this._errors.push",{"_index":1073,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this.authenticationservice",{"_index":1212,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authenticationservice.accesstoken",{"_index":1416,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.authenticationservice.isauthenticated",{"_index":599,"title":{},"body":{"guards/AuthenticationGuard.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["this.authenticationservice.logout().subscribe",{"_index":1231,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.authenticationservice.logout().subscribe(response",{"_index":1443,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authenticationservice.recoverpassword(this.resetpasswordform.value.email).subscribe(response",{"_index":1382,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.authenticationservice.resetpassword(this.resetpasswordform.value.password",{"_index":1451,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authenticationservice.user",{"_index":328,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{}}}],["this.authservice.user._id",{"_index":820,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.base64image",{"_index":1545,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.courseservice.createcourse(course",{"_index":1737,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["this.createform",{"_index":1206,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.credentials",{"_index":710,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials$.emit(this._credentials",{"_index":714,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials.token",{"_index":711,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials.user",{"_index":716,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.databasesyncservice.sync().then",{"_index":497,"title":{},"body":{"components/AppComponent.html":{}}}],["this.errorhandler(error",{"_index":1033,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.errormessage",{"_index":1217,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.errormessageservice.set",{"_index":1041,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.errors$.emit(this._errors",{"_index":1076,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this.formbuilder.group",{"_index":1208,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.httpclient",{"_index":707,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpclient.post('/login",{"_index":703,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpclient.post('/recoverpassword",{"_index":717,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpclient.post('/resetpassword",{"_index":719,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.initialiseview",{"_index":1444,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.initializeapp",{"_index":475,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isdoubletap",{"_index":490,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loading",{"_index":1211,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.localallocationsdb",{"_index":956,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localallocationsdb.replicate.from(this.remoteallocationsdb",{"_index":966,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localcoursesdb",{"_index":951,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localcoursesdb.replicate.from(this.remotecoursesdb",{"_index":964,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localorganisationsdb",{"_index":953,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localorganisationsdb.replicate.from(this.remoteorganisationsdb",{"_index":965,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localstaticsdb",{"_index":958,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localstaticsdb.query('cities/slug",{"_index":967,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localstaticsdb.replicate.from(this.remotestaticsdb",{"_index":962,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localstorage",{"_index":1170,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.clear",{"_index":1175,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.getitem(key",{"_index":1173,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.removeitem(key",{"_index":1174,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.setitem(key",{"_index":1172,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorageservice.clearitem('prevent_back",{"_index":895,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.localstorageservice.clearitem(credentialskey",{"_index":715,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.localstorageservice.getitem('firstlaunch",{"_index":496,"title":{},"body":{"components/AppComponent.html":{}}}],["this.localstorageservice.getitem('prevent_back",{"_index":484,"title":{},"body":{"components/AppComponent.html":{}}}],["this.localstorageservice.getitem(credentialskey",{"_index":698,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.localstorageservice.setitem",{"_index":712,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.localstorageservice.setitem('firstlaunch",{"_index":499,"title":{},"body":{"components/AppComponent.html":{}}}],["this.localstorageservice.setitem('prevent_back",{"_index":888,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.localvolunteersdb",{"_index":948,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localvolunteersdb.replicate.from(this.remotevolunteersdb",{"_index":963,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.location.back",{"_index":495,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loginform",{"_index":1207,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.markaspristine",{"_index":1214,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.messageform",{"_index":1538,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.messageform.value.message",{"_index":1553,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.modalctrl.dismiss",{"_index":897,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.modalctrl.dismiss(entry",{"_index":887,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.modalctrl.gettop",{"_index":893,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.phonenumbers.push(volunteer.phone",{"_index":1537,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.platform.is('cordova",{"_index":477,"title":{},"body":{"components/AppComponent.html":{}}}],["this.platform.ready().then",{"_index":476,"title":{},"body":{"components/AppComponent.html":{}}}],["this.presenttoast",{"_index":491,"title":{},"body":{"components/AppComponent.html":{}}}],["this.presenttoast('cererea",{"_index":1383,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.presenttoast('parol",{"_index":1453,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.remoteallocationsdb",{"_index":957,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.remotecoursesdb",{"_index":952,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.remoteorganisationsdb",{"_index":955,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.remotestaticsdb",{"_index":960,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.remotevolunteersdb",{"_index":950,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.removespecialchars(name",{"_index":1297,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["this.removespecialchars(organisation.name",{"_index":1308,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["this.removespecialchars(volunteer.name",{"_index":1745,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["this.resetpasswordform",{"_index":1381,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.route.params.subscribe",{"_index":1447,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.getcurrentnavigation",{"_index":1532,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.router.navigate(['../auth/login",{"_index":1232,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.router.navigate(['../home",{"_index":1216,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":600,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/auth/reset",{"_index":506,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/home",{"_index":1630,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["this.router.navigate([url",{"_index":502,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["this.router.url",{"_index":483,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sendmessage",{"_index":1555,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.sessionstorage",{"_index":1171,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.setcredentials",{"_index":709,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.setcredentials(body",{"_index":706,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.seterrormessage('a",{"_index":1456,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.sms.haspermission",{"_index":1554,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.sms.send(this.phonenumbers",{"_index":1552,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.splashscreen.hide",{"_index":498,"title":{},"body":{"components/AppComponent.html":{}}}],["this.statusbar.backgroundcolorbyhexstring('#264998",{"_index":478,"title":{},"body":{"components/AppComponent.html":{}}}],["this.statusbar.styledefault",{"_index":479,"title":{},"body":{"components/AppComponent.html":{}}}],["this.subscription",{"_index":891,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":896,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.toastcontroller.create",{"_index":1398,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.toastctrl.create",{"_index":512,"title":{},"body":{"components/AppComponent.html":{}}}],["this.token",{"_index":1449,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.token).subscribe(response",{"_index":1452,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.type",{"_index":345,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["this.updatevolunteer(volunteer",{"_index":1743,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["this.volunteerservice.allocatevolunteer(response.id",{"_index":353,"title":{},"body":{"injectables/AllocationService.html":{}}}],["through",{"_index":1230,"title":{},"body":{"components/LogoutComponent.html":{}}}],["throw",{"_index":1048,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["title",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["title')).gettext",{"_index":563,"title":{},"body":{"classes/AppPage.html":{}}}],["toast",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["toast.present",{"_index":519,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["toastcontroller",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["toastctrl",{"_index":377,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":664,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/User.html":{}}}],["top",{"_index":1565,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["total",{"_index":1695,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["toți",{"_index":434,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["transl",{"_index":1315,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["transl[m",{"_index":1318,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["trebuie",{"_index":1337,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["triggered",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["trimite",{"_index":1401,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["true",{"_index":319,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["truth",{"_index":662,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tslib",{"_index":1847,"title":{},"body":{"dependencies.html":{}}}],["twice",{"_index":452,"title":{},"body":{"components/AppComponent.html":{}}}],["type",{"_index":219,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types/pouchdb",{"_index":1832,"title":{},"body":{"dependencies.html":{}}}],["tău",{"_index":1558,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["uitat",{"_index":1223,"title":{},"body":{"components/LoginComponent.html":{}}}],["un",{"_index":48,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/PasswordValidation.html":{}}}],["unauthenticated",{"_index":1627,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["unauthenticatedguard",{"_index":618,"title":{"guards/UnauthenticatedGuard.html":{}},"body":{"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"guards/UnauthenticatedGuard.html":{},"coverage.html":{}}}],["underline",{"_index":1110,"title":{},"body":{"components/HomePage.html":{}}}],["unei",{"_index":39,"title":{},"body":{"components/AboutPage.html":{}}}],["unor",{"_index":84,"title":{},"body":{"components/AboutPage.html":{}}}],["unsubscribed",{"_index":883,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["unsubscribes",{"_index":875,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["unui",{"_index":66,"title":{},"body":{"components/AboutPage.html":{}}}],["up",{"_index":881,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["update",{"_index":250,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{}}}],["updatecourse",{"_index":775,"title":{},"body":{"injectables/CourseService.html":{}}}],["updatecourse(course",{"_index":803,"title":{},"body":{"injectables/CourseService.html":{}}}],["updated_at",{"_index":220,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["updatedat",{"_index":847,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["updateorganisation",{"_index":1277,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["updateorganisation(organisation",{"_index":1292,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["updates",{"_index":280,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["updatevolunteer",{"_index":1677,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["updatevolunteer(volunteer",{"_index":1711,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["uppercase",{"_index":1348,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["uppercase.test(password",{"_index":1354,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["urgen",{"_index":64,"title":{},"body":{"components/AboutPage.html":{}}}],["url",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"classes/Organisation.html":{},"interceptors/RequestInterceptor.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{}}}],["url.includes('tel",{"_index":500,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["useclass",{"_index":547,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["used",{"_index":1135,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"injectables/VolunteerService.html":{}}}],["user",{"_index":243,"title":{"interfaces/User.html":{}},"body":{"classes/Allocation.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"coverage.html":{}}}],["user's",{"_index":252,"title":{},"body":{"classes/Allocation.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{}}}],["username",{"_index":841,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["username/email",{"_index":840,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["uses",{"_index":1515,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["v",{"_index":1386,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["va",{"_index":100,"title":{},"body":{"components/AboutPage.html":{}}}],["valid",{"_index":999,"title":{},"body":{"classes/EmailValidation.html":{}}}],["validate",{"_index":166,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{}}}],["validated",{"_index":984,"title":{},"body":{"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["validates",{"_index":1321,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["validatevolunteercomponent",{"_index":165,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["validation",{"_index":1192,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validation.ts",{"_index":975,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{},"coverage.html":{}}}],["validation.ts:14",{"_index":979,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["validation.ts:16",{"_index":1328,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["validation.ts:35",{"_index":1332,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["validator",{"_index":980,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/ResetPasswordComponent.html":{},"classes/SsnValidation.html":{}}}],["validators",{"_index":1202,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["validators.required",{"_index":1209,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["validați",{"_index":82,"title":{},"body":{"components/AboutPage.html":{}}}],["valideaz",{"_index":429,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["validtor",{"_index":976,"title":{},"body":{"classes/EmailValidation.html":{}}}],["value",{"_index":283,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":683,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/PasswordValidation.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":135,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["variable",{"_index":1771,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1865,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verificați",{"_index":1388,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["verifici",{"_index":1396,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["vezi",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["view",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{}}}],["viewchild",{"_index":463,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(ionrouteroutlet",{"_index":456,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"injectables/VolunteerService.html":{}}}],["voluntar",{"_index":109,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{}}}],["voluntari",{"_index":52,"title":{},"body":{"components/AboutPage.html":{}}}],["voluntarii",{"_index":435,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["voluntarilor",{"_index":103,"title":{},"body":{"components/AboutPage.html":{}}}],["volunteer",{"_index":29,"title":{"classes/Volunteer.html":{}},"body":{"components/AboutPage.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["volunteer's",{"_index":239,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["volunteer'},{'name",{"_index":141,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["volunteer._id",{"_index":330,"title":{},"body":{"injectables/AllocationService.html":{}}}],["volunteer._id).subscribe((data",{"_index":1738,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.allocation",{"_index":1729,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.city",{"_index":1724,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.comments",{"_index":1755,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.component",{"_index":1666,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["volunteer.component.ts",{"_index":1799,"title":{},"body":{"coverage.html":{}}}],["volunteer.county",{"_index":1721,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.courses",{"_index":1735,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.courses.push",{"_index":1739,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.created_at",{"_index":1727,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.email",{"_index":1748,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.id",{"_index":325,"title":{},"body":{"injectables/AllocationService.html":{}}}],["volunteer.job",{"_index":1757,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.name",{"_index":331,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["volunteer.organisation",{"_index":1733,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.page",{"_index":1665,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["volunteer.page.html",{"_index":1660,"title":{},"body":{"components/VolunteerPage.html":{}}}],["volunteer.page.scss",{"_index":1659,"title":{},"body":{"components/VolunteerPage.html":{}}}],["volunteer.phone",{"_index":1730,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.service",{"_index":302,"title":{},"body":{"injectables/AllocationService.html":{}}}],["volunteer.slug",{"_index":1731,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.ssn",{"_index":1720,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.type",{"_index":1732,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.updated_at",{"_index":1728,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer/add",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["volunteer/list",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["volunteer/s",{"_index":1526,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["volunteer/validate",{"_index":430,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["volunteer_id",{"_index":751,"title":{},"body":{"classes/Course.html":{},"injectables/CourseService.html":{}}}],["volunteerid",{"_index":797,"title":{},"body":{"injectables/CourseService.html":{},"injectables/VolunteerService.html":{}}}],["volunteerpage",{"_index":167,"title":{"components/VolunteerPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["volunteerpagemodule",{"_index":1661,"title":{"modules/VolunteerPageModule.html":{}},"body":{"modules/VolunteerPageModule.html":{},"index.html":{},"modules.html":{}}}],["volunteers",{"_index":935,"title":{},"body":{"classes/DatabaseSyncService.html":{},"components/SendMessageComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["volunteers.foreach((volunteer",{"_index":1536,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["volunteerservice",{"_index":267,"title":{"injectables/VolunteerService.html":{}},"body":{"injectables/AllocationService.html":{},"modules/CoreModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"index.html":{}}}],["webkit",{"_index":1095,"title":{},"body":{"components/HomePage.html":{}}}],["website",{"_index":287,"title":{},"body":{"injectables/AllocationService.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["whose",{"_index":1707,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["width",{"_index":908,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["window.open(url",{"_index":501,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["within",{"_index":406,"title":{},"body":{"components/AppComponent.html":{}}}],["without",{"_index":1258,"title":{},"body":{"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["workaround",{"_index":1469,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["world",{"_index":129,"title":{},"body":{"components/AboutPage.html":{}}}],["yes",{"_index":672,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["z",{"_index":1350,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["z0",{"_index":991,"title":{},"body":{"classes/EmailValidation.html":{}}}],["z]{2,4",{"_index":994,"title":{},"body":{"classes/EmailValidation.html":{}}}],["zone",{"_index":115,"title":{},"body":{"components/AboutPage.html":{}}}],["zone.js",{"_index":1849,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":183,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutPage.html":{"url":"components/AboutPage.html","title":"component - AboutPage","body":"\n                   \n\n\n\n\n\n  Components\n  AboutPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/about/about.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                ./about.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.page.html',\n  styleUrls: ['./about.page.scss'],\n})\n\n/**\n * The app information page, found at '/about'\n */\nexport class AboutPage {\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n  \n\n\n  \n    \n      Despre Aplicație\n    \n  \n  \n    \n      Resource and Volunteer Management este o aplicație menită să ofere sprijin în eventualitatea unei calamități majore care ar avea loc în România. RVM este un instrument de administrare de voluntari și resurse pe care le pune la dispoziție societatea civilă către Departamentul de Situații de Urgență în cazul unui seism major sau al unui alt dezastru natural. \n    \n  \n  \n    \n      Cu ajutorul acestei componente mobile a aplicației puteți să mobilizați voluntari sau să validați identitatea unor voluntari deja existenți în platformă în cazul în care aceștia își oferă ajutorul în teren și se identifică parte din protocolul de colaborare cu DSU.\n    \n  \n  \n    \n      De asemenea, aplicația va permite și administrarea voluntarilor spontani care își oferă ajutorul în caz de dezastru. Puteți înregistra foarte simplu un voluntar nou în baza de date și îl puteți aloca unei zone de intervenție pentru un mai bun management al persoanelor implicate în eforturile de salvare din teren.  \n    \n  \n  \n    \n      Aplicația RVM este dezvoltată de Code for Romania, în parteneriat cu Departamentul pentru Situații de Urgență și cu sprijinul World Bank. \n    \n  \n\n  \n    \n      \n        \n      \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n      \n        \n      \n        \n  \n\n    \n\n    \n                \n                    ./about.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Despre Aplicație                  Resource and Volunteer Management este o aplicație menită să ofere sprijin în eventualitatea unei calamități majore care ar avea loc în România. RVM este un instrument de administrare de voluntari și resurse pe care le pune la dispoziție societatea civilă către Departamentul de Situații de Urgență în cazul unui seism major sau al unui alt dezastru natural.                   Cu ajutorul acestei componente mobile a aplicației puteți să mobilizați voluntari sau să validați identitatea unor voluntari deja existenți în platformă în cazul în care aceștia își oferă ajutorul în teren și se identifică parte din protocolul de colaborare cu DSU.                  De asemenea, aplicația va permite și administrarea voluntarilor spontani care își oferă ajutorul în caz de dezastru. Puteți înregistra foarte simplu un voluntar nou în baza de date și îl puteți aloca unei zone de intervenție pentru un mai bun management al persoanelor implicate în eforturile de salvare din teren.                    Aplicația RVM este dezvoltată de Code for Romania, în parteneriat cu Departamentul pentru Situații de Urgență și cu sprijinul World Bank.                                                                                                                   '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageModule.html":{"url":"modules/AboutPageModule.html","title":"module - AboutPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AboutPage } from './about.page';\nimport { AuthenticationGuard } from '../../core/authentication/authentication.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AboutPage,\n    canActivate: [AuthenticationGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AboutPage]\n})\nexport class AboutPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Allocation.html":{"url":"classes/Allocation.html","title":"class - Allocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Allocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/allocation.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for allocation object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                _rev\n                            \n                            \n                                city\n                            \n                            \n                                county\n                            \n                            \n                                created_at\n                            \n                            \n                                organisation\n                            \n                            \n                                rescue_officer\n                            \n                            \n                                type\n                            \n                            \n                                updated_at\n                            \n                            \n                                volunteer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:8\n                            \n                        \n\n                \n                    \n                        Allocation id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _rev\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:13\n                            \n                        \n\n                \n                    \n                        CouchDB parameter; it is automatically set\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:63\n                            \n                        \n\n                \n                    \n                        The city in which the volunteer is being allocated\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:48\n                            \n                        \n\n                \n                    \n                        The county in which the volunteer is being allocated\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:93\n                            \n                        \n\n                \n                    \n                        Entry creation date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organisation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:78\n                            \n                        \n\n                \n                    \n                        Volunteer's organisation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rescue_officer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:18\n                            \n                        \n\n                \n                    \n                        The rescue officer user that created the allocation entry\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:103\n                            \n                        \n\n                \n                    \n                        Entry type, for allocations it's 'allocations'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:98\n                            \n                        \n\n                \n                    \n                        Entry last update date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volunteer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:33\n                            \n                        \n\n                \n                    \n                        The volunteer that is being allocated\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Allocation {\n    /**\n     * Allocation id\n     */\n    _id: string;\n\n    /**\n     * CouchDB parameter; it is automatically set\n     */\n    _rev: string;\n\n    /**\n     * The rescue officer user that created the allocation entry\n     */\n    rescue_officer: {\n      /**\n       * User's id\n       */\n        _id: string;\n\n      /**\n       * User's name\n       */\n        name: string;\n    };\n\n    /**\n     * The volunteer that is being allocated\n     */\n    volunteer: {\n      /**\n       * User's id\n       */\n        _id: string;\n\n        /**\n         * User's name\n         */\n        name: string;\n    };\n\n    /**\n     * The county in which the volunteer is being allocated\n     */\n    county: {\n      /**\n       * County id\n       */\n      _id: string;\n\n      /**\n       * County name\n       */\n      name: string;\n    };\n\n    /**\n     * The city in which the volunteer is being allocated\n     */\n    city: {\n      /**\n       * City's id\n       */\n      _id: string;\n\n      /**\n       * City's name\n       */\n      name: string;\n    };\n\n    /**\n     * Volunteer's organisation\n     */\n    organisation: {\n      /**\n       * Organisation id\n       */\n        _id: string;\n\n      /**\n       * Organisation name\n       */\n      name: string;\n    };\n\n    /**\n     * Entry creation date\n     */\n    created_at: any;\n\n    /**\n     * Entry last update date\n     */\n    updated_at: any;\n\n    /**\n     * Entry type, for allocations it's 'allocations'\n     */\n    type: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllocationService.html":{"url":"injectables/AllocationService.html","title":"injectable - AllocationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/allocation.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for allocations related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAllocation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, volunteerService: VolunteerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/allocation.service.ts:36\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Allocations Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        volunteerService\n                                                  \n                                                        \n                                                                        VolunteerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createAllocation\n                        \n                        \n                    \n                \n            \n            \n                \ncreateAllocation(volunteer: Volunteer, county: any, city: any, organisation: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/allocation.service.ts:65\n                \n            \n\n\n            \n                \n                    Creates an allocation entry in the local database and updates volunteer's allocation status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteer\n                                    \n                                                Volunteer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer object\n\n                                    \n                                \n                                \n                                    county\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        County entry from statics database\n\n                                    \n                                \n                                \n                                    city\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        City entry from statics database\n\n                                    \n                                \n                                \n                                    organisation\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object value containing the allocated volunteer's organisation\nEither contains an object with the following properties {id, name, website}, or it's null\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        An Observable with the created object\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'allocations'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/allocation.service.ts:36\n                            \n                        \n\n                \n                    \n                        Table type\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { from } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthenticationService } from '../authentication';\nimport { VolunteerService } from './volunteer.service';\nimport { Allocation } from '../model/allocation.model';\nimport { Volunteer } from '../model/volunteer.model';\nimport * as moment from 'moment';\n\n/**\n * Reference for local PouchDB Allocations Database\n */\nconst localDB = new PouchDB('allocations');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Allocations Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/allocations');\n\n/**\n * Provider for allocations related operations\n */\n@Injectable()\nexport class AllocationService {\n  /**\n   * Table type\n   */\n  private type = 'allocations';\n\n  /**\n   * Class constructor, sets the synchronization options for CouchDB and PouchDB Allocations Database\n   */\n  constructor(private authenticationService: AuthenticationService,\n              private volunteerService: VolunteerService) {\n    const options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);\n\n    localDB.createIndex({\n      index: {fields: ['volunteer.id', 'rescue_officer.id']}\n    });\n   }\n\n    /**\n     *  Creates an allocation entry in the local database and updates volunteer's allocation status\n     * @param volunteer Volunteer object\n     * @param county County entry from statics database\n     * @param city City entry from statics database\n     * @param organisation Object value containing the allocated volunteer's organisation\n     * Either contains an object with the following properties {id, name, website}, or it's null\n     * @returns An Observable with the created object\n     */\n   createAllocation(volunteer: Volunteer, county: any, city: any, organisation: any) {\n    const rescue_officer = this.authenticationService.user;\n    const allocation = new Allocation();\n    allocation.volunteer = {\n      _id: volunteer._id,\n      name: volunteer.name\n    };\n    allocation.rescue_officer = {\n      _id: rescue_officer._id,\n      name: rescue_officer.name\n    };\n    allocation.county = {\n      _id: county._id,\n      name\n    };\n    allocation.city = city;\n    allocation.created_at = moment().format('Y-MM-DD H:mm:ss');\n    allocation.updated_at = moment().format('Y-MM-DD H:mm:ss');\n    allocation.type = this.type;\n\n    if (organisation) {\n        allocation.organisation = {\n          _id: organisation.id,\n          name: organisation.name,\n        };\n    }\n\n    return from(localDB.post(allocation))\n    .pipe(\n        map((response: any) => {\n          this.volunteerService.allocateVolunteer(response.id, volunteer._id);\n          return response;\n        })\n      );\n   }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appPages\n                            \n                            \n                                    Public\n                                authenticationService\n                            \n                            \n                                    Private\n                                isDoubleTap\n                            \n                            \n                                routerOutlet\n                            \n                            \n                                showSideMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                performAction\n                            \n                            \n                                    Async\n                                presentToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar, authenticationService: AuthenticationService, router: Router, localStorageService: LocalStorageService, location: Location, databaseSyncService: DatabaseSyncService, toastCtrl: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for cordova platforms\n\n                                                        \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for splash screen\n\n                                                        \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for status bar\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operations\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route navigation\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for localStorage related operations\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route location change\n\n                                                        \n                                                \n                                                \n                                                        databaseSyncService\n                                                  \n                                                        \n                                                                        DatabaseSyncService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for database synchronization\n\n                                                        \n                                                \n                                                \n                                                        toastCtrl\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller for toast management\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeApp\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:94\n                \n            \n\n\n            \n                \n                    Application initialisation\nIf cordova is available then the splash screen is hidden and status bar style is set\nThe back-button subscription is set (if the current route is login/home\nthen it closes the app completely on double tap within 3 seconds)\nIf a modal is open, then the back-button navigation is ignored\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:152\n                \n            \n\n\n            \n                \n                    Angular lifecycle method; gets triggered after view initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            performAction\n                        \n                        \n                    \n                \n            \n            \n                \nperformAction(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains the value of the next application state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentToast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToast()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:171\n                \n            \n\n\n            \n                \n                    Presents a toast that will be automatically dismessed after 3 seconds\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appPages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      title: 'Despre Aplicație',\n      url: '/about'\n    },\n    {\n      title: 'Validează un voluntar',\n      url: '/volunteer/validate'\n    },\n    {\n      title: 'Adaugă voluntar nou',\n      url: '/volunteer/add'\n    },\n    {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    },\n    {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    },\n    {\n      title: 'Delogare',\n      url: '/auth/logout'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n                \n                    \n                        Side menu navigation pages (page name and page url)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authenticationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:78\n                            \n                        \n\n                \n                    \n                        Provider for authentication related operations\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDoubleTap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:60\n                            \n                        \n\n                \n                    \n                        Stores the current state of back-button tapping: tapped once or twice (for exiting app)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routerOutlet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IonRouterOutlet\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(IonRouterOutlet)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n                \n                    \n                        Router outlet reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSideMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n                \n                    \n                        Boolean value that shows/hides the side menu depending on user's state\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, AfterViewInit } from '@angular/core';\n\nimport { IonRouterOutlet, Platform, ToastController } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { AuthenticationService, LocalStorageService, DatabaseSyncService } from './core';\nimport { Router } from '@angular/router';\nimport { Deeplinks } from '@ionic-native/deeplinks';\nimport { ResetPasswordComponent } from './pages/authentication/reset-password/reset-password.component';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent implements AfterViewInit {\n  /**\n   * Router outlet reference\n   */\n  @ViewChild(IonRouterOutlet) routerOutlet: IonRouterOutlet;\n\n  /**\n   * Boolean value that shows/hides the side menu depending on user's state\n   */\n  showSideMenu = true;\n\n  /**\n   * Side menu navigation pages (page name and page url)\n   */\n  public appPages = [\n    {\n      title: 'Despre Aplicație',\n      url: '/about'\n    },\n    {\n      title: 'Validează un voluntar',\n      url: '/volunteer/validate'\n    },\n    {\n      title: 'Adaugă voluntar nou',\n      url: '/volunteer/add'\n    },\n    {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    },\n    {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    },\n    {\n      title: 'Delogare',\n      url: '/auth/logout'\n    }\n  ];\n\n  /**\n   * Stores the current state of back-button tapping: tapped once or twice (for exiting app)\n   */\n  private isDoubleTap = false;\n\n  /**\n   *\n   * @param platform Provider for cordova platforms\n   * @param splashScreen Provider for splash screen\n   * @param statusBar Provider for status bar\n   * @param authenticationService Provider for authentication related operations\n   * @param router Provider for route navigation\n   * @param localStorageService Provider for localStorage related operations\n   * @param location Provider for route location change\n   * @param databaseSyncService Provider for database synchronization\n   * @param toastCtrl Controller for toast management\n   */\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar,\n    public authenticationService: AuthenticationService,\n    private router: Router,\n    private localStorageService: LocalStorageService,\n    private location: Location,\n    private databaseSyncService: DatabaseSyncService,\n    private toastCtrl: ToastController) {\n    this.initializeApp();\n  }\n\n  /**\n   * Application initialisation\n   * If cordova is available then the splash screen is hidden and status bar style is set\n   * The back-button subscription is set (if the current route is login/home\n   * then it closes the app completely on double tap within 3 seconds)\n   * If a modal is open, then the back-button navigation is ignored\n   */\n  initializeApp() {\n    this.platform.ready().then(() => {\n      if (this.platform.is('cordova')) {\n        this.statusBar.backgroundColorByHexString('#264998');\n        this.statusBar.styleDefault();\n\n        document.addEventListener('backbutton', (event) => {\n          const currentPath = this.router.url;\n\n          if (this.localStorageService.getItem('prevent_back')) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            return;\n          }\n\n          if (currentPath.indexOf('login') >= 0 || currentPath.indexOf('home') >= 0) {\n            if (!this.isDoubleTap) {\n              this.isDoubleTap = true;\n              this.presentToast();\n\n              setTimeout(() => {\n                this.isDoubleTap = false;\n               }, 3000);\n            } else {\n              navigator['app'].exitApp();\n            }\n          } else {\n            this.location.back();\n          }\n        }, false);\n\n        if (!this.localStorageService.getItem('firstLaunch')) {\n          this.databaseSyncService.sync().then(() => {\n            this.splashScreen.hide();\n            this.localStorageService.setItem('firstLaunch', false);\n           });\n        } else {\n          this.splashScreen.hide();\n        }\n      }\n    });\n  }\n\n  /**\n   *\n   * @param url Contains the value of the next application state\n   */\n  performAction(url: string) {\n    if (url.includes('tel')) {\n      window.open(url);\n    } else {\n      this.router.navigate([url]);\n    }\n  }\n\n  /**\n   * Angular lifecycle method; gets triggered after view initialisation\n   */\n  ngAfterViewInit() {\n    this.platform.ready().then(() => {\n      if (this.platform.is('cordova')) {\n        Deeplinks.route({\n          '/auth/reset/:token': ResetPasswordComponent\n        }).subscribe((match) => {\n          setTimeout(() => {\n            this.router.navigate(['/auth/reset/', match.$args.token]);\n          }, 1000);\n        }, (nomatch) => {\n          console.warn('Unmatched Route', nomatch);\n        });\n      }\n    });\n  }\n\n  /**\n   * Presents a toast that will be automatically dismessed after 3 seconds\n   */\n  async presentToast() {\n    const toast = await this.toastCtrl.create({\n      message: 'Apăsați din nou pentru a părăsi aplicația.',\n      position: 'bottom',\n      duration: 3000\n    });\n\n    toast.present();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n          \n            RVM\n          \n        \n      \n      \n        \n          \n            \n              \n                \n                  {{p.title}}\n                \n              \n            \n          \n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          RVM                                                                                                            {{p.title}}                                                                            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CoreModule } from './core';\nimport { DatePicker } from '@ionic-native/date-picker/ngx';\nimport { SMS } from '@ionic-native/sms/ngx';\nimport { InAppBrowser } from '@ionic-native/in-app-browser/ngx';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  entryComponents: [],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n    CoreModule\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    DatePicker,\n    SMS,\n    InAppBrowser\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPageOneTitleText\n                            \n                            \n                                getTitle\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPageOneTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetPageOneTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo(destination)\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    destination\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(destination) {\n    return browser.get(destination);\n  }\n\n  getTitle() {\n    return browser.getTitle();\n  }\n\n  getPageOneTitleText() {\n    return element(by.tagName('app-home')).element(by.deepCss('ion-title')).getText();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthenticationGuard } from './core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    loadChildren: './pages/home/home.module#HomePageModule',\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'about',\n    loadChildren: './pages/about/about.module#AboutPageModule',\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'volunteer',\n    loadChildren: './pages/volunteer/volunteer.module#VolunteerPageModule',\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'auth',\n    loadChildren: './pages/authentication/authentication.module#AuthenticationPageModule'\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/authentication/authentication.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Provides a guard for protecting authenticated routes (such as home, validate-volunteer)\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.guard.ts:10\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular value which handles routing operations\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service which handles the authentication operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.guard.ts:26\n                \n            \n\n\n            \n                \n                    Determines if a user can access a route, depending on its state\nIf the route isn't allowed, it automatically redirects to login page\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        a boolean value, current user's status: authenticated or not\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { AuthenticationService } from './authentication.service';\n\n/**\n * Provides a guard for protecting authenticated routes (such as home, validate-volunteer)\n */\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  /**\n   * Class constructor\n   * @param router Angular value which handles routing operations\n   * @param authenticationService The service which handles the authentication operations\n   */\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  /**\n   * Determines if a user can access a route, depending on its state\n   * If the route isn't allowed, it automatically redirects to login page\n   * @returns a boolean value, current user's status: authenticated or not\n   */\n  canActivate(): boolean {\n    if (this.authenticationService.isAuthenticated()) {\n      return true;\n    }\n\n    this.router.navigate(['/auth/login'], {\n      replaceUrl: true\n    });\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthenticationPage.html":{"url":"components/AuthenticationPage.html","title":"component - AuthenticationPage","body":"\n                   \n\n\n\n\n\n  Components\n  AuthenticationPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/authentication.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-authentication\n            \n\n            \n                styleUrls\n                ./authentication.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./authentication.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-authentication',\n  templateUrl: './authentication.page.html',\n  styleUrls: ['./authentication.page.scss'],\n})\n\n/**\n * The main page for all authentication related pages (login/logout, recover/reset password)\n */\nexport class AuthenticationPage { }\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./authentication.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthenticationPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationPageModule.html":{"url":"modules/AuthenticationPageModule.html","title":"module - AuthenticationPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthenticationPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationPageModule\n\n\n\ncluster_AuthenticationPageModule_declarations\n\n\n\n\nAuthenticationPage\n\nAuthenticationPage\n\n\n\nAuthenticationPageModule\n\nAuthenticationPageModule\n\nAuthenticationPageModule -->\n\nAuthenticationPage->AuthenticationPageModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthenticationPageModule -->\n\nLoginComponent->AuthenticationPageModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAuthenticationPageModule -->\n\nLogoutComponent->AuthenticationPageModule\n\n\n\n\n\nRecoverPasswordComponent\n\nRecoverPasswordComponent\n\nAuthenticationPageModule -->\n\nRecoverPasswordComponent->AuthenticationPageModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationPageModule -->\n\nResetPasswordComponent->AuthenticationPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/authentication/authentication.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthenticationPage\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            LogoutComponent\n                        \n                        \n                            RecoverPasswordComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthenticationPage } from './authentication.page';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { RecoverPasswordComponent } from './recover-password/recover-password.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { UnauthenticatedGuard } from 'src/app/core/authentication/unauthenticated.guard';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthenticationPage,\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n    canActivate: [UnauthenticatedGuard]\n  },\n  {\n    path: 'logout',\n    component: LogoutComponent\n  },\n  {\n    path: 'reset/:token',\n    component: ResetPasswordComponent,\n  },\n  {\n    path: 'recover',\n    component: RecoverPasswordComponent,\n    canActivate: [UnauthenticatedGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [\n    AuthenticationPage,\n    ResetPasswordComponent,\n    RecoverPasswordComponent,\n    LoginComponent,\n    LogoutComponent\n  ]\n})\nexport class AuthenticationPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides the basic authentication operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _credentials\n                            \n                            \n                                    Public\n                                credentials$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuthenticated\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Public\n                                recoverPassword\n                            \n                            \n                                    Public\n                                resetPassword\n                            \n                            \n                                    Private\n                                setCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    credentials\n                                \n                                \n                                    accessToken\n                                \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.service.ts:26\n                            \n                        \n\n                \n                    \n                            Class constructor, initializes current credentials value if some credentials are found in local storage\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Class reference injection, handles http requests sent from this service\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service reference injection, handles operations on local storage\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:81\n                \n            \n\n\n            \n                \n                    Determines if the current user is authenticated\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        A boolean value with the authenticated status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(payload: Authentication.LoginPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:48\n                \n            \n\n\n            \n                \n                    Sends a login request to the backend server\nIf it's successful stores the credentials and returns the response body\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Authentication.LoginPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Login credentials\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable that contains the authentication credentials\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:66\n                \n            \n\n\n            \n                \n                    Sends a logout rewuest to the backend server\nIf it's successful clears the credentials information from local storage\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable with a boolean value for success (true)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            recoverPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    recoverPassword(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:132\n                \n            \n\n\n            \n                \n                    Sends a request to the backend server for password recovery\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's email, it's the one that will receive the password reset link\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable that contains a truth value: successful or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(password: string, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:142\n                \n            \n\n\n            \n                \n                    Sends a request to the backend server for password reset\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's new password\n\n                                    \n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The token from the email send by password recovery to prove that it's the same user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable that contains a truth value: successful or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setCredentials\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCredentials(credentials?: Authentication.Credentials)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:106\n                \n            \n\n\n            \n                \n                    Saves current user's credentials in local storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                Authentication.Credentials\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An object that contains the authentication token and data from server if user performed a login,\nor nothing if user just performed a log out\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _credentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Authentication.Credentials | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:21\n                            \n                        \n\n                \n                    \n                        Value that stores user's credentials after authentication\nIt's null if the user never authenticates\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            credentials$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:26\n                            \n                        \n\n                \n                    \n                        Value which emits events when credentials' values change (on login/logout)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        credentials\n                    \n                \n\n                \n                    \n                        getcredentials()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:89\n                                \n                            \n                    \n                        \n                                Getter method for the credentials object\n\n\n                                \n                                \n                                \n                                    Returns :         Authentication.Credentials | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:97\n                                \n                            \n                    \n                        \n                                Getter method for the authentication token\n\n\n                                \n                                \n                                \n                                    Returns :     string | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:123\n                                \n                            \n                    \n                        \n                                Getter method for current user's profile\n\n\n                                \n                                \n                                \n                                    Returns :         Authentication.User | null\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LocalStorageService } from '../local-storage.service';\n\n/**\n * Stores the value of credentials' key\n */\nconst credentialsKey = 'credentials';\n\n/**\n * Provides the basic authentication operations.\n */\n@Injectable()\nexport class AuthenticationService {\n  /**\n   * Value that stores user's credentials after authentication\n   * It's null if the user never authenticates\n   */\n  private _credentials: Authentication.Credentials | null;\n\n  /**\n   * Value which emits events when credentials' values change (on login/logout)\n   */\n  public credentials$ = new EventEmitter();\n\n  /**\n   * Class constructor, initializes current credentials value if some credentials are found in local storage\n   * @param httpClient Class reference injection, handles http requests sent from this service\n   * @param localStorageService Service reference injection, handles operations on local storage\n   */\n  constructor(\n    private httpClient: HttpClient,\n    private localStorageService: LocalStorageService) {\n      const savedCredentials = this.localStorageService.getItem(credentialsKey);\n      if (savedCredentials) {\n        this._credentials = JSON.parse(savedCredentials);\n      }\n  }\n\n  /**\n   * Sends a login request to the backend server\n   * If it's successful stores the credentials and returns the response body\n   * @param payload Login credentials\n   * @returns An observable that contains the authentication credentials\n   */\n  login(\n    payload: Authentication.LoginPayload\n  ): Observable {\n    const loginInfo: any = payload;\n    loginInfo.device = 'mobile';\n    return this.httpClient.post('/login', loginInfo).pipe(\n      map((body: any) => {\n        this.setCredentials(body);\n        return body;\n      })\n    );\n  }\n\n  /**\n   * Sends a logout rewuest to the backend server\n   * If it's successful clears the credentials information from local storage\n   * @returns An observable with a boolean value for success (true)\n   */\n  logout(): Observable {\n    return this.httpClient\n      .get('/logout')\n      .pipe(\n        map(() => {\n          this.setCredentials();\n          return true;\n        })\n      );\n  }\n\n  /**\n   * Determines if the current user is authenticated\n   * @returns A boolean value with the authenticated status\n   */\n  isAuthenticated(): boolean {\n    return !!this.credentials;\n  }\n\n  /**\n   * Getter method for the credentials object\n   * @returns The current credentials\n   */\n  get credentials(): Authentication.Credentials | null {\n    return this._credentials;\n  }\n\n  /**\n   * Getter method for the authentication token\n   * @returns The current token\n   */\n  get accessToken(): string | null {\n    return this.credentials ? this.credentials.token : null;\n  }\n\n  /**\n   * Saves current user's credentials in local storage\n   * @param credentials An object that contains the authentication token and data from server if user performed a login,\n   * or nothing if user just performed a log out\n   */\n  private setCredentials(credentials?: Authentication.Credentials) {\n    this._credentials = credentials || null;\n    if (credentials) {\n      this.localStorageService.setItem(\n        credentialsKey,\n        JSON.stringify(credentials)\n      );\n      this.credentials$.emit(this._credentials);\n    } else {\n      this.localStorageService.clearItem(credentialsKey);\n    }\n  }\n\n   /**\n    * Getter method for current user's profile\n    * @returns The current user\n    */\n  get user(): Authentication.User | null {\n    return this.credentials ? this.credentials.user : null;\n  }\n\n  /**\n   * Sends a request to the backend server for password recovery\n   * @param email User's email, it's the one that will receive the password reset link\n   * @returns an observable that contains a truth value: successful or not\n   */\n  public recoverPassword(email: string) {\n    return this.httpClient.post('/recoverpassword', {email, device: 'mobile'});\n  }\n\n   /**\n    * Sends a request to the backend server for password reset\n    * @param password User's new password\n    * @param token The token from the email send by password recovery to prove that it's the same user\n    * @returns an observable that contains a truth value: successful or not\n    */\n  public resetPassword(password: string, token: string) {\n    return this.httpClient.post('/resetpassword', {password, password_confirmation: password, token, device: 'mobile'});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nCustomSelectorComponent\n\nCustomSelectorComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nCustomSelectorComponent->CoreModule\n\n\n\n\n\nAllocationService\n\nAllocationService\n\nCoreModule -->\n\nAllocationService->CoreModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nCoreModule -->\n\nAuthenticationService->CoreModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nCoreModule -->\n\nCourseService->CoreModule\n\n\n\n\n\nErrorHandlerInterceptor\n\nErrorHandlerInterceptor\n\nCoreModule -->\n\nErrorHandlerInterceptor->CoreModule\n\n\n\n\n\nErrorMessageService\n\nErrorMessageService\n\nCoreModule -->\n\nErrorMessageService->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\nOrganisationService\n\nOrganisationService\n\nCoreModule -->\n\nOrganisationService->CoreModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\n\n\nStaticsService\n\nStaticsService\n\nCoreModule -->\n\nStaticsService->CoreModule\n\n\n\n\n\nVolunteerService\n\nVolunteerService\n\nCoreModule -->\n\nVolunteerService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CustomSelectorComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            CustomSelectorComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AllocationService\n                        \n                        \n                            AuthenticationService\n                        \n                        \n                            CourseService\n                        \n                        \n                            ErrorHandlerInterceptor\n                        \n                        \n                            ErrorMessageService\n                        \n                        \n                            LocalStorageService\n                        \n                        \n                            OrganisationService\n                        \n                        \n                            RequestInterceptor\n                        \n                        \n                            RequestInterceptor\n                        \n                        \n                            StaticsService\n                        \n                        \n                            VolunteerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  HTTP_INTERCEPTORS,\n  HttpClientModule\n} from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\nimport {\n  AuthenticationGuard,\n  AuthenticationService,\n} from './authentication';\nimport {\n  RequestInterceptor,\n  ErrorHandlerInterceptor\n} from './http';\nimport { LocalStorageService } from './local-storage.service';\nimport { RouteReusableStrategy } from './route-reusable-strategy';\nimport {\n  ErrorMessageService,\n  CourseService,\n  VolunteerService,\n  OrganisationService,\n  DatabaseSyncService,\n  AllocationService\n} from './service';\nimport { StaticsService } from './service/statics.service';\nimport { UnauthenticatedGuard } from './authentication/unauthenticated.guard';\nimport { CustomSelectorComponent } from './components/custom-selector/custom-selector.component';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule,\n    IonicModule,\n    FormsModule\n  ],\n  declarations: [\n    CustomSelectorComponent\n  ],\n  providers: [\n    LocalStorageService,\n    AuthenticationService,\n    AuthenticationGuard,\n    UnauthenticatedGuard,\n    RequestInterceptor,\n    ErrorHandlerInterceptor,\n    VolunteerService,\n    ErrorMessageService,\n    StaticsService,\n    CourseService,\n    OrganisationService,\n    DatabaseSyncService,\n    AllocationService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: RequestInterceptor,\n      multi: true\n    },\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy\n    }\n  ],\n  entryComponents: [\n    CustomSelectorComponent\n  ]\n})\n\n/**\n * Module for all core related services, interceptors and models\n */\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/course.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for course object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                _rev\n                            \n                            \n                                acredited\n                            \n                            \n                                added_by\n                            \n                            \n                                course_name\n                            \n                            \n                                created_at\n                            \n                            \n                                obtained\n                            \n                            \n                                type\n                            \n                            \n                                updated_at\n                            \n                            \n                                volunteer_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:8\n                            \n                        \n\n                \n                    \n                        Course id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _rev\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:13\n                            \n                        \n\n                \n                    \n                        CouchDB parameter; it is automatically set\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acredited\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:38\n                            \n                        \n\n                \n                    \n                        The acreditor for the course from the course_acreditors database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            added_by\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:68\n                            \n                        \n\n                \n                    \n                        The id of the user that added this course to a volunteer\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:23\n                            \n                        \n\n                \n                    \n                        Course name entry from course_name database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:58\n                            \n                        \n\n                \n                    \n                        Entry creation date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            obtained\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:53\n                            \n                        \n\n                \n                    \n                        The date in which the course was obtained\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:73\n                            \n                        \n\n                \n                    \n                        Database type, in this case it's 'courses'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:63\n                            \n                        \n\n                \n                    \n                        Date of the last update on the entry\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volunteer_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:18\n                            \n                        \n\n                \n                    \n                        The id of the volunteer to which the course belongs to\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Course {\n    /**\n     * Course id\n     */\n    _id: string;\n\n    /**\n     * CouchDB parameter; it is automatically set\n     */\n    _rev: string;\n\n    /**\n     * The id of the volunteer to which the course belongs to\n     */\n    volunteer_id: string;\n\n    /**\n     * Course name entry from course_name database\n     */\n    course_name: {\n        /**\n         * Course name id\n         */\n        _id: string;\n\n        /**\n         * Course name name\n         */\n        name: string;\n    };\n\n    /**\n     * The acreditor for the course from the course_acreditors database\n     */\n    acredited: {\n        /**\n         * Acreditor id\n         */\n        _id: string;\n\n        /**\n         * Acreditor name\n         */\n        name: string;\n    };\n\n    /**\n     * The date in which the course was obtained\n     */\n    obtained: Date;\n\n    /**\n     * Entry creation date\n     */\n    created_at: any;\n\n    /**\n     * Date of the last update on the entry\n     */\n    updated_at: any;\n\n    /**\n     * The id of the user that added this course to a volunteer\n     */\n    added_by: string;\n\n    /**\n     * Database type, in this case it's 'courses'\n     */\n    type: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseService.html":{"url":"injectables/CourseService.html","title":"injectable - CourseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/course.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for course related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCourse\n                            \n                            \n                                deleteCourseById\n                            \n                            \n                                getCourseById\n                            \n                            \n                                getCourseByName\n                            \n                            \n                                getCourseByVolunteerId\n                            \n                            \n                                getCourseNames\n                            \n                            \n                                getCourses\n                            \n                            \n                                updateCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/course.service.ts:34\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Courses Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createCourse\n                        \n                        \n                    \n                \n            \n            \n                \ncreateCourse(courseName: any, volunteer_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:116\n                \n            \n\n\n            \n                \n                    Creates a course entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    courseName\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Entry from statics courses database\n\n                                    \n                                \n                                \n                                    volunteer_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the volunteer that is acredited for this course\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteCourseById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteCourseById(courseId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:146\n                \n            \n\n\n            \n                \n                    Deletes an entry by its id from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The course id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourseById\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourseById(courseId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:88\n                \n            \n\n\n            \n                \n                    Finds a course by its id in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course's id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the course with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourseByName\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourseByName(courseNameId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:73\n                \n            \n\n\n            \n                \n                    Finds a course by its name in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    courseNameId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course name id from statics database\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all courses with that name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourseByVolunteerId\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourseByVolunteerId(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:102\n                \n            \n\n\n            \n                \n                    Retrives the list of courses that belong to a volunteer\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A volunteer's id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable containing the list of courses that belong to the given volunteer\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourseNames\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourseNames()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:155\n                \n            \n\n\n            \n                \n                    Returns all course names for selection\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourses\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourses()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:58\n                \n            \n\n\n            \n                \n                    Getter method for all courses from the local database\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all courses\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateCourse\n                        \n                        \n                    \n                \n            \n            \n                \nupdateCourse(course: Course)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:132\n                \n            \n\n\n            \n                \n                    Updates a course entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new course entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'courses'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/course.service.ts:34\n                            \n                        \n\n                \n                    \n                        Courses' table type (if the course is not a static value)\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { from, Observable } from 'rxjs';\nimport { Course } from '../model/course.model';\nimport { AuthenticationService } from '../authentication';\nimport * as moment from 'moment';\n\n/**\n * Reference for local PouchDB Courses Database\n */\nconst localDB = new PouchDB('courses');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Courses Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/courses');\n\n/**\n * Provider for course related operations\n */\n@Injectable()\nexport class CourseService {\n\n  /**\n   * Courses' table type (if the course is not a static value)\n   */\n  private type = 'courses';\n\n  /**\n   * Class constructor, sets the synchronization options for CouchDB and PouchDB Courses Database\n   * @param authService Provider for authentication related operations\n   */\n  constructor(private authService: AuthenticationService) {\n    const options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);\n\n    localDB.createIndex({\n      index: {fields: ['course_name.id', 'volunteer_id', 'acredited.id']}\n    });\n   }\n\n  /**\n   * Getter method for all courses from the local database\n   * @returns An Observable with all courses\n   */\n  getCourses(): Observable {\n    return from(localDB.find({\n      selector: {\n          type: this.type\n      },\n      include_docs: true,\n      attachments: true\n    }));\n  }\n\n  /**\n   * Finds a course by its name in the local database\n   * @param courseNameId Course name id from statics database\n   * @returns An Observable with all courses with that name\n   */\n  getCourseByName(courseNameId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        'course_name.id': {$eq: courseNameId},\n        type: this.type\n      },\n      sort: ['course_name.id'],\n    }));\n  }\n\n  /**\n   * Finds a course by its id in the local database\n   * @param courseId Course's id\n   * @returns An Observable containing the course with that id\n   */\n  getCourseById(courseId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        _id: {$eq: courseId},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   * Retrives the list of courses that belong to a volunteer\n   * @param volunteerId A volunteer's id\n   * @returns An observable containing the list of courses that belong to the given volunteer\n   */\n  getCourseByVolunteerId(volunteerId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        volunteer_id: {$eq: volunteerId},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   * Creates a course entry in the local database\n   * @param courseName Entry from statics courses database\n   * @param volunteer_id The id of the volunteer that is acredited for this course\n   */\n  createCourse(courseName: any, volunteer_id: string): Observable {\n    const course = new Course();\n    course.volunteer_id = volunteer_id;\n    course.course_name = courseName;\n    course.created_at = moment().format('Y-MM-DD H:mm:ss');\n    course.updated_at = moment().format('Y-MM-DD H:mm:ss');\n    course.added_by = this.authService.user._id;\n    course.type = this.type;\n\n    return from(localDB.post(course));\n  }\n\n  /**\n   * Updates a course entry in the local database\n   * @param course The new course entry\n   */\n  updateCourse(course: Course): void {\n    localDB.get(course._id).then((doc: Course) => {\n      doc.course_name = course.course_name ? course.course_name : doc.course_name;\n      doc.acredited = course.acredited ? course.acredited : doc.acredited;\n      doc.obtained = course.obtained ? course.obtained : doc.obtained;\n      doc.updated_at = new Date();\n      localDB.put(doc);\n    });\n  }\n\n  /**\n   * Deletes an entry by its id from the local database\n   * @param courseId The course id\n   */\n  deleteCourseById(courseId: string): void {\n    localDB.get(courseId).then(doc => {\n      return localDB.remove(doc);\n    });\n  }\n\n  /**\n   * Returns all course names for selection\n   */\n  getCourseNames() {\n    return from(localDB.find({\n      selector: {\n          type: 'course_names'\n      },\n      include_docs: true,\n      attachments: true\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Credentials.html":{"url":"interfaces/Credentials.html","title":"interface - Credentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Credentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for credentials object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        token\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Authentication token\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User object\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  /**\n   * Interface for login payload\n   */\n  export interface LoginPayload {\n    /**\n     * Login username/email\n     */\n    username: string;\n\n    /**\n     * Login password\n     */\n    password: string;\n  }\n\n  /**\n   * Interface for user object\n   */\n  export interface User {\n    /**\n     * User id\n     */\n    _id: string;\n\n    /**\n     * User name\n     */\n    name: string;\n\n    /**\n     * User phone number\n     */\n    phone?: any;\n\n    /**\n     * User email address\n     */\n    email: string;\n\n    /**\n     * User creation date\n     */\n    createdAt: Date;\n\n    /**\n     * Date of the last update to the user's progile\n     */\n    updatedAt: Date;\n  }\n\n  /**\n   * Interface for credentials object\n   */\n  export interface Credentials {\n    /**\n     * User object\n     */\n    user: User;\n\n    /**\n     * Authentication token\n     */\n    token: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CustomSelectorComponent.html":{"url":"components/CustomSelectorComponent.html","title":"component - CustomSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CustomSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/components/custom-selector/custom-selector.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-custom-selector\n            \n\n            \n                styleUrls\n                ./custom-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./custom-selector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSelectedEntry\n                            \n                            \n                                dismiss\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/components/custom-selector/custom-selector.component.ts:22\n                            \n                        \n\n                \n                    \n                            Page constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Modal Controller reference for modal view related operations\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                LocalStorage service reference for store/clear on local storage\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:16\n                            \n                        \n                \n                    \n                        Data sent to the modal to represent the selections\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeSelectedEntry\n                        \n                        \n                    \n                \n            \n            \n                \nchangeSelectedEntry(entry: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:37\n                \n            \n\n\n            \n                \n                    Triggered when a user selects an entry; it closes the modal and returns to the calling page\nthe selected value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User selected entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dismiss\n                        \n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:68\n                \n            \n\n\n            \n                \n                    Closes the modal view\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:60\n                \n            \n\n\n            \n                \n                    Unsubscribes from the back-button listener and clears the local storage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:45\n                \n            \n\n\n            \n                \n                    Page initialisation, sets the subscription for the back-button event and\nsets a value in the local storage in order to know when the pop-up is open\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:22\n                            \n                        \n\n                \n                    \n                        Stores a subscription to the back button event; it will be subscribed on page initialisation\nand unsubscribed on page destroy\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { LocalStorageService } from '../../local-storage.service';\nimport { fromEvent } from 'rxjs';\n\n@Component({\n  selector: 'app-custom-selector',\n  templateUrl: './custom-selector.component.html',\n  styleUrls: ['./custom-selector.component.scss'],\n})\n\nexport class CustomSelectorComponent implements OnInit, OnDestroy {\n  /**\n   * Data sent to the modal to represent the selections\n   */\n  @Input() items: any[];\n\n  /**\n   * Stores a subscription to the back button event; it will be subscribed on page initialisation\n   * and unsubscribed on page destroy\n   */\n  subscription: any;\n\n  /**\n   * Page constructor\n   * @param modalCtrl Modal Controller reference for modal view related operations\n   * @param localStorageService LocalStorage service reference for store/clear on local storage\n   */\n  constructor(private modalCtrl: ModalController,\n              private localStorageService: LocalStorageService) { }\n\n  /**\n   * Triggered when a user selects an entry; it closes the modal and returns to the calling page\n   * the selected value\n   * @param entry User selected entry\n   */\n  changeSelectedEntry(entry: any) {\n    this.modalCtrl.dismiss(entry);\n  }\n\n  /**\n   * Page initialisation, sets the subscription for the back-button event and\n   * sets a value in the local storage in order to know when the pop-up is open\n   */\n  ngOnInit() {\n    this.localStorageService.setItem('prevent_back', true);\n\n    const event = fromEvent(document, 'backbutton');\n    this.subscription = event.subscribe(async () => {\n        const modal = await this.modalCtrl.getTop();\n        if (modal) {\n            modal.dismiss();\n        }\n    });\n  }\n\n  /**\n   * Unsubscribes from the back-button listener and clears the local storage\n   */\n  ngOnDestroy() {\n    this.localStorageService.clearItem('prevent_back');\n    this.subscription.unsubscribe();\n  }\n\n  /**\n   * Closes the modal view\n   */\n  dismiss() {\n    this.modalCtrl.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n        \n          {{ item.name }}\n        \n      \n    \n    \n      Cancel\n    \n\n    \n\n    \n                \n                    ./custom-selector.component.scss\n                \n                .close-button {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    padding: 20px 15px;\n    background: #fff;\n    width: 100%;\n    box-shadow: 0px 0px 10px rgba(0,0,0,0.05);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ item.name }}                            Cancel    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CustomSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseSyncService.html":{"url":"classes/DatabaseSyncService.html","title":"class - DatabaseSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/database-sync.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for database synchronization (local and remote)\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                localAllocationsDB\n                            \n                            \n                                localCoursesDB\n                            \n                            \n                                localOrganisationsDB\n                            \n                            \n                                localStaticsDB\n                            \n                            \n                                localVolunteersDB\n                            \n                            \n                                remoteAllocationsDB\n                            \n                            \n                                remoteCoursesDB\n                            \n                            \n                                remoteOrganisationsDB\n                            \n                            \n                                remoteStaticsDB\n                            \n                            \n                                remoteVolunteersDB\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localAllocationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:38\n                            \n                        \n\n                \n                    \n                        Reference for local PouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localCoursesDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:20\n                            \n                        \n\n                \n                    \n                        Reference for local PouchDB Courses Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localOrganisationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:29\n                            \n                        \n\n                \n                    \n                        Reference for local PouchDB Organisations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localStaticsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:47\n                            \n                        \n\n                \n                    \n                        Reference for local PouchDB Statics Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localVolunteersDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:11\n                            \n                        \n\n                \n                    \n                        Reference for local PouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteAllocationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:42\n                            \n                        \n\n                \n                    \n                        Reference for server CouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteCoursesDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:24\n                            \n                        \n\n                \n                    \n                        Reference for server CouchDB Courses Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteOrganisationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:33\n                            \n                        \n\n                \n                    \n                        Reference for server CouchDB Organisations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteStaticsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:51\n                            \n                        \n\n                \n                    \n                        Reference for server CouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteVolunteersDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:15\n                            \n                        \n\n                \n                    \n                        Reference for server CouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sync\n                        \n                        \n                    \n                \n            \n            \n                \nsync()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/database-sync.service.ts:77\n                \n            \n\n\n            \n                \n                    Starts database synchronization\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise when all database synchronisations are finished and the view is indexed\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as PouchDB from 'pouchdb/dist/pouchdb';\nimport { environment } from '../../../environments/environment';\n\n/**\n * Service for database synchronization (local and remote)\n */\nexport class DatabaseSyncService {\n  /**\n   * Reference for local PouchDB Volunteers Database\n   */\n  localVolunteersDB: any;\n  /**\n   * Reference for server CouchDB Volunteers Database\n   */\n  remoteVolunteersDB: any;\n\n  /**\n   * Reference for local PouchDB Courses Database\n   */\n  localCoursesDB: any;\n  /**\n   * Reference for server CouchDB Courses Database\n   */\n  remoteCoursesDB: any;\n\n  /**\n   * Reference for local PouchDB Organisations Database\n   */\n  localOrganisationsDB: any;\n  /**\n   * Reference for server CouchDB Organisations Database\n   */\n  remoteOrganisationsDB: any;\n\n  /**\n   * Reference for local PouchDB Allocations Database\n   */\n  localAllocationsDB: any;\n  /**\n   * Reference for server CouchDB Allocations Database\n   */\n  remoteAllocationsDB: any;\n\n  /**\n   * Reference for local PouchDB Statics Database\n   */\n  localStaticsDB: any;\n  /**\n   * Reference for server CouchDB Allocations Database\n   */\n  remoteStaticsDB: any;\n\n    /**\n     * @ignore\n     */\n    constructor() {\n      this.localVolunteersDB = new PouchDB('volunteers');\n      this.remoteVolunteersDB = new PouchDB(environment.databaseURL + '/volunteers');\n\n      this.localCoursesDB = new PouchDB('courses');\n      this.remoteCoursesDB = new PouchDB(environment.databaseURL + '/courses');\n\n      this.localOrganisationsDB = new PouchDB('organisations');\n      this.remoteOrganisationsDB = new PouchDB(environment.databaseURL + '/organisations');\n\n      this.localAllocationsDB = new PouchDB('allocations');\n      this.remoteAllocationsDB = new PouchDB(environment.databaseURL + '/allocations');\n\n      this.localStaticsDB = new PouchDB('statics');\n      this.remoteStaticsDB = new PouchDB(environment.databaseURL + '/statics');\n     }\n\n    /**\n     * Starts database synchronization\n     * @returns A promise when all database synchronisations are finished and the view is indexed\n     */\n    sync(): Promise {\n      return Promise.all(\n          [\n            this.localStaticsDB.replicate.from(this.remoteStaticsDB),\n            this.localVolunteersDB.replicate.from(this.remoteVolunteersDB),\n            this.localCoursesDB.replicate.from(this.remoteCoursesDB),\n            this.localOrganisationsDB.replicate.from(this.remoteOrganisationsDB),\n            this.localAllocationsDB.replicate.from(this.remoteAllocationsDB)\n          ]).then(() => {\n            return this.localStaticsDB.query('cities/slug', { limit: 0 });\n           }).catch(error => console.log(`Error in promises ${error}`));\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailValidation.html":{"url":"classes/EmailValidation.html","title":"class - EmailValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/email-validation.ts\n        \n\n            \n                Description\n            \n            \n                Validtor class for email address' fields\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                emailValidation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            emailValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emailValidation(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/email-validation.ts:14\n                \n            \n\n\n            \n                \n                    Email validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the value from the input\nthat is being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the string respects the pattern, an error message otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\n\n/**\n * Validtor class for email address' fields\n */\nexport class EmailValidation {\n\n    /**\n     * Email validator\n     * @param abstractControl An abstract control reference, to automatically take the value from the input\n     * that is being validated\n     * @returns null if the string respects the pattern, an error message otherwise\n     */\n    static emailValidation(abstractControl: AbstractControl): any {\n        const email = abstractControl.value;\n        const reg = new RegExp('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$');\n\n        if (reg.test(email)) {\n            return null;\n        }\n\n        return { 'email': 'Adresa de email introdusă nu este validă (ex: email@email.com).' };\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorHandlerInterceptor.html":{"url":"interceptors/ErrorHandlerInterceptor.html","title":"interceptor - ErrorHandlerInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorHandlerInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/error-handler.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Adds a default error handler to all requests.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, localStorageService: LocalStorageService, errorMessageService: ErrorMessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/error-handler.interceptor.ts:25\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular value which handles routing operations\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected service referes the LocalStorageService for handling operations related to storage\n\n                                                        \n                                                \n                                                \n                                                        errorMessageService\n                                                  \n                                                        \n                                                                        ErrorMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected service referes the ErrorMessageService for handling operations related to error messagging\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            errorHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    errorHandler(response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/error-handler.interceptor.ts:59\n                \n            \n\n\n            \n                \n                    Handles the request errors depending on its code\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request response\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable with the http event\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/error-handler.interceptor.ts:45\n                \n            \n\n\n            \n                \n                    Intercepts all requests that are sent and adds an error handling function to them\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current request that is being sent\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Handles the next state of the request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable with the new request, with the additional information\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from '../local-storage.service';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ErrorMessageService } from '../service/error-message.service';\nimport { environment } from '../../../environments/environment';\n\n/**\n * Key that identifies the credentials\n */\nconst credentialsKey = 'credentials';\n\n/**\n * Adds a default error handler to all requests.\n */\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n\n  /**\n   * Class constructor\n   * @param router Angular value which handles routing operations\n   * @param localStorageService Injected service referes the LocalStorageService for handling operations related to storage\n   * @param errorMessageService Injected service referes the ErrorMessageService for handling operations related to error messagging\n   */\n  constructor(\n    private router: Router,\n    private localStorageService: LocalStorageService,\n    private errorMessageService: ErrorMessageService\n  ) {}\n\n   /**\n    * Intercepts all requests that are sent and adds an error handling function to them\n    * @param request The current request that is being sent\n    * @param next Handles the next state of the request\n    * @returns An observable with the new request, with the additional information\n    */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return next\n      .handle(request)\n      .pipe(catchError(error => this.errorHandler(error)));\n  }\n\n  /**\n   * Handles the request errors depending on its code\n   * @param response Request response\n   * @returns An observable with the http event\n   */\n  private errorHandler(\n    response: HttpResponse\n  ): Observable> {\n    if (response.status === 401) {\n      this.localStorageService.clearItem(credentialsKey);\n      this.router.navigate(['/auth/login'], {\n        replaceUrl: true\n      });\n    } else if (response.status === 400) {\n      const errorResponse: any = response;\n      if (errorResponse.error) {\n        if (errorResponse.error.validation) {\n          errorResponse.error.validation.keys.forEach((key: string) => {\n            this.errorMessageService.set(\n              errorResponse.error.validation.errors[key],\n              key,\n              response.url\n            );\n          });\n        } else {\n          this.errorMessageService.set(\n            errorResponse.error.error,\n            '_GLOBAL_',\n            response.url\n          );\n        }\n      }\n    }\n\n    if (!environment.production) {\n      console.error('Request error', response);\n    }\n    throw response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorMessageObject.html":{"url":"interfaces/ErrorMessageObject.html","title":"interface - ErrorMessageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorMessageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/error.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for error message\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        id\n                                \n                                \n                                        serviceUrl\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error message\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error message id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceUrl\n                                    \n                                \n                                \n                                    \n                                        serviceUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error url\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        declare namespace ErrorModel {\n\n  /**\n   * Interface for error object\n   */\n  export interface RootObject {\n    /**\n     * Error status code\n     */\n    statusCode: number;\n\n    /**\n     * Error\n     */\n    error: string;\n\n    /**\n     * Error message\n     */\n    message: string;\n\n    /**\n     * Error attributes\n     */\n    attributes?: any;\n  }\n\n  /**\n   * Interface for error message\n   */\n  export interface ErrorMessageObject {\n    /**\n     * Error message id\n     */\n    id: number;\n\n    /**\n     * Error message\n     */\n    error: string;\n\n    /**\n     * Error type\n     */\n    type: string;\n\n    /**\n     * Error url\n     */\n    serviceUrl: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorMessageService.html":{"url":"injectables/ErrorMessageService.html","title":"injectable - ErrorMessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorMessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/error-message.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for error messages\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _errors\n                            \n                            \n                                    Public\n                                errors$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errors\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/error-message.service.ts:51\n                \n            \n\n\n            \n                \n                    Clears the error messages and emits an event\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            set\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    set(error: string, type: string, serviceUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/error-message.service.ts:37\n                \n            \n\n\n            \n                \n                    Sets the error messages and emits an event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error message\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error type\n\n                                    \n                                \n                                \n                                    serviceUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Service Url that generated the error\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorModel.ErrorMessageObject[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/error-message.service.ts:11\n                            \n                        \n\n                \n                    \n                        Value that stores the error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errors$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/error-message.service.ts:16\n                            \n                        \n\n                \n                    \n                        Value that emitts events when error messages are changed\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errors\n                    \n                \n\n                \n                    \n                        geterrors()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/service/error-message.service.ts:27\n                                \n                            \n                    \n                        \n                                Getter for current error messages\n\n\n                                \n                                \n                                \n                                    Returns :         ErrorModel.ErrorMessageObject[]\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\n\n/**\n * Provider for error messages\n */\n@Injectable()\nexport class ErrorMessageService {\n  /**\n   * Value that stores the error messages\n   */\n  private _errors: ErrorModel.ErrorMessageObject[] = [];\n\n  /**\n   * Value that emitts events when error messages are changed\n   */\n  public errors$ = new EventEmitter();\n\n  /**\n   * @ignore\n   */\n  constructor() {}\n\n  /**\n   * Getter for current error messages\n   * @returns current error messages\n   */\n  get errors(): ErrorModel.ErrorMessageObject[] {\n    return this._errors;\n  }\n\n  /**\n   * Sets the error messages and emits an event\n   * @param error Error message\n   * @param type Error type\n   * @param serviceUrl Service Url that generated the error\n   */\n  public set(error: string, type: string, serviceUrl: string) {\n    this._errors.push({\n      id: Date.now(),\n      error: error,\n      type: type,\n      serviceUrl: serviceUrl\n    });\n    console.log(this._errors);\n    this.errors$.emit(this._errors);\n  }\n\n  /**\n   * Clears the error messages and emits an event\n   */\n  public clear() {\n    this._errors = [];\n    this.errors$.emit(this._errors);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                performAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.page.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            performAction\n                        \n                        \n                    \n                \n            \n            \n                \nperformAction(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/home.page.ts:45\n                \n            \n\n\n            \n                \n                    Performes the action selected by the user from the side-menu list;\nIt can either mean navigation to a new page or opening the phone's call screen\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String containing the url for the route that will be displayed on user click\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      title: 'Validează voluntar',\n      url: '/volunteer/validate'\n    }, {\n      title: 'Adaugă voluntar',\n      url: '/volunteer/add'\n    }, {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    }, {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/home/home.page.ts:18\n                            \n                        \n\n                \n                    \n                        Actions that can be performed from the side-menu\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\n\n/**\n * The main menu page of the app; first page for the authenticated user\n */\nexport class HomePage {\n\n  /**\n   * Actions that can be performed from the side-menu\n   */\n  actions = [\n    {\n      title: 'Validează voluntar',\n      url: '/volunteer/validate'\n    }, {\n      title: 'Adaugă voluntar',\n      url: '/volunteer/add'\n    }, {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    }, {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    }\n  ];\n\n  /**\n   *\n   * @param router Provider for route navigation\n   */\n  constructor(private router: Router) { }\n\n  /**\n   * Performes the action selected by the user from the side-menu list;\n   * It can either mean navigation to a new page or opening the phone's call screen\n   * @param url String containing the url for the route that will be displayed on user click\n   */\n  performAction(url: string) {\n    if (url.includes('tel')) {\n      window.open(url);\n    } else {\n      this.router.navigate([url]);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n    \n      \n    \n    \n  \n\n\n\n  \n    \n      \n          \n            {{action.title}}\n          \n      \n    \n  \n\n    \n\n    \n                \n                    home.page.scss\n                \n                .menu-column {\n  -webkit-box-shadow: 0px 0px 0px 5px rgba(240,237,240,1);\n  -moz-box-shadow: 0px 0px 0px 5px rgba(240,237,240,1);\n  box-shadow: 0px 0px 5px 2px rgba(240,237,240,1);\n  color: black;\n  font-size: 12px;\n  padding: 80px 10px;\n  text-align: center;\n  text-decoration: underline;\n\n  a {\n    color: black;\n  }\n}\n\n.home-columns {\n  align-items: center;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  \n  ion-row {\n    justify-content: center;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{action.title}}                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { HomePage } from './home.page';\nimport { AuthenticationGuard } from '../../core/authentication/authentication.guard';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage,\n        canActivate: [AuthenticationGuard]\n      }\n    ])\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/local-storage.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for storing information in local storage\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                localStorage\n                            \n                            \n                                sessionStorage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearAll\n                            \n                            \n                                    Public\n                                clearItem\n                            \n                            \n                                    Public\n                                getItem\n                            \n                            \n                                    Public\n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/local-storage.service.ts:114\n                            \n                        \n\n                \n                    \n                            Checks if localStorage can be used for basic storing operations\nIf not, then a custom storage is created to handle this operations\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clearAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:244\n                \n            \n\n\n            \n                \n                    Clears the existing storage\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clearItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:237\n                \n            \n\n\n            \n                \n                    Removes an item from storage by its key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:229\n                \n            \n\n\n            \n                \n                    Retrieves an item by its key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setItem(key: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:221\n                \n            \n\n\n            \n                \n                    Adds an item to storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item's key\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item itself\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localStorage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:109\n                            \n                        \n\n                \n                    \n                        Handles storing inside local storage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionStorage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:114\n                            \n                        \n\n                \n                    \n                        Handles storing inside session storage\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Creates a cookie entry\n * @param name Cookie name\n * @param value Cookie value\n * @param days Cookie expiration number of days\n */\nfunction createCookie(name: any, value: any, days: any) {\n  let date: any, expires;\n\n  if (days) {\n    date = new Date();\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    expires = '; expires=' + date.toGMTString();\n  } else {\n    expires = '';\n  }\n  document.cookie = name + '=' + value + expires + '; path=/';\n}\n\n/**\n * Getter for a cookie document by its name\n * @param name Cookie's name\n * @returns cookie document \n */\nfunction readCookie(name: any) {\n  const nameEQ = name + '=',\n    ca = document.cookie.split(';');\n  let i, c;\n\n  for (i = 0; i  localStorage\n      });\n      this.localStorage = localStorage;\n      this.sessionStorage = sessionStorage;\n    }\n  }\n\n  /**\n   * Adds an item to storage\n   * @param key Item's key\n   * @param value Item itself\n   */\n  public setItem(key: string, value: any) {\n    return this.localStorage.setItem(key, value);\n  }\n\n   /**\n    * Retrieves an item by its key\n    * @param key Item key\n    */\n  public getItem(key: string) {\n    return this.localStorage.getItem(key);\n  }\n\n  /**\n   * Removes an item from storage by its key\n   * @param key Item key\n   */\n  public clearItem(key: string) {\n    return this.localStorage.removeItem(key);\n  }\n\n  /**\n   * Clears the existing storage\n   */\n  public clearAll() {\n    return this.localStorage.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loading\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, formBuilder: FormBuilder, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route navigation\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for reactive form creation\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/login/login.component.ts:54\n                \n            \n\n\n            \n                \n                    Form initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/login/login.component.ts:47\n                \n            \n\n\n            \n                \n                    Page initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/login/login.component.ts:65\n                \n            \n\n\n            \n                \n                    Authentication credentials from the form are sent to the authentication service for validation\nIf they are validated, the user will be redirected to the home page, if not, a toast will display an error message\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                        The error message that will be displayed when something didn't go as planned\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                        True if page is in loading state false if not; used in design\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/login/login.component.ts:22\n                            \n                        \n\n                \n                    \n                        Form with user's login credentials\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { AuthenticationService } from 'src/app/core';\nimport { EmailValidation } from 'src/app/core/validators/email-validation';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\n\n/**\n * Login Page component for 'auth/login' route\n */\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Form with user's login credentials\n   */\n  loginForm: FormGroup;\n\n  /**\n   * The error message that will be displayed when something didn't go as planned\n   */\n  errorMessage: string;\n\n  /**\n   * True if page is in loading state false if not; used in design\n   */\n  loading = false;\n\n  /**\n   * Class constructor\n   * @param router Provider for route navigation\n   * @param formBuilder Provider for reactive form creation\n   * @param authenticationService Provider for authentication related operation\n   */\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private authenticationService: AuthenticationService) { }\n\n  /**\n   * Page initialisation\n   */\n  ngOnInit() {\n    this.createForm();\n  }\n\n  /**\n   * Form initialisation\n   */\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, EmailValidation.emailValidation]],\n      password: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Authentication credentials from the form are sent to the authentication service for validation\n   * If they are validated, the user will be redirected to the home page, if not, a toast will display an error message\n   */\n  submit() {\n    this.loading = true;\n    this.authenticationService\n      .login(this.loginForm.value)\n      .pipe(\n        finalize(() => {\n          this.loginForm.markAsPristine();\n        })\n      )\n      .subscribe(\n        (credentials) => {\n            this.loading = false;\n            this.router.navigate(['../home'], {\n              replaceUrl: true\n            });\n        },\n        (error: any) => {\n          this.loading = false;\n          this.errorMessage = 'Informații incorecte';\n          setTimeout(() => {\n            this.errorMessage = null;\n          }, 3000);\n        }\n      );\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      Adresă de email\n      \n    \n    \n      Parolă\n      \n    \n\n    \n       {{ loginForm.controls.email.errors?.email || errorMessage }}\n      \n    \n\n    Am uitat parola\n    Login\n  \n\n  \n    \n  \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Adresă de email                    Parolă                     {{ loginForm.controls.email.errors?.email || errorMessage }}              Am uitat parola    Login          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginPayload.html":{"url":"interfaces/LoginPayload.html","title":"interface - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for login payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Login password\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Login username/email\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  /**\n   * Interface for login payload\n   */\n  export interface LoginPayload {\n    /**\n     * Login username/email\n     */\n    username: string;\n\n    /**\n     * Login password\n     */\n    password: string;\n  }\n\n  /**\n   * Interface for user object\n   */\n  export interface User {\n    /**\n     * User id\n     */\n    _id: string;\n\n    /**\n     * User name\n     */\n    name: string;\n\n    /**\n     * User phone number\n     */\n    phone?: any;\n\n    /**\n     * User email address\n     */\n    email: string;\n\n    /**\n     * User creation date\n     */\n    createdAt: Date;\n\n    /**\n     * Date of the last update to the user's progile\n     */\n    updatedAt: Date;\n  }\n\n  /**\n   * Interface for credentials object\n   */\n  export interface Credentials {\n    /**\n     * User object\n     */\n    user: User;\n\n    /**\n     * Authentication token\n     */\n    token: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutComponent.html":{"url":"components/LogoutComponent.html","title":"component - LogoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LogoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/logout/logout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout\n            \n\n            \n                styleUrls\n                ./logout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/logout/logout.component.ts:10\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operations\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/logout/logout.component.ts:24\n                \n            \n\n\n            \n                \n                    A request through the authentication service is sent for logout;\nIf its successful the user will be redirected to the login screen\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss'],\n})\nexport class LogoutComponent implements OnInit {\n\n  /**\n   * Class constructor\n   * @param authenticationService Provider for authentication related operations\n   * @param router Provider for router navigation\n   */\n  constructor(private authenticationService: AuthenticationService,\n              private router: Router) { }\n\n  /**\n   * A request through the authentication service is sent for logout;\n   * If its successful the user will be redirected to the login screen\n   */\n  ngOnInit() {\n    this.authenticationService.logout().subscribe(() => {\n      this.router.navigate(['../auth/login'], {\n        replaceUrl: true\n      });\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n  \n\n    \n\n    \n                \n                    ./logout.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Organisation.html":{"url":"classes/Organisation.html","title":"class - Organisation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Organisation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/organisation.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for organisation object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                _rev\n                            \n                            \n                                added_by\n                            \n                            \n                                address\n                            \n                            \n                                city\n                            \n                            \n                                comments\n                            \n                            \n                                contact_person\n                            \n                            \n                                county\n                            \n                            \n                                cover\n                            \n                            \n                                created_at\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                slug\n                            \n                            \n                                status\n                            \n                            \n                                type\n                            \n                            \n                                updated_at\n                            \n                            \n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:8\n                            \n                        \n\n                \n                    \n                        Organisation id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _rev\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:13\n                            \n                        \n\n                \n                    \n                        CouchDB parameter; it is automatically set\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            added_by\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:99\n                            \n                        \n\n                \n                    \n                        The id of the user that added this entry\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:43\n                            \n                        \n\n                \n                    \n                        Address\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:69\n                            \n                        \n\n                \n                    \n                        Organisation's city, from the statics database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:84\n                            \n                        \n\n                \n                    \n                        Additional comments/details to an organisation entry\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contact_person\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:33\n                            \n                        \n\n                \n                    \n                        Organisation contact person name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:53\n                            \n                        \n\n                \n                    \n                        Organisation's county, from the statics database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:114\n                            \n                        \n\n                \n                    \n                        Organisation's cover area, has 'locală'/'națională' value\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:89\n                            \n                        \n\n                \n                    \n                        Creation date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:48\n                            \n                        \n\n                \n                    \n                        Email address\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:18\n                            \n                        \n\n                \n                    \n                        Organisation name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:38\n                            \n                        \n\n                \n                    \n                        Phone number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:23\n                            \n                        \n\n                \n                    \n                        Organisation slug, the name without diacritics (Romanian special characters)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:109\n                            \n                        \n\n                \n                    \n                        Organisation's status 'activ'/'inactiv', organisations added by the mobile app will always have 'inactiv'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:104\n                            \n                        \n\n                \n                    \n                        Database type, in this case 'organisations'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:94\n                            \n                        \n\n                \n                    \n                        Date of the last update on the entry\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            website\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:28\n                            \n                        \n\n                \n                    \n                        Organisation website url\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Organisation {\n    /**\n     * Organisation id\n     */\n    _id: string;\n\n    /**\n     * CouchDB parameter; it is automatically set\n     */\n    _rev: string;\n\n    /**\n     * Organisation name\n     */\n    name: string;\n\n    /**\n     * Organisation slug, the name without diacritics (Romanian special characters)\n     */\n    slug: string;\n\n    /**\n     * Organisation website url\n     */\n    website: string;\n\n    /**\n     * Organisation contact person name\n     */\n    contact_person: string;\n\n    /**\n     * Phone number\n     */\n    phone: string;\n\n    /**\n     * Address\n     */\n    address: string;\n\n    /**\n     * Email address\n     */\n    email: string;\n\n    /**\n     * Organisation's county, from the statics database\n     */\n    county: {\n        /**\n         * County id\n         */\n        _id: string;\n\n        /**\n         * County name\n         */\n        name: string;\n    };\n\n\n    /**\n     * Organisation's city, from the statics database\n     */\n    city: {\n        /**\n         * City id\n         */\n        _id: string;\n\n        /**\n         * City name\n         */\n        name: string;\n    };\n\n    /**\n     * Additional comments/details to an organisation entry\n     */\n    comments: string;\n\n    /**\n     * Creation date\n     */\n    created_at: any;\n\n    /**\n     * Date of the last update on the entry\n     */\n    updated_at: any;\n\n    /**\n     * The id of the user that added this entry\n     */\n    added_by: string;\n\n    /**\n     * Database type, in this case 'organisations'\n     */\n    type: string;\n\n    /**\n     * Organisation's status 'activ'/'inactiv', organisations added by the mobile app will always have 'inactiv'\n     */\n    status: string;\n\n    /**\n     * Organisation's cover area, has 'locală'/'națională' value\n     */\n    cover: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganisationService.html":{"url":"injectables/OrganisationService.html","title":"injectable - OrganisationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OrganisationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/organisation.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for organisation related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createOrganisation\n                            \n                            \n                                deleteOrganisationById\n                            \n                            \n                                getOrganisationById\n                            \n                            \n                                getOrganisationByName\n                            \n                            \n                                getOrganisations\n                            \n                            \n                                    Private\n                                removeSpecialChars\n                            \n                            \n                                updateOrganisation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/organisation.service.ts:33\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Organisations Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected reference for AuthenticationService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createOrganisation\n                        \n                        \n                    \n                \n            \n            \n                \ncreateOrganisation(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:100\n                \n            \n\n\n            \n                \n                    Creates an organisation entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new organisation's name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with the created object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteOrganisationById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteOrganisationById(organisationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:130\n                \n            \n\n\n            \n                \n                    Deletes an entry by its id from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The organisation id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrganisationById\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrganisationById(organisationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:72\n                \n            \n\n\n            \n                \n                    Finds an organisation by its id in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Organisation's id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the organisation with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrganisationByName\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrganisationByName(organisationName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:86\n                \n            \n\n\n            \n                \n                    Finds an organisation by its name in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisationName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the organisation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all organisation with that name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrganisations\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrganisations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:57\n                \n            \n\n\n            \n                \n                    Getter method for all organisations from the local database\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all organisations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            removeSpecialChars\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeSpecialChars(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:141\n                \n            \n\n\n            \n                \n                    Removes diacritics from a string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A string with diacritics\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the new string, without diacritics\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOrganisation\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOrganisation(organisation: Organisation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:118\n                \n            \n\n\n            \n                \n                    Updates an organisation entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisation\n                                    \n                                                Organisation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new organisation entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'organisations'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/organisation.service.ts:33\n                            \n                        \n\n                \n                    \n                        Table type\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { from, Observable } from 'rxjs';\nimport { AuthenticationService } from '../authentication';\nimport { Organisation } from '../model/organisation.model';\nimport * as moment from 'moment';\n\n/**\n * Reference for local PouchDB Organisations Database\n */\nconst localDB = new PouchDB('organisations');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Organisations Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/organisations');\n\n/**\n * Provider for organisation related operations\n */\n@Injectable()\nexport class OrganisationService {\n  /**\n   * Table type\n   */\n  private type = 'organisations';\n\n  /**\n   * Class constructor, sets the synchronization options for CouchDB and PouchDB Organisations Database\n   * @param authenticationService Injected reference for AuthenticationService\n   */\n  constructor(private authenticationService: AuthenticationService) {\n    const options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);\n\n    localDB.createIndex({\n      index: {fields: ['name', 'slug']}\n    });\n   }\n\n  /**\n   * Getter method for all organisations from the local database\n   * @returns An Observable with all organisations\n   */\n  getOrganisations(): Observable {\n    return from(localDB.find({\n      selector: {\n          type: this.type\n      },\n      include_docs: true,\n      attachments: true\n    }));\n  }\n\n  /**\n   * Finds an organisation by its id in the local database\n   * @param organisationId Organisation's id\n   * @returns An Observable containing the organisation with that id\n   */\n  getOrganisationById(organisationId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        _id: {$eq: organisationId},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   * Finds an organisation by its name in the local database\n   * @param organisationName The name of the organisation\n   * @returns An Observable with all organisation with that name\n   */\n  getOrganisationByName(organisationName: string): Observable {\n    return from(localDB.find({\n      selector: {\n        name: {$eq: organisationName},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   * Creates an organisation entry in the local database\n   * @param name String value containing the new organisation's name\n   * @returns An Observable with the created object\n   */\n  createOrganisation(name: string): Observable {\n    const currentUser = this.authenticationService.user;\n    const organisation = new Organisation();\n    organisation.name = name;\n    organisation.slug = this.removeSpecialChars(name);\n    organisation.added_by = currentUser._id;\n    organisation.created_at = moment().format('Y-MM-DD H:mm:ss');\n    organisation.updated_at = moment().format('Y-MM-DD H:mm:ss');\n    organisation.type = this.type;\n    organisation.status = 'inactiv';\n\n    return from(localDB.post(organisation));\n  }\n\n  /**\n   * Updates an organisation entry in the local database\n   * @param organisation The new organisation entry\n   */\n  updateOrganisation(organisation: Organisation) {\n    localDB.get(organisation._id).then((doc) => {\n      doc.name = organisation.name ? organisation.name : doc.name;\n      doc.slug = organisation.name ? this.removeSpecialChars(organisation.name) : doc.slug;\n      localDB.put(doc);\n    });\n  }\n\n  /**\n   * Deletes an entry by its id from the local database\n   * @param organisationId The organisation id\n   */\n  deleteOrganisationById(organisationId: string) {\n    localDB.get(organisationId).then((doc) => {\n      return localDB.remove(doc);\n    });\n  }\n\n   /**\n    * Removes diacritics from a string\n    * @param text A string with diacritics\n    * @returns the new string, without diacritics\n    */\n  private removeSpecialChars(text: string): string {\n    const input   = 'ăâîșț';\n    const output  = 'aaist';\n    const regex = new RegExp('[' + input + ']', 'g');\n    const transl = {};\n\n    const lookup = (m) => transl[m] || m;\n\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordValidation.html":{"url":"classes/PasswordValidation.html","title":"class - PasswordValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/password-validation.ts\n        \n\n            \n                Description\n            \n            \n                Validator class for password inputs\nValidates both matching passwords for password reset (password, confirmPassword)\nand simple password fields\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                MatchPassword\n                            \n                            \n                                    Static\n                                passwordValidation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            MatchPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    MatchPassword(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/password-validation.ts:16\n                \n            \n\n\n            \n                \n                    Matching passwords validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the values from the inputs\nthat are being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the strings match, an error message otherwise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            passwordValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    passwordValidation(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/password-validation.ts:35\n                \n            \n\n\n            \n                \n                    Password validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the value from the input\nthat is being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the string respects the pattern, an error message otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AbstractControl} from '@angular/forms';\n\n/**\n * Validator class for password inputs\n * Validates both matching passwords for password reset (password, confirmPassword)\n * and simple password fields\n */\nexport class PasswordValidation {\n\n    /**\n     * Matching passwords validator\n     * @param abstractControl An abstract control reference, to automatically take the values from the inputs\n     * that are being validated\n     * @returns null if the strings match, an error message otherwise\n     */\n    static MatchPassword(abstractControl: AbstractControl): any {\n        const password = abstractControl.get('password').value;\n        const confirmPassword = abstractControl.get('confirmPassword').value;\n\n        if (password !== confirmPassword) {\n            abstractControl.get('confirmPassword').setErrors({\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            });\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Password validator\n     * @param abstractControl An abstract control reference, to automatically take the value from the input\n     * that is being validated\n     * @returns null if the string respects the pattern, an error message otherwise\n     */\n    static passwordValidation(abstractControl: AbstractControl): any {\n        const number = new RegExp('\\\\d');\n        const password = abstractControl.value;\n        const uppercase = new RegExp('[A-Z]');\n        const lowercase = new RegExp('[a-z]');\n        const special = new RegExp(/[!#$%&\\‘\\(\\)\\*?@\\[\\]^_\\+\\.`\\{\\|\\}~]/);\n\n        if (!number.test(password)) {\n            return {\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            };\n        }\n\n        if (!uppercase.test(password)) {\n            return {\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            };\n        }\n\n        if (!lowercase.test(password)) {\n            return {\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            };\n        }\n\n        if (!special.test(password)) {\n            return {\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            };\n        }\n\n        if (password.length \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PhoneValidation.html":{"url":"classes/PhoneValidation.html","title":"class - PhoneValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PhoneValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/phone-validation.ts\n        \n\n            \n                Description\n            \n            \n                Validator class for the phone number input field\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                phoneValidation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            phoneValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    phoneValidation(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/phone-validation.ts:14\n                \n            \n\n\n            \n                \n                    Phone validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the value from the input\nthat is being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the string respects the pattern, an error message otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\n\n/**\n * Validator class for the phone number input field\n */\nexport class PhoneValidation {\n\n    /**\n     * Phone validator\n     * @param abstractControl An abstract control reference, to automatically take the value from the input\n     * that is being validated\n     * @returns null if the string respects the pattern, an error message otherwise\n     */\n    static phoneValidation(abstractControl: AbstractControl): any {\n        const phone = abstractControl.value;\n        const reg = new RegExp('^[+]{0,1}[0-9]+$');\n\n        if ((reg.test(phone) && phone.length >= 10)) {\n            if (phone.length === 12 && phone.indexOf('+') >= 0) {\n                return null;\n            }\n\n            if (phone.length === 10 && phone.indexOf('+') \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecoverPasswordComponent.html":{"url":"components/RecoverPasswordComponent.html","title":"component - RecoverPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecoverPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/recover-password/recover-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recover-password\n            \n\n            \n                styleUrls\n                ./recover-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./recover-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loading\n                            \n                            \n                                resetPasswordForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentToast\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:28\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected reference for AuthenticationService\n\n                                                        \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller for toast messages display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:44\n                \n            \n\n\n            \n                \n                    Page initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentToast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToast(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:72\n                \n            \n\n\n            \n                \n                    Presents a toast that will be automatically dismessed after 3 seconds\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        toast message\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:53\n                \n            \n\n\n            \n                \n                    Sends the recover password request\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:23\n                            \n                        \n\n                \n                    \n                        Error message that will be displayed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:28\n                            \n                        \n\n                \n                    \n                        Page is loading or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPasswordForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:18\n                            \n                        \n\n                \n                    \n                        Form reference\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core';\nimport { EmailValidation } from 'src/app/core/validators/email-validation';\nimport { ToastController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-recover-password',\n  templateUrl: './recover-password.component.html',\n  styleUrls: ['./recover-password.component.scss'],\n})\nexport class RecoverPasswordComponent implements OnInit {\n    /**\n     * Form reference\n     */\n    resetPasswordForm: FormGroup;\n\n    /**\n     * Error message that will be displayed\n     */\n    errorMessage: string = null;\n\n    /**\n     * Page is loading or not\n     */\n    loading = false;\n\n    /**\n     * Class constructor\n     *\n     * @param router Provider for router navigation\n     * @param authenticationService Injected reference for AuthenticationService\n     * @param toastController Controller for toast messages display\n     */\n    constructor(private router: Router,\n                private authenticationService: AuthenticationService,\n                private toastController: ToastController) { }\n\n    /**\n     * Page initialisation\n     */\n    ngOnInit() {\n        this.resetPasswordForm = new FormGroup({\n        email: new FormControl('', [Validators.required, EmailValidation.emailValidation])\n        });\n    }\n\n    /**\n     * Sends the recover password request\n     */\n    resetPassword() {\n        this.loading = true;\n        this.authenticationService.recoverPassword(this.resetPasswordForm.value.email).subscribe(response => {\n            this.loading = false;\n            this.presentToast('Cererea a fost înregistrată. Vă rugăm verificați atât în inbox cât și în spam.');\n            this.router.navigate(['/auth/login']);\n        }, error => {\n            this.loading = false;\n            this.errorMessage = 'Adresa de email specificată nu există. Te rugăm să verifici și să încerci din nou.';\n            setTimeout(() => {\n                this.errorMessage = null;\n            }, 3000);\n        });\n    }\n\n     /**\n      * Presents a toast that will be automatically dismessed after 3 seconds\n      * @param message toast message\n      */\n    async presentToast(message: string) {\n        const toast = await this.toastController.create({\n          message,\n          position: 'bottom',\n          duration: 3000\n        });\n        toast.present();\n    }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      Adresă de email\n      \n    \n\n    \n       {{ resetPasswordForm.controls.email.errors?.email || errorMessage }} \n     \n\n    Autentificare\n    Trimite\n  \n\n  \n      \n  \n\n\n    \n\n    \n                \n                    ./recover-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Adresă de email                     {{ resetPasswordForm.controls.email.errors?.email || errorMessage }}          Autentificare    Trimite            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecoverPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RequestInterceptor.html":{"url":"interceptors/RequestInterceptor.html","title":"interceptor - RequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  RequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/request.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Prefixes all requests with environment.serverUrl and adds the authentication token to requests\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/request.interceptor.ts:17\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected service referes the AuthenticationService for handling authentication related operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/request.interceptor.ts:31\n                \n            \n\n\n            \n                \n                    Intercepts all requests that are sent and adds extra information to them\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current request that is being sent\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Handles the next state of the request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The new request, with the additional information\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { environment } from '../../../environments/environment';\n\n/**\n * Prefixes all requests with `environment.serverUrl` and adds the authentication token to requests\n */\n@Injectable()\nexport class RequestInterceptor implements HttpInterceptor {\n\n  /**\n   * Class constructor\n   * @param authenticationService Injected service referes the AuthenticationService for handling authentication related operations\n   */\n  constructor(private authenticationService: AuthenticationService) {}\n\n  /**\n   * Intercepts all requests that are sent and adds extra information to them\n   * @param request The current request that is being sent\n   * @param next Handles the next state of the request\n   * @returns The new request, with the additional information\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    request = request.clone({\n      setHeaders: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json; charset=utf-8',\n      Authorization: `Bearer ${this.authenticationService.accessToken}`,\n      },\n      url: environment.serverUrl + request.url\n    });\n\n    return next.handle(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/reset-password/reset-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                ./reset-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loading\n                            \n                            \n                                resetPasswordForm\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialiseView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentToast\n                            \n                            \n                                resetPassword\n                            \n                            \n                                setErrorMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService, formBuilder: FormBuilder, route: ActivatedRoute, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected reference for AuthenticationService\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder reference, used in creating rective forms\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for current route\n\n                                                        \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller for toast messages display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialiseView\n                        \n                        \n                    \n                \n            \n            \n                \ninitialiseView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:76\n                \n            \n\n\n            \n                \n                    Page initialisation after user was logged out (if neccessary)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:52\n                \n            \n\n\n            \n                \n                    Page initialisation\nIf user is already logged in when page is accessed, then a logout is performed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentToast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToast(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:114\n                \n            \n\n\n            \n                \n                    Presents a toast that will be automatically dismessed after 3 seconds\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        toast message\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:87\n                \n            \n\n\n            \n                \n                    Sends the reset password request\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setErrorMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsetErrorMessage(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:103\n                \n            \n\n\n            \n                \n                    Changes the value of the error message and clears it after 3 seconds\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        error message that will be displayed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:27\n                            \n                        \n\n                \n                    \n                        Error message that will be displayed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:32\n                            \n                        \n\n                \n                    \n                        Page is loading or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPasswordForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:17\n                            \n                        \n\n                \n                    \n                        Form reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:42\n                            \n                        \n\n                \n                    \n                        Provider for router navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:22\n                            \n                        \n\n                \n                    \n                        Token for password reset\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core';\nimport { PasswordValidation } from 'src/app/core/validators/password-validation';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss'],\n})\nexport class ResetPasswordComponent implements OnInit {\n    /**\n     * Form reference\n     */\n     resetPasswordForm: FormGroup;\n\n     /**\n      * Token for password reset\n      */\n    token: string;\n\n    /**\n     * Error message that will be displayed\n     */\n    errorMessage: string;\n\n    /**\n     * Page is loading or not\n     */\n    loading = false;\n\n\n    /**\n     * @param router Provider for router navigation\n     * @param authenticationService Injected reference for AuthenticationService\n     * @param formBuilder FormBuilder reference, used in creating rective forms\n     * @param route Provider for current route\n     * @param toastController Controller for toast messages display\n     */\n    constructor(public router: Router,\n                private authenticationService: AuthenticationService,\n                private formBuilder: FormBuilder,\n                private route: ActivatedRoute,\n                private toastController: ToastController) { }\n\n    /**\n     * Page initialisation\n     * If user is already logged in when page is accessed, then a logout is performed\n     */\n    ngOnInit() {\n        if (this.authenticationService.isAuthenticated() ) {\n            this.authenticationService.logout().subscribe(response => {\n                this.initialiseView();\n            });\n        } else {\n            this.initialiseView();\n        }\n\n        this.resetPasswordForm = this.formBuilder.group({\n            password: ['', [Validators.required,\n                PasswordValidation.passwordValidation\n            ]],\n            confirmPassword: ['', [Validators.required,\n                PasswordValidation.passwordValidation\n            ]],\n            }, {\n                validator: PasswordValidation.MatchPassword\n            });\n    }\n\n    /**\n     * Page initialisation after user was logged out (if neccessary)\n     */\n    initialiseView() {\n        this.route.params.subscribe(\n            (params) => {\n                this.token = params['token'];\n            }\n        );\n    }\n\n    /**\n     * Sends the reset password request\n     */\n    resetPassword() {\n        this.loading = true;\n        this.authenticationService.resetPassword(this.resetPasswordForm.value.password, this.token).subscribe(response => {\n                this.presentToast('Parolă resetată cu succes.');\n                this.loading = false;\n                this.router.navigate(['/auth/login']);\n            }, error => {\n                this.loading = false;\n                this.setErrorMessage('A apărut o eroare. Vă rugăm reîncercați.');\n            });\n    }\n\n    /**\n     * Changes the value of the error message and clears it after 3 seconds\n     * @param message error message that will be displayed\n     */\n    setErrorMessage(message: string) {\n        this.errorMessage = message;\n        setTimeout(() => {\n            this.errorMessage = null;\n        }, 3000);\n    }\n\n    /**\n     * Presents a toast that will be automatically dismessed after 3 seconds\n     * @param message toast message\n     */\n    async presentToast(message: string) {\n        const toast = await this.toastController.create({\n          message,\n          position: 'bottom',\n          duration: 3000\n        });\n        toast.present();\n    }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      Parolă\n      \n    \n\n    \n      Confirmă Parola\n      \n    \n    \n    \n       {{ resetPassword.errors?.password || resetPasswordForm.controls.confirmPassword.errors?.password || resetPasswordForm.controls.password.errors?.password }} \n    \n\n    Autentificare\n    Trimite\n  \n\n  \n      \n  \n\n\n    \n\n    \n                \n                    ./reset-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Parolă                    Confirmă Parola                         {{ resetPassword.errors?.password || resetPasswordForm.controls.confirmPassword.errors?.password || resetPasswordForm.controls.password.errors?.password }}         Autentificare    Trimite            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RootObject.html":{"url":"interfaces/RootObject.html","title":"interface - RootObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RootObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/error.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for error object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attributes\n                                \n                                \n                                        error\n                                \n                                \n                                        message\n                                \n                                \n                                        statusCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                    \n                                \n                                \n                                    \n                                        attributes:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Error attributes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error message\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error status code\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        declare namespace ErrorModel {\n\n  /**\n   * Interface for error object\n   */\n  export interface RootObject {\n    /**\n     * Error status code\n     */\n    statusCode: number;\n\n    /**\n     * Error\n     */\n    error: string;\n\n    /**\n     * Error message\n     */\n    message: string;\n\n    /**\n     * Error attributes\n     */\n    attributes?: any;\n  }\n\n  /**\n   * Interface for error message\n   */\n  export interface ErrorMessageObject {\n    /**\n     * Error message id\n     */\n    id: number;\n\n    /**\n     * Error message\n     */\n    error: string;\n\n    /**\n     * Error type\n     */\n    type: string;\n\n    /**\n     * Error url\n     */\n    serviceUrl: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteReusableStrategy.html":{"url":"classes/RouteReusableStrategy.html","title":"class - RouteReusableStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteReusableStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/route-reusable-strategy.ts\n        \n\n            \n                Description\n            \n            \n                A route strategy allowing for explicit route reuse.\nUsed as a workaround for https://github.com/angular/angular/issues/18374\nTo reuse a given route, add data: { reuse: true } to the route definition.\n\n            \n\n            \n                Extends\n            \n            \n                        RouteReuseStrategy\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                retrieve\n                            \n                            \n                                    Public\n                                shouldAttach\n                            \n                            \n                                    Public\n                                shouldDetach\n                            \n                            \n                                    Public\n                                shouldReuseRoute\n                            \n                            \n                                    Public\n                                store\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            retrieve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    retrieve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:47\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DetachedRouteHandle | null\n\n                    \n                    \n                        null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldAttach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldAttach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:38\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        false\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldDetach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldDetach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:19\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        false\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldReuseRoute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:56\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    future\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Future activated route\n\n                                    \n                                \n                                \n                                    curr\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            store\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:28\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                                \n                                    detachedTree\n                                    \n                                            DetachedRouteHandle | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The detached tree\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ActivatedRouteSnapshot,\n  DetachedRouteHandle,\n  RouteReuseStrategy\n} from '@angular/router';\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @returns false\n   */\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @param detachedTree The detached tree\n   */\n  public store(\n    route: ActivatedRouteSnapshot,\n    detachedTree: DetachedRouteHandle | null\n  ): void {}\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @returns false\n   */\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @returns null\n   */\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param future Future activated route\n   * @param curr Current activated route\n   */\n  public shouldReuseRoute(\n    future: ActivatedRouteSnapshot,\n    curr: ActivatedRouteSnapshot\n  ): boolean {\n    return future.routeConfig === curr.routeConfig || future.data.reuse;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SendMessageComponent.html":{"url":"components/SendMessageComponent.html","title":"component - SendMessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SendMessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/volunteer/send-message/send-message.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-send-message\n            \n\n            \n                styleUrls\n                ./send-message.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./send-message.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                base64Image\n                            \n                            \n                                messageForm\n                            \n                            \n                                    Private\n                                phoneNumbers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addImage\n                            \n                            \n                                checkPemission\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sms: SMS, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/volunteer/send-message/send-message.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sms\n                                                  \n                                                        \n                                                                    SMS\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for sending SMS messages\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addImage\n                        \n                        \n                    \n                \n            \n            \n                \naddImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:58\n                \n            \n\n\n            \n                \n                    Adds an image from camera to the app and uses base64 codification to convert it into a string\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkPemission\n                        \n                        \n                    \n                \n            \n            \n                \ncheckPemission()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:85\n                \n            \n\n\n            \n                \n                    Checks for SMS permission, if granted sends the SMS\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:41\n                \n            \n\n\n            \n                \n                    Page initialisation: the volunteer id needs to be retrieved from the url\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:72\n                \n            \n\n\n            \n                \n                    Sends the message and image to the selected volunteer/s\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            base64Image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:29\n                            \n                        \n\n                \n                    \n                        Codification of the image that will be sent\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messageForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:24\n                            \n                        \n\n                \n                    \n                        The form that contains the message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            phoneNumbers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:19\n                            \n                        \n\n                \n                    \n                        A list of selected volunteers' phone numbers\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Camera } from '@ionic-native/camera';\nimport { SMS } from '@ionic-native/sms/ngx';\nimport { Volunteer } from 'src/app/core/model/volunteer.model';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-send-message',\n  templateUrl: './send-message.component.html',\n  styleUrls: ['./send-message.component.scss']\n})\n\nexport class SendMessageComponent implements OnInit {\n\n  /**\n   * A list of selected volunteers' phone numbers\n   */\n  private phoneNumbers: string[] = [];\n\n  /**\n   * The form that contains the message\n   */\n  messageForm: FormGroup;\n\n  /**\n   * Codification of the image that will be sent\n   */\n  public base64Image: string;\n\n  /**\n   * @param sms Provider for sending SMS messages\n   * @param router Provider for router navigation\n   */\n  constructor(private sms: SMS,\n              private router: Router) { }\n\n  /**\n   * Page initialisation: the volunteer id needs to be retrieved from the url\n   */\n  ngOnInit() {\n      const navigation = this.router.getCurrentNavigation();\n\n      if (navigation && navigation.extras && navigation.extras.state) {\n        const volunteers = navigation.extras.state.volunteers;\n\n        volunteers.forEach((volunteer: Volunteer) => this.phoneNumbers.push(volunteer.phone));\n      }\n\n      this.messageForm = new FormGroup({\n        message: new FormControl('', [Validators.required])\n        });\n  }\n\n  /**\n   * Adds an image from camera to the app and uses base64 codification to convert it into a string\n   */\n  addImage() {\n    Camera.getPicture({\n      destinationType: Camera.DestinationType.DATA_URL,\n      targetWidth: 1000,\n      targetHeight: 1000\n    }).then((imageData) => {\n      this.base64Image = 'data:image/jpeg;base64,' + imageData;\n    }, (err) => {\n    });\n  }\n\n  /**\n   * Sends the message and image to the selected volunteer/s\n   */\n  sendMessage() {\n    const options = {\n        replaceLineBreaks: false,\n        android: {\n            intent: 'INTENT'\n        }\n    };\n    this.sms.send(this.phoneNumbers, this.messageForm.value.message, options);\n  }\n\n  /**\n   * Checks for SMS permission, if granted sends the SMS\n   */\n  checkPemission() {\n    this.sms.hasPermission();\n    if (this.sms.hasPermission()) {\n      this.sendMessage();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n  \n\n\n\n  \n    \n      \n      Trimite mesaj\n    \n\n    \n      \n        \n          Mesajul tău\n        \n      \n      \n        \n      \n      \n        \n          \n          \n              Adaugă o fotografie\n          \n        \n        \n          \n            \n          \n        \n       -->\n    \n\n    Trimite mesaj\n  \n\n    \n\n    \n                \n                    ./send-message.component.scss\n                \n                .sc-ion-textarea-md-h {\n    margin-top: 0;\n}\n\nion-button ion-icon {\n    font-size: 24px;\n}\n\n.full-button-bottom {\n  margin: 0;\n  height: 50px;\n}\n\n.header {\n    background-color: #f9f9f9; \n    min-height: 100px; \n    text-align: center;\n    padding: 30px 10px;\n\n    ion-icon {\n        font-size: 35px;\n    }\n\n    ion-label {\n        display: block;\n        font-size: 25px;\n    }\n}\n\n.message-textarea {\n    height: 300px;\n}\n\nion-textarea textarea {\n    height: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      Trimite mesaj                                Mesajul tău                                                                                  Adaugă o fotografie                                                                         -->        Trimite mesaj  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SendMessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SsnValidation.html":{"url":"classes/SsnValidation.html","title":"class - SsnValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SsnValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/ssn-validation.ts\n        \n\n            \n                Description\n            \n            \n                Validator class for the SSN field (CNP)\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                ssnValidation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            ssnValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ssnValidation(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/ssn-validation.ts:14\n                \n            \n\n\n            \n                \n                    Ssn validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the value from the input\nthat is being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the string respects the pattern, an error message otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\n\n/**\n * Validator class for the SSN field (CNP)\n */\nexport class SsnValidation {\n\n    /**\n     * Ssn validator\n     * @param abstractControl An abstract control reference, to automatically take the value from the input\n     * that is being validated\n     * @returns null if the string respects the pattern, an error message otherwise\n     */\n    static ssnValidation(abstractControl: AbstractControl): any {\n        const ssn = parseInt(abstractControl.value, 10) || 0;\n\n        if (ssn.toString().length === 13) {\n            const cnp = Array.from(String(ssn), Number);\n            const coefs = [2, 7, 9, 1, 4, 6, 3, 5, 8, 2, 7, 9];\n            const idx = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n            const s = idx.map((x) => coefs[x] * cnp[x]);\n            const res = s.reduce((a, b) => a + b, 0) % 11;\n\n            if ((res \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StaticsService.html":{"url":"injectables/StaticsService.html","title":"injectable - StaticsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StaticsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/statics.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for locations: counties and cities\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city_type\n                            \n                            \n                                county_type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCityList\n                            \n                            \n                                    Public\n                                getCountyList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/statics.service.ts:35\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Statics Database\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCityList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCityList(countyId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/statics.service.ts:69\n                \n            \n\n\n            \n                \n                    Getter for the list of cities\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    countyId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the county from which the cities will be selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that contains the list of cities from resource files\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCountyList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCountyList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/statics.service.ts:54\n                \n            \n\n\n            \n                \n                    Getter for the list of counties\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that contains the list of counties from resource files\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city_type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'cities'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/statics.service.ts:30\n                            \n                        \n\n                \n                    \n                        Type for city entries\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county_type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'counties'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/statics.service.ts:35\n                            \n                        \n\n                \n                    \n                        Type for county entries\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\n\n/**\n * Reference for local PouchDB Statics Database\n */\nconst localDB = new PouchDB('statics');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Statics Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/statics');\n\n/**\n * Provider for locations: counties and cities\n */\n@Injectable()\nexport class StaticsService {\n    /**\n     * Type for city entries\n     */\n    city_type = 'cities';\n\n    /**\n     * Type for county entries\n     */\n    county_type = 'counties';\n\n    /**\n     * Class constructor, sets the synchronization options for CouchDB and PouchDB Statics Database\n     */\n    constructor() {\n        const options = {\n            live: true,\n            retry: true,\n            continuous: true\n        };\n\n        localDB.replicate.from(remoteDB, options);\n    }\n\n    /**\n     * Getter for the list of counties\n     * @returns An observable that contains the list of counties from resource files\n     */\n    public getCountyList(): Observable {\n        return from(localDB.allDocs(\n            {\n                include_docs: true,\n                startkey: 'county_romania_',\n                endkey: 'county_romania_\\ufff0'\n            }\n        ));\n    }\n\n    /**\n     * Getter for the list of cities\n     * @param countyId The id of the county from which the cities will be selected\n     * @returns An observable that contains the list of cities from resource files\n     */\n    public getCityList(countyId: string): Observable {\n        return from(localDB.query('cities/slug',\n            {\n                startkey: [countyId, null],\n                endkey: [countyId, {}]\n            }\n        ));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UnauthenticatedGuard.html":{"url":"guards/UnauthenticatedGuard.html","title":"guard - UnauthenticatedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    UnauthenticatedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/authentication/unauthenticated.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Provides a guard for protecting unauthenticated routes (such as login)\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/unauthenticated.guard.ts:10\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular value which handles routing operations\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service which handles the authentication operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/unauthenticated.guard.ts:27\n                \n            \n\n\n            \n                \n                    Determines if a user can access a route, depending on its state\nIf the route isn't allowed, it automatically redirects to home page\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        a boolean value, current user's status: unauthenticated or authenticated\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { AuthenticationService } from './authentication.service';\n\n/**\n * Provides a guard for protecting unauthenticated routes (such as login)\n */\n@Injectable()\nexport class UnauthenticatedGuard implements CanActivate {\n\n   /**\n    * Class constructor\n    * @param router Angular value which handles routing operations\n    * @param authenticationService The service which handles the authentication operations\n    */\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n   /**\n    * Determines if a user can access a route, depending on its state\n    * If the route isn't allowed, it automatically redirects to home page\n    * @returns a boolean value, current user's status: unauthenticated or authenticated\n    */\n  canActivate(): boolean {\n    if (!this.authenticationService.isAuthenticated()) {\n      return true;\n    }\n\n    this.router.navigate(['/home'], {\n      replaceUrl: true\n    });\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for user object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        phone\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User creation date\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User email address\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    User phone number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date of the last update to the user's progile\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  /**\n   * Interface for login payload\n   */\n  export interface LoginPayload {\n    /**\n     * Login username/email\n     */\n    username: string;\n\n    /**\n     * Login password\n     */\n    password: string;\n  }\n\n  /**\n   * Interface for user object\n   */\n  export interface User {\n    /**\n     * User id\n     */\n    _id: string;\n\n    /**\n     * User name\n     */\n    name: string;\n\n    /**\n     * User phone number\n     */\n    phone?: any;\n\n    /**\n     * User email address\n     */\n    email: string;\n\n    /**\n     * User creation date\n     */\n    createdAt: Date;\n\n    /**\n     * Date of the last update to the user's progile\n     */\n    updatedAt: Date;\n  }\n\n  /**\n   * Interface for credentials object\n   */\n  export interface Credentials {\n    /**\n     * User object\n     */\n    user: User;\n\n    /**\n     * Authentication token\n     */\n    token: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Volunteer.html":{"url":"classes/Volunteer.html","title":"class - Volunteer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Volunteer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/volunteer.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for volunteer object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                _rev\n                            \n                            \n                                added_by\n                            \n                            \n                                allocation\n                            \n                            \n                                city\n                            \n                            \n                                comments\n                            \n                            \n                                county\n                            \n                            \n                                courses\n                            \n                            \n                                created_at\n                            \n                            \n                                email\n                            \n                            \n                                job\n                            \n                            \n                                name\n                            \n                            \n                                organisation\n                            \n                            \n                                phone\n                            \n                            \n                                slug\n                            \n                            \n                                ssn\n                            \n                            \n                                type\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:8\n                            \n                        \n\n                \n                    \n                        Volunteer's id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _rev\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:13\n                            \n                        \n\n                \n                    \n                        CouchDB parameter; it is automatically set\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            added_by\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:156\n                            \n                        \n\n                \n                    \n                        The id of the user (in the mobile case the rescue officer) that added the current volunteer in the database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:131\n                            \n                        \n\n                \n                    \n                        Volunteer's allocation status: if the value is null then the volunteer has never been allocated before,\notherwise it contains the id of the volunteer's last allocation entry from the Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:58\n                            \n                        \n\n                \n                    \n                        Volunteer's city, from the statics database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:136\n                            \n                        \n\n                \n                    \n                        Volunteer's additional comments/details\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:43\n                            \n                        \n\n                \n                    \n                        Volunteer's county, from the statics database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:100\n                            \n                        \n\n                \n                    \n                        Volunteer's courses: a list of all the course's (from the Courses Database) that belong to the current volunteer\nIf it's empty, than the volunteer has no specialisation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:146\n                            \n                        \n\n                \n                    \n                        Volunteer entry creation date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:33\n                            \n                        \n\n                \n                    \n                        Email address\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            job\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:141\n                            \n                        \n\n                \n                    \n                        Volunteer's job name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:18\n                            \n                        \n\n                \n                    \n                        Volunteer's name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organisation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:74\n                            \n                        \n\n                \n                    \n                        Volunteer's organisation; Can either be an object from the Organisation's database\nor 'null', in the second case it means that the volunteer has the 'Neafiliat' status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:38\n                            \n                        \n\n                \n                    \n                        Phone number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:23\n                            \n                        \n\n                \n                    \n                        Volunteer name without romanian special characters (diacritics)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ssn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:28\n                            \n                        \n\n                \n                    \n                        Volunteer's ssn code (CNP)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:161\n                            \n                        \n\n                \n                    \n                        Database type, in this case 'volunteers'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:151\n                            \n                        \n\n                \n                    \n                        The date of the last update\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Volunteer {\n    /**\n     * Volunteer's id\n     */\n    _id: string;\n\n    /**\n     * CouchDB parameter; it is automatically set\n     */\n    _rev: string;\n\n    /**\n     * Volunteer's name\n     */\n    name: string;\n\n    /**\n     * Volunteer name without romanian special characters (diacritics)\n     */\n    slug: string;\n\n    /**\n     * Volunteer's ssn code (CNP)\n     */\n    ssn: string;\n\n    /**\n     * Email address\n     */\n    email: string;\n\n    /**\n     * Phone number\n     */\n    phone: string;\n\n    /**\n     * Volunteer's county, from the statics database\n     */\n    county: {\n        /**\n         * County id\n         */\n        _id: string;\n\n        /**\n         * County name\n         */\n        name: string;\n    };\n\n    /**\n     * Volunteer's city, from the statics database\n     */\n    city: {\n        /**\n         * City id\n         */\n        _id: string;\n\n        /**\n         * City name\n         */\n        name: string;\n    };\n\n    /**\n     * Volunteer's organisation; Can either be an object from the Organisation's database\n     * or 'null', in the second case it means that the volunteer has the 'Neafiliat' status\n     */\n    organisation: {\n        /**\n         * Organisation's id\n         */\n       _id: string,\n\n       /**\n        * Organisation's name\n        */\n       name: string,\n\n       /**\n        * Organisation's slug (name without diacritics)\n        */\n       slug: string,\n\n       /**\n        * Organisation's website\n        */\n       website: string\n    };\n\n    /**\n     * Volunteer's courses: a list of all the course's (from the Courses Database) that belong to the current volunteer\n     * If it's empty, than the volunteer has no specialisation\n     */\n    courses: {\n        /**\n         * Course id\n         */\n        _id: string;\n\n        /**\n         * Course name id, from the course_name Database\n         */\n        course_name_id: string;\n\n        /**\n         * Course name\n         */\n        name: string;\n\n        /**\n         * Course obtained date\n         */\n        obtained: string;\n\n        /**\n         * Course acredited organisation\n         */\n        acredited: string;\n    }[];\n\n    /**\n     * Volunteer's allocation status: if the value is null then the volunteer has never been allocated before,\n     * otherwise it contains the id of the volunteer's last allocation entry from the Allocations Database\n     */\n    allocation: string;\n\n    /**\n     * Volunteer's additional comments/details\n     */\n    comments: string;\n\n    /**\n     * Volunteer's job name\n     */\n    job: string;\n\n    /**\n     * Volunteer entry creation date\n     */\n    created_at: any;\n\n    /**\n     * The date of the last update\n     */\n    updated_at: any;\n\n    /**\n     * The id of the user (in the mobile case the rescue officer) that added the current volunteer in the database\n     */\n    added_by: number;\n\n    /**\n     * Database type, in this case 'volunteers'\n     */\n    type: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VolunteerPage.html":{"url":"components/VolunteerPage.html","title":"component - VolunteerPage","body":"\n                   \n\n\n\n\n\n  Components\n  VolunteerPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/volunteer/volunteer.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-volunteer\n            \n\n            \n                styleUrls\n                ./volunteer.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./volunteer.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-volunteer',\n  templateUrl: './volunteer.page.html',\n  styleUrls: ['./volunteer.page.scss'],\n})\n\n/**\n * The main page for all volunteer related pages (add, list, validate, send messages)\n */\nexport class VolunteerPage {\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./volunteer.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VolunteerPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VolunteerPageModule.html":{"url":"modules/VolunteerPageModule.html","title":"module - VolunteerPageModule","body":"\n                   \n\n\n\n\n    Modules\n    VolunteerPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VolunteerPageModule\n\n\n\ncluster_VolunteerPageModule_declarations\n\n\n\n\nAddVolunteerComponent\n\nAddVolunteerComponent\n\n\n\nVolunteerPageModule\n\nVolunteerPageModule\n\nVolunteerPageModule -->\n\nAddVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nListVolunteerComponent\n\nListVolunteerComponent\n\nVolunteerPageModule -->\n\nListVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nSendMessageComponent\n\nSendMessageComponent\n\nVolunteerPageModule -->\n\nSendMessageComponent->VolunteerPageModule\n\n\n\n\n\nValidateVolunteerComponent\n\nValidateVolunteerComponent\n\nVolunteerPageModule -->\n\nValidateVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nVolunteerPage\n\nVolunteerPage\n\nVolunteerPageModule -->\n\nVolunteerPage->VolunteerPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/volunteer/volunteer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddVolunteerComponent\n                        \n                        \n                            ListVolunteerComponent\n                        \n                        \n                            SendMessageComponent\n                        \n                        \n                            ValidateVolunteerComponent\n                        \n                        \n                            VolunteerPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { VolunteerPage } from './volunteer.page';\nimport { AddVolunteerComponent } from './add-volunteer/add-volunteer.component';\nimport { ListVolunteerComponent } from './list-volunteer/list-volunteer.component';\nimport { ValidateVolunteerComponent } from './validate-volunteer/validate-volunteer.component';\nimport { AuthenticationGuard } from '../../core/authentication/authentication.guard';\nimport { SendMessageComponent } from './send-message/send-message.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VolunteerPage,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'add',\n    component: AddVolunteerComponent,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'list',\n    component: ListVolunteerComponent,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'validate',\n    component: ValidateVolunteerComponent,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'send',\n    component: SendMessageComponent,\n    canActivate: [AuthenticationGuard]\n  }\n\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n  ],\n  declarations: [\n    VolunteerPage,\n    AddVolunteerComponent,\n    ListVolunteerComponent,\n    ValidateVolunteerComponent,\n    SendMessageComponent\n  ]\n})\nexport class VolunteerPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VolunteerService.html":{"url":"injectables/VolunteerService.html","title":"injectable - VolunteerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  VolunteerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/volunteer.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for volunteer related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allocateVolunteer\n                            \n                            \n                                createVolunteer\n                            \n                            \n                                deleteVolunteerById\n                            \n                            \n                                filter\n                            \n                            \n                                getVolunteerById\n                            \n                            \n                                getVolunteerBySsn\n                            \n                            \n                                getVolunteers\n                            \n                            \n                                    Private\n                                removeSpecialChars\n                            \n                            \n                                search\n                            \n                            \n                                updateVolunteer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/volunteer.service.ts:35\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Volunteers Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                        CourseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for course related operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allocateVolunteer\n                        \n                        \n                    \n                \n            \n            \n                \nallocateVolunteer(allocationId: string, volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:298\n                \n            \n\n\n            \n                \n                    Searches for a volunteer with the given volunteer id and allocates it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    allocationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Last allocation id\n\n                                    \n                                \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createVolunteer\n                        \n                        \n                    \n                \n            \n            \n                \ncreateVolunteer(name: string, ssn: string, phone: string, county: any, city: any, organisation: any, course: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:163\n                \n            \n\n\n            \n                \n                    Creates a volunteer entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's name\n\n                                    \n                                \n                                \n                                    ssn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's ssn (Social Security Number)\n\n                                    \n                                \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's phone number\n\n                                    \n                                \n                                \n                                    county\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's county\n\n                                    \n                                \n                                \n                                    city\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's city\n\n                                    \n                                \n                                \n                                    organisation\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object value containing the new volunteer's organisation\nEither contains an object with the following properties {id, name, website}, or it's null\n\n                                    \n                                \n                                \n                                    course\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer's course with properties: {id, name, acredited, obtained}\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with the created object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteVolunteerById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteVolunteerById(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:242\n                \n            \n\n\n            \n                \n                    Deletes an entry by its id from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The volunteer id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter(countyId: string, organisationId: string, courseId: string, page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:257\n                \n            \n\n\n            \n                \n                    Filters local Volunteers database by the given parameters' values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    countyId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        County id\n\n                                    \n                                \n                                \n                                    organisationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Organisation id\n\n                                    \n                                \n                                \n                                    courseId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course name id\n\n                                    \n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A number defining the current page of volunteers from the total list (used to paginate the response)\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of volunteers per page\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all volunteers matching the filters\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolunteerById\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolunteerById(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:128\n                \n            \n\n\n            \n                \n                    Finds a volunteer by its id in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer's id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the volunteer with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolunteerBySsn\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolunteerBySsn(ssn: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:142\n                \n            \n\n\n            \n                \n                    Finds a volunteer by its ssn in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ssn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A ssn code\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the volunteer with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolunteers\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolunteers(page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:73\n                \n            \n\n\n            \n                \n                    Getter method for all volunteers from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A number defining the current page of volunteers from the total list (used to paginate the response)\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of volunteers per page\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all volunteers\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            removeSpecialChars\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeSpecialChars(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:311\n                \n            \n\n\n            \n                \n                    Removes diacritics from a string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A string with diacritics\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the new string, without diacritics\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(keyword: string, page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:93\n                \n            \n\n\n            \n                \n                    Searches for all volunteers from the local database whose name,ssn or organisation name matches the keyword\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    keyword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The string used for search\n\n                                    \n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A number defining the current page of volunteers from the total list (used to paginate the response)\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of volunteers per page\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all volunteers\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateVolunteer\n                        \n                        \n                    \n                \n            \n            \n                \nupdateVolunteer(volunteer: Volunteer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:219\n                \n            \n\n\n            \n                \n                    Updates a volunteer entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteer\n                                    \n                                                Volunteer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new volunteer entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'volunteers'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/volunteer.service.ts:35\n                            \n                        \n\n                \n                    \n                        Table type\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { Volunteer } from '../model/volunteer.model';\nimport { from, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CourseService } from './course.service';\nimport * as moment from 'moment';\n\n/**\n * Reference for local PouchDB Volunteers Database\n */\nconst localDB = new PouchDB('volunteers');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Volunteers Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/volunteers');\n\n/**\n * Provider for volunteer related operations\n */\n@Injectable()\nexport class VolunteerService {\n\n  /**\n   * Table type\n   */\n  private type = 'volunteers';\n\n   /**\n    * Class constructor, sets the synchronization options for CouchDB and PouchDB Volunteers Database\n    * @param courseService Provider for course related operations\n    */\n  constructor(private courseService: CourseService) {\n    const options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);\n\n    localDB.createIndex({\n      index: {\n        fields: [\n          'name',\n          'slug',\n          'ssn',\n          'organisation.slug',\n          'course.[].course_name_id',\n          'organisation._id',\n          'county.id',\n          'city.id',\n          'job',\n          'comments'\n      ]}\n    });\n   }\n\n  /**\n   * Getter method for all volunteers from the local database\n   * @param page A number defining the current page of volunteers from the total list (used to paginate the response)\n   * @param limit The number of volunteers per page\n   * @returns An Observable with all volunteers\n   */\n  getVolunteers(page: number, limit: number): Observable {\n    const skip = page * limit;\n\n    return from(localDB.find({\n      selector: {\n          type: this.type\n      },\n      limit,\n      include_docs: true,\n      skip,\n    }));\n  }\n\n  /**\n   * Searches for all volunteers from the local database whose name,ssn or organisation name matches the keyword\n   * @param keyword The string used for search\n   * @param page A number defining the current page of volunteers from the total list (used to paginate the response)\n   * @param limit The number of volunteers per page\n   * @returns An Observable with all volunteers\n   */\n  search(keyword: string, page: number, limit: number): Observable {\n    const skip = page * limit;\n    const pattern = new RegExp('.*' + keyword + '.*', 'ig');\n    return from(localDB.find({\n      selector: {\n        $and: [\n          {\n            $or: [\n              {\n                slug: {$regex: pattern},\n              },\n              {\n                ssn: {$regex: pattern},\n              },\n              {\n                'organisation.slug': {$regex: pattern},\n              },\n            ]\n          },\n          {\n            type: this.type\n          }\n        ]\n      },\n      limit,\n      include_docs: true,\n      skip,\n    }));\n  }\n\n   /**\n    * Finds a volunteer by its id in the local database\n    * @param volunteerId Volunteer's id\n    * @returns An Observable containing the volunteer with that id\n    */\n  getVolunteerById(volunteerId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        _id: {$eq: volunteerId},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   * Finds a volunteer by its ssn in the local database\n   * @param ssn A ssn code\n   * @returns An Observable containing the volunteer with that id\n   */\n  getVolunteerBySsn(ssn: string): Observable {\n    return from(localDB.find({\n      selector: {\n        ssn: {$eq: ssn},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   *  Creates a volunteer entry in the local database\n   * @param name String value containing the new volunteer's name\n   * @param ssn String value containing the new volunteer's ssn (Social Security Number)\n   * @param phone String value containing the new volunteer's phone number\n   * @param county String value containing the new volunteer's county\n   * @param city String value containing the new volunteer's city\n   * @param organisation Object value containing the new volunteer's organisation\n   * Either contains an object with the following properties {id, name, website}, or it's null\n   * @param course Volunteer's course with properties: {id, name, acredited, obtained}\n   * @returns An Observable with the created object\n   */\n  createVolunteer(name: string, ssn: string, phone: string, county: any, city: any, organisation: any, course: any): Observable {\n    const volunteer = new Volunteer();\n    volunteer.name = name;\n    volunteer.ssn = ssn;\n    volunteer.county = {\n      _id: county._id.toString(),\n      name: county.name\n    };\n    volunteer.city = {\n      _id: city._id.toString(),\n      name: city.name\n    };\n    volunteer.created_at = moment().format('Y-MM-DD H:mm:ss');\n    volunteer.updated_at = moment().format('Y-MM-DD H:mm:ss');\n    volunteer.allocation = '';\n    volunteer.phone = phone;\n    volunteer.slug = this.removeSpecialChars(name);\n    volunteer.type = this.type;\n\n    if (organisation) {\n      volunteer.organisation = {\n        _id: organisation._id,\n        name: organisation.name,\n        website: organisation.website,\n        slug: this.removeSpecialChars(organisation.name)\n      };\n    } else {\n      volunteer.organisation = null;\n    }\n\n    volunteer.courses = [];\n\n    return from(localDB.post(volunteer))\n    .pipe(\n        map((response) => {\n          if (course) {\n            this.courseService.createCourse(course, volunteer._id).subscribe((data) => {\n              volunteer.courses.push({\n                _id: data.id,\n                course_name_id: course._id,\n                name: course.name,\n                obtained: null,\n                acredited: null\n              });\n              this.updateVolunteer(volunteer);\n            });\n          }\n          return response;\n        })\n      );\n  }\n\n   /**\n    * Updates a volunteer entry in the local database\n    * @param volunteer The new volunteer entry\n    */\n  updateVolunteer(volunteer: Volunteer) {\n    localDB.get(volunteer._id).then((doc: Volunteer) => {\n      doc.name = volunteer.name ? volunteer.name : doc.name;\n      doc.slug = volunteer.name ? this.removeSpecialChars(volunteer.name) : doc.slug;\n      doc.ssn = volunteer.ssn ? volunteer.ssn : doc.ssn;\n      doc.email = volunteer.email ? volunteer.email : doc.email;\n      doc.phone = volunteer.phone ? volunteer.phone : doc.phone;\n      doc.county = volunteer.county ? volunteer.county : doc.county;\n      doc.city = volunteer.city ? volunteer.city : doc.city;\n      doc.organisation = volunteer.organisation ? volunteer.organisation : doc.organisation;\n      doc.courses = volunteer.courses ? volunteer.courses : doc.courses;\n      doc.comments = volunteer.comments ? volunteer.comments : doc.comments;\n      doc.job = volunteer.job ? volunteer.job : doc.job;\n      doc.allocation = volunteer.allocation ? volunteer.allocation : doc.allocation;\n      doc.updated_at = new Date();\n      localDB.put(doc);\n    });\n  }\n\n   /**\n    * Deletes an entry by its id from the local database\n    * @param volunteerId The volunteer id\n    */\n  deleteVolunteerById(volunteerId: string) {\n    localDB.get(volunteerId).then((doc) => {\n      localDB.remove(doc);\n    });\n  }\n\n  /**\n   * Filters local Volunteers database by the given parameters' values\n   * @param countyId County id\n   * @param organisationId Organisation id\n   * @param courseId Course name id\n   * @param page A number defining the current page of volunteers from the total list (used to paginate the response)\n   * @param limit The number of volunteers per page\n   * @returns An Observable with all volunteers matching the filters\n   */\n  filter(countyId: string, organisationId: string, courseId: string, page: number, limit: number): Observable {\n    const skip = page * limit;\n    const selector: any = {$and : []};\n\n    selector['$and'].push( {\n      type: this.type,\n    });\n\n    if (countyId) {\n      selector['$and'].push( {\n        'county.id': {$eq: countyId},\n      });\n    }\n\n    if (organisationId) {\n      selector['$and'].push(  {\n        'organisation._id': {$eq: organisationId},\n      });\n    }\n\n    if (courseId) {\n      selector['$and'].push( {courses: {\n        $elemMatch : {\n          course_name_id: {$eq: courseId},\n          }\n        }\n      });\n    }\n\n    return from(localDB.find({\n      selector,\n      limit,\n      skip\n    }));\n  }\n\n  /**\n   * Searches for a volunteer with the given volunteer id and allocates it\n   * @param allocationId Last allocation id\n   * @param volunteerId Volunteer id\n   */\n  allocateVolunteer(allocationId: string, volunteerId: string) {\n    return localDB.get(volunteerId).then((doc) => {\n      doc.allocation = allocationId;\n      doc.updated_at = new Date();\n      localDB.put(doc);\n    });\n  }\n\n  /**\n   * Removes diacritics from a string\n   * @param text A string with diacritics\n   * @returns the new string, without diacritics\n   */\n  private removeSpecialChars(text: string): string {\n      const input   = 'ăâîșț';\n      const output  = 'aaist';\n      const regex = new RegExp('[' + input + ']', 'g');\n      const transl = {};\n\n      const lookup = (m) => transl[m] || m;\n\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.service.ts\n            \n            variable\n            credentialsKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/authentication/unauthenticated.guard.ts\n            \n            guard\n            UnauthenticatedGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/components/custom-selector/custom-selector.component.ts\n            \n            component\n            CustomSelectorComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/core/http/error-handler.interceptor.ts\n            \n            interceptor\n            ErrorHandlerInterceptor\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/http/error-handler.interceptor.ts\n            \n            variable\n            credentialsKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/http/request.interceptor.ts\n            \n            interceptor\n            RequestInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            clearData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            createCookie\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            getData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            getSessionName\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            readCookie\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            setData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/model/allocation.model.ts\n            \n            class\n            Allocation\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            interface\n            Credentials\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            interface\n            LoginPayload\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            interface\n            User\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/model/course.model.ts\n            \n            class\n            Course\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/core/model/error.model.ts\n            \n            interface\n            ErrorMessageObject\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/model/error.model.ts\n            \n            interface\n            RootObject\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/model/organisation.model.ts\n            \n            class\n            Organisation\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                src/app/core/model/volunteer.model.ts\n            \n            class\n            Volunteer\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                src/app/core/route-reusable-strategy.ts\n            \n            class\n            RouteReusableStrategy\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/service/allocation.service.ts\n            \n            injectable\n            AllocationService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/service/allocation.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/allocation.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/course.service.ts\n            \n            injectable\n            CourseService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/core/service/course.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/course.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            class\n            DatabaseSyncService\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/core/service/error-message.service.ts\n            \n            injectable\n            ErrorMessageService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/service/organisation.service.ts\n            \n            injectable\n            OrganisationService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/service/organisation.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/organisation.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/statics.service.ts\n            \n            injectable\n            StaticsService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/service/statics.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/statics.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/volunteer.service.ts\n            \n            injectable\n            VolunteerService\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/core/service/volunteer.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/volunteer.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/email-validation.ts\n            \n            class\n            EmailValidation\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/validators/password-validation.ts\n            \n            class\n            PasswordValidation\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/validators/phone-validation.ts\n            \n            class\n            PhoneValidation\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/validators/ssn-validation.ts\n            \n            class\n            SsnValidation\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/pages/about/about.page.ts\n            \n            component\n            AboutPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/authentication.page.ts\n            \n            component\n            AuthenticationPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/logout/logout.component.ts\n            \n            component\n            LogoutComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/recover-password/recover-password.component.ts\n            \n            component\n            RecoverPasswordComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            component\n            HomePage\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/add-volunteer/add-volunteer.component.ts\n            \n            component\n            AddVolunteerComponent\n            \n                85 %\n                (24/28)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/list-volunteer/list-volunteer.component.ts\n            \n            component\n            ListVolunteerComponent\n            \n                94 %\n                (32/34)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/send-message/send-message.component.ts\n            \n            component\n            SendMessageComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts\n            \n            component\n            ValidateVolunteerComponent\n            \n                92 %\n                (23/25)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/volunteer.page.ts\n            \n            component\n            VolunteerPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.local.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^7.2.2\n        \n            @angular/core : ^7.2.2\n        \n            @angular/forms : ^7.2.2\n        \n            @angular/http : ^7.2.2\n        \n            @angular/platform-browser : ^7.2.2\n        \n            @angular/platform-browser-dynamic : ^7.2.2\n        \n            @angular/router : ^7.2.2\n        \n            @ionic-native/camera : ^5.9.0\n        \n            @ionic-native/core : ^5.11.0\n        \n            @ionic-native/date-picker : ^5.11.0\n        \n            @ionic-native/deeplinks : ^5.11.0\n        \n            @ionic-native/in-app-browser : ^5.12.0\n        \n            @ionic-native/sms : ^5.11.0\n        \n            @ionic-native/splash-screen : ^5.0.0\n        \n            @ionic-native/status-bar : ^5.9.0\n        \n            @ionic/angular : ^4.6.2\n        \n            @ionic/lab : ^2.0.6\n        \n            @types/pouchdb : ^6.4.0\n        \n            cordova-android : ^8.0.0\n        \n            cordova-ios : ^5.0.1\n        \n            cordova-plugin-camera : ^4.0.3\n        \n            cordova-plugin-datepicker : ^0.9.3\n        \n            cordova-plugin-inappbrowser : ^3.1.0\n        \n            cordova-sms-plugin : ^1.0.0\n        \n            core-js : ^2.5.4\n        \n            ionic-plugin-deeplinks : ^1.0.20\n        \n            moment : ^2.24.0\n        \n            pouchdb : ^7.1.1\n        \n            pouchdb-find : ^7.1.1\n        \n            rxjs : ~6.5.1\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            clearData   (src/.../local-storage.service.ts)\n                        \n                        \n                            createCookie   (src/.../local-storage.service.ts)\n                        \n                        \n                            getData   (src/.../local-storage.service.ts)\n                        \n                        \n                            getSessionName   (src/.../local-storage.service.ts)\n                        \n                        \n                            readCookie   (src/.../local-storage.service.ts)\n                        \n                        \n                            setData   (src/.../local-storage.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/local-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            clearData\n                        \n                        \n                    \n                \n            \n            \n                \nclearData(type: any)\n                \n            \n\n\n\n\n            \n                \n                    Clears data from storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Storage type (local or session)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createCookie\n                        \n                        \n                    \n                \n            \n            \n                \ncreateCookie(name: any, value: any, days: any)\n                \n            \n\n\n\n\n            \n                \n                    Creates a cookie entry\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie name\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie value\n\n                                    \n                                \n                                \n                                    days\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie expiration number of days\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData(type: any)\n                \n            \n\n\n\n\n            \n                \n                    Retrieves all data from storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Storage type (local or session)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSessionName\n                        \n                        \n                    \n                \n            \n            \n                \ngetSessionName()\n                \n            \n\n\n\n\n            \n                \n                    Getter for session name\n\n\n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readCookie\n                        \n                        \n                    \n                \n            \n            \n                \nreadCookie(name: any)\n                \n            \n\n\n\n\n            \n                \n                    Getter for a cookie document by its name\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie's name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setData\n                        \n                        \n                    \n                \n            \n            \n                \nsetData(type: any, data: any)\n                \n            \n\n\n\n\n            \n                \n                    Sets data into storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Storage type (local or session)\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Information that needs to be stored\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthenticationPageModule\n\n\n\ncluster_AuthenticationPageModule_declarations\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_VolunteerPageModule\n\n\n\ncluster_VolunteerPageModule_declarations\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nAuthenticationPage\n\nAuthenticationPage\n\n\n\nAuthenticationPageModule\n\nAuthenticationPageModule\n\nAuthenticationPageModule -->\n\nAuthenticationPage->AuthenticationPageModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthenticationPageModule -->\n\nLoginComponent->AuthenticationPageModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAuthenticationPageModule -->\n\nLogoutComponent->AuthenticationPageModule\n\n\n\n\n\nRecoverPasswordComponent\n\nRecoverPasswordComponent\n\nAuthenticationPageModule -->\n\nRecoverPasswordComponent->AuthenticationPageModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationPageModule -->\n\nResetPasswordComponent->AuthenticationPageModule\n\n\n\n\n\nCustomSelectorComponent\n\nCustomSelectorComponent\n\nCoreModule -->\n\nCustomSelectorComponent->CoreModule\n\n\n\n\n\nAllocationService\n\nAllocationService\n\nCoreModule -->\n\nAllocationService->CoreModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nCoreModule -->\n\nAuthenticationService->CoreModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nCoreModule -->\n\nCourseService->CoreModule\n\n\n\n\n\nErrorHandlerInterceptor\n\nErrorHandlerInterceptor\n\nCoreModule -->\n\nErrorHandlerInterceptor->CoreModule\n\n\n\n\n\nErrorMessageService\n\nErrorMessageService\n\nCoreModule -->\n\nErrorMessageService->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\nOrganisationService\n\nOrganisationService\n\nCoreModule -->\n\nOrganisationService->CoreModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\n\n\nStaticsService\n\nStaticsService\n\nCoreModule -->\n\nStaticsService->CoreModule\n\n\n\n\n\nVolunteerService\n\nVolunteerService\n\nCoreModule -->\n\nVolunteerService->CoreModule\n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nAddVolunteerComponent\n\nAddVolunteerComponent\n\n\n\nVolunteerPageModule\n\nVolunteerPageModule\n\nVolunteerPageModule -->\n\nAddVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nListVolunteerComponent\n\nListVolunteerComponent\n\nVolunteerPageModule -->\n\nListVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nSendMessageComponent\n\nSendMessageComponent\n\nVolunteerPageModule -->\n\nSendMessageComponent->VolunteerPageModule\n\n\n\n\n\nValidateVolunteerComponent\n\nValidateVolunteerComponent\n\nVolunteerPageModule -->\n\nValidateVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nVolunteerPage\n\nVolunteerPage\n\nVolunteerPageModule -->\n\nVolunteerPage->VolunteerPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        27 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AboutPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VolunteerPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            credentialsKey   (src/.../authentication.service.ts)\n                        \n                        \n                            credentialsKey   (src/.../error-handler.interceptor.ts)\n                        \n                        \n                            environment   (src/.../environment.dev.ts)\n                        \n                        \n                            environment   (src/.../environment.local.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            localDB   (src/.../allocation.service.ts)\n                        \n                        \n                            localDB   (src/.../course.service.ts)\n                        \n                        \n                            localDB   (src/.../organisation.service.ts)\n                        \n                        \n                            localDB   (src/.../statics.service.ts)\n                        \n                        \n                            localDB   (src/.../volunteer.service.ts)\n                        \n                        \n                            remoteDB   (src/.../allocation.service.ts)\n                        \n                        \n                            remoteDB   (src/.../course.service.ts)\n                        \n                        \n                            remoteDB   (src/.../organisation.service.ts)\n                        \n                        \n                            remoteDB   (src/.../statics.service.ts)\n                        \n                        \n                            remoteDB   (src/.../volunteer.service.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/core/authentication/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            credentialsKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'credentials'\n                        \n                    \n\n                \n                    \n                        Stores the value of credentials' key\n\n                    \n                \n\n            \n        \n\n    src/app/core/http/error-handler.interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            credentialsKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'credentials'\n                        \n                    \n\n                \n                    \n                        Key that identifies the credentials\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.dev.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'DEV',\n  production: false,\n  serverBaseUrl: 'https://rvm-api.lxhost.ro',\n  serverUrl: 'https://rvm-api.lxhost.ro/api',\n  databaseURL: 'http://rvm.lxhost.ro:5984'\n}\n                        \n                    \n\n                \n                    \n                        Developement environment values\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.local.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'LOCAL',\n  production: false\n}\n                        \n                    \n\n                \n                    \n                        Local environment values\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'PROD',\n  production: true,\n  serverBaseUrl: 'https://rvm-api.lxhost.ro',\n  serverUrl: 'https://rvm-api.lxhost.ro/api',\n  databaseURL: 'http://rvm.lxhost.ro:5984'\n}\n                        \n                    \n\n                \n                    \n                        Production environment values\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'DEFAULT',\n  production: false,\n  serverBaseUrl: 'https://rvm-api.lxhost.ro',\n  serverUrl: 'https://rvm-api.lxhost.ro/api',\n  databaseURL: 'http://rvm.lxhost.ro:5984'\n}\n                        \n                    \n\n                \n                    \n                        Default environment values\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/allocation.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('allocations')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/allocations')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Allocations Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/course.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('courses')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Courses Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/courses')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Courses Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/organisation.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('organisations')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Organisations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/organisations')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Organisations Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/statics.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('statics')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Statics Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/statics')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Statics Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/volunteer.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('volunteers')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/volunteers')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
