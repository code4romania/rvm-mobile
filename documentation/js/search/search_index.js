var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AboutPage.html",[0,0.664,1,1.244]],["body/components/AboutPage.html",[0,0.946,1,1.939,2,1.511,3,0.13,4,0.13,5,1.303,6,1.381,7,1.303,8,1.232,9,0.112,10,2.604,11,1.303,12,2.462,13,2.349,14,1.99,15,5.137,16,1.878,17,4.382,18,0.295,19,0.019,20,0.444,21,1.668,22,1.105,23,2.604,24,0.149,25,0.041,26,3.754,27,4.817,28,3.754,29,1.369,30,4.817,31,5.319,32,3.031,33,4.382,34,4.295,35,4.382,36,4.382,37,6.269,38,4.382,39,5.622,40,4.382,41,4.382,42,6.549,43,4.382,44,4.382,45,4.382,46,4.382,47,4.817,48,4.733,49,4.382,50,5.091,51,4.382,52,6.208,53,4.382,54,4.382,55,4.382,56,4.382,57,4.382,58,4.382,59,4.382,60,4.382,61,4.382,62,5.622,63,5.622,64,5.622,65,5.622,66,5.622,67,4.382,68,4.382,69,5.622,70,5.622,71,4.382,72,5.622,73,4.382,74,5.611,75,6.208,76,4.382,77,4.382,78,3.031,79,4.382,80,6.208,81,4.382,82,4.382,83,4.382,84,4.382,85,4.382,86,4.382,87,3.754,88,4.382,89,5.622,90,5.622,91,4.382,92,4.382,93,4.382,94,4.286,95,4.382,96,4.382,97,4.382,98,4.382,99,4.817,100,4.382,101,4.382,102,4.382,103,4.382,104,4.382,105,4.382,106,4.382,107,4.382,108,4.382,109,3.34,110,3.34,111,4.382,112,2.25,113,4.382,114,4.382,115,4.382,116,4.382,117,4.817,118,4.382,119,4.382,120,4.382,121,4.382,122,4.382,123,4.382,124,4.382,125,2.579,126,4.382,127,4.382,128,4.382,129,4.382,130,4.382,131,0.898,132,1.878,133,1.776,134,1.303,135,2.41,136,1.303,137,0.458,138,1.303,139,1.105,140,1.166,141,2.202,142,1.048,143,1.303,144,1.048,145,1.303,146,1.048,147,1.232,148,1.303,149,1.048,150,1.303,151,1.105,152,0.945,153,1.048,154,1.303,155,1.048,156,1.303,157,1.048,158,1.232,159,1.878,160,1.048,161,0.81,162,1.048,163,1.166,164,1.303,165,1.105,166,1.166,167,1.048,168,1.303,169,1.303,170,0.008,171,0.012,172,0.008]],["title/modules/AboutPageModule.html",[173,1.244,174,2.495]],["body/modules/AboutPageModule.html",[0,0.892,1,2.485,2,1.672,3,0.207,4,0.207,9,0.178,18,0.699,19,0.02,20,0.708,24,0.238,25,0.066,131,1.431,152,1.507,161,1.292,170,0.013,171,0.016,172,0.013,173,2.066,174,4.919,175,2.201,176,2.338,177,3.567,178,2.659,179,2.659,180,2.489,181,4.153,182,4.153,183,3.287,184,2.338,185,4.848,186,3.287,187,3.808,188,2.489,189,3.808,190,1.763,191,3.276,192,2.854,193,1.36,194,3.527,195,2.078,196,4.848,197,3.076,198,3.695,199,4.848,200,1.227,201,2.854,202,2.659,203,2.659,204,3.695,205,3.354,206,4.848,207,4.848]],["title/classes/Allocation.html",[25,0.049,208,2.123]],["body/classes/Allocation.html",[3,0.158,4,0.158,9,0.136,19,0.021,24,0.181,25,0.05,29,1.858,112,3.146,137,0.738,170,0.01,171,0.013,172,0.01,208,3.98,209,1.586,210,3.17,211,0.416,212,2.82,213,1.419,214,0.332,215,1.088,216,3.317,217,4.354,218,3.772,219,3.98,220,4.354,221,3.471,222,4.893,223,0.721,224,4.354,225,1.276,226,1.093,227,3.7,228,2.458,229,3.7,230,2.283,231,3.833,232,2.037,233,3.195,234,4.885,235,3.7,236,3.625,237,5.038,238,3.7,239,3.7,240,3.317,241,2.758,242,3.7,243,3.478,244,3.7,245,4.307,246,4.307,247,1.646,248,3.195,249,3.7,250,3.894,251,3.195,252,3.7,253,2.758,254,2.96,255,3.7,256,2.955,257,5.028]],["title/injectables/AllocationService.html",[258,0.913,259,2.292]],["body/injectables/AllocationService.html",[3,0.13,4,0.13,9,0.111,12,1.047,18,0.665,19,0.021,20,0.443,24,0.149,25,0.07,29,1.745,137,0.698,170,0.008,171,0.012,172,0.008,200,1.508,208,4.036,211,0.577,213,2.512,214,0.393,215,1.216,216,2.873,218,3.765,219,3.653,221,3.284,222,2.602,223,0.657,225,0.978,226,0.871,228,2.256,230,2.332,237,3.338,240,3.157,243,3.888,248,2.783,250,4.239,251,2.783,258,1.108,259,2.783,260,1.464,261,2.315,262,1.592,263,1.68,264,1.68,265,1.839,266,0.806,267,4.378,268,2.476,269,4.378,270,1.299,271,2.101,272,2.031,273,3.765,274,4.378,275,2.248,276,2.402,277,3.308,278,3.186,279,3.075,280,0.945,281,0.844,282,4.378,283,3.037,284,2.783,285,1.97,286,3.338,287,2.111,288,3.308,289,0.998,290,3.029,291,2.248,292,3.751,293,3.029,294,1.68,295,1.096,296,2.402,297,4.378,298,3.037,299,4.399,300,1.047,301,2.783,302,1.788,303,1.93,304,1.93,305,1.379,306,1.559,307,1.379,308,2.315,309,1.93,310,0.994,311,3.037,312,3.037,313,2.602,314,3.029,315,1.433,316,1.666,317,1.44,318,2.315,319,1.788,320,1.788,321,1.666,322,1.93,323,1.559,324,1.666,325,1.666,326,1.302,327,1.93,328,1.516,329,1.93,330,1.93,331,2.101,332,2.315,333,1.93,334,5.134,335,4.378,336,1.223,337,2.602,338,3.037,339,2.602,340,3.037,341,3.037,342,3.037,343,2.602,344,2.602,345,3.037,346,3.037,347,3.338,348,3.338,349,3.338,350,3.338,351,3.037,352,3.037,353,3.338,354,3.037,355,2.602,356,2.315,357,1.44,358,3.037,359,2.315,360,3.037,361,3.037,362,2.101,363,2.101,364,2.315,365,2.315,366,2.602]],["title/components/AppComponent.html",[0,0.664,142,1.244]],["body/components/AppComponent.html",[0,0.837,1,0.694,2,1.105,3,0.086,4,0.086,5,0.863,7,0.863,8,0.816,9,0.074,11,0.863,12,2.29,13,2.269,16,1.373,18,0.59,19,0.021,20,0.294,22,1.654,24,0.099,25,0.027,26,2.745,27,2.745,29,0.536,30,3.897,47,2.745,48,2.442,87,4.753,94,1.535,99,1.725,109,3.468,110,3.042,117,1.725,131,0.594,132,1.373,133,1.298,134,0.863,135,1.95,136,0.863,137,0.553,138,0.863,139,0.732,140,0.772,141,1.71,142,1.569,143,0.863,144,0.694,145,0.863,146,0.694,147,0.816,148,0.863,149,0.694,150,0.863,151,0.732,152,0.626,153,0.694,154,0.863,155,0.694,156,0.863,157,0.694,158,0.816,159,1.373,160,1.376,161,0.536,162,0.694,163,0.772,164,0.863,165,0.732,166,0.772,167,0.694,168,0.863,169,0.863,170,0.005,171,0.009,172,0.005,188,1.034,193,0.565,195,0.863,200,0.811,211,0.36,214,0.181,215,0.693,223,0.482,225,0.695,226,0.943,232,1.298,233,2.891,256,1.545,262,2.436,263,1.905,264,1.905,265,2.068,266,0.59,268,2.551,270,0.811,272,2.032,276,1.757,279,1.455,280,0.59,281,0.527,287,2.194,289,1.079,291,1.645,295,0.837,300,1.376,310,1.306,315,1.049,328,1.178,336,1.274,357,0.899,367,1.725,368,1.373,369,3.991,370,3.204,371,3.204,372,3.991,373,3.991,374,3.991,375,3.991,376,4.549,377,4.549,378,2.745,379,3.042,380,3.468,381,2.013,382,4.933,383,4.933,384,2.762,385,2.777,386,5.21,387,3.66,388,4.549,389,3.468,390,5.758,391,3.204,392,3.897,393,3.204,394,4.549,395,3.147,396,3.897,397,2.675,398,2.902,399,2.442,400,2.745,401,3.147,402,3.436,403,4.532,404,4.532,405,2.013,406,4.549,407,2.678,408,2.745,409,3.204,410,3.204,411,4.532,412,4.032,413,2.745,414,1.95,415,3.204,416,2.745,417,3.204,418,3.204,419,3.204,420,3.204,421,3.147,422,3.468,423,2.745,424,2.745,425,3.204,426,1.531,427,2.013,428,2.217,429,2.745,430,2.036,431,3.204,432,2.745,433,2.442,434,2.745,435,2.013,436,3.409,437,2.442,438,3.114,439,2.013,440,2.442,441,2.442,442,5.413,443,2.745,444,2.217,445,2.442,446,2.217,447,2.745,448,2.745,449,2.745,450,2.217,451,2.745,452,2.745,453,3.204,454,3.204,455,3.204,456,3.204,457,2.013,458,3.042,459,2.013,460,2.395,461,2.036,462,3.204,463,3.204,464,3.204,465,3.204,466,3.204,467,3.991,468,2.013,469,3.204,470,2.013,471,3.204,472,2.013,473,2.036,474,3.204,475,2.217,476,2.013,477,2.761,478,1.535,479,1.725,480,1.535,481,1.725,482,1.279,483,1.725,484,1.725,485,2.013,486,1.393,487,1.725,488,1.535,489,2.013,490,1.104,491,1.393,492,2.013,493,2.013,494,3.204,495,3.204,496,2.013,497,2.013,498,2.013,499,1.393,500,2.013,501,2.013,502,2.013,503,1.725,504,2.013,505,2.013,506,2.013,507,2.013,508,2.013,509,1.455,510,2.013,511,3.991,512,2.013,513,2.217,514,2.217,515,2.013,516,1.725,517,2.013,518,2.013,519,3.204,520,2.013,521,1.725,522,1.725,523,1.725,524,2.013,525,2.013,526,2.013,527,2.013,528,2.013,529,1.535,530,3.204,531,2.013,532,1.393,533,2.013,534,0.816,535,2.013,536,2.013,537,1.393,538,1.279,539,1.535,540,1.535,541,3.204]],["title/modules/AppModule.html",[173,1.244,542,2.495]],["body/modules/AppModule.html",[3,0.186,4,0.186,9,0.159,13,2.136,18,0.713,19,0.02,20,0.633,24,0.213,25,0.059,131,1.281,142,2.534,161,1.156,170,0.012,171,0.015,172,0.012,173,1.496,175,2.537,176,2.092,177,3.39,178,3.39,179,3.39,180,2.228,183,3.065,184,2.092,186,3.065,193,1.217,194,2.554,195,1.86,203,3.065,291,2.228,382,4.786,383,4.786,477,4.671,478,3.308,479,3.717,480,3.308,481,3.717,482,2.758,490,2.38,542,5.055,543,3.717,544,3.717,545,3.717,546,3.717,547,4.393,548,4.393,549,4.339,550,5.587,551,3.717,552,3.002,553,4.259,554,5.587,555,4.339,556,4.339,557,4.786,558,3.717,559,4.339,560,4.259,561,3.717,562,4.786,563,3.717,564,4.339,565,3.717,566,4.339,567,3.717,568,3.717,569,4.339,570,4.339,571,4.339,572,2.554,573,4.339]],["title/classes/AppPage.html",[25,0.049,574,2.749]],["body/classes/AppPage.html",[3,0.225,4,0.225,9,0.193,18,0.51,19,0.02,24,0.258,25,0.071,133,2.13,137,0.55,170,0.014,171,0.017,172,0.014,209,2.252,214,0.471,226,1.044,266,1.158,280,0.967,281,0.864,295,1.24,357,1.89,552,3.636,574,4.797,575,4.502,576,6.983,577,6.983,578,6.293,579,5.255,580,5.255,581,6.293,582,5.255,583,5.255,584,5.255,585,5.255,586,5.255,587,5.255,588,5.255,589,5.255]],["title/modules/AppRoutingModule.html",[173,1.244,547,2.292]],["body/modules/AppRoutingModule.html",[3,0.209,4,0.209,9,0.179,13,1.598,18,0.633,19,0.02,20,0.712,24,0.239,25,0.066,29,1.301,152,1.517,170,0.013,171,0.016,172,0.013,173,1.683,175,2.733,180,2.506,186,3.301,191,3.373,192,3.542,193,1.369,197,3.496,200,1.235,201,4.117,202,3.578,203,2.677,205,3.377,397,2.354,482,3.102,490,2.677,547,3.824,590,4.881,591,4.881,592,6.017,593,6.017,594,4.881,595,4.182,596,4.881,597,3.824,598,4.881,599,4.182,600,6.81,601,4.881,602,4.881,603,4.881,604,4.182,605,4.881,606,4.881,607,4.881,608,4.881]],["title/guards/AuthenticationGuard.html",[197,1.851,609,2.292]],["body/guards/AuthenticationGuard.html",[3,0.185,4,0.185,9,0.158,18,0.598,19,0.02,20,0.629,22,2.023,24,0.211,25,0.084,29,1.483,137,0.451,166,2.135,170,0.011,171,0.015,172,0.011,191,2.683,193,1.21,197,2.857,202,3.785,211,0.626,214,0.387,223,0.419,226,0.863,232,2.255,247,1.822,256,2.683,258,1.408,264,2.498,265,1.822,266,1.024,270,1.648,272,2.329,280,0.794,281,0.709,287,2.683,289,1.266,295,1.024,310,1.822,328,1.643,336,1.142,357,1.561,368,1.848,384,3.189,397,3.139,414,2.385,428,3.85,438,3.276,460,2.08,473,4.137,475,3.85,597,3.537,609,3.537,610,3.287,611,3.695,612,4.242,613,4.768,614,4.504,615,4.768,616,2.366,617,4.313,618,3.571,619,4.242,620,2.385,621,4.313,622,4.242,623,4.768,624,4.768,625,4.768,626,4.768,627,2.683,628,3.695,629,3.287,630,2.983,631,2.741]],["title/components/AuthenticationPage.html",[0,0.664,144,1.244]],["body/components/AuthenticationPage.html",[0,1.172,1,1.595,2,2.007,3,0.198,4,0.198,5,1.982,6,2.1,7,1.982,8,1.874,9,0.17,11,1.982,12,2.592,13,2.46,14,2.642,16,2.494,18,0.449,19,0.02,20,0.675,22,1.681,24,0.227,25,0.063,29,1.232,131,1.365,132,2.494,133,2.358,134,1.982,135,2.863,136,1.982,137,0.609,138,1.982,139,1.681,140,1.774,141,2.729,142,1.595,143,1.982,144,2.304,145,1.982,146,1.595,147,1.874,148,1.982,149,1.595,150,1.982,151,1.681,152,1.437,153,1.595,154,1.982,155,1.595,156,1.982,157,1.595,158,1.874,159,2.494,160,1.595,161,1.232,162,1.595,163,1.774,164,1.982,165,1.681,166,1.774,167,1.595,168,1.982,169,1.982,170,0.012,171,0.015,172,0.012,263,1.774,310,2.084,458,3.525,490,2.537,632,3.962,633,6.366,634,5.818,635,3.962,636,4.624,637,2.23]],["title/modules/AuthenticationPageModule.html",[173,1.244,638,2.495]],["body/modules/AuthenticationPageModule.html",[0,1.229,2,2.096,3,0.179,4,0.179,9,0.154,18,0.705,19,0.021,20,0.612,24,0.205,25,0.057,131,1.237,144,2.405,153,2.405,155,2.405,157,2.405,158,2.213,160,2.405,161,1.455,170,0.011,171,0.015,172,0.011,173,1.884,175,1.903,176,2.021,177,3.333,178,2.299,179,2.299,180,2.151,183,2.996,184,2.021,186,2.996,187,3.471,188,2.151,189,3.471,190,1.524,191,3.105,192,2.467,193,1.175,194,3.215,195,1.796,200,1.061,201,3.931,202,2.996,203,2.299,204,3.194,205,2.899,310,1.788,486,2.899,487,4.68,604,4.68,627,2.021,638,5.108,639,3.59,640,3.59,641,4.19,642,4.68,643,4.19,644,3.194,645,4.19,646,4.19,647,3.862,648,4.19,649,3.59,650,4.19,651,2.899,652,4.19,653,4.19]],["title/injectables/AuthenticationService.html",[258,0.913,272,1.18]],["body/injectables/AuthenticationService.html",[3,0.096,4,0.096,9,0.082,18,0.506,19,0.021,20,0.326,21,1.906,23,2.977,24,0.109,25,0.071,78,2.952,137,0.546,161,1.283,163,1.333,170,0.006,171,0.009,172,0.006,184,1.676,200,1.08,211,0.621,213,1.848,214,0.2,215,0.752,223,0.536,225,1.111,226,1.005,247,2.176,251,3.983,256,3.022,258,0.88,260,1.076,264,1.848,265,1.953,266,0.64,268,2.956,270,1.219,272,1.138,280,0.961,281,0.858,285,2.352,287,1.676,289,1.318,291,3.064,294,2.521,295,1.275,296,3.605,300,0.77,307,1.014,308,2.649,309,1.419,310,2.052,315,1.577,317,1.351,323,3.218,328,1.26,336,1.184,357,1.758,359,1.701,362,2.404,385,2.878,400,2.977,414,2.736,426,0.856,430,3.513,461,3.317,473,3.513,612,2.649,614,3.332,618,2.642,620,2.064,622,2.649,627,2.956,635,2.977,637,3.206,651,3.824,654,1.701,655,2.977,656,4.267,657,3.514,658,4.816,659,3.475,660,2.649,661,3.475,662,2.977,663,4.267,664,2.232,665,5.77,666,3.475,667,3.475,668,3.793,669,4.816,670,2.649,671,2.649,672,1.906,673,2.232,674,2.232,675,4.267,676,2.232,677,4.128,678,3.254,679,5.968,680,5.112,681,4.267,682,3.332,683,2.232,684,3.475,685,2.046,686,3.475,687,3.475,688,2.232,689,4.816,690,2.783,691,3.475,692,3.475,693,3.475,694,4.816,695,3.475,696,3.817,697,2.232,698,3.475,699,3.475,700,3.475,701,5.77,702,2.232,703,3.475,704,2.232,705,2.404,706,3.671,707,2.977,708,3.475,709,2.232,710,2.977,711,3.475,712,3.656,713,2.977,714,2.977,715,2.404,716,2.232,717,2.232,718,3.032,719,2.232,720,2.232,721,2.232,722,2.232,723,3.475,724,3.475,725,1.544,726,1.544,727,1.544,728,2.404,729,3.475,730,2.232,731,4.267,732,2.232,733,2.232,734,2.232,735,2.232,736,2.232,737,2.232,738,2.232,739,2.232,740,2.232,741,2.232,742,4.267,743,2.232,744,2.232,745,2.232,746,2.232,747,1.912,748,2.232,749,2.232,750,3.475,751,2.232,752,2.232]],["title/modules/CoreModule.html",[173,1.244,548,2.292]],["body/modules/CoreModule.html",[3,0.166,4,0.166,9,0.142,18,0.709,19,0.02,20,0.566,24,0.19,25,0.053,131,1.145,146,2.398,161,1.033,170,0.01,171,0.014,172,0.01,173,1.79,175,1.761,176,1.87,177,3.209,178,2.127,179,3.209,180,1.991,183,2.847,184,1.87,186,2.847,187,3.298,188,1.991,189,3.298,190,1.41,192,3.055,193,1.088,194,3.055,195,1.662,197,2.665,203,2.127,259,4.259,263,1.488,272,2.194,273,3.945,285,1.488,310,1.27,328,1.145,385,3.231,387,3.298,397,1.87,482,2.465,548,4.809,553,3.957,565,4.446,567,4.446,568,4.446,620,1.662,647,3.298,670,2.957,725,2.683,726,2.683,753,3.323,754,3.323,755,3.323,756,3.945,757,4.259,758,3.945,759,4.259,760,4.476,761,4.259,762,3.878,763,5.19,764,5.19,765,3.591,766,2.957,767,3.323,768,3.878,769,3.878,770,3.878,771,2.957,772,3.878,773,3.878,774,3.878,775,2.957,776,3.878]],["title/injectables/CourseService.html",[258,0.913,756,2.123]],["body/injectables/CourseService.html",[3,0.167,4,0.167,9,0.143,12,1.345,18,0.651,19,0.021,20,0.569,24,0.191,25,0.08,137,0.408,170,0.01,171,0.014,172,0.01,200,1.485,211,0.586,214,0.35,215,1.128,223,0.697,225,0.907,226,0.97,230,2.664,258,1.318,260,1.881,262,2.276,263,2.402,264,2.402,265,2.197,266,0.959,270,1.485,272,2.049,275,2.675,276,2.857,277,3.685,278,3.446,279,2.843,280,0.718,281,0.641,285,1.496,289,1.217,295,1.08,300,1.797,301,3.979,302,2.296,303,2.479,304,2.479,305,1.771,306,2.002,307,1.771,310,1.92,315,1.705,316,2.139,317,1.461,319,2.296,320,2.296,321,2.139,322,2.479,323,2.002,324,2.139,325,2.139,326,1.672,327,2.479,328,1.926,329,2.479,330,2.479,331,2.698,336,0.8,357,1.094,363,2.698,756,3.067,777,2.973,778,5.116,779,5.866,780,6.26,781,3.9,782,5.209,783,4.481,784,5.866,785,3.9,786,6.26,787,5.209,788,5.866,789,4.463,790,3.9,791,3.311,792,2.973,793,2.698,794,3.341]],["title/interfaces/Credentials.html",[657,1.739,795,1.546]],["body/interfaces/Credentials.html",[3,0.195,4,0.195,9,0.168,19,0.021,24,0.31,112,3.414,137,0.604,170,0.012,171,0.015,172,0.012,211,0.513,213,2.631,214,0.409,215,1.249,216,2.201,223,0.56,225,1.252,228,1.66,241,2.504,247,2.457,253,2.504,254,2.687,256,2.201,310,2.071,627,3.051,637,2.783,657,3.206,682,3.158,690,2.783,696,4.123,795,3.049,796,2.687,797,3.158,798,2.901,799,2.901,800,2.901,801,3.48,802,3.48,803,2.783,804,1.66,805,2.687,806,3.48,807,3.48,808,3.48]],["title/components/CustomSelectorComponent.html",[0,0.664,146,1.244]],["body/components/CustomSelectorComponent.html",[0,0.908,1,0.977,2,1.435,3,0.121,4,0.121,5,1.214,6,1.286,7,1.214,8,1.148,9,0.104,11,1.214,12,2.474,13,2.312,14,1.89,16,1.784,18,0.528,19,0.02,20,0.413,21,1.553,22,2.423,24,0.139,25,0.038,29,0.755,131,0.836,132,1.784,133,1.686,134,1.214,135,2.331,136,1.214,137,0.569,138,1.214,139,1.03,140,1.086,141,2.114,142,0.977,143,1.214,144,0.977,145,1.214,146,1.875,147,2.656,148,1.214,149,0.977,150,1.214,151,1.03,152,0.88,153,0.977,154,1.214,155,0.977,156,1.214,157,0.977,158,1.148,159,1.784,160,0.977,161,0.755,162,0.977,163,1.086,164,1.214,165,1.03,166,1.086,167,0.977,168,1.214,169,1.214,170,0.008,171,0.011,172,0.008,195,1.214,200,1.053,205,1.959,211,0.468,214,0.254,215,0.901,223,0.528,226,0.97,240,2.921,247,1.78,263,1.596,264,1.596,265,0.927,266,0.766,270,1.249,275,2.792,280,0.766,281,0.684,285,2.402,289,1.057,295,1.115,307,1.286,315,1.78,326,1.214,328,0.836,336,1.012,368,1.784,385,3.097,399,3.172,401,2.879,407,3.201,411,5.189,412,4.772,413,5.363,416,4.658,423,5.855,424,3.565,426,2.086,432,3.565,433,4.145,461,2.645,499,4.008,509,1.89,532,1.959,537,1.959,538,1.8,620,1.784,668,3.849,672,2.283,685,2.45,705,2.879,726,1.959,771,4.896,809,5.502,810,2.426,811,2.904,812,4.933,813,4.933,814,4.161,815,4.161,816,5.437,817,5.437,818,3.201,819,3.565,820,4.226,821,2.832,822,5.437,823,4.161,824,4.933,825,4.161,826,2.832,827,4.161,828,4.161,829,4.161,830,2.832,831,4.161,832,4.161,833,3.762,834,2.832,835,2.832,836,4.161,837,4.161,838,2.832,839,4.161,840,4.161,841,4.161,842,4.161,843,4.161,844,4.161,845,4.161,846,2.283,847,2.832,848,2.832,849,2.832,850,2.832,851,2.832,852,2.832,853,2.832,854,2.832,855,2.832,856,2.832,857,2.832,858,2.832,859,2.832,860,2.832,861,2.832,862,2.832,863,2.832,864,2.832,865,2.832,866,2.832,867,4.161,868,4.161,869,2.832,870,2.832,871,2.832,872,2.159,873,2.832,874,2.832,875,2.426,876,2.832,877,2.832,878,1.959,879,2.426,880,2.426,881,3.565,882,2.159,883,2.832]],["title/classes/DatabaseSyncService.html",[25,0.049,387,2.292]],["body/classes/DatabaseSyncService.html",[3,0.144,4,0.144,9,0.123,18,0.457,19,0.021,24,0.165,25,0.046,170,0.009,171,0.013,172,0.009,209,1.442,211,0.378,214,0.302,215,1.019,223,0.672,226,1.084,230,3.143,250,4.188,266,0.867,270,0.851,276,3.227,278,3.592,279,3.388,285,2.708,288,3.197,295,0.867,302,1.98,305,1.528,306,1.727,315,2.407,317,1.941,318,2.564,323,3.553,325,3.397,357,1.321,365,2.564,387,2.992,433,3.589,509,1.528,620,2.018,783,3.936,792,2.564,884,6.048,885,2.882,886,4.708,887,5.432,888,5.432,889,5.432,890,5.432,891,5.432,892,5.432,893,5.432,894,5.432,895,5.432,896,5.432,897,5.884,898,3.364,899,3.364,900,3.364,901,4.285,902,3.364,903,3.364,904,3.646,905,3.364,906,3.364,907,3.364,908,3.364,909,3.364,910,3.364,911,4.708,912,5.884,913,4.708,914,4.708,915,4.708,916,2.882,917,3.364,918,2.564,919,3.364,920,3.364,921,3.364,922,3.364,923,2.564,924,3.364,925,3.364,926,3.364,927,3.364,928,2.564,929,3.364,930,3.364,931,3.364,932,3.364,933,3.364,934,3.364,935,3.364,936,3.364,937,3.364,938,3.364,939,3.364,940,1.363]],["title/classes/EmailValidation.html",[25,0.049,941,2.292]],["body/classes/EmailValidation.html",[3,0.198,4,0.198,9,0.17,18,0.45,19,0.02,24,0.227,25,0.086,31,3.968,50,3.205,137,0.485,170,0.012,171,0.015,172,0.012,190,1.684,200,1.474,209,1.985,211,0.655,214,0.415,223,0.45,225,1.014,226,0.718,232,2.36,236,3.195,266,1.072,280,0.853,281,0.761,289,1.132,294,2.444,295,1.072,315,1.907,317,1.299,333,3.701,336,0.951,357,1.634,534,2.36,690,3.441,791,4.049,805,3.429,846,3.195,940,2.36,941,4.248,942,4.029,943,2.944,944,5.824,945,5.824,946,4.864,947,3.531,948,3.701,949,4.029,950,4.029,951,4.029,952,3.701,953,4.029,954,3.701,955,3.701,956,3.531,957,3.968,958,4.632,959,5.824,960,4.632,961,3.531,962,4.632,963,4.632,964,3.968,965,4.632,966,3.968,967,4.632,968,4.632,969,4.632]],["title/interceptors/ErrorHandlerInterceptor.html",[757,2.292,970,2.749]],["body/interceptors/ErrorHandlerInterceptor.html",[3,0.142,4,0.142,9,0.122,18,0.65,19,0.021,20,0.483,21,2.555,24,0.162,25,0.073,125,2.742,137,0.564,170,0.009,171,0.012,172,0.009,193,0.929,200,1.179,211,0.657,214,0.297,223,0.523,225,0.576,226,0.835,236,2.555,258,1.179,263,2.242,264,2.45,265,2.091,266,0.857,270,1.479,280,0.991,281,0.885,285,1.271,289,0.906,295,1.076,296,3.734,300,1.606,305,1.504,306,1.701,307,1.504,309,2.105,317,1.306,328,0.978,336,1.311,357,0.929,362,4.633,368,1.42,384,2.979,385,3.327,414,1.996,428,3.222,437,5.001,438,2.742,475,3.222,499,3.222,616,1.817,618,3.503,619,3.55,620,2.505,630,2.291,631,2.105,657,2.246,668,2.96,670,3.55,671,4.455,672,3.206,678,4.177,725,2.291,726,2.291,727,3.222,728,2.291,747,2.838,757,2.96,758,4.061,775,2.525,940,2.659,971,4.455,972,2.525,973,4.043,974,4.657,975,5.387,976,4.615,977,3.312,978,3.714,979,5.007,980,5.471,981,4.657,982,3.312,983,5.844,984,3.312,985,3.99,986,2.838,987,5.007,988,5.007,989,3.312,990,3.99,991,3.55,992,3.222,993,2.838,994,3.99,995,3.312,996,3.312,997,3.312,998,2.838,999,3.312,1000,3.312,1001,3.312,1002,4.657,1003,3.312,1004,3.312,1005,3.312,1006,3.312,1007,3.312,1008,3.312,1009,4.657,1010,3.312,1011,4.657,1012,3.312,1013,3.312,1014,3.312,1015,3.312,1016,3.312]],["title/interfaces/ErrorMessageObject.html",[795,1.546,1017,2.495]],["body/interfaces/ErrorMessageObject.html",[3,0.199,4,0.199,9,0.171,19,0.021,24,0.286,125,2.736,170,0.012,171,0.016,172,0.012,211,0.522,213,1.783,214,0.417,215,1.263,223,0.712,225,1.285,228,2.558,287,2.241,436,2.996,534,2.927,795,2.955,796,2.736,798,2.954,799,2.954,804,2.433,940,3.072,1017,4.038,1018,3.543,1019,5.102,1020,3.981,1021,3.215,1022,3.981,1023,5]],["title/injectables/ErrorMessageService.html",[258,0.913,758,2.123]],["body/injectables/ErrorMessageService.html",[3,0.166,4,0.166,9,0.142,18,0.376,19,0.02,20,0.565,24,0.19,25,0.052,137,0.405,170,0.01,171,0.014,172,0.01,211,0.583,214,0.347,215,1.122,223,0.69,225,1.225,226,1.009,228,1.408,233,3.295,258,1.312,260,1.868,262,1.885,265,1.914,266,0.954,268,3.395,270,0.98,275,2.662,280,0.713,281,0.637,289,1.302,295,1.149,300,1.788,317,1.454,336,1.2,357,1.086,414,2.506,426,1.989,436,2.662,461,3.295,499,4.319,534,2.101,620,2.223,662,4.442,685,3.052,712,5.008,713,5.348,714,4.442,718,2.844,758,3.052,916,3.318,940,3.042,985,5.739,1019,5.106,1024,5.739,1025,3.318,1026,4.62,1027,5.846,1028,6.243,1029,3.873,1030,5.185,1031,3.873,1032,5.185,1033,6.243,1034,3.873,1035,3.873,1036,5.185,1037,5.185,1038,3.873,1039,3.873,1040,5.185,1041,3.873,1042,3.873,1043,3.873,1044,5.185]],["title/components/HomePage.html",[0,0.664,149,1.244]],["body/components/HomePage.html",[0,0.972,1,1.101,2,1.565,3,0.137,4,0.137,5,1.368,6,1.45,7,1.368,8,1.293,9,0.117,11,1.368,12,2.479,13,2.365,14,2.061,16,1.945,18,0.44,19,0.02,20,0.466,22,2.09,24,0.157,25,0.043,29,0.85,109,4.382,131,0.942,132,1.945,133,1.839,134,1.368,135,2.464,136,1.368,137,0.601,138,1.368,139,1.161,140,1.225,141,2.263,142,1.101,143,1.368,144,1.101,145,1.368,146,1.101,147,1.293,148,1.368,149,1.983,150,1.368,151,1.161,152,1.641,153,1.101,154,1.368,155,1.101,156,1.368,157,1.101,158,1.293,159,1.945,160,1.101,161,0.85,162,1.101,163,1.225,164,1.368,165,1.161,166,1.225,167,1.101,168,1.368,169,1.368,170,0.008,171,0.012,172,0.008,193,0.895,211,0.51,214,0.286,215,0.982,223,0.512,225,1.057,226,0.818,247,1.988,262,1.65,266,0.835,270,0.808,280,0.835,281,0.746,289,0.621,290,3.139,295,0.587,300,1.101,317,1.273,326,1.368,336,0.931,378,3.887,384,2.948,395,3.139,397,2.772,398,3.153,403,4.925,404,5.406,426,1.225,434,3.887,436,3.591,442,5.684,443,3.887,444,3.139,445,3.459,446,3.139,447,3.887,448,3.887,449,3.887,450,3.139,451,3.887,452,3.887,490,1.751,521,2.735,522,2.735,523,2.735,597,3.355,614,2.208,616,1.751,706,3.459,820,2.735,833,3.139,872,2.433,878,2.208,879,4.522,880,4.522,881,5.684,882,2.433,1045,2.735,1046,5.279,1047,4.537,1048,6.073,1049,3.192,1050,3.192,1051,4.537,1052,3.887,1053,4.537,1054,4.537,1055,4.537,1056,4.537,1057,3.139,1058,4.537,1059,4.537,1060,3.192,1061,3.192,1062,4.537,1063,3.192,1064,3.192,1065,5.279,1066,5.279,1067,3.192,1068,3.192,1069,3.887,1070,4.537,1071,2.735,1072,2.735,1073,3.192,1074,3.192,1075,3.139,1076,3.887,1077,4.925,1078,3.192,1079,3.192,1080,3.192,1081,2.029,1082,3.192,1083,2.735,1084,4.537,1085,3.887,1086,2.735,1087,3.192]],["title/modules/HomePageModule.html",[173,1.244,1088,2.495]],["body/modules/HomePageModule.html",[0,0.914,3,0.213,4,0.213,9,0.182,18,0.703,19,0.02,20,0.725,22,1.806,24,0.244,25,0.067,131,1.467,149,2.498,161,1.324,170,0.013,171,0.016,172,0.013,173,2.098,175,2.256,176,2.395,177,3.606,178,2.725,179,2.725,180,2.55,183,3.336,184,2.395,186,3.336,187,3.866,188,2.55,189,3.866,190,1.806,192,2.924,193,1.393,194,3.58,195,2.129,197,3.123,198,3.787,201,2.924,202,2.725,203,2.725,490,2.725,1088,4.948,1089,4.256,1090,4.256,1091,4.967,1092,4.967,1093,4.967]],["title/injectables/LocalStorageService.html",[258,0.913,385,1.739]],["body/injectables/LocalStorageService.html",[3,0.148,4,0.148,9,0.127,18,0.336,19,0.021,20,0.505,21,1.897,112,2.831,137,0.728,147,1.402,170,0.009,171,0.013,172,0.009,200,0.875,201,2.036,211,0.67,214,0.31,215,1.039,223,0.607,225,1.196,226,1.029,240,1.668,248,2.198,258,0.875,260,1.668,262,1.258,264,1.842,266,0.884,268,3.421,270,1.215,280,1.015,281,0.906,284,2.198,285,1.842,289,1.337,295,1.152,317,0.97,336,1.389,357,1.67,385,1.668,399,4.77,509,1.571,529,2.637,572,2.036,618,2.633,655,2.963,668,4.424,685,2.826,718,1.897,727,5.027,804,1.258,973,3.321,991,3.659,1094,5.161,1095,2.637,1096,5.956,1097,5.513,1098,5.956,1099,4.8,1100,4.8,1101,4.8,1102,4.8,1103,2.963,1104,3.459,1105,3.459,1106,4.8,1107,4.8,1108,3.459,1109,3.659,1110,7.093,1111,4.8,1112,3.459,1113,4.113,1114,4.8,1115,3.459,1116,4.8,1117,4.8,1118,3.459,1119,4.8,1120,2.963,1121,5.547,1122,5.36,1123,2.963,1124,2.963,1125,6.257,1126,3.459,1127,3.459,1128,4.8,1129,3.459,1130,3.459,1131,4.113,1132,2.963,1133,2.963,1134,3.459,1135,3.459,1136,3.459,1137,3.459,1138,3.459,1139,3.459,1140,3.459,1141,3.459,1142,3.459,1143,3.459]],["title/components/LoginComponent.html",[0,0.664,153,1.244]],["body/components/LoginComponent.html",[0,1.019,1,1.016,2,1.477,3,0.126,4,0.126,5,1.262,6,1.337,7,1.262,8,1.193,9,0.108,11,1.262,12,2.45,13,2.325,14,1.944,16,1.835,18,0.596,19,0.021,20,0.43,22,2.304,24,0.144,25,0.068,29,0.785,50,2.962,131,0.869,132,1.835,133,1.735,134,1.262,135,2.374,136,1.262,137,0.528,138,1.262,139,1.071,140,1.13,141,2.162,142,1.016,143,1.262,144,1.016,145,1.262,146,1.016,147,1.193,148,1.262,149,1.016,150,1.262,151,1.071,152,0.915,153,1.91,154,1.262,155,1.016,156,1.262,157,1.016,158,1.193,159,1.835,160,1.016,161,0.785,162,1.016,163,1.13,164,1.262,165,1.071,166,1.13,167,1.016,168,1.262,169,1.262,170,0.008,171,0.011,172,0.008,190,1.071,193,0.826,211,0.331,214,0.264,215,0.927,223,0.49,225,0.745,226,0.982,241,2.349,247,1.402,256,2.065,262,2.233,263,1.643,265,1.926,266,0.788,270,1.277,272,2.125,280,0.542,281,0.484,289,0.573,294,1.13,295,0.929,300,1.016,309,1.871,310,2.01,326,1.262,328,1.635,336,1.035,359,2.245,368,1.835,384,2.878,397,2.433,398,2.349,402,2.962,407,3.261,426,1.936,438,2.52,460,2.961,491,4.071,513,2.037,514,2.037,534,2.245,572,2.52,597,2.721,616,1.615,620,1.835,627,3.056,631,1.871,637,1.42,657,2.838,672,2.349,690,2.433,811,2.97,818,3.261,940,2.385,941,1.871,942,2.037,952,2.721,1057,2.962,1081,2.721,1144,2.523,1145,5.045,1146,4.282,1147,4.486,1148,5.045,1149,5.539,1150,5.539,1151,5.562,1152,4.282,1153,4.282,1154,4.492,1155,4.282,1156,2.945,1157,2.945,1158,2.945,1159,3.846,1160,3.668,1161,2.945,1162,4.282,1163,4.282,1164,4.282,1165,4.282,1166,4.282,1167,3.49,1168,2.945,1169,2.037,1170,4.282,1171,2.037,1172,2.945,1173,2.945,1174,2.945,1175,2.523,1176,2.962,1177,2.523,1178,3.846,1179,2.945,1180,2.945,1181,2.945,1182,2.945,1183,2.945,1184,3.264,1185,2.945,1186,2.945,1187,3.668,1188,3.668,1189,4.282,1190,4.282,1191,3.668]],["title/interfaces/LoginPayload.html",[795,1.546,800,2.292]],["body/interfaces/LoginPayload.html",[3,0.195,4,0.195,9,0.168,19,0.021,24,0.31,112,3.414,137,0.604,170,0.012,171,0.015,172,0.012,211,0.513,213,2.428,214,0.409,215,1.249,216,2.201,223,0.56,225,1.273,228,1.66,241,2.504,247,2.395,253,2.504,254,2.687,256,2.201,310,1.889,627,3.378,637,3.378,657,2.783,682,3.992,690,2.783,696,3.397,795,3.049,796,2.687,797,3.158,798,2.901,799,2.901,800,3.667,801,4.399,802,5.069,803,2.783,804,1.66,805,2.687,806,3.48,807,3.48,808,3.48]],["title/components/LogoutComponent.html",[0,0.664,155,1.244]],["body/components/LogoutComponent.html",[0,1.148,1,1.334,2,1.787,3,0.166,4,0.166,5,1.658,6,1.757,7,1.658,8,1.567,9,0.142,11,1.658,12,2.542,13,2.412,14,2.353,16,2.22,18,0.567,19,0.02,20,0.565,24,0.19,25,0.079,29,1.031,131,1.142,132,2.22,133,2.099,134,1.658,135,2.674,136,1.658,137,0.611,138,1.658,139,1.406,140,1.484,141,2.504,142,1.334,143,1.658,144,1.334,145,1.658,146,1.334,147,1.567,148,1.658,149,1.334,150,1.658,151,1.406,152,1.202,153,1.334,154,1.658,155,2.152,156,1.658,157,1.334,158,1.567,159,2.22,160,1.334,161,1.031,162,1.334,163,1.484,164,1.658,165,1.406,166,1.484,167,1.334,168,1.658,169,1.658,170,0.01,171,0.014,172,0.01,193,1.085,211,0.435,214,0.347,223,0.375,226,0.803,247,1.696,262,2.269,263,1.987,264,1.987,265,1.266,266,0.953,270,1.478,271,2.676,272,2.239,280,0.712,281,0.636,295,0.712,310,2.042,326,1.658,328,1.142,336,1.063,368,2.22,384,3.23,395,3.584,398,2.842,426,1.484,620,2.22,627,2.498,631,2.458,651,4.632,672,2.842,678,3.05,680,4.438,707,3.314,811,3.439,818,3.673,1052,3.314,1160,4.438,1171,2.676,1192,3.314,1193,5.842,1194,5.181,1195,3.868,1196,3.868,1197,5.181,1198,2.676,1199,3.868,1200,3.868,1201,3.868,1202,3.868,1203,3.868]],["title/classes/Organisation.html",[25,0.049,221,1.851]],["body/classes/Organisation.html",[3,0.138,4,0.138,9,0.119,13,1.499,19,0.021,24,0.158,25,0.044,78,3.167,112,2.968,137,0.739,170,0.009,171,0.012,172,0.009,209,1.385,211,0.363,212,2.464,213,1.24,214,0.29,215,0.991,216,2.942,217,4.052,218,3.835,219,3.835,220,4.052,221,3.677,223,0.72,224,4.052,225,1.307,226,1.126,228,2.304,230,2.079,231,3.49,232,1.855,233,2.909,234,3.49,240,3.055,241,2.511,247,1.499,253,2.511,254,2.695,279,2.878,287,2.942,288,3.403,289,0.89,293,4.221,321,3.171,436,2.35,690,2.942,803,2.942,804,1.664,805,3.835,901,3.999,992,3.167,1204,2.769,1205,4.554,1206,4.052,1207,5.315,1208,6.102,1209,4.221,1210,3.232,1211,3.232,1212,3.232,1213,3.232,1214,3.232,1215,5.074,1216,3.232,1217,3.922,1218,3.232,1219,4.578,1220,4.578,1221,3.232,1222,3.232,1223,4.578,1224,4.578,1225,3.232,1226,3.232,1227,3.232,1228,3.232,1229,3.232,1230,3.167,1231,3.167,1232,3.922,1233,3.49,1234,3.922,1235,3.232,1236,4.578,1237,4.578,1238,3.922,1239,3.232,1240,3.922,1241,3.232,1242,3.232]],["title/injectables/OrganisationService.html",[258,0.913,759,2.292]],["body/injectables/OrganisationService.html",[3,0.108,4,0.108,9,0.092,12,1.585,18,0.602,19,0.021,20,0.367,24,0.123,25,0.062,137,0.742,170,0.007,171,0.01,172,0.007,200,1.638,211,0.697,213,1.46,214,0.341,215,0.824,216,1.212,221,3.743,223,0.672,225,1.262,226,0.984,228,2.353,230,2.087,240,2.989,248,2.419,258,0.963,260,1.212,262,1.384,263,1.46,264,1.46,265,1.897,266,0.701,270,1.163,271,1.739,272,2.078,275,1.954,276,2.088,277,3.017,278,2.975,279,3.145,280,1.108,281,0.989,284,2.419,285,2.587,286,2.902,289,0.893,290,3.546,295,1.227,296,3.825,300,0.867,301,2.419,302,1.479,303,1.597,304,1.597,305,1.141,306,1.29,307,1.141,310,0.823,314,2.633,315,1.678,316,1.379,317,1.815,319,1.479,320,1.479,321,1.379,322,1.597,323,1.29,324,1.379,325,1.379,326,1.077,327,1.597,328,1.626,329,1.597,330,1.597,331,1.739,332,1.916,333,1.597,336,1.235,337,2.153,347,2.902,348,2.902,349,2.902,350,2.902,353,3.907,356,3.907,357,1.545,363,3.179,364,2.902,426,1.46,430,2.419,509,1.141,718,2.088,759,2.419,793,1.739,794,2.153,846,2.088,901,4.549,923,1.916,978,2.419,1075,2.633,1109,2.902,1209,1.739,1215,3.907,1230,2.633,1231,4.009,1238,2.153,1243,1.916,1244,3.807,1245,3.807,1246,3.807,1247,3.807,1248,5.125,1249,3.261,1250,3.807,1251,3.807,1252,3.807,1253,2.513,1254,3.807,1255,2.513,1256,3.261,1257,4.718,1258,3.807,1259,2.513,1260,4.391,1261,3.807,1262,2.513,1263,4.595,1264,2.513,1265,3.261,1266,2.513,1267,3.807,1268,2.513,1269,2.513,1270,2.513,1271,2.153,1272,2.153,1273,2.513,1274,2.513,1275,2.513,1276,2.513,1277,2.513,1278,2.513,1279,2.513,1280,2.513,1281,3.261,1282,3.261,1283,2.153,1284,2.153,1285,2.513,1286,2.153,1287,2.153,1288,2.153,1289,2.153,1290,2.153,1291,2.153,1292,2.153,1293,2.153,1294,3.261,1295,2.153]],["title/classes/PasswordValidation.html",[25,0.049,1296,2.495]],["body/classes/PasswordValidation.html",[3,0.146,4,0.146,9,0.126,18,0.332,19,0.02,24,0.168,25,0.074,32,4.311,34,4.805,48,5.294,137,0.498,161,1.269,170,0.009,171,0.017,172,0.009,190,1.244,200,1.676,209,1.466,211,0.616,214,0.307,223,0.462,225,0.829,226,0.738,232,2.402,236,3.251,266,0.877,280,0.877,281,0.783,289,0.926,294,2.391,295,1.091,315,1.94,317,1.663,333,3.028,336,0.978,357,1.748,534,2.402,637,3.528,715,3.296,791,4.101,804,1.244,819,5.078,846,2.613,940,2.402,943,2.174,946,4.855,948,4.101,949,4.101,950,4.101,951,4.101,952,3.767,953,3.296,954,3.028,955,3.767,956,2.608,1233,4.919,1296,4.101,1297,4.178,1298,4.764,1299,4.764,1300,5.927,1301,5.078,1302,4.764,1303,4.764,1304,4.764,1305,3.421,1306,4.764,1307,4.764,1308,4.764,1309,3.421,1310,3.421,1311,3.421,1312,3.421,1313,6.232,1314,6.232,1315,6.232,1316,6.232,1317,6.232,1318,4.311,1319,6.232,1320,6.232,1321,6.232,1322,6.232,1323,6.232,1324,3.421,1325,3.421,1326,4.764,1327,4.764,1328,3.421,1329,3.421,1330,3.421,1331,3.421,1332,3.421,1333,3.421,1334,3.421]],["title/classes/PhoneValidation.html",[25,0.049,1335,2.749]],["body/classes/PhoneValidation.html",[3,0.198,4,0.198,9,0.17,18,0.45,19,0.02,24,0.227,25,0.086,137,0.485,170,0.012,171,0.015,172,0.012,190,1.684,200,1.474,209,1.985,211,0.655,214,0.415,223,0.45,225,1.014,226,0.718,232,2.36,236,3.195,266,1.072,280,0.853,281,0.761,289,1.132,294,2.444,295,1.072,315,1.907,317,1.299,336,0.951,357,1.299,509,2.104,534,2.36,791,4.049,803,3.321,804,2.118,846,3.667,940,2.36,943,2.944,946,4.864,947,3.531,948,4.248,949,4.029,950,4.029,951,4.029,952,3.701,953,4.029,954,3.701,955,3.701,956,3.531,957,3.968,961,3.531,1335,5.096,1336,4.99,1337,4.99,1338,5.824,1339,4.632,1340,4.632,1341,6.371,1342,4.44,1343,4.632,1344,5.824]],["title/components/RecoverPasswordComponent.html",[0,0.664,157,1.244]],["body/components/RecoverPasswordComponent.html",[0,1.01,1,0.996,2,1.456,3,0.124,4,0.124,5,1.238,6,1.311,7,1.238,8,1.17,9,0.106,11,1.238,12,2.443,13,2.319,14,1.917,16,1.809,18,0.592,19,0.02,20,0.421,22,1.995,24,0.142,25,0.068,29,0.769,34,2.92,37,3.616,50,3.451,94,2.201,110,2.201,131,0.852,132,1.809,133,1.71,134,1.238,135,2.352,136,1.238,137,0.574,138,1.238,139,1.05,140,1.108,141,2.138,142,0.996,143,1.238,144,0.996,145,1.238,146,0.996,147,1.17,148,1.238,149,0.996,150,1.238,151,1.05,152,0.897,153,0.996,154,1.238,155,0.996,156,1.238,157,1.893,158,2.749,159,1.809,160,0.996,161,0.769,162,0.996,163,1.108,164,1.238,165,1.05,166,1.108,167,0.996,168,1.238,169,1.238,170,0.008,171,0.011,172,0.008,190,1.05,193,0.81,195,1.238,200,0.731,211,0.474,214,0.259,215,0.914,223,0.533,225,1.016,226,0.976,232,1.71,262,1.535,265,1.382,266,0.777,270,1.263,272,2.191,280,0.777,281,0.694,289,0.821,294,1.914,295,0.918,300,1.456,315,1.796,317,1.184,326,1.238,328,0.852,336,1.126,368,1.809,379,3.803,380,3.217,384,2.991,389,4.922,398,2.315,401,2.92,402,4.357,407,2.485,421,2.92,422,3.217,426,1.619,440,3.217,441,3.217,460,2.646,491,4.039,513,1.997,514,2.92,532,1.997,534,2.552,537,1.997,538,1.835,539,2.201,540,2.201,616,1.584,630,1.997,637,2.815,644,4.922,660,4.184,677,2.92,678,2.485,690,2.646,811,2.937,818,3.231,940,2.022,941,1.835,942,1.997,964,2.473,966,2.473,978,2.682,1026,2.682,1057,2.92,1081,2.682,1147,4.451,1154,2.92,1159,2.201,1167,3.797,1169,1.997,1171,1.997,1176,1.997,1177,2.473,1178,3.803,1184,3.217,1187,3.616,1198,1.997,1345,5.532,1346,2.201,1347,4.274,1348,3.616,1349,4.274,1350,4.221,1351,2.887,1352,3.616,1353,2.887,1354,2.887,1355,2.887,1356,2.887,1357,3.616,1358,2.473,1359,2.887,1360,2.887,1361,2.887,1362,2.887,1363,2.473,1364,3.616,1365,2.887,1366,2.887,1367,2.887,1368,2.887,1369,2.887,1370,2.887,1371,2.887,1372,2.887,1373,2.887,1374,2.887,1375,2.473,1376,4.221,1377,3.616,1378,3.217]],["title/interceptors/RequestInterceptor.html",[760,2.292,970,2.749]],["body/interceptors/RequestInterceptor.html",[3,0.178,4,0.178,9,0.152,18,0.646,19,0.02,20,0.605,21,3.518,24,0.203,25,0.082,137,0.568,170,0.011,171,0.014,172,0.011,211,0.68,214,0.372,223,0.587,226,0.841,236,2.976,258,1.373,263,2.081,264,2.081,266,0.999,270,1.53,271,2.869,272,2.336,280,0.999,281,0.892,295,0.999,296,3.317,305,1.883,306,2.129,307,1.883,310,2.1,317,1.522,326,1.778,336,1.241,357,1.163,368,1.778,414,2.325,436,2.129,437,5.205,438,3.194,618,2.976,620,2.325,671,5.205,672,3.518,678,4.239,696,3.194,725,2.869,760,3.448,775,3.161,973,4.437,976,5.18,978,3.448,979,4.648,980,4.648,986,3.553,987,5.495,988,5.495,990,4.648,992,3.753,993,3.553,994,4.648,1085,3.553,1318,2.869,1379,3.553,1380,5.425,1381,6.047,1382,4.147,1383,4.147,1384,5.425,1385,4.147,1386,4.147,1387,4.147,1388,4.147,1389,5.425,1390,4.147,1391,4.147,1392,4.147,1393,4.147,1394,4.147,1395,4.147]],["title/components/ResetPasswordComponent.html",[0,0.664,160,1.244]],["body/components/ResetPasswordComponent.html",[0,0.931,1,0.846,2,1.288,3,0.105,4,0.105,5,1.051,6,1.113,7,1.051,8,0.994,9,0.09,11,1.051,12,2.378,13,2.257,14,1.697,16,1.601,18,0.557,19,0.021,20,0.358,22,2.237,24,0.12,25,0.033,29,0.653,32,1.696,74,2.101,131,0.724,132,1.601,133,1.514,134,1.051,135,2.169,136,1.051,137,0.57,138,1.051,139,0.891,140,0.941,141,1.94,142,0.846,143,1.051,144,0.846,145,1.051,146,0.846,147,0.994,148,1.051,149,0.846,150,1.051,151,0.891,152,0.762,153,0.846,154,1.051,155,0.846,156,1.051,157,0.846,158,0.994,159,1.601,160,1.745,161,1.787,162,0.846,163,0.941,164,1.051,165,0.891,166,0.941,167,0.846,168,1.051,169,1.051,170,0.007,171,0.01,172,0.007,184,1.801,190,0.891,193,0.688,195,1.051,200,0.621,211,0.509,214,0.22,215,0.809,223,0.579,225,1.119,226,1.013,232,1.514,247,1.657,262,1.981,265,1.657,266,0.688,268,1.801,270,0.621,272,2.105,280,0.833,281,0.744,289,0.88,294,0.941,295,1.003,300,0.846,315,1.879,328,0.724,336,1.225,368,1.601,379,3.45,380,2.848,384,3.046,389,4.69,397,2.768,398,2.482,401,2.584,402,4.129,407,2.979,414,1.601,421,3.501,422,3.858,426,1.942,440,2.848,441,2.848,460,2.44,486,4.586,491,3.769,513,1.696,514,2.584,532,1.696,534,2.747,537,1.696,538,1.558,539,1.869,540,1.869,572,2.199,616,1.345,629,1.869,630,1.696,637,2.967,651,2.584,660,3.858,677,2.584,678,2.199,685,2.199,696,3.207,706,2.848,811,2.664,818,2.979,940,2.418,948,1.558,978,2.374,1026,2.374,1057,3.501,1081,2.374,1147,3.45,1151,5.508,1154,2.584,1159,1.869,1167,3.131,1169,1.696,1171,1.696,1175,2.101,1176,2.584,1178,3.45,1184,2.848,1188,3.2,1191,3.2,1198,1.696,1296,1.696,1297,1.869,1301,2.101,1346,1.869,1347,3.877,1348,3.2,1349,3.877,1352,3.2,1358,2.101,1363,2.101,1364,2.101,1375,2.101,1377,3.2,1378,2.848,1396,5.678,1397,5.061,1398,3.736,1399,5.061,1400,3.736,1401,3.736,1402,3.736,1403,3.736,1404,2.452,1405,5.061,1406,3.736,1407,2.452,1408,3.736,1409,3.736,1410,2.452,1411,2.452,1412,3.736,1413,2.452,1414,3.736,1415,2.452,1416,2.452,1417,2.452,1418,2.452,1419,2.452,1420,2.452,1421,3.736,1422,3.736,1423,2.452,1424,2.452,1425,2.452,1426,2.452,1427,2.452,1428,2.452,1429,2.452,1430,2.452,1431,2.452,1432,2.452,1433,2.452,1434,2.452,1435,2.452,1436,2.452,1437,3.736,1438,3.736,1439,3.736,1440,3.736]],["title/interfaces/RootObject.html",[795,1.546,1021,2.495]],["body/interfaces/RootObject.html",[3,0.199,4,0.199,9,0.171,19,0.021,24,0.286,125,3.439,170,0.012,171,0.016,172,0.012,211,0.523,213,2.241,214,0.417,215,1.265,223,0.683,225,1.268,228,2.124,281,0.96,287,2.817,436,2.39,534,2.953,795,2.957,796,2.74,798,2.958,799,2.958,804,2.435,940,3.073,1017,3.22,1018,3.549,1019,3.549,1020,3.988,1021,4.042,1022,5.737,1023,6.031]],["title/classes/RouteReusableStrategy.html",[25,0.049,765,2.495]],["body/classes/RouteReusableStrategy.html",[3,0.141,4,0.141,8,1.878,9,0.121,18,0.319,19,0.02,24,0.161,25,0.045,137,0.643,140,1.778,170,0.009,171,0.012,172,0.009,193,0.922,209,1.41,211,0.716,214,0.295,223,0.596,226,0.952,266,0.853,268,3.462,280,1.13,281,1.009,294,2.565,295,1.23,328,1.368,336,1.344,357,1.634,397,3.652,414,2.953,426,1.778,429,5.902,430,4.378,460,3.073,473,4.05,553,4.091,572,2.728,705,3.206,765,3.206,766,4.858,767,6.024,1441,5.459,1442,2.818,1443,4.634,1444,4.634,1445,7.218,1446,4.634,1447,4.634,1448,3.97,1449,4.634,1450,4.634,1451,4.634,1452,4.634,1453,4.634,1454,5.366,1455,5.366,1456,4.634,1457,7.31,1458,3.289,1459,7.031,1460,6.372,1461,4.634,1462,3.289,1463,4.634,1464,3.289,1465,3.289,1466,5.826,1467,3.289,1468,6.142,1469,3.289,1470,5.826,1471,3.289,1472,4.634,1473,3.289,1474,3.289,1475,3.289]],["title/components/SendMessageComponent.html",[0,0.664,162,1.244]],["body/components/SendMessageComponent.html",[0,0.96,1,0.896,2,1.347,3,0.111,4,0.111,5,1.114,6,1.18,7,1.114,8,1.053,9,0.095,11,1.114,12,2.402,13,2.309,14,1.773,16,1.673,18,0.591,19,0.021,20,0.379,22,1.705,24,0.127,25,0.035,29,1.489,32,2.701,131,0.767,132,1.673,133,1.582,134,1.114,135,2.234,136,1.114,137,0.491,138,1.114,139,0.945,140,0.997,141,2.01,142,0.896,143,1.114,144,0.896,145,1.114,146,0.896,147,1.053,148,1.114,149,0.896,150,1.114,151,0.945,152,1.458,153,0.896,154,1.114,155,0.896,156,1.114,157,0.896,158,1.053,159,1.673,160,0.896,161,0.693,162,1.798,163,2.458,164,1.114,165,0.945,166,0.997,167,0.896,168,1.114,169,1.114,170,0.007,171,0.01,172,0.007,188,1.334,190,0.945,193,0.729,200,1.187,211,0.292,214,0.233,215,0.845,223,0.506,225,1.021,226,0.971,228,1.42,262,2.134,265,1.829,266,0.719,268,2.261,270,0.658,277,2.298,280,0.478,281,0.427,289,0.505,291,2.005,295,0.96,300,0.896,317,1.095,326,1.114,336,0.962,368,1.673,384,2.964,386,5.591,398,3.219,407,2.298,412,2.976,426,2,436,2.677,445,2.976,460,1.253,477,2.701,509,1.773,516,2.227,529,2.976,534,2.596,538,1.652,560,5.175,561,2.227,599,2.227,618,1.426,672,2.142,677,3.607,803,1.883,811,2.76,818,3.069,833,3.607,872,1.981,875,2.227,878,1.798,882,1.981,904,2.76,973,2.701,1026,2.481,1069,2.227,1071,4.017,1072,4.017,1075,1.798,1076,2.227,1077,2.227,1081,1.652,1083,4.466,1086,5.028,1103,3.345,1154,2.701,1167,3.607,1169,1.798,1176,1.798,1198,1.798,1357,3.345,1378,3.974,1476,5.489,1477,4.884,1478,2.227,1479,4.689,1480,3.904,1481,4.689,1482,4.689,1483,4.689,1484,5.213,1485,5.213,1486,5.213,1487,2.599,1488,3.904,1489,3.904,1490,2.599,1491,5.869,1492,4.017,1493,3.904,1494,3.904,1495,5.213,1496,3.904,1497,2.599,1498,3.904,1499,3.904,1500,2.599,1501,3.345,1502,3.904,1503,2.599,1504,3.904,1505,2.599,1506,2.599,1507,3.904,1508,2.227,1509,2.599,1510,2.599,1511,2.599,1512,2.599,1513,2.599,1514,2.599,1515,2.599,1516,2.599,1517,2.599,1518,2.599,1519,2.599,1520,2.599,1521,2.599,1522,2.599,1523,2.599,1524,2.599,1525,2.599,1526,2.599,1527,2.599,1528,2.227,1529,3.904,1530,2.599,1531,2.599,1532,3.904,1533,2.599,1534,5.213,1535,3.904,1536,3.904,1537,3.904,1538,2.599,1539,5.213,1540,2.599,1541,2.599,1542,3.904,1543,2.599,1544,3.904,1545,2.599,1546,2.599,1547,2.599,1548,2.599,1549,2.599,1550,2.599,1551,2.599,1552,2.599,1553,2.599,1554,2.599,1555,2.599,1556,2.599]],["title/classes/SsnValidation.html",[25,0.049,1557,2.749]],["body/classes/SsnValidation.html",[3,0.188,4,0.188,9,0.162,18,0.427,19,0.02,24,0.216,25,0.084,34,3.044,137,0.46,170,0.012,171,0.015,172,0.012,190,1.6,200,1.756,209,1.886,211,0.634,214,0.395,223,0.427,225,0.981,226,0.682,232,2.284,236,3.092,266,1.038,280,0.81,281,0.723,289,1.096,294,2.163,295,1.038,315,1.845,336,0.903,366,4.83,421,3.9,503,4.83,509,2.825,534,2.284,791,3.953,804,1.6,846,3.092,940,2.284,943,2.796,946,4.8,947,3.354,948,4.169,949,3.9,950,3.9,951,3.9,952,3.583,953,3.9,954,3.583,955,3.583,961,4.742,1318,3.9,1337,4.83,1342,4.298,1557,5.001,1558,4.83,1559,5.17,1560,5.329,1561,5.637,1562,4.4,1563,4.4,1564,4.4,1565,4.4,1566,4.4,1567,5.329,1568,5.329,1569,5.637,1570,5.637,1571,4.83,1572,4.4,1573,5.637,1574,4.4,1575,4.4,1576,4.4,1577,4.4,1578,5.637]],["title/injectables/StaticsService.html",[258,0.913,761,2.292]],["body/injectables/StaticsService.html",[3,0.157,4,0.157,9,0.135,18,0.62,19,0.021,20,0.535,24,0.18,25,0.077,28,5.229,137,0.384,152,2.134,170,0.01,171,0.013,172,0.01,200,1.439,211,0.562,214,0.329,215,1.082,218,2.941,219,3.593,223,0.655,225,1.112,226,0.99,228,1.817,230,2.581,258,1.265,260,1.768,262,1.817,266,0.92,268,3.178,270,1.617,275,2.565,276,2.741,277,3.593,278,3.384,279,2.772,280,0.675,281,0.603,285,1.406,288,3.76,289,0.972,291,3.134,294,1.406,295,1.123,296,3.819,300,1.723,302,2.158,303,2.33,304,2.33,305,1.665,306,1.882,307,1.665,315,1.636,316,2.011,317,1.401,319,2.158,320,2.158,321,2.011,322,2.33,323,1.882,324,2.011,325,2.011,327,2.33,328,1.802,329,2.33,330,2.33,336,0.752,357,1.401,718,3.348,761,3.175,793,2.536,833,3.457,928,2.795,1579,2.795,1580,4.997,1581,6.865,1582,7.041,1583,5.684,1584,5.684,1585,4.997,1586,6.104,1587,4.997,1588,4.997,1589,3.666,1590,6.104,1591,6.104,1592,3.666,1593,3.666,1594,6.104,1595,3.666,1596,3.666,1597,4.997,1598,3.666,1599,4.997,1600,3.666,1601,3.666]],["title/guards/UnauthenticatedGuard.html",[609,2.292,647,2.292]],["body/guards/UnauthenticatedGuard.html",[3,0.185,4,0.185,9,0.159,18,0.599,19,0.02,20,0.631,22,2.027,24,0.212,25,0.084,137,0.453,170,0.012,171,0.015,172,0.012,191,2.689,193,1.213,202,3.789,211,0.627,214,0.388,223,0.42,226,0.864,232,2.26,247,1.825,256,2.689,258,1.411,264,2.5,265,1.825,266,1.026,270,1.65,272,2.33,280,0.796,281,0.711,287,2.689,289,1.267,295,1.026,310,1.825,328,1.646,336,1.144,357,1.564,368,1.854,384,3.191,397,3.143,414,2.39,428,3.858,438,3.282,460,2.086,473,4.142,475,3.858,597,3.544,609,3.544,610,3.298,612,4.251,613,4.777,614,3.858,615,4.777,616,2.373,618,3.575,619,4.251,620,2.39,622,4.251,623,4.777,624,4.777,625,4.777,626,4.777,627,2.689,628,3.706,629,3.298,631,2.749,647,3.544,1602,3.706,1603,6.518,1604,4.326,1605,4.326,1606,4.326]],["title/interfaces/User.html",[247,1.18,795,1.546]],["body/interfaces/User.html",[3,0.183,4,0.183,9,0.157,19,0.021,24,0.301,112,3.716,137,0.72,170,0.011,171,0.015,172,0.011,211,0.48,213,2.489,214,0.383,215,1.197,216,3.128,223,0.668,225,1.276,228,2.011,241,3.034,247,2.447,253,3.034,254,3.257,256,2.668,281,0.909,310,1.811,627,2.958,637,2.668,657,2.668,682,2.956,690,3.32,696,3.257,795,3.003,796,2.515,797,2.956,798,2.716,799,2.716,800,2.716,801,3.258,802,3.258,803,3.32,804,2.011,805,3.257,806,4.946,807,4.217,808,4.946]],["title/classes/Volunteer.html",[25,0.049,29,0.961]],["body/classes/Volunteer.html",[3,0.115,4,0.115,9,0.099,19,0.021,24,0.132,25,0.037,29,1.879,78,2.776,112,2.914,125,2.362,137,0.758,152,1.247,170,0.007,171,0.011,172,0.007,208,3.628,209,1.156,211,0.303,212,2.055,213,2.037,214,0.242,215,0.869,216,3.053,217,3.654,218,3.628,219,3.628,220,3.654,221,3.251,223,0.711,224,3.654,225,1.296,226,1.099,228,2.43,230,1.822,231,3.059,232,1.626,233,2.55,234,4.047,237,3.059,240,2.56,241,2.201,243,4.993,245,3.438,246,3.438,247,1.314,250,2.55,251,2.55,253,2.912,254,2.362,279,3.182,287,2.56,288,3.125,289,0.78,291,2.06,293,2.776,294,2.037,321,2.201,414,2.276,690,2.737,710,3.438,778,4.536,783,3.916,789,3.438,803,2.737,804,1.93,805,2.362,904,2.362,955,2.55,992,2.776,1205,4.106,1206,3.654,1209,4.263,1215,4.536,1217,3.438,1230,3.316,1231,3.316,1232,3.438,1233,3.059,1234,3.438,1240,5.097,1559,4.327,1560,3.438,1607,2.31,1608,4.863,1609,2.696,1610,2.696,1611,2.696,1612,2.696,1613,4.013,1614,2.696,1615,2.696,1616,2.696,1617,2.696,1618,4.013,1619,4.013,1620,4.013,1621,2.696,1622,2.696,1623,2.696,1624,2.696,1625,2.696,1626,4.013,1627,4.013,1628,4.013,1629,2.696,1630,2.696,1631,2.696,1632,2.696,1633,2.696,1634,3.438,1635,3.438,1636,3.438,1637,2.696,1638,4.013]],["title/components/VolunteerPage.html",[0,0.664,167,1.244]],["body/components/VolunteerPage.html",[0,1.17,1,1.59,2,2.002,3,0.197,4,0.197,5,1.976,6,2.093,7,1.976,8,1.868,9,0.169,11,1.976,12,2.591,13,2.459,14,2.637,16,2.489,18,0.447,19,0.02,20,0.673,22,1.676,24,0.226,25,0.062,29,1.778,131,1.361,132,2.489,133,2.353,134,1.976,135,2.86,136,1.976,137,0.607,138,1.976,139,1.676,140,2.227,141,2.724,142,1.59,143,1.976,144,1.59,145,1.976,146,1.59,147,1.868,148,1.976,149,1.59,150,1.976,151,1.676,152,1.805,153,1.59,154,1.976,155,1.59,156,1.976,157,1.59,158,1.868,159,2.489,160,1.59,161,1.228,162,1.59,163,2.227,164,1.976,165,1.676,166,2.227,167,2.301,168,1.976,169,1.976,170,0.012,171,0.015,172,0.012,263,1.768,458,3.514,490,2.528,1026,2.929,1639,3.949,1640,6.356,1641,5.806]],["title/modules/VolunteerPageModule.html",[173,1.244,1642,2.495]],["body/modules/VolunteerPageModule.html",[0,1.226,2,1.875,3,0.178,4,0.178,9,0.153,18,0.704,19,0.021,20,0.607,24,0.204,25,0.056,29,1.108,131,1.228,139,2.531,140,2.085,151,2.531,152,1.69,161,1.108,162,2.401,163,2.085,165,2.531,166,2.085,167,2.401,170,0.011,171,0.014,172,0.011,173,1.875,175,1.889,176,2.006,177,3.321,178,2.282,179,2.282,180,2.136,183,2.982,184,2.006,186,2.982,187,3.455,188,2.136,189,3.455,190,1.512,191,3.096,192,2.449,193,1.167,194,3.2,195,1.783,197,3.509,198,3.171,200,1.053,201,3.922,202,3.655,203,2.282,204,3.171,444,2.878,446,2.878,450,2.878,595,3.563,642,4.657,649,3.563,904,2.449,1477,3.171,1642,5.103,1643,3.563,1644,3.563,1645,4.159,1646,4.159,1647,6.055,1648,4.159]],["title/injectables/VolunteerService.html",[258,0.913,273,2.123]],["body/injectables/VolunteerService.html",[3,0.064,4,0.064,9,0.055,12,1.582,18,0.517,19,0.021,20,0.218,22,2.436,24,0.073,25,0.044,29,1.851,125,1.475,137,0.715,152,1.426,170,0.004,171,0.01,172,0.004,200,1.546,208,1.475,211,0.651,213,2.169,214,0.225,215,0.993,216,2.042,218,2.7,219,3.328,221,3.087,223,0.638,225,1.26,226,0.897,228,2.389,230,1.472,240,2.468,243,4.285,248,1.593,251,1.593,253,1.375,258,0.634,260,0.719,262,1.381,263,1.457,264,1.457,265,1.501,266,0.461,270,0.82,273,1.475,275,1.287,276,1.375,277,2.236,278,2.355,279,2.936,280,1.087,281,0.929,284,1.593,285,2.406,286,1.91,289,1.149,290,4.285,291,1.287,292,2.147,293,2.242,294,1.625,295,1.154,296,3.676,299,2.777,300,0.514,301,1.593,302,0.878,303,0.948,304,0.948,305,0.677,306,0.766,307,0.677,308,1.137,309,0.948,313,1.278,314,1.734,315,0.82,316,0.818,317,1.829,319,0.878,320,0.878,321,0.818,322,0.948,323,0.766,324,0.818,325,0.818,326,0.639,327,0.948,328,1.25,329,0.948,330,0.948,331,1.032,332,1.137,333,0.948,336,1.375,339,3.254,343,3.628,344,1.278,347,2.896,348,2.896,349,2.896,350,2.896,353,3.497,355,3.628,356,1.137,357,1.368,362,3.173,363,2.93,364,3.229,365,4.835,414,1.966,426,0.961,430,1.593,509,0.677,572,3.013,715,1.734,718,1.375,756,2.87,778,4.722,783,0.948,793,1.734,803,2.351,804,2.534,846,1.375,904,4.059,918,1.137,954,2.414,1075,1.734,1109,1.91,1206,1.137,1209,2.628,1230,1.734,1231,3.173,1249,2.147,1256,2.147,1257,1.278,1260,3.254,1265,2.147,1271,2.147,1272,1.278,1281,2.147,1282,2.147,1283,1.278,1284,2.147,1286,1.278,1287,1.278,1288,1.278,1289,3.254,1290,2.147,1291,1.278,1292,1.278,1293,1.278,1294,2.147,1295,1.278,1448,3.254,1559,4.781,1608,1.278,1634,1.278,1635,2.777,1636,2.777,1649,1.137,1650,2.506,1651,2.506,1652,2.506,1653,2.506,1654,2.506,1655,2.506,1656,2.506,1657,3.798,1658,2.506,1659,1.491,1660,2.506,1661,2.506,1662,5.323,1663,1.491,1664,3.798,1665,2.506,1666,2.506,1667,1.491,1668,2.506,1669,2.506,1670,2.506,1671,1.491,1672,2.506,1673,1.491,1674,3.798,1675,4.587,1676,4.587,1677,4.587,1678,4.587,1679,2.506,1680,1.491,1681,2.506,1682,1.491,1683,2.506,1684,1.491,1685,1.491,1686,2.506,1687,1.491,1688,2.506,1689,2.506,1690,2.506,1691,4.235,1692,2.506,1693,1.491,1694,1.491,1695,1.491,1696,2.506,1697,4.587,1698,1.491,1699,3.241,1700,3.241,1701,3.241,1702,1.491,1703,1.491,1704,1.491,1705,3.241,1706,3.241,1707,1.491,1708,1.491,1709,3.798,1710,1.491,1711,3.241,1712,3.798,1713,1.491,1714,1.491,1715,1.491,1716,1.491,1717,1.491,1718,1.491,1719,1.491,1720,2.506,1721,2.506,1722,2.506,1723,2.506,1724,2.506,1725,2.506,1726,2.506,1727,2.506,1728,2.506,1729,2.506,1730,2.506,1731,2.506,1732,3.241,1733,2.506,1734,2.506,1735,3.798,1736,1.491,1737,1.491]],["title/coverage.html",[1738,4.233]],["body/coverage.html",[0,1.301,1,1.068,9,0.114,10,2.653,19,0.02,25,0.092,29,0.825,139,1.126,142,1.068,144,1.068,146,1.068,149,1.068,151,1.126,153,1.068,155,1.068,157,1.068,160,1.068,162,1.068,165,1.126,167,1.068,170,0.008,171,0.012,172,0.008,197,1.59,208,1.823,210,2.653,221,1.59,223,0.301,247,1.014,258,1.666,259,1.968,261,3.957,272,1.014,273,1.823,301,1.968,305,2.575,316,3.293,317,0.869,324,3.293,367,2.653,385,1.493,387,1.968,444,2.143,446,2.143,450,2.143,486,2.143,488,2.361,509,2.837,574,2.361,575,2.653,609,2.822,611,2.653,632,2.653,644,2.361,647,1.968,654,3.385,657,1.493,728,3.072,756,1.823,757,1.968,758,1.823,759,1.968,760,1.968,761,1.968,765,2.143,766,2.361,771,2.361,777,3.957,795,2.573,797,3.591,800,1.968,809,2.653,810,2.653,878,5.261,884,2.653,885,2.653,941,1.968,942,2.143,943,3.604,970,3.385,971,3.385,972,3.385,991,4.762,1017,2.143,1018,3.385,1021,2.143,1024,2.653,1025,2.653,1045,2.653,1094,4.905,1095,4.905,1144,2.653,1192,2.653,1204,2.653,1243,3.957,1296,2.143,1297,2.361,1335,2.361,1336,2.653,1345,2.653,1346,3.385,1379,2.653,1396,2.653,1441,2.653,1442,2.653,1476,2.653,1477,2.361,1478,2.653,1557,2.361,1558,2.653,1579,3.957,1602,2.653,1607,2.653,1639,2.653,1649,3.957,1738,2.653,1739,3.097,1740,3.097,1741,3.097,1742,3.097,1743,3.097,1744,3.097,1745,6.247,1746,4.441,1747,7.257,1748,7.353,1749,5.191,1750,5.191,1751,3.097,1752,3.097,1753,2.653,1754,2.653,1755,2.653,1756,2.653,1757,2.653,1758,2.653,1759,3.097,1760,3.097,1761,6.003,1762,4.441,1763,4.441,1764,3.097,1765,3.097,1766,5.191,1767,6.003,1768,3.097,1769,3.097,1770,3.097,1771,3.097,1772,3.097,1773,3.097,1774,3.097,1775,5.191,1776,4.441,1777,3.097,1778,3.097,1779,3.097,1780,3.097,1781,3.097,1782,3.097,1783,3.097,1784,3.097,1785,2.653,1786,2.653,1787,2.653,1788,2.653,1789,2.653,1790,3.804,1791,2.653,1792,2.653,1793,3.097]],["title/dependencies.html",[176,2.094,1794,3.002]],["body/dependencies.html",[13,1.537,19,0.02,20,0.685,170,0.012,171,0.016,172,0.012,176,2.263,188,2.41,190,1.707,193,1.317,195,2.012,278,3.015,307,2.132,314,3.247,319,2.763,320,4.071,392,6.043,395,3.247,396,4.021,477,5.049,478,3.578,480,3.578,482,2.983,483,4.021,484,4.021,551,5.031,552,4.434,557,4.021,558,4.021,560,3.578,562,4.021,563,4.021,1492,4.021,1508,4.021,1528,4.021,1795,7.157,1796,4.694,1797,4.694,1798,5.873,1799,4.694,1800,6.716,1801,4.694,1802,4.694,1803,4.694,1804,4.694,1805,4.694,1806,4.694,1807,4.694,1808,4.694,1809,4.694,1810,4.694,1811,4.694,1812,4.694,1813,4.694,1814,4.694,1815,4.694,1816,4.694,1817,4.694,1818,4.694,1819,4.694,1820,4.694,1821,5.873,1822,4.694,1823,4.694,1824,4.694,1825,4.694,1826,4.694]],["title/miscellaneous/functions.html",[1827,2.077,1828,3.72]],["body/miscellaneous/functions.html",[19,0.019,21,2.605,137,0.775,170,0.013,171,0.016,172,0.013,211,0.78,214,0.426,223,0.719,240,2.29,275,2.438,280,1.277,281,1.14,284,3.018,285,2.472,289,1.253,668,4.496,685,2.796,705,4.8,718,3.245,804,1.727,1094,3.621,1095,5.47,1113,4.069,1120,5.778,1121,5.944,1122,5.52,1123,4.069,1124,4.069,1131,4.069,1132,4.069,1133,4.069,1501,4.069,1753,5.068,1754,5.068,1755,5.068,1756,5.52,1757,5.068,1758,5.068,1827,3.286,1828,4.069,1829,7.075,1830,4.749,1831,4.749,1832,4.749,1833,4.749]],["title/index.html",[214,0.323,1834,3.089]],["body/index.html",[1,2.069,2,1.407,19,0.02,131,1.205,139,2.181,142,2.39,144,2.069,146,2.069,149,2.069,151,2.181,153,2.069,155,2.069,157,2.069,160,2.069,161,1.087,162,2.069,165,2.181,167,2.069,170,0.011,171,0.014,172,0.011,173,1.407,174,4.41,175,1.853,176,1.968,177,2.239,178,2.239,179,2.239,180,2.095,181,3.496,182,3.496,183,2.945,184,1.968,191,1.968,209,1.749,259,3.813,260,1.968,272,1.964,273,3.532,385,2.893,542,4.922,543,3.496,544,3.496,545,3.496,546,3.496,547,3.813,548,4.82,610,3.111,638,5.039,639,3.496,640,3.496,753,3.496,754,3.496,755,3.496,756,3.532,757,3.813,758,3.532,759,3.813,760,4.051,761,3.813,796,2.402,1088,4.41,1089,3.496,1090,3.496,1318,2.823,1342,3.111,1567,3.496,1568,3.496,1571,3.496,1642,5.039,1643,3.496,1644,3.496,1834,3.496,1835,4.081,1836,4.081]],["title/modules.html",[175,2.244]],["body/modules.html",[19,0.017,170,0.015,171,0.017,172,0.015,174,3.836,175,2.518,408,4.751,542,3.836,547,3.524,548,3.524,552,5.075,638,3.836,1088,3.836,1642,3.836,1837,7.336,1838,7.336,1839,7.404,1840,5.545]],["title/routes.html",[191,2.382]],["body/routes.html",[19,0.018,170,0.016,171,0.018,172,0.016,191,2.866]],["title/miscellaneous/variables.html",[1827,2.077,1841,3.72]],["body/miscellaneous/variables.html",[13,1.167,19,0.02,170,0.009,171,0.013,172,0.009,213,2.426,214,0.32,223,0.662,225,0.853,230,2.872,250,3.56,261,2.717,278,3.247,279,3.18,285,2.568,288,3.297,289,1.434,300,2.552,305,3.238,315,2.292,316,3.841,317,1.964,318,2.717,323,3.247,324,3.841,325,3.469,328,1.447,460,2.701,461,2.265,488,4.27,654,2.717,657,2.909,715,4.375,727,3.39,728,4.173,777,2.717,783,3.56,792,2.717,803,1.719,804,1.296,901,3.875,904,3.297,918,2.717,923,2.717,928,2.717,971,2.717,972,3.736,998,3.053,1243,2.717,1579,2.717,1649,2.717,1785,3.053,1786,3.053,1787,3.053,1788,3.053,1789,3.053,1790,3.053,1791,4.199,1792,4.199,1827,2.466,1841,3.053,1842,3.564,1843,4.901,1844,3.564,1845,3.564,1846,3.564,1847,3.564,1848,3.564,1849,3.564,1850,4.901,1851,4.901,1852,4.901,1853,4.901,1854,4.901,1855,3.564,1856,3.564,1857,3.564,1858,3.564,1859,3.564,1860,6.032,1861,6.324,1862,3.564,1863,5.601,1864,6.535,1865,5.601,1866,5.601,1867,5.601,1868,5.601,1869,5.601,1870,3.564,1871,3.564]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":509,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"classes/PhoneValidation.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["0.8.29",{"_index":1826,"title":{},"body":{"dependencies.html":{}}}],["0.9.3",{"_index":1814,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1767,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1742,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":881,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{}}}],["1",{"_index":366,"title":{},"body":{"injectables/AllocationService.html":{},"classes/SsnValidation.html":{}}}],["1.0.0",{"_index":1816,"title":{},"body":{"dependencies.html":{}}}],["1.0.20",{"_index":1819,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1824,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1748,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1342,"title":{},"body":{"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{},"index.html":{}}}],["10/10",{"_index":1746,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":1771,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":878,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{},"coverage.html":{}}}],["1000",{"_index":529,"title":{},"body":{"components/AppComponent.html":{},"injectables/LocalStorageService.html":{},"components/SendMessageComponent.html":{}}}],["100px",{"_index":1550,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["10px",{"_index":882,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["11",{"_index":1573,"title":{},"body":{"classes/SsnValidation.html":{}}}],["11/11",{"_index":1759,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1343,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["12/12",{"_index":1764,"title":{},"body":{"coverage.html":{}}}],["12px",{"_index":1073,"title":{},"body":{"components/HomePage.html":{}}}],["13",{"_index":1564,"title":{},"body":{"classes/SsnValidation.html":{}}}],["13/13",{"_index":1765,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1835,"title":{},"body":{"index.html":{}}}],["15px",{"_index":874,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["19/19",{"_index":1762,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1567,"title":{},"body":{"classes/SsnValidation.html":{},"index.html":{}}}],["2.0.6",{"_index":1807,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":1820,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1818,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1766,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1769,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1773,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":873,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["24",{"_index":1127,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["24/26",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":1545,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["25px",{"_index":1555,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["26/28",{"_index":1777,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":1836,"title":{},"body":{"index.html":{}}}],["2px",{"_index":1068,"title":{},"body":{"components/HomePage.html":{}}}],["3",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/SsnValidation.html":{}}}],["3.1.0",{"_index":1815,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1745,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["300px",{"_index":1556,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["30px",{"_index":1551,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["33/35",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["35px",{"_index":1552,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["4",{"_index":1569,"title":{},"body":{"classes/SsnValidation.html":{}}}],["4.0.3",{"_index":1813,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":1805,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1751,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1004,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["401",{"_index":1003,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["5",{"_index":1571,"title":{},"body":{"classes/SsnValidation.html":{},"index.html":{}}}],["5.0.0",{"_index":1804,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":1812,"title":{},"body":{"dependencies.html":{}}}],["5.11.0",{"_index":1800,"title":{},"body":{"dependencies.html":{}}}],["5.12.0",{"_index":1802,"title":{},"body":{"dependencies.html":{}}}],["5.9.0",{"_index":1798,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1761,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1772,"title":{},"body":{"coverage.html":{}}}],["50px",{"_index":1546,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["5px",{"_index":1065,"title":{},"body":{"components/HomePage.html":{}}}],["6",{"_index":1570,"title":{},"body":{"classes/SsnValidation.html":{}}}],["6.4.0",{"_index":1809,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":1822,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1763,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1128,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["66",{"_index":1768,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1568,"title":{},"body":{"classes/SsnValidation.html":{},"index.html":{}}}],["7.1.1",{"_index":1821,"title":{},"body":{"dependencies.html":{}}}],["7.2.2",{"_index":1795,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1760,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1750,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":1743,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1318,"title":{},"body":{"classes/PasswordValidation.html":{},"interceptors/RequestInterceptor.html":{},"classes/SsnValidation.html":{},"index.html":{}}}],["8.0.0",{"_index":1810,"title":{},"body":{"dependencies.html":{}}}],["8/11",{"_index":1744,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1752,"title":{},"body":{"coverage.html":{}}}],["80px",{"_index":1074,"title":{},"body":{"components/HomePage.html":{}}}],["83",{"_index":1770,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1749,"title":{},"body":{"coverage.html":{}}}],["89992142265",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":961,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["9._",{"_index":960,"title":{},"body":{"classes/EmailValidation.html":{}}}],["92",{"_index":1776,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["_credentials",{"_index":656,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["_errors",{"_index":1027,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["_global_",{"_index":1013,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["_id",{"_index":216,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["_rev",{"_index":217,"title":{},"body":{"classes/Allocation.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["aaist",{"_index":1288,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["about'},{'name",{"_index":138,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["about.page",{"_index":196,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["about.page.html",{"_index":17,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page.scss",{"_index":15,"title":{},"body":{"components/AboutPage.html":{}}}],["aboutpage",{"_index":1,"title":{"components/AboutPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["aboutpagemodule",{"_index":174,"title":{"modules/AboutPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"index.html":{},"modules.html":{}}}],["abstract",{"_index":949,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["abstractcontrol",{"_index":946,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["abstractcontrol.get('confirmpassword').seterrors",{"_index":1312,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["abstractcontrol.get('confirmpassword').value",{"_index":1311,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["abstractcontrol.get('password').value",{"_index":1310,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["abstractcontrol.value",{"_index":956,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{}}}],["accept",{"_index":1388,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["access",{"_index":623,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["accessed",{"_index":1409,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["accessible",{"_index":594,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["accessors",{"_index":662,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["accesstoken",{"_index":663,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["acestei",{"_index":76,"title":{},"body":{"components/AboutPage.html":{}}}],["aceștia",{"_index":88,"title":{},"body":{"components/AboutPage.html":{}}}],["acredited",{"_index":1636,"title":{},"body":{"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["acreditor",{"_index":1638,"title":{},"body":{"classes/Volunteer.html":{}}}],["acreditors",{"_index":1637,"title":{},"body":{"classes/Volunteer.html":{}}}],["action",{"_index":1052,"title":{},"body":{"components/HomePage.html":{},"components/LogoutComponent.html":{}}}],["action.title",{"_index":1062,"title":{},"body":{"components/HomePage.html":{}}}],["actions",{"_index":1048,"title":{},"body":{"components/HomePage.html":{}}}],["activ'/'inactiv",{"_index":1236,"title":{},"body":{"classes/Organisation.html":{}}}],["activated",{"_index":1459,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["activatedroute",{"_index":1399,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["activatedroutesnapshot",{"_index":1457,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["actual_component",{"_index":169,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["adaug",{"_index":445,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["add",{"_index":140,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{}}}],["added",{"_index":321,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["added_by",{"_index":1205,"title":{},"body":{"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["addimage",{"_index":1484,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["additional",{"_index":992,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"classes/Organisation.html":{},"interceptors/RequestInterceptor.html":{},"classes/Volunteer.html":{}}}],["address",{"_index":805,"title":{},"body":{"interfaces/Credentials.html":{},"classes/EmailValidation.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{}}}],["adds",{"_index":973,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{}}}],["addvolunteercomponent",{"_index":139,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["administrare",{"_index":51,"title":{},"body":{"components/AboutPage.html":{}}}],["administrarea",{"_index":102,"title":{},"body":{"components/AboutPage.html":{}}}],["adres",{"_index":1187,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["adresa",{"_index":964,"title":{},"body":{"classes/EmailValidation.html":{},"components/RecoverPasswordComponent.html":{}}}],["afterviewinit",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["ajutorul",{"_index":75,"title":{},"body":{"components/AboutPage.html":{}}}],["al",{"_index":70,"title":{},"body":{"components/AboutPage.html":{}}}],["align",{"_index":1076,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["allocated",{"_index":237,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Volunteer.html":{}}}],["allocates",{"_index":1665,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocatevolunteer",{"_index":1650,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocatevolunteer(allocationid",{"_index":1661,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocation",{"_index":208,"title":{"classes/Allocation.html":{}},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["allocation.city",{"_index":345,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.county",{"_index":342,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.created_at",{"_index":346,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.organisation",{"_index":354,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.rescue_officer",{"_index":340,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.type",{"_index":352,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.updated_at",{"_index":351,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.volunteer",{"_index":338,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocationid",{"_index":299,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["allocations",{"_index":250,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/DatabaseSyncService.html":{},"classes/Volunteer.html":{},"miscellaneous/variables.html":{}}}],["allocationservice",{"_index":259,"title":{"injectables/AllocationService.html":{}},"body":{"injectables/AllocationService.html":{},"modules/CoreModule.html":{},"coverage.html":{},"index.html":{}}}],["allowed",{"_index":625,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["allowing",{"_index":1443,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["aloca",{"_index":114,"title":{},"body":{"components/AboutPage.html":{}}}],["already",{"_index":1408,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["alt",{"_index":71,"title":{},"body":{"components/AboutPage.html":{}}}],["always",{"_index":1237,"title":{},"body":{"classes/Organisation.html":{}}}],["android",{"_index":1528,"title":{},"body":{"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["angular",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["angular/common",{"_index":188,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"components/SendMessageComponent.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":725,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["angular/core",{"_index":20,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":190,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"classes/EmailValidation.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1796,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":551,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":193,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["apeleaz",{"_index":451,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["api.lxhost.ro",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api.lxhost.ro/api",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aplicația",{"_index":99,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["aplicație",{"_index":27,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["aplicației",{"_index":79,"title":{},"body":{"components/AboutPage.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":555,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":142,"title":{"components/AppComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["application",{"_index":406,"title":{},"body":{"components/AppComponent.html":{}}}],["application/json",{"_index":1389,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["appmodule",{"_index":542,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["apppage",{"_index":574,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["apppages",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["approutingmodule",{"_index":547,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["apărut",{"_index":1434,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["apăsați",{"_index":535,"title":{},"body":{"components/AppComponent.html":{}}}],["ar",{"_index":43,"title":{},"body":{"components/AboutPage.html":{}}}],["area",{"_index":1223,"title":{},"body":{"classes/Organisation.html":{}}}],["array.from(string(ssn",{"_index":1565,"title":{},"body":{"classes/SsnValidation.html":{}}}],["asemenea",{"_index":98,"title":{},"body":{"components/AboutPage.html":{}}}],["async",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["attachments",{"_index":794,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{}}}],["attributes",{"_index":1023,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["atât",{"_index":1366,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["autentificare",{"_index":1377,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["auth",{"_index":604,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{}}}],["auth/login",{"_index":1172,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth/logout",{"_index":456,"title":{},"body":{"components/AppComponent.html":{}}}],["auth/reset/:token",{"_index":525,"title":{},"body":{"components/AppComponent.html":{}}}],["authenticated",{"_index":614,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"components/HomePage.html":{},"guards/UnauthenticatedGuard.html":{}}}],["authenticates",{"_index":711,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication",{"_index":310,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{}}}],["authentication'},{'name",{"_index":145,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["authentication.credentials",{"_index":701,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication.loginpayload",{"_index":675,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication.page",{"_index":643,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["authentication.page.html",{"_index":634,"title":{},"body":{"components/AuthenticationPage.html":{}}}],["authentication.page.scss",{"_index":633,"title":{},"body":{"components/AuthenticationPage.html":{}}}],["authentication.service",{"_index":628,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["authentication.user",{"_index":724,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication/authentication.service",{"_index":1385,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["authentication/unauthenticated.guard",{"_index":769,"title":{},"body":{"modules/CoreModule.html":{}}}],["authenticationguard",{"_index":197,"title":{"guards/AuthenticationGuard.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["authenticationpage",{"_index":144,"title":{"components/AuthenticationPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["authenticationpagemodule",{"_index":638,"title":{"modules/AuthenticationPageModule.html":{}},"body":{"modules/AuthenticationPageModule.html":{},"index.html":{},"modules.html":{}}}],["authenticationservice",{"_index":272,"title":{"injectables/AuthenticationService.html":{}},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{},"coverage.html":{},"index.html":{}}}],["authorization",{"_index":1391,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["authservice",{"_index":784,"title":{},"body":{"injectables/CourseService.html":{}}}],["automatically",{"_index":232,"title":{},"body":{"classes/Allocation.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"classes/EmailValidation.html":{},"classes/Organisation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/SsnValidation.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{}}}],["available",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"modules.html":{}}}],["avea",{"_index":44,"title":{},"body":{"components/AboutPage.html":{}}}],["await",{"_index":532,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["b",{"_index":1578,"title":{},"body":{"classes/SsnValidation.html":{}}}],["back",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["backbutton",{"_index":859,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["backend",{"_index":679,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["background",{"_index":875,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/SendMessageComponent.html":{}}}],["bank",{"_index":130,"title":{},"body":{"components/AboutPage.html":{}}}],["bar",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["bar/ngx",{"_index":481,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["base64",{"_index":1494,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["base64image",{"_index":1481,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["basic",{"_index":655,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/LocalStorageService.html":{}}}],["baza",{"_index":111,"title":{},"body":{"components/AboutPage.html":{}}}],["bearer",{"_index":1392,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["before",{"_index":1613,"title":{},"body":{"classes/Volunteer.html":{}}}],["being",{"_index":236,"title":{},"body":{"classes/Allocation.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"interceptors/RequestInterceptor.html":{},"classes/SsnValidation.html":{}}}],["belong",{"_index":1618,"title":{},"body":{"classes/Volunteer.html":{}}}],["big",{"_index":850,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["black",{"_index":1070,"title":{},"body":{"components/HomePage.html":{}}}],["block",{"_index":1554,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["body",{"_index":681,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["boolean",{"_index":473,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/RouteReusableStrategy.html":{},"guards/UnauthenticatedGuard.html":{}}}],["bootstrap",{"_index":178,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["both",{"_index":1299,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["bottom",{"_index":538,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["box",{"_index":879,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{}}}],["browse",{"_index":1839,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":552,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(destination",{"_index":585,"title":{},"body":{"classes/AppPage.html":{}}}],["browser.gettitle",{"_index":586,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/ngx",{"_index":564,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":550,"title":{},"body":{"modules/AppModule.html":{}}}],["bun",{"_index":119,"title":{},"body":{"components/AboutPage.html":{}}}],["button",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/SendMessageComponent.html":{}}}],["c",{"_index":1137,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["ca",{"_index":1135,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["calamități",{"_index":40,"title":{},"body":{"components/AboutPage.html":{}}}],["call",{"_index":1056,"title":{},"body":{"components/HomePage.html":{}}}],["calling",{"_index":832,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["camera",{"_index":1492,"title":{},"body":{"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["camera.destinationtype.data_url",{"_index":1519,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["camera.getpicture",{"_index":1517,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["canactivate",{"_index":202,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"modules/HomePageModule.html":{},"guards/UnauthenticatedGuard.html":{},"modules/VolunteerPageModule.html":{}}}],["cancel",{"_index":868,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["caracter",{"_index":1323,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["caractere",{"_index":1319,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["care",{"_index":42,"title":{},"body":{"components/AboutPage.html":{}}}],["case",{"_index":1240,"title":{},"body":{"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["catch(error",{"_index":937,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["catcherror",{"_index":995,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["caz",{"_index":105,"title":{},"body":{"components/AboutPage.html":{}}}],["cazul",{"_index":65,"title":{},"body":{"components/AboutPage.html":{}}}],["center",{"_index":1077,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["change",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{}}}],["changed",{"_index":1037,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["changes",{"_index":1414,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["changeselectedentry",{"_index":815,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["changeselectedentry(entry",{"_index":829,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["characters",{"_index":1234,"title":{},"body":{"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["charset=utf",{"_index":1390,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["checkpemission",{"_index":1485,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["checks",{"_index":1103,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/SendMessageComponent.html":{}}}],["chucks",{"_index":851,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["cities",{"_index":1582,"title":{},"body":{"injectables/StaticsService.html":{}}}],["city",{"_index":218,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Organisation.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["city's",{"_index":257,"title":{},"body":{"classes/Allocation.html":{}}}],["city._id",{"_index":1696,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["city.name",{"_index":1702,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["city_type",{"_index":1583,"title":{},"body":{"injectables/StaticsService.html":{}}}],["civil",{"_index":60,"title":{},"body":{"components/AboutPage.html":{}}}],["class",{"_index":25,"title":{"classes/Allocation.html":{},"classes/AppPage.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"classes/Organisation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/RouteReusableStrategy.html":{},"classes/SsnValidation.html":{},"classes/Volunteer.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["classes",{"_index":209,"title":{},"body":{"classes/Allocation.html":{},"classes/AppPage.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"classes/Organisation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/RouteReusableStrategy.html":{},"classes/SsnValidation.html":{},"classes/Volunteer.html":{},"index.html":{}}}],["clear",{"_index":1028,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["clearall",{"_index":1098,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["cleardata",{"_index":1753,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cleardata(type",{"_index":1830,"title":{},"body":{"miscellaneous/functions.html":{}}}],["clearitem",{"_index":1099,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["clearitem(key",{"_index":1107,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["clears",{"_index":685,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/functions.html":{}}}],["click",{"_index":1058,"title":{},"body":{"components/HomePage.html":{}}}],["close",{"_index":869,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["closes",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["cluster_aboutpagemodule",{"_index":181,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_aboutpagemodule_declarations",{"_index":182,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":543,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":546,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":544,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":545,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_authenticationpagemodule",{"_index":639,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"index.html":{}}}],["cluster_authenticationpagemodule_declarations",{"_index":640,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"index.html":{}}}],["cluster_coremodule",{"_index":753,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_coremodule_declarations",{"_index":754,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_coremodule_providers",{"_index":755,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_homepagemodule",{"_index":1089,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_declarations",{"_index":1090,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_volunteerpagemodule",{"_index":1643,"title":{},"body":{"modules/VolunteerPageModule.html":{},"index.html":{}}}],["cluster_volunteerpagemodule_declarations",{"_index":1644,"title":{},"body":{"modules/VolunteerPageModule.html":{},"index.html":{}}}],["cnp",{"_index":1560,"title":{},"body":{"classes/SsnValidation.html":{},"classes/Volunteer.html":{}}}],["cnp[x",{"_index":1576,"title":{},"body":{"classes/SsnValidation.html":{}}}],["code",{"_index":125,"title":{},"body":{"components/AboutPage.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["codification",{"_index":1495,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["coefs",{"_index":1566,"title":{},"body":{"classes/SsnValidation.html":{}}}],["coefs[x",{"_index":1575,"title":{},"body":{"classes/SsnValidation.html":{}}}],["colaborare",{"_index":96,"title":{},"body":{"components/AboutPage.html":{}}}],["color",{"_index":1069,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["column",{"_index":1063,"title":{},"body":{"components/HomePage.html":{}}}],["columns",{"_index":1080,"title":{},"body":{"components/HomePage.html":{}}}],["comments",{"_index":1206,"title":{},"body":{"classes/Organisation.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["comments/details",{"_index":1217,"title":{},"body":{"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["commonmodule",{"_index":187,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["completely",{"_index":417,"title":{},"body":{"components/AppComponent.html":{}}}],["component",{"_index":0,"title":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["component_template",{"_index":136,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["componente",{"_index":77,"title":{},"body":{"components/AboutPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["components/custom",{"_index":770,"title":{},"body":{"modules/CoreModule.html":{}}}],["config",{"_index":488,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.phonenumber",{"_index":454,"title":{},"body":{"components/AppComponent.html":{}}}],["confirm",{"_index":1437,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["confirmpassword",{"_index":1301,"title":{},"body":{"classes/PasswordValidation.html":{},"components/ResetPasswordComponent.html":{}}}],["console.error('request",{"_index":1015,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["console.log(`error",{"_index":938,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["console.log(this._errors",{"_index":1043,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["console.warn('unmatched",{"_index":531,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":200,"title":{},"body":{"modules/AboutPageModule.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["constructor",{"_index":270,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["constructor(authenticationservice",{"_index":271,"title":{},"body":{"injectables/AllocationService.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{}}}],["constructor(authservice",{"_index":781,"title":{},"body":{"injectables/CourseService.html":{}}}],["constructor(courseservice",{"_index":1659,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["constructor(httpclient",{"_index":664,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(modalctrl",{"_index":821,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["constructor(platform",{"_index":381,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":326,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{},"injectables/VolunteerService.html":{}}}],["constructor(public",{"_index":1419,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["constructor(router",{"_index":616,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["constructor(sms",{"_index":1487,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["contact",{"_index":1219,"title":{},"body":{"classes/Organisation.html":{}}}],["contact_person",{"_index":1207,"title":{},"body":{"classes/Organisation.html":{}}}],["container",{"_index":492,"title":{},"body":{"components/AppComponent.html":{}}}],["containing",{"_index":290,"title":{},"body":{"injectables/AllocationService.html":{},"components/HomePage.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["contains",{"_index":291,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["content",{"_index":1085,"title":{},"body":{"components/HomePage.html":{},"interceptors/RequestInterceptor.html":{}}}],["context",{"_index":1791,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continuous",{"_index":330,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["control",{"_index":950,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["controller",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["convert",{"_index":1496,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["conțin",{"_index":1316,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["cookie",{"_index":1121,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["cookie's",{"_index":1132,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["cordova",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["core",{"_index":482,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"dependencies.html":{}}}],["core/authentication/authentication.guard",{"_index":198,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["coremodule",{"_index":548,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"index.html":{},"modules.html":{}}}],["corespund",{"_index":1315,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["couchdb",{"_index":230,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["counties",{"_index":1581,"title":{},"body":{"injectables/StaticsService.html":{}}}],["county",{"_index":219,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Organisation.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["county._id",{"_index":343,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["county.name",{"_index":344,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["county_romania_",{"_index":1598,"title":{},"body":{"injectables/StaticsService.html":{}}}],["county_romania_\\ufff0",{"_index":1600,"title":{},"body":{"injectables/StaticsService.html":{}}}],["county_type",{"_index":1584,"title":{},"body":{"injectables/StaticsService.html":{}}}],["countyid",{"_index":1590,"title":{},"body":{"injectables/StaticsService.html":{}}}],["course",{"_index":778,"title":{},"body":{"injectables/CourseService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["course's",{"_index":789,"title":{},"body":{"injectables/CourseService.html":{},"classes/Volunteer.html":{}}}],["course.[].course_name_id",{"_index":1695,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course._id",{"_index":1712,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course.name",{"_index":1714,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course.service",{"_index":1694,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course.slug",{"_index":1715,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course_name",{"_index":1634,"title":{},"body":{"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["course_name_id",{"_index":1737,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course_names",{"_index":788,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursenamestype",{"_index":779,"title":{},"body":{"injectables/CourseService.html":{}}}],["courses",{"_index":783,"title":{},"body":{"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["courseservice",{"_index":756,"title":{"injectables/CourseService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/CourseService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"index.html":{}}}],["cover",{"_index":1208,"title":{},"body":{"classes/Organisation.html":{}}}],["coverage",{"_index":1738,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createallocation",{"_index":267,"title":{},"body":{"injectables/AllocationService.html":{}}}],["createallocation(volunteer",{"_index":282,"title":{},"body":{"injectables/AllocationService.html":{}}}],["createcookie",{"_index":1754,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createcookie(name",{"_index":1124,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["created",{"_index":248,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["created_at",{"_index":220,"title":{},"body":{"classes/Allocation.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["createdat",{"_index":806,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["createform",{"_index":1149,"title":{},"body":{"components/LoginComponent.html":{}}}],["createorganisation",{"_index":1244,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["createorganisation(name",{"_index":1252,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["creates",{"_index":284,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["createvolunteer",{"_index":1651,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["createvolunteer(name",{"_index":1666,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["creating",{"_index":1401,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["creation",{"_index":241,"title":{},"body":{"classes/Allocation.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{}}}],["credentials",{"_index":657,"title":{"interfaces/Credentials.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["credentialskey",{"_index":728,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cu",{"_index":74,"title":{},"body":{"components/AboutPage.html":{},"components/ResetPasswordComponent.html":{}}}],["curr",{"_index":1466,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["curr.routeconfig",{"_index":1474,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["current",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["currentpath",{"_index":500,"title":{},"body":{"components/AppComponent.html":{}}}],["currentpath.indexof('home",{"_index":510,"title":{},"body":{"components/AppComponent.html":{}}}],["currentpath.indexof('login",{"_index":508,"title":{},"body":{"components/AppComponent.html":{}}}],["currentuser",{"_index":1270,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["currentuser._id",{"_index":1274,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["custom",{"_index":147,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["customselectorcomponent",{"_index":146,"title":{"components/CustomSelectorComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["cât",{"_index":1368,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["către",{"_index":61,"title":{},"body":{"components/AboutPage.html":{}}}],["data",{"_index":705,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"classes/RouteReusableStrategy.html":{},"miscellaneous/functions.html":{}}}],["data:image/jpeg;base64",{"_index":1524,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["database",{"_index":279,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["databasesyncservice",{"_index":387,"title":{"classes/DatabaseSyncService.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"classes/DatabaseSyncService.html":{},"coverage.html":{}}}],["databaseurl",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":112,"title":{},"body":{"components/AboutPage.html":{},"classes/Allocation.html":{},"interfaces/Credentials.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{}}}],["date.now",{"_index":1042,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["date.settime(date.gettime",{"_index":1126,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["date.togmtstring",{"_index":1129,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["datepicker",{"_index":557,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["days",{"_index":1122,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["dd",{"_index":349,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["de",{"_index":50,"title":{},"body":{"components/AboutPage.html":{},"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["declarations",{"_index":177,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["declare",{"_index":798,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{}}}],["decoration",{"_index":1078,"title":{},"body":{"components/HomePage.html":{}}}],["decorators",{"_index":468,"title":{},"body":{"components/AppComponent.html":{}}}],["deeplinks",{"_index":483,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["deeplinks.route",{"_index":524,"title":{},"body":{"components/AppComponent.html":{}}}],["default",{"_index":300,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":226,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["defining",{"_index":1675,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["definition",{"_index":1449,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["deja",{"_index":85,"title":{},"body":{"components/AboutPage.html":{}}}],["deleteorganisationbyid",{"_index":1245,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["deleteorganisationbyid(organisationid",{"_index":1254,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["deletes",{"_index":1256,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["deletevolunteerbyid",{"_index":1652,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["deletevolunteerbyid(volunteerid",{"_index":1670,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["delogare",{"_index":455,"title":{},"body":{"components/AppComponent.html":{}}}],["departamentul",{"_index":62,"title":{},"body":{"components/AboutPage.html":{}}}],["dependencies",{"_index":176,"title":{"dependencies.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{},"index.html":{}}}],["depending",{"_index":475,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["derivate",{"_index":199,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["derivated",{"_index":649,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["derived",{"_index":206,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["description",{"_index":211,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["design",{"_index":1166,"title":{},"body":{"components/LoginComponent.html":{}}}],["despre",{"_index":26,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["destination",{"_index":583,"title":{},"body":{"classes/AppPage.html":{}}}],["destinationtype",{"_index":1518,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["destroy",{"_index":845,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["detached",{"_index":1472,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["detachedroutehandle",{"_index":1460,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["detachedtree",{"_index":1470,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["determines",{"_index":622,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/UnauthenticatedGuard.html":{}}}],["dev",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["developement",{"_index":1870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["device",{"_index":750,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["dezastru",{"_index":72,"title":{},"body":{"components/AboutPage.html":{}}}],["dezvoltat",{"_index":124,"title":{},"body":{"components/AboutPage.html":{}}}],["diacritics",{"_index":1231,"title":{},"body":{"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["didn't",{"_index":1163,"title":{},"body":{"components/LoginComponent.html":{}}}],["din",{"_index":94,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["directive",{"_index":134,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["directives",{"_index":168,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["dismessed",{"_index":441,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dismiss",{"_index":816,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["display",{"_index":1081,"title":{},"body":{"components/HomePage.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["displayed",{"_index":1057,"title":{},"body":{"components/HomePage.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["displays",{"_index":1199,"title":{},"body":{"components/LogoutComponent.html":{}}}],["dispoziție",{"_index":58,"title":{},"body":{"components/AboutPage.html":{}}}],["doc.allocation",{"_index":1732,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.city",{"_index":1725,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.comments",{"_index":1728,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.county",{"_index":1724,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.courses",{"_index":1727,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.email",{"_index":1721,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.job",{"_index":1730,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.name",{"_index":1281,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["doc.organisation",{"_index":1726,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.phone",{"_index":1723,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.slug",{"_index":1282,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["doc.ssn",{"_index":1720,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.updated_at",{"_index":1733,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["document",{"_index":1131,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["document.addeventlistener('backbutton",{"_index":498,"title":{},"body":{"components/AppComponent.html":{}}}],["document.cookie",{"_index":1130,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["document.cookie.split",{"_index":1136,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["documentation",{"_index":1739,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":853,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["double",{"_index":418,"title":{},"body":{"components/AppComponent.html":{}}}],["dsu",{"_index":97,"title":{},"body":{"components/AboutPage.html":{}}}],["duration",{"_index":539,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dynamic",{"_index":1797,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/app.po.ts",{"_index":575,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:12",{"_index":579,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":582,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":580,"title":{},"body":{"classes/AppPage.html":{}}}],["eforturile",{"_index":122,"title":{},"body":{"components/AboutPage.html":{}}}],["element",{"_index":133,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["element(by.tagname('app",{"_index":587,"title":{},"body":{"classes/AppPage.html":{}}}],["elemmatch",{"_index":1736,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["email",{"_index":690,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"components/RecoverPasswordComponent.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{}}}],["email@email.com",{"_index":969,"title":{},"body":{"classes/EmailValidation.html":{}}}],["emailvalidation",{"_index":941,"title":{"classes/EmailValidation.html":{}},"body":{"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["emailvalidation(abstractcontrol",{"_index":945,"title":{},"body":{"classes/EmailValidation.html":{}}}],["emailvalidation.emailvalidation",{"_index":1177,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["emits",{"_index":713,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["emitts",{"_index":1036,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["empty",{"_index":1619,"title":{},"body":{"classes/Volunteer.html":{}}}],["endkey",{"_index":1599,"title":{},"body":{"injectables/StaticsService.html":{}}}],["entries",{"_index":1594,"title":{},"body":{"injectables/StaticsService.html":{}}}],["entry",{"_index":240,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/CustomSelectorComponent.html":{},"injectables/LocalStorageService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["entrycomponents",{"_index":565,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["env",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":305,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":1014,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["environment.serverurl",{"_index":1381,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["environments/environment",{"_index":306,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["eq",{"_index":364,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["eroare",{"_index":1435,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["err",{"_index":1526,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["error",{"_index":940,"title":{},"body":{"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/SsnValidation.html":{}}}],["errorhandler",{"_index":975,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorhandler(response",{"_index":982,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorhandlerinterceptor",{"_index":757,"title":{"interceptors/ErrorHandlerInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["errormessage",{"_index":1147,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errormessageobject",{"_index":1017,"title":{"interfaces/ErrorMessageObject.html":{}},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["errormessageservice",{"_index":758,"title":{"injectables/ErrorMessageService.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"coverage.html":{},"index.html":{}}}],["errormodel",{"_index":1020,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["errormodel.errormessageobject",{"_index":1033,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["errorresponse",{"_index":1005,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error",{"_index":1006,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.error",{"_index":1012,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.validation",{"_index":1007,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.validation.errors[key",{"_index":1010,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.validation.keys.foreach((key",{"_index":1008,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errors",{"_index":985,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{}}}],["este",{"_index":31,"title":{},"body":{"components/AboutPage.html":{},"classes/EmailValidation.html":{}}}],["event",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{}}}],["event.preventdefault",{"_index":506,"title":{},"body":{"components/AppComponent.html":{}}}],["event.stopimmediatepropagation",{"_index":507,"title":{},"body":{"components/AppComponent.html":{}}}],["event.subscribe(async",{"_index":861,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["eventemitter",{"_index":712,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["events",{"_index":714,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["eventualitatea",{"_index":38,"title":{},"body":{"components/AboutPage.html":{}}}],["ex",{"_index":968,"title":{},"body":{"classes/EmailValidation.html":{}}}],["exist",{"_index":1371,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["existenți",{"_index":86,"title":{},"body":{"components/AboutPage.html":{}}}],["existing",{"_index":1106,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["exiting",{"_index":466,"title":{},"body":{"components/AppComponent.html":{}}}],["expiration",{"_index":1123,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["expires",{"_index":1125,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["explicit",{"_index":1444,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["export",{"_index":24,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["exports",{"_index":180,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["extends",{"_index":1450,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["extra",{"_index":1384,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["f9f9f9",{"_index":1548,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["facilitate",{"_index":1201,"title":{},"body":{"components/LogoutComponent.html":{}}}],["false",{"_index":460,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"miscellaneous/variables.html":{}}}],["faster",{"_index":852,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["fff",{"_index":876,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["field",{"_index":1337,"title":{},"body":{"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["fields",{"_index":333,"title":{},"body":{"injectables/AllocationService.html":{},"classes/EmailValidation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"injectables/VolunteerService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["files",{"_index":1591,"title":{},"body":{"injectables/StaticsService.html":{}}}],["filter",{"_index":1653,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["filter(county",{"_index":1672,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["filters",{"_index":1674,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["finalize",{"_index":1170,"title":{},"body":{"components/LoginComponent.html":{}}}],["find",{"_index":319,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["find/lib/index",{"_index":304,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["finds",{"_index":1260,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["finished",{"_index":914,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["first",{"_index":1061,"title":{},"body":{"components/HomePage.html":{}}}],["fixed",{"_index":870,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["flex",{"_index":1082,"title":{},"body":{"components/HomePage.html":{}}}],["foarte",{"_index":107,"title":{},"body":{"components/AboutPage.html":{}}}],["following",{"_index":292,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["font",{"_index":1071,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["form",{"_index":1154,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["formbuilder",{"_index":1151,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["formcontrol",{"_index":1357,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["formgroup",{"_index":1167,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["forms",{"_index":1403,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["formsmodule",{"_index":189,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["fost",{"_index":1361,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["fotografie",{"_index":1537,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["found",{"_index":23,"title":{},"body":{"components/AboutPage.html":{},"injectables/AuthenticationService.html":{}}}],["from(localdb.alldocs",{"_index":1596,"title":{},"body":{"injectables/StaticsService.html":{}}}],["from(localdb.find",{"_index":363,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["from(localdb.post(allocation",{"_index":358,"title":{},"body":{"injectables/AllocationService.html":{}}}],["from(localdb.post(organisation",{"_index":1279,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["from(localdb.post(volunteer",{"_index":1717,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["from(localdb.query('cities/slug",{"_index":1601,"title":{},"body":{"injectables/StaticsService.html":{}}}],["fromevent",{"_index":847,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["fromevent(document",{"_index":858,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["full",{"_index":599,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SendMessageComponent.html":{}}}],["function",{"_index":991,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["functionality",{"_index":1198,"title":{},"body":{"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["functions",{"_index":1828,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["future",{"_index":1468,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["future.data.reuse",{"_index":1475,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["future.routeconfig",{"_index":1473,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["g",{"_index":1291,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["generated",{"_index":1032,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["get('/logout",{"_index":740,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getaccesstoken",{"_index":719,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getallocationbyid",{"_index":269,"title":{},"body":{"injectables/AllocationService.html":{}}}],["getallocationbyid(allocationid",{"_index":297,"title":{},"body":{"injectables/AllocationService.html":{}}}],["getcitylist",{"_index":1585,"title":{},"body":{"injectables/StaticsService.html":{}}}],["getcitylist(countyid",{"_index":1588,"title":{},"body":{"injectables/StaticsService.html":{}}}],["getcountylist",{"_index":1586,"title":{},"body":{"injectables/StaticsService.html":{}}}],["getcoursenames",{"_index":780,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcredentials",{"_index":716,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getdata",{"_index":1755,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getdata(type",{"_index":1831,"title":{},"body":{"miscellaneous/functions.html":{}}}],["geterrors",{"_index":1038,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["getitem",{"_index":1100,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getitem(key",{"_index":1111,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getorganisationbyid",{"_index":1246,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisationbyid(organisationid",{"_index":1258,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisationbyname",{"_index":1247,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisationbyname(organisationname",{"_index":1261,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisations",{"_index":1248,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getpageonetitletext",{"_index":576,"title":{},"body":{"classes/AppPage.html":{}}}],["gets",{"_index":431,"title":{},"body":{"components/AppComponent.html":{}}}],["getsessionname",{"_index":1756,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getter",{"_index":718,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["gettitle",{"_index":577,"title":{},"body":{"classes/AppPage.html":{}}}],["getuser",{"_index":721,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getvolunteerbyid",{"_index":1654,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteerbyid(volunteerid",{"_index":1679,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteerbyssn",{"_index":1655,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteerbyssn(ssn",{"_index":1681,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteers",{"_index":1656,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteers(page",{"_index":1683,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["given",{"_index":1448,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"injectables/VolunteerService.html":{}}}],["go",{"_index":1164,"title":{},"body":{"components/LoginComponent.html":{}}}],["granted",{"_index":1499,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["graph",{"_index":1840,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":609,"title":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{},"coverage.html":{}}}],["guards",{"_index":610,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{},"index.html":{}}}],["h",{"_index":1541,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["handle",{"_index":1104,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["handle(request",{"_index":999,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler",{"_index":974,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler.interceptor.ts",{"_index":972,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["handler.interceptor.ts:25",{"_index":977,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler.interceptor.ts:45",{"_index":989,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler.interceptor.ts:59",{"_index":984,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handles",{"_index":618,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["handling",{"_index":980,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["header",{"_index":1547,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["height",{"_index":1083,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["help",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hh:mm:ss",{"_index":350,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["hidden",{"_index":409,"title":{},"body":{"components/AppComponent.html":{}}}],["home",{"_index":597,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["home')).element(by.deepcss('ion",{"_index":588,"title":{},"body":{"classes/AppPage.html":{}}}],["home'},{'name",{"_index":150,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["home.page",{"_index":1092,"title":{},"body":{"modules/HomePageModule.html":{}}}],["home.page.html",{"_index":1047,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":1046,"title":{},"body":{"components/HomePage.html":{}}}],["homepage",{"_index":149,"title":{"components/HomePage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["homepagemodule",{"_index":1088,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"index.html":{},"modules.html":{}}}],["html",{"_index":132,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["http",{"_index":670,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["http://rvm.lxhost.ro:5984",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":763,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpclient",{"_index":665,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["httpclientmodule",{"_index":764,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpevent",{"_index":993,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httphandler",{"_index":988,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httpinterceptor",{"_index":994,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httprequest",{"_index":987,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httpresponse",{"_index":983,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["https://github.com/angular/angular/issues/18374",{"_index":1447,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["https://rvm",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":1544,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["id",{"_index":228,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["identific",{"_index":92,"title":{},"body":{"components/AboutPage.html":{}}}],["identifier",{"_index":1740,"title":{},"body":{"coverage.html":{}}}],["identifies",{"_index":998,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"miscellaneous/variables.html":{}}}],["identitatea",{"_index":83,"title":{},"body":{"components/AboutPage.html":{}}}],["idx",{"_index":1572,"title":{},"body":{"classes/SsnValidation.html":{}}}],["idx.map((x",{"_index":1574,"title":{},"body":{"classes/SsnValidation.html":{}}}],["ig",{"_index":1698,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["ignore",{"_index":916,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/ErrorMessageService.html":{}}}],["ignored",{"_index":425,"title":{},"body":{"components/AppComponent.html":{}}}],["image",{"_index":1491,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["imagedata",{"_index":1525,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["implements",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["implicate",{"_index":121,"title":{},"body":{"components/AboutPage.html":{}}}],["import",{"_index":18,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["important",{"_index":570,"title":{},"body":{"modules/AppModule.html":{}}}],["imports",{"_index":203,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["inactiv",{"_index":1238,"title":{},"body":{"classes/Organisation.html":{},"injectables/OrganisationService.html":{}}}],["inappbrowser",{"_index":562,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["inbox",{"_index":1367,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["include_docs",{"_index":793,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["incorecte",{"_index":1186,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":214,"title":{"index.html":{}},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexed",{"_index":915,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["information",{"_index":21,"title":{},"body":{"components/AboutPage.html":{},"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"interceptors/RequestInterceptor.html":{},"miscellaneous/functions.html":{}}}],["informații",{"_index":1185,"title":{},"body":{"components/LoginComponent.html":{}}}],["initialisation",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["initialiseview",{"_index":1397,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["initializeapp",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["initializes",{"_index":667,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["injectable",{"_index":258,"title":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}},"body":{"injectables/AllocationService.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["injectables",{"_index":260,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"index.html":{}}}],["injected",{"_index":978,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{}}}],["injection",{"_index":669,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["input",{"_index":846,"title":{},"body":{"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{},"injectables/VolunteerService.html":{}}}],["inputs",{"_index":819,"title":{},"body":{"components/CustomSelectorComponent.html":{},"classes/PasswordValidation.html":{}}}],["inside",{"_index":1119,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["instrument",{"_index":49,"title":{},"body":{"components/AboutPage.html":{}}}],["intent",{"_index":1529,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["intercept",{"_index":976,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["intercept(request",{"_index":986,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["interceptor",{"_index":970,"title":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":775,"title":{},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["intercepts",{"_index":990,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["interface",{"_index":795,"title":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{}},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":796,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{},"index.html":{}}}],["intervenție",{"_index":116,"title":{},"body":{"components/AboutPage.html":{}}}],["introdus",{"_index":965,"title":{},"body":{"classes/EmailValidation.html":{}}}],["ion",{"_index":1086,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["ionic",{"_index":477,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["ionic/angular",{"_index":195,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"modules/HomePageModule.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["ionic/lab",{"_index":1806,"title":{},"body":{"dependencies.html":{}}}],["ionicmodule",{"_index":194,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["ionicmodule.forroot",{"_index":566,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":554,"title":{},"body":{"modules/AppModule.html":{}}}],["ionrouteroutlet",{"_index":467,"title":{},"body":{"components/AppComponent.html":{}}}],["ios",{"_index":1811,"title":{},"body":{"dependencies.html":{}}}],["isauthenticated",{"_index":658,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isdoubletap",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["isn't",{"_index":624,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["it's",{"_index":251,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["item",{"_index":1110,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["item's",{"_index":1116,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["item.name",{"_index":867,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["items",{"_index":820,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{}}}],["itself",{"_index":1117,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["job",{"_index":1608,"title":{},"body":{"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["js",{"_index":1817,"title":{},"body":{"dependencies.html":{}}}],["json.parse(savedcredentials",{"_index":732,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(credentials",{"_index":745,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["justify",{"_index":1084,"title":{},"body":{"components/HomePage.html":{}}}],["key",{"_index":727,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["keyword",{"_index":1691,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["know",{"_index":840,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["l",{"_index":113,"title":{},"body":{"components/AboutPage.html":{}}}],["la",{"_index":57,"title":{},"body":{"components/AboutPage.html":{}}}],["label",{"_index":1553,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["last",{"_index":253,"title":{},"body":{"classes/Allocation.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["lazy",{"_index":608,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["le",{"_index":55,"title":{},"body":{"components/AboutPage.html":{}}}],["left",{"_index":871,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["legend",{"_index":131,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["lifecycle",{"_index":429,"title":{},"body":{"components/AppComponent.html":{},"classes/RouteReusableStrategy.html":{}}}],["limit",{"_index":365,"title":{},"body":{"injectables/AllocationService.html":{},"classes/DatabaseSyncService.html":{},"injectables/VolunteerService.html":{}}}],["link",{"_index":693,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["linked",{"_index":650,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["list",{"_index":152,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["listener",{"_index":837,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["listvolunteercomponent",{"_index":151,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["liter",{"_index":1320,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["literal",{"_index":234,"title":{},"body":{"classes/Allocation.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["live",{"_index":327,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["loadchildren",{"_index":600,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":653,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["loader",{"_index":849,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["loading",{"_index":491,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["loads",{"_index":205,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{}}}],["loc",{"_index":45,"title":{},"body":{"components/AboutPage.html":{}}}],["local",{"_index":285,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["localallocationsdb",{"_index":887,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localcoursesdb",{"_index":888,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localdb",{"_index":316,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localdb.createindex",{"_index":332,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localdb.get(organisation._id).then((doc",{"_index":1280,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["localdb.get(organisationid).then((doc",{"_index":1285,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["localdb.get(volunteer._id).then((doc",{"_index":1718,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["localdb.get(volunteerid).then((doc",{"_index":1734,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["localdb.put(doc",{"_index":1284,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localdb.remove(doc",{"_index":1286,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localdb.replicate.from(remotedb",{"_index":1595,"title":{},"body":{"injectables/StaticsService.html":{}}}],["localdb.sync(remotedb",{"_index":331,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localorganisationsdb",{"_index":889,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localstaticsdb",{"_index":890,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localstorage",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":385,"title":{"injectables/LocalStorageService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{},"index.html":{}}}],["localvolunteersdb",{"_index":891,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["locală'/'național",{"_index":1224,"title":{},"body":{"classes/Organisation.html":{}}}],["location",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/SendMessageComponent.html":{}}}],["locations",{"_index":1580,"title":{},"body":{"injectables/StaticsService.html":{}}}],["log",{"_index":708,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logged",{"_index":1405,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["login",{"_index":627,"title":{},"body":{"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{}}}],["login'},{'name",{"_index":154,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["login(payload",{"_index":674,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login(this.loginform.value",{"_index":1180,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1146,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1145,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/home",{"_index":415,"title":{},"body":{"components/AppComponent.html":{}}}],["login/login.component",{"_index":645,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["login/logout",{"_index":635,"title":{},"body":{"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{}}}],["logincomponent",{"_index":153,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["loginform",{"_index":1148,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.controls.email.errors?.email",{"_index":1189,"title":{},"body":{"components/LoginComponent.html":{}}}],["logininfo",{"_index":733,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logininfo).pipe",{"_index":736,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logininfo.device",{"_index":734,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginpayload",{"_index":800,"title":{"interfaces/LoginPayload.html":{}},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["logout",{"_index":651,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"components/LogoutComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["logout'},{'name",{"_index":156,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["logout.component.html",{"_index":1194,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout.component.scss",{"_index":1193,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout/logout.component",{"_index":646,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["logoutcomponent",{"_index":155,"title":{"components/LogoutComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["lookup",{"_index":1293,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["lowercase",{"_index":1328,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["lowercase.test(password",{"_index":1332,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["m",{"_index":1294,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["mai",{"_index":118,"title":{},"body":{"components/AboutPage.html":{}}}],["main",{"_index":490,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/VolunteerPage.html":{}}}],["major",{"_index":68,"title":{},"body":{"components/AboutPage.html":{}}}],["majore",{"_index":41,"title":{},"body":{"components/AboutPage.html":{}}}],["management",{"_index":30,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["map",{"_index":308,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/VolunteerService.html":{}}}],["map((body",{"_index":737,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["map((response",{"_index":360,"title":{},"body":{"injectables/AllocationService.html":{}}}],["mare",{"_index":1321,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["margin",{"_index":1542,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["match",{"_index":1307,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["match.$args.token",{"_index":528,"title":{},"body":{"components/AppComponent.html":{}}}],["matches",{"_index":1690,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["matching",{"_index":171,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchpassword",{"_index":1303,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["matchpassword(abstractcontrol",{"_index":1304,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["md",{"_index":1540,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["mean",{"_index":1053,"title":{},"body":{"components/HomePage.html":{}}}],["means",{"_index":1627,"title":{},"body":{"classes/Volunteer.html":{}}}],["menit",{"_index":33,"title":{},"body":{"components/AboutPage.html":{}}}],["menu",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["menucontroller",{"_index":390,"title":{},"body":{"components/AppComponent.html":{}}}],["mesaj",{"_index":1534,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["mesajul",{"_index":1535,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message",{"_index":534,"title":{},"body":{"components/AppComponent.html":{},"classes/EmailValidation.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{}}}],["message'},{'name",{"_index":164,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["message.component",{"_index":1648,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["message.component.html",{"_index":1480,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.scss",{"_index":1479,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts",{"_index":1478,"title":{},"body":{"components/SendMessageComponent.html":{},"coverage.html":{}}}],["message.component.ts:23",{"_index":1506,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:28",{"_index":1505,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:33",{"_index":1488,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:47",{"_index":1500,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:64",{"_index":1490,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:78",{"_index":1503,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:92",{"_index":1497,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.service",{"_index":997,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["message.service.ts",{"_index":1025,"title":{},"body":{"injectables/ErrorMessageService.html":{},"coverage.html":{}}}],["message.service.ts:11",{"_index":1034,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:16",{"_index":1035,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:27",{"_index":1039,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:37",{"_index":1031,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:51",{"_index":1029,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message/send",{"_index":1477,"title":{},"body":{"components/SendMessageComponent.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["messageform",{"_index":1482,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["messages",{"_index":1026,"title":{},"body":{"injectables/ErrorMessageService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["messagging",{"_index":981,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["method",{"_index":430,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/OrganisationService.html":{},"classes/RouteReusableStrategy.html":{},"injectables/VolunteerService.html":{}}}],["methods",{"_index":266,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["min",{"_index":1549,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["minim",{"_index":1317,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["miscellaneous",{"_index":1827,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":348,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["mobile",{"_index":78,"title":{},"body":{"components/AboutPage.html":{},"injectables/AuthenticationService.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["mobilizați",{"_index":81,"title":{},"body":{"components/AboutPage.html":{}}}],["modal",{"_index":423,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["modal.dismiss",{"_index":863,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["modalcontroller",{"_index":822,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["modalctrl",{"_index":824,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["model",{"_index":212,"title":{},"body":{"classes/Allocation.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["model/allocation.model",{"_index":312,"title":{},"body":{"injectables/AllocationService.html":{}}}],["model/organisation.model",{"_index":1269,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["model/volunteer.model",{"_index":313,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["models",{"_index":776,"title":{},"body":{"modules/CoreModule.html":{}}}],["modul",{"_index":569,"title":{},"body":{"modules/AppModule.html":{}}}],["module",{"_index":173,"title":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["modules",{"_index":175,"title":{"modules.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{},"modules.html":{}}}],["moment",{"_index":314,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["moment().format('y",{"_index":347,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["moz",{"_index":1067,"title":{},"body":{"components/HomePage.html":{}}}],["multi",{"_index":773,"title":{},"body":{"modules/CoreModule.html":{}}}],["n",{"_index":37,"title":{},"body":{"components/AboutPage.html":{},"components/RecoverPasswordComponent.html":{}}}],["name",{"_index":137,"title":{},"body":{"components/AboutPage.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["name,ssn",{"_index":1689,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["nameeq",{"_index":1134,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["names",{"_index":786,"title":{},"body":{"injectables/CourseService.html":{}}}],["namespace",{"_index":799,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{}}}],["native/camera",{"_index":1508,"title":{},"body":{"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["native/core",{"_index":1799,"title":{},"body":{"dependencies.html":{}}}],["native/date",{"_index":558,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/deeplinks",{"_index":484,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["native/in",{"_index":563,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/sms",{"_index":1803,"title":{},"body":{"dependencies.html":{}}}],["native/sms/ngx",{"_index":561,"title":{},"body":{"modules/AppModule.html":{},"components/SendMessageComponent.html":{}}}],["native/splash",{"_index":478,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/status",{"_index":480,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["natural",{"_index":73,"title":{},"body":{"components/AboutPage.html":{}}}],["navigateto",{"_index":578,"title":{},"body":{"classes/AppPage.html":{}}}],["navigateto(destination",{"_index":581,"title":{},"body":{"classes/AppPage.html":{}}}],["navigation",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["navigation.extras",{"_index":1511,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["navigation.extras.state",{"_index":1512,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["navigation.extras.state.volunteers",{"_index":1513,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["navigator['app'].exitapp",{"_index":515,"title":{},"body":{"components/AppComponent.html":{}}}],["ncerci",{"_index":1374,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["neafiliat",{"_index":1628,"title":{},"body":{"classes/Volunteer.html":{}}}],["neccessary",{"_index":1406,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["needs",{"_index":1501,"title":{},"body":{"components/SendMessageComponent.html":{},"miscellaneous/functions.html":{}}}],["never",{"_index":710,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Volunteer.html":{}}}],["new",{"_index":317,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newcourse",{"_index":1713,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["next",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["next.handle(request",{"_index":1395,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["ngafterviewinit",{"_index":377,"title":{},"body":{"components/AppComponent.html":{}}}],["ngmodule",{"_index":186,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["ngondestroy",{"_index":817,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["ngoninit",{"_index":818,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["nomatch",{"_index":530,"title":{},"body":{"components/AppComponent.html":{}}}],["nothing",{"_index":707,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LogoutComponent.html":{}}}],["nou",{"_index":110,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["nregistra",{"_index":106,"title":{},"body":{"components/AboutPage.html":{}}}],["nregistrat",{"_index":1362,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["nu",{"_index":966,"title":{},"body":{"classes/EmailValidation.html":{},"components/RecoverPasswordComponent.html":{}}}],["null",{"_index":294,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["number",{"_index":804,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"interfaces/RootObject.html":{},"classes/SsnValidation.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number.test(password",{"_index":1330,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["numbers",{"_index":1507,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["număr",{"_index":1322,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["o",{"_index":32,"title":{},"body":{"components/AboutPage.html":{},"classes/PasswordValidation.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["object",{"_index":213,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":296,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["obtained",{"_index":1635,"title":{},"body":{"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["ofer",{"_index":89,"title":{},"body":{"components/AboutPage.html":{}}}],["ofere",{"_index":35,"title":{},"body":{"components/AboutPage.html":{}}}],["officer",{"_index":246,"title":{},"body":{"classes/Allocation.html":{},"classes/Volunteer.html":{}}}],["once",{"_index":464,"title":{},"body":{"components/AppComponent.html":{}}}],["ondestroy",{"_index":812,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["one",{"_index":691,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["oninit",{"_index":811,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["open",{"_index":424,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["opening",{"_index":1054,"title":{},"body":{"components/HomePage.html":{}}}],["operation",{"_index":1155,"title":{},"body":{"components/LoginComponent.html":{}}}],["operations",{"_index":264,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["optional",{"_index":281,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":277,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["order",{"_index":839,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["organisation",{"_index":221,"title":{"classes/Organisation.html":{}},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["organisation's",{"_index":1215,"title":{},"body":{"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{}}}],["organisation._id",{"_index":355,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["organisation.added_by",{"_index":1273,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.created_at",{"_index":1275,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.name",{"_index":356,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["organisation.slug",{"_index":1271,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["organisation.status",{"_index":1278,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.type",{"_index":1277,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.updated_at",{"_index":1276,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.website",{"_index":1710,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["organisationid",{"_index":1257,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["organisationname",{"_index":1263,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisations",{"_index":901,"title":{},"body":{"classes/DatabaseSyncService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"miscellaneous/variables.html":{}}}],["organisationservice",{"_index":759,"title":{"injectables/OrganisationService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/OrganisationService.html":{},"coverage.html":{},"index.html":{}}}],["otherwise",{"_index":955,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{},"classes/Volunteer.html":{}}}],["out",{"_index":184,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"components/ResetPasswordComponent.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["outlet",{"_index":471,"title":{},"body":{"components/AppComponent.html":{}}}],["output",{"_index":1287,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["over",{"_index":573,"title":{},"body":{"modules/AppModule.html":{}}}],["overview",{"_index":1834,"title":{"index.html":{}},"body":{"index.html":{}}}],["p.title",{"_index":541,"title":{},"body":{"components/AppComponent.html":{}}}],["package",{"_index":1794,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":872,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["page",{"_index":22,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{}}}],["pages",{"_index":458,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/VolunteerPage.html":{}}}],["pages/about/about.module#aboutpagemodule",{"_index":602,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/authentication/authentication.module#authenticationpagemodule",{"_index":605,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/authentication/reset",{"_index":485,"title":{},"body":{"components/AppComponent.html":{}}}],["pages/home/home.module#homepagemodule",{"_index":601,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/volunteer/volunteer.module#volunteerpagemodule",{"_index":603,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paginate",{"_index":1677,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["param",{"_index":336,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["parameter",{"_index":231,"title":{},"body":{"classes/Allocation.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["parameters",{"_index":280,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1425,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["params['token",{"_index":1427,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["parent",{"_index":593,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["parol",{"_index":1188,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["parola",{"_index":1191,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["parolele",{"_index":1313,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["parseint(abstractcontrol.value",{"_index":1562,"title":{},"body":{"classes/SsnValidation.html":{}}}],["parte",{"_index":93,"title":{},"body":{"components/AboutPage.html":{}}}],["parteneriat",{"_index":127,"title":{},"body":{"components/AboutPage.html":{}}}],["password",{"_index":637,"title":{},"body":{"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/User.html":{}}}],["password'},{'name",{"_index":159,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["password.component",{"_index":487,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticationPageModule.html":{}}}],["password.component.html",{"_index":1348,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":1347,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":1346,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:107",{"_index":1413,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:118",{"_index":1410,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":1416,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:22",{"_index":1356,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:26",{"_index":1418,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:27",{"_index":1355,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:31",{"_index":1415,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:32",{"_index":1350,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:36",{"_index":1400,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:46",{"_index":1417,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:48",{"_index":1351,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:56",{"_index":1407,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:57",{"_index":1354,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:76",{"_index":1353,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:80",{"_index":1404,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:91",{"_index":1411,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.length",{"_index":1334,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["password/recover",{"_index":644,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":486,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticationPageModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password_confirmation",{"_index":752,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["passwords",{"_index":1300,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordvalidation",{"_index":1296,"title":{"classes/PasswordValidation.html":{}},"body":{"classes/PasswordValidation.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordvalidation(abstractcontrol",{"_index":1308,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordvalidation.matchpassword",{"_index":1423,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordvalidation.passwordvalidation",{"_index":1422,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["path",{"_index":201,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"modules/VolunteerPageModule.html":{}}}],["pathmatch",{"_index":598,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":954,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{},"injectables/VolunteerService.html":{}}}],["payload",{"_index":682,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["pe",{"_index":54,"title":{},"body":{"components/AboutPage.html":{}}}],["pentru",{"_index":117,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["per",{"_index":1678,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["performaction",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["performaction(url",{"_index":434,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["performed",{"_index":706,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomePage.html":{},"components/ResetPasswordComponent.html":{}}}],["performes",{"_index":1051,"title":{},"body":{"components/HomePage.html":{}}}],["permission",{"_index":1498,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["permite",{"_index":101,"title":{},"body":{"components/AboutPage.html":{}}}],["persoanelor",{"_index":120,"title":{},"body":{"components/AboutPage.html":{}}}],["person",{"_index":1220,"title":{},"body":{"classes/Organisation.html":{}}}],["phone",{"_index":803,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"classes/PhoneValidation.html":{},"components/SendMessageComponent.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["phone's",{"_index":1055,"title":{},"body":{"components/HomePage.html":{}}}],["phone.indexof",{"_index":1344,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["phone.length",{"_index":1341,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["phonenumber",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phonenumbers",{"_index":1483,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["phonevalidation",{"_index":1335,"title":{"classes/PhoneValidation.html":{}},"body":{"classes/PhoneValidation.html":{},"coverage.html":{}}}],["phonevalidation(abstractcontrol",{"_index":1338,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["picker",{"_index":1801,"title":{},"body":{"dependencies.html":{}}}],["picker/ngx",{"_index":559,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe",{"_index":359,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{}}}],["pipe(catcherror(error",{"_index":1000,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["planned",{"_index":1165,"title":{},"body":{"components/LoginComponent.html":{}}}],["platform",{"_index":87,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["platforms",{"_index":393,"title":{},"body":{"components/AppComponent.html":{}}}],["plugin",{"_index":320,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["plugins",{"_index":571,"title":{},"body":{"modules/AppModule.html":{}}}],["pop",{"_index":841,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["position",{"_index":537,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["pouchdb",{"_index":278,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('allocations",{"_index":318,"title":{},"body":{"injectables/AllocationService.html":{},"classes/DatabaseSyncService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('courses",{"_index":792,"title":{},"body":{"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('organisations",{"_index":923,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('statics",{"_index":928,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/StaticsService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('volunteers",{"_index":918,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb(environment.databaseurl",{"_index":325,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb.plugin(pouchdbfind",{"_index":322,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["pouchdb/dist/pouchdb",{"_index":302,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["pouchdbfind",{"_index":303,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["prefixes",{"_index":1380,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["preloadallmodules",{"_index":592,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":607,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["presents",{"_index":440,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["presenttoast",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["presenttoast(message",{"_index":1352,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["private",{"_index":265,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["prod",{"_index":1871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":723,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["progile",{"_index":807,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["promise",{"_index":912,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["promise.all",{"_index":930,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["promises",{"_index":939,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["properties",{"_index":215,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["protecting",{"_index":613,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["protocolul",{"_index":95,"title":{},"body":{"components/AboutPage.html":{}}}],["protractor",{"_index":584,"title":{},"body":{"classes/AppPage.html":{}}}],["prove",{"_index":698,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["provide",{"_index":567,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["provider",{"_index":262,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["providers",{"_index":179,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["provides",{"_index":612,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/UnauthenticatedGuard.html":{}}}],["public",{"_index":268,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{}}}],["pune",{"_index":56,"title":{},"body":{"components/AboutPage.html":{}}}],["purpose",{"_index":1200,"title":{},"body":{"components/LogoutComponent.html":{}}}],["puteți",{"_index":80,"title":{},"body":{"components/AboutPage.html":{}}}],["părăsi",{"_index":536,"title":{},"body":{"components/AppComponent.html":{}}}],["reactive",{"_index":1153,"title":{},"body":{"components/LoginComponent.html":{}}}],["reactiveformsmodule",{"_index":642,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["readcookie",{"_index":1757,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readcookie(name",{"_index":1133,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["receive",{"_index":692,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["recover",{"_index":158,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["recover/reset",{"_index":636,"title":{},"body":{"components/AuthenticationPage.html":{}}}],["recoverpassword",{"_index":659,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["recoverpassword(email",{"_index":687,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["recoverpasswordcomponent",{"_index":157,"title":{"components/RecoverPasswordComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["recovery",{"_index":689,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["rective",{"_index":1402,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["redirected",{"_index":1160,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["redirects",{"_index":626,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["redirectto",{"_index":596,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":315,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["referes",{"_index":979,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["reg",{"_index":957,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PhoneValidation.html":{}}}],["reg.test(email",{"_index":963,"title":{},"body":{"classes/EmailValidation.html":{}}}],["reg.test(phone",{"_index":1340,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["regex",{"_index":1289,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["regexp",{"_index":1290,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["regexp('[a",{"_index":1326,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["regexp('\\\\d",{"_index":1324,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["regexp('^[+]{0,1}[0",{"_index":1339,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["regexp('^[a",{"_index":958,"title":{},"body":{"classes/EmailValidation.html":{}}}],["regexp(/[!#$%&\\‘\\(\\)\\*?@\\[\\]^_",{"_index":1329,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["related",{"_index":263,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{}}}],["remote",{"_index":886,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["remoteallocationsdb",{"_index":892,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["remotecoursesdb",{"_index":893,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["remotedb",{"_index":324,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["remoteorganisationsdb",{"_index":894,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["remotestaticsdb",{"_index":895,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["remotevolunteersdb",{"_index":896,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["removes",{"_index":1109,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["removespecialchars",{"_index":1249,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["removespecialchars(text",{"_index":1265,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["replacelinebreaks",{"_index":1527,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["replaceurl",{"_index":631,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["represent",{"_index":827,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["request",{"_index":678,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{}}}],["request.clone",{"_index":1386,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["request.url",{"_index":1394,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["requestinterceptor",{"_index":760,"title":{"interceptors/RequestInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["requests",{"_index":671,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["require",{"_index":1792,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":503,"title":{},"body":{"components/AppComponent.html":{},"classes/SsnValidation.html":{}}}],["rescue",{"_index":245,"title":{},"body":{"classes/Allocation.html":{},"classes/Volunteer.html":{}}}],["rescue_officer",{"_index":222,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{}}}],["rescue_officer._id",{"_index":335,"title":{},"body":{"injectables/AllocationService.html":{}}}],["rescue_officer.name",{"_index":341,"title":{},"body":{"injectables/AllocationService.html":{}}}],["reset",{"_index":161,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["reset/:token",{"_index":652,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["resetat",{"_index":1431,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpassword",{"_index":660,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["resetpassword(password",{"_index":695,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resetpassword.errors?.password",{"_index":1438,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordcomponent",{"_index":160,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["resetpasswordform",{"_index":1349,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["resetpasswordform.controls.confirmpassword.errors?.password",{"_index":1439,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordform.controls.email.errors?.email",{"_index":1376,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["resetpasswordform.controls.password.errors?.password",{"_index":1440,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resource",{"_index":28,"title":{},"body":{"components/AboutPage.html":{},"injectables/StaticsService.html":{}}}],["respective",{"_index":595,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/VolunteerPageModule.html":{}}}],["respects",{"_index":953,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["response",{"_index":362,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/VolunteerService.html":{}}}],["response.status",{"_index":1002,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["response.url",{"_index":1011,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["result",{"_index":170,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":172,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resurse",{"_index":53,"title":{},"body":{"components/AboutPage.html":{}}}],["retrieve",{"_index":1451,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["retrieve(route",{"_index":1456,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["retrieved",{"_index":1502,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["retrieves",{"_index":1113,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["retry",{"_index":329,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["return",{"_index":357,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"interceptors/RequestInterceptor.html":{},"classes/RouteReusableStrategy.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["returns",{"_index":295,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["reusable",{"_index":766,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["reuse",{"_index":1445,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["rewuest",{"_index":684,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["reîncercați",{"_index":1436,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["rgba(0,0,0,0.05",{"_index":883,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["rgba(240,237,240,1",{"_index":1066,"title":{},"body":{"components/HomePage.html":{}}}],["romania",{"_index":126,"title":{},"body":{"components/AboutPage.html":{}}}],["romanian",{"_index":1232,"title":{},"body":{"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["românia",{"_index":46,"title":{},"body":{"components/AboutPage.html":{}}}],["root",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":143,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["rootobject",{"_index":1021,"title":{"interfaces/RootObject.html":{}},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["route",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/CoreModule.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"guards/UnauthenticatedGuard.html":{}}}],["router",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["routereusablestrategy",{"_index":765,"title":{"classes/RouteReusableStrategy.html":{}},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["routereusestrategy",{"_index":553,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["routermodule",{"_index":192,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["routermodule.forchild",{"_index":1093,"title":{},"body":{"modules/HomePageModule.html":{}}}],["routermodule.forchild(routes",{"_index":204,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["routermodule.forroot(routes",{"_index":606,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":191,"title":{"routes.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"guards/UnauthenticatedGuard.html":{},"modules/VolunteerPageModule.html":{},"index.html":{},"routes.html":{}}}],["routing",{"_index":619,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["routing.module",{"_index":556,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":591,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":1087,"title":{},"body":{"components/HomePage.html":{}}}],["rugăm",{"_index":1364,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["rvm",{"_index":47,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["rxjs",{"_index":307,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":309,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"injectables/VolunteerService.html":{}}}],["s",{"_index":34,"title":{},"body":{"components/AboutPage.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"classes/SsnValidation.html":{}}}],["s.reduce((a",{"_index":1577,"title":{},"body":{"classes/SsnValidation.html":{}}}],["salvare",{"_index":123,"title":{},"body":{"components/AboutPage.html":{}}}],["same",{"_index":699,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sau",{"_index":69,"title":{},"body":{"components/AboutPage.html":{}}}],["savedcredentials",{"_index":729,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["saves",{"_index":703,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sc",{"_index":1538,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["scoll",{"_index":848,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["screen",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LogoutComponent.html":{},"dependencies.html":{}}}],["screen/ngx",{"_index":479,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["se",{"_index":91,"title":{},"body":{"components/AboutPage.html":{}}}],["search",{"_index":1657,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["search(keyword",{"_index":1686,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["searches",{"_index":1664,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["second",{"_index":1626,"title":{},"body":{"classes/Volunteer.html":{}}}],["seconds",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["section",{"_index":207,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["security",{"_index":1669,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["seism",{"_index":67,"title":{},"body":{"components/AboutPage.html":{}}}],["selected",{"_index":833,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{}}}],["selection",{"_index":787,"title":{},"body":{"injectables/CourseService.html":{}}}],["selections",{"_index":828,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AboutPage.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{}}}],["selector'},{'name",{"_index":148,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["selector.component",{"_index":772,"title":{},"body":{"modules/CoreModule.html":{}}}],["selector.component.html",{"_index":814,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.scss",{"_index":813,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts",{"_index":810,"title":{},"body":{"components/CustomSelectorComponent.html":{},"coverage.html":{}}}],["selector.component.ts:20",{"_index":826,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts:26",{"_index":823,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts:41",{"_index":830,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts:49",{"_index":838,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts:64",{"_index":835,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts:72",{"_index":834,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector/custom",{"_index":771,"title":{},"body":{"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"coverage.html":{}}}],["selector['$and'].push",{"_index":1735,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["selects",{"_index":831,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["send",{"_index":163,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{}}}],["sending",{"_index":1489,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["sendmessage",{"_index":1486,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["sendmessagecomponent",{"_index":162,"title":{"components/SendMessageComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["sends",{"_index":677,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["sent",{"_index":672,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{}}}],["server",{"_index":323,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["serverbaseurl",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverurl",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":620,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["service/error",{"_index":996,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["service/statics.service",{"_index":768,"title":{},"body":{"modules/CoreModule.html":{}}}],["services",{"_index":774,"title":{},"body":{"modules/CoreModule.html":{}}}],["serviceurl",{"_index":1019,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"interfaces/RootObject.html":{}}}],["session",{"_index":1120,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["sessionstorage",{"_index":1097,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["set",{"_index":233,"title":{},"body":{"classes/Allocation.html":{},"components/AppComponent.html":{},"injectables/ErrorMessageService.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["set(error",{"_index":1030,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["setcredentials",{"_index":661,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setcredentials(credentials",{"_index":700,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setdata",{"_index":1758,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setdata(type",{"_index":1832,"title":{},"body":{"miscellaneous/functions.html":{}}}],["seterrormessage",{"_index":1398,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["seterrormessage(message",{"_index":1412,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["setheaders",{"_index":1387,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["setitem",{"_index":1101,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setitem(key",{"_index":1114,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["sets",{"_index":275,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"injectables/ErrorMessageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["settimeout",{"_index":513,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["shadow",{"_index":880,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{}}}],["shouldattach",{"_index":1452,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldattach(route",{"_index":1461,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shoulddetach",{"_index":1453,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shoulddetach(route",{"_index":1463,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldreuseroute",{"_index":1454,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldreuseroute(future",{"_index":1465,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shows/hides",{"_index":474,"title":{},"body":{"components/AppComponent.html":{}}}],["showsidemenu",{"_index":375,"title":{},"body":{"components/AppComponent.html":{}}}],["side",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["simple",{"_index":1302,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["simplu",{"_index":108,"title":{},"body":{"components/AboutPage.html":{}}}],["situații",{"_index":63,"title":{},"body":{"components/AboutPage.html":{}}}],["size",{"_index":1072,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["skip",{"_index":1697,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["slug",{"_index":1209,"title":{},"body":{"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["sms",{"_index":560,"title":{},"body":{"modules/AppModule.html":{},"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["social",{"_index":1668,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["societatea",{"_index":59,"title":{},"body":{"components/AboutPage.html":{}}}],["something",{"_index":1162,"title":{},"body":{"components/LoginComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["spam",{"_index":1369,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["spec\\.ts",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":1233,"title":{},"body":{"classes/Organisation.html":{},"classes/PasswordValidation.html":{},"classes/Volunteer.html":{}}}],["special.test(password",{"_index":1333,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["specialisation",{"_index":1620,"title":{},"body":{"classes/Volunteer.html":{}}}],["specificat",{"_index":1370,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["splash",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["splashscreen",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["spontani",{"_index":104,"title":{},"body":{"components/AboutPage.html":{}}}],["sprijin",{"_index":36,"title":{},"body":{"components/AboutPage.html":{}}}],["sprijinul",{"_index":128,"title":{},"body":{"components/AboutPage.html":{}}}],["src/.../allocation.service.ts",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authentication.service.ts",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.ts",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../course.service.ts",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.dev.ts",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.local.ts",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":1829,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../organisation.service.ts",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../statics.service.ts",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../volunteer.service.ts",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":590,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:102",{"_index":405,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:156",{"_index":435,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:167",{"_index":427,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:186",{"_index":439,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":470,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":472,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":457,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:85",{"_index":459,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":549,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core",{"_index":1171,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["src/app/core/authentication/authentication.guard.ts",{"_index":611,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/app/core/authentication/authentication.guard.ts:10",{"_index":617,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/app/core/authentication/authentication.guard.ts:26",{"_index":621,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/app/core/authentication/authentication.service.ts",{"_index":654,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/authentication/authentication.service.ts:106",{"_index":702,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:123",{"_index":722,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:132",{"_index":688,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:142",{"_index":697,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:21",{"_index":709,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:26",{"_index":666,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:48",{"_index":676,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:66",{"_index":683,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:81",{"_index":673,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:89",{"_index":717,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:97",{"_index":720,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/unauthenticated.guard",{"_index":648,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["src/app/core/authentication/unauthenticated.guard.ts",{"_index":1602,"title":{},"body":{"guards/UnauthenticatedGuard.html":{},"coverage.html":{}}}],["src/app/core/authentication/unauthenticated.guard.ts:10",{"_index":1604,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["src/app/core/authentication/unauthenticated.guard.ts:27",{"_index":1605,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["src/app/core/components/custom",{"_index":809,"title":{},"body":{"components/CustomSelectorComponent.html":{},"coverage.html":{}}}],["src/app/core/core.module.ts",{"_index":762,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/http/error",{"_index":971,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/http/request.interceptor.ts",{"_index":1379,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["src/app/core/http/request.interceptor.ts:17",{"_index":1382,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/app/core/http/request.interceptor.ts:31",{"_index":1383,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/app/core/local",{"_index":1094,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/model/allocation.model.ts",{"_index":210,"title":{},"body":{"classes/Allocation.html":{},"coverage.html":{}}}],["src/app/core/model/allocation.model.ts:103",{"_index":249,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:13",{"_index":229,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:18",{"_index":244,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:33",{"_index":255,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:48",{"_index":238,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:63",{"_index":235,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:78",{"_index":242,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:8",{"_index":227,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:93",{"_index":239,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:98",{"_index":252,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/authentication.model.ts",{"_index":797,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/model/error.model.ts",{"_index":1018,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["src/app/core/model/organisation.model.ts",{"_index":1204,"title":{},"body":{"classes/Organisation.html":{},"coverage.html":{}}}],["src/app/core/model/organisation.model.ts:104",{"_index":1239,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:109",{"_index":1235,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:114",{"_index":1222,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:13",{"_index":1211,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:18",{"_index":1227,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:23",{"_index":1229,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:28",{"_index":1242,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:33",{"_index":1218,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:38",{"_index":1228,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:43",{"_index":1213,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:48",{"_index":1226,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:53",{"_index":1221,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:69",{"_index":1214,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:8",{"_index":1210,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:84",{"_index":1216,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:89",{"_index":1225,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:94",{"_index":1241,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:99",{"_index":1212,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/volunteer.model",{"_index":1509,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["src/app/core/model/volunteer.model.ts",{"_index":1607,"title":{},"body":{"classes/Volunteer.html":{},"coverage.html":{}}}],["src/app/core/model/volunteer.model.ts:100",{"_index":1617,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:13",{"_index":1610,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:146",{"_index":1612,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:151",{"_index":1615,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:156",{"_index":1623,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:161",{"_index":1621,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:166",{"_index":1633,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:171",{"_index":1611,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:176",{"_index":1632,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:18",{"_index":1624,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:23",{"_index":1630,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:28",{"_index":1631,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:33",{"_index":1622,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:38",{"_index":1629,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:43",{"_index":1616,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:58",{"_index":1614,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:74",{"_index":1625,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:8",{"_index":1609,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/route",{"_index":1441,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["src/app/core/service/allocation.service.ts",{"_index":261,"title":{},"body":{"injectables/AllocationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/allocation.service.ts:105",{"_index":298,"title":{},"body":{"injectables/AllocationService.html":{}}}],["src/app/core/service/allocation.service.ts:36",{"_index":274,"title":{},"body":{"injectables/AllocationService.html":{}}}],["src/app/core/service/allocation.service.ts:65",{"_index":283,"title":{},"body":{"injectables/AllocationService.html":{}}}],["src/app/core/service/course.service.ts",{"_index":777,"title":{},"body":{"injectables/CourseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/course.service.ts:32",{"_index":790,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:37",{"_index":782,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:56",{"_index":785,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/database",{"_index":884,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{}}}],["src/app/core/service/error",{"_index":1024,"title":{},"body":{"injectables/ErrorMessageService.html":{},"coverage.html":{}}}],["src/app/core/service/organisation.service.ts",{"_index":1243,"title":{},"body":{"injectables/OrganisationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/organisation.service.ts:100",{"_index":1253,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:118",{"_index":1268,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:130",{"_index":1255,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:141",{"_index":1266,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:33",{"_index":1251,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:57",{"_index":1264,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:72",{"_index":1259,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:86",{"_index":1262,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/statics.service.ts",{"_index":1579,"title":{},"body":{"injectables/StaticsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/statics.service.ts:30",{"_index":1593,"title":{},"body":{"injectables/StaticsService.html":{}}}],["src/app/core/service/statics.service.ts:35",{"_index":1587,"title":{},"body":{"injectables/StaticsService.html":{}}}],["src/app/core/service/statics.service.ts:54",{"_index":1592,"title":{},"body":{"injectables/StaticsService.html":{}}}],["src/app/core/service/statics.service.ts:69",{"_index":1589,"title":{},"body":{"injectables/StaticsService.html":{}}}],["src/app/core/service/volunteer.service.ts",{"_index":1649,"title":{},"body":{"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/volunteer.service.ts:128",{"_index":1680,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:142",{"_index":1682,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:163",{"_index":1667,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:215",{"_index":1693,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:238",{"_index":1671,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:253",{"_index":1673,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:294",{"_index":1663,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:307",{"_index":1685,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:35",{"_index":1660,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:73",{"_index":1684,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:93",{"_index":1687,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/validators/email",{"_index":942,"title":{},"body":{"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["src/app/core/validators/password",{"_index":1297,"title":{},"body":{"classes/PasswordValidation.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/core/validators/phone",{"_index":1336,"title":{},"body":{"classes/PhoneValidation.html":{},"coverage.html":{}}}],["src/app/core/validators/ssn",{"_index":1558,"title":{},"body":{"classes/SsnValidation.html":{},"coverage.html":{}}}],["src/app/pages/about/about.module.ts",{"_index":185,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["src/app/pages/about/about.page.ts",{"_index":10,"title":{},"body":{"components/AboutPage.html":{},"coverage.html":{}}}],["src/app/pages/authentication/authentication.module.ts",{"_index":641,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["src/app/pages/authentication/authentication.page.ts",{"_index":632,"title":{},"body":{"components/AuthenticationPage.html":{},"coverage.html":{}}}],["src/app/pages/authentication/login/login.component.ts",{"_index":1144,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/pages/authentication/login/login.component.ts:22",{"_index":1168,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:27",{"_index":1161,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:32",{"_index":1152,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:47",{"_index":1157,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:54",{"_index":1156,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:65",{"_index":1158,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/logout/logout.component.ts",{"_index":1192,"title":{},"body":{"components/LogoutComponent.html":{},"coverage.html":{}}}],["src/app/pages/authentication/logout/logout.component.ts:15",{"_index":1195,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/pages/authentication/logout/logout.component.ts:29",{"_index":1196,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/pages/authentication/recover",{"_index":1345,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/authentication/reset",{"_index":1396,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":1091,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":1045,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:18",{"_index":1060,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:32",{"_index":1049,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:45",{"_index":1050,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/volunteer/add",{"_index":1774,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/volunteer/list",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/volunteer/send",{"_index":1476,"title":{},"body":{"components/SendMessageComponent.html":{},"coverage.html":{}}}],["src/app/pages/volunteer/validate",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/volunteer/volunteer.module.ts",{"_index":1645,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["src/app/pages/volunteer/volunteer.page.ts",{"_index":1639,"title":{},"body":{"components/VolunteerPage.html":{},"coverage.html":{}}}],["src/config",{"_index":489,"title":{},"body":{"components/AppComponent.html":{}}}],["src/config.ts",{"_index":1785,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.dev.ts",{"_index":1786,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.local.ts",{"_index":1787,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1788,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1789,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1790,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssn",{"_index":1559,"title":{},"body":{"classes/SsnValidation.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["ssn.tostring().length",{"_index":1563,"title":{},"body":{"classes/SsnValidation.html":{}}}],["ssnvalidation",{"_index":1557,"title":{"classes/SsnValidation.html":{}},"body":{"classes/SsnValidation.html":{},"coverage.html":{}}}],["ssnvalidation(abstractcontrol",{"_index":1561,"title":{},"body":{"classes/SsnValidation.html":{}}}],["stall",{"_index":854,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["startkey",{"_index":1597,"title":{},"body":{"injectables/StaticsService.html":{}}}],["starts",{"_index":911,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["state",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["statements",{"_index":1741,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":791,"title":{},"body":{"injectables/CourseService.html":{},"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["statics",{"_index":288,"title":{},"body":{"injectables/AllocationService.html":{},"classes/DatabaseSyncService.html":{},"classes/Organisation.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"miscellaneous/variables.html":{}}}],["staticsservice",{"_index":761,"title":{"injectables/StaticsService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/StaticsService.html":{},"coverage.html":{},"index.html":{}}}],["status",{"_index":287,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/ErrorMessageObject.html":{},"classes/Organisation.html":{},"interfaces/RootObject.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{}}}],["statusbar",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["statuscode",{"_index":1022,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["storage",{"_index":668,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["storage.service",{"_index":726,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["storage.service.ts",{"_index":1095,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["storage.service.ts:109",{"_index":1118,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:114",{"_index":1102,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:221",{"_index":1115,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:229",{"_index":1112,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:237",{"_index":1108,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:244",{"_index":1105,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["store",{"_index":1455,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["store(route",{"_index":1469,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["store/clear",{"_index":825,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["stored",{"_index":1833,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stores",{"_index":461,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"injectables/ErrorMessageService.html":{},"miscellaneous/variables.html":{}}}],["storing",{"_index":1096,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["strategy",{"_index":767,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["strategy.ts",{"_index":1442,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["strategy.ts:19",{"_index":1464,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:28",{"_index":1471,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:38",{"_index":1462,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:47",{"_index":1458,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:56",{"_index":1467,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["string",{"_index":225,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":1306,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["style",{"_index":410,"title":{},"body":{"components/AppComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutPage.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["styleurls",{"_index":14,"title":{},"body":{"components/AboutPage.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["submit",{"_index":1150,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe",{"_index":1182,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe((match",{"_index":526,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribed",{"_index":843,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["subscription",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["succes",{"_index":1432,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["success",{"_index":686,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["successful",{"_index":680,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LogoutComponent.html":{}}}],["such",{"_index":615,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["suport",{"_index":452,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["support",{"_index":1837,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1838,"title":{},"body":{"modules.html":{}}}],["sync",{"_index":897,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts",{"_index":885,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{}}}],["sync.service.ts:11",{"_index":903,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:15",{"_index":909,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:20",{"_index":899,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:24",{"_index":906,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:29",{"_index":900,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:33",{"_index":907,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:38",{"_index":898,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:42",{"_index":905,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:47",{"_index":902,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:51",{"_index":908,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:77",{"_index":910,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["synchronisations",{"_index":913,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["synchronization",{"_index":276,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["table",{"_index":301,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1793,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":951,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["tap",{"_index":419,"title":{},"body":{"components/AppComponent.html":{}}}],["tapped",{"_index":463,"title":{},"body":{"components/AppComponent.html":{}}}],["tapping",{"_index":462,"title":{},"body":{"components/AppComponent.html":{}}}],["targetheight",{"_index":1521,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["targetwidth",{"_index":1520,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["te",{"_index":1372,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["tel",{"_index":453,"title":{},"body":{"components/AppComponent.html":{}}}],["tel:89992142265",{"_index":1059,"title":{},"body":{"components/HomePage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["teren",{"_index":90,"title":{},"body":{"components/AboutPage.html":{}}}],["text",{"_index":1075,"title":{},"body":{"components/HomePage.html":{},"injectables/OrganisationService.html":{},"components/SendMessageComponent.html":{},"injectables/VolunteerService.html":{}}}],["textarea",{"_index":1539,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["then((imagedata",{"_index":1522,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this._credentials",{"_index":731,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._errors",{"_index":1040,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this._errors.push",{"_index":1041,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this.authenticationservice",{"_index":1179,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authenticationservice.accesstoken",{"_index":1393,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.authenticationservice.isauthenticated",{"_index":629,"title":{},"body":{"guards/AuthenticationGuard.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["this.authenticationservice.logout().subscribe",{"_index":1202,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.authenticationservice.logout().subscribe(response",{"_index":1420,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authenticationservice.recoverpassword(this.resetpasswordform.value.email).subscribe(response",{"_index":1359,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.authenticationservice.resetpassword(this.resetpasswordform.value.password",{"_index":1428,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authenticationservice.user",{"_index":337,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{}}}],["this.base64image",{"_index":1523,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.createform",{"_index":1173,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.credentials",{"_index":742,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials$.emit(this._credentials",{"_index":746,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials.token",{"_index":743,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials.user",{"_index":748,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.databasesyncservice.sync().then",{"_index":518,"title":{},"body":{"components/AppComponent.html":{}}}],["this.errorhandler(error",{"_index":1001,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.errormessage",{"_index":1184,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.errormessageservice.set",{"_index":1009,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.errors$.emit(this._errors",{"_index":1044,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this.formbuilder.group",{"_index":1175,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.httpclient",{"_index":739,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpclient.post('/login",{"_index":735,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpclient.post('/recoverpassword",{"_index":749,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpclient.post('/resetpassword",{"_index":751,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.initialiseview",{"_index":1421,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.initializeapp",{"_index":493,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isdoubletap",{"_index":511,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loading",{"_index":1178,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.localallocationsdb",{"_index":925,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localallocationsdb.replicate.from(this.remoteallocationsdb",{"_index":935,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localcoursesdb",{"_index":920,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localcoursesdb.replicate.from(this.remotecoursesdb",{"_index":933,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localorganisationsdb",{"_index":922,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localorganisationsdb.replicate.from(this.remoteorganisationsdb",{"_index":934,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localstaticsdb",{"_index":927,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localstaticsdb.query('cities/slug",{"_index":936,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localstaticsdb.replicate.from(this.remotestaticsdb",{"_index":931,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localstorage",{"_index":1138,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.clear",{"_index":1143,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.getitem(key",{"_index":1141,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.removeitem(key",{"_index":1142,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.setitem(key",{"_index":1140,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorageservice.clearitem('prevent_back",{"_index":864,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.localstorageservice.clearitem(credentialskey",{"_index":747,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.localstorageservice.getitem('firstlaunch",{"_index":517,"title":{},"body":{"components/AppComponent.html":{}}}],["this.localstorageservice.getitem('prevent_back",{"_index":505,"title":{},"body":{"components/AppComponent.html":{}}}],["this.localstorageservice.getitem(credentialskey",{"_index":730,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.localstorageservice.setitem",{"_index":744,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.localstorageservice.setitem('firstlaunch",{"_index":520,"title":{},"body":{"components/AppComponent.html":{}}}],["this.localstorageservice.setitem('prevent_back",{"_index":857,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.localvolunteersdb",{"_index":917,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localvolunteersdb.replicate.from(this.remotevolunteersdb",{"_index":932,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.location.back",{"_index":516,"title":{},"body":{"components/AppComponent.html":{},"components/SendMessageComponent.html":{}}}],["this.loginform",{"_index":1174,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.markaspristine",{"_index":1181,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.menucontroller.close",{"_index":504,"title":{},"body":{"components/AppComponent.html":{}}}],["this.menucontroller.getopen().then(res",{"_index":502,"title":{},"body":{"components/AppComponent.html":{}}}],["this.messageform",{"_index":1516,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.messageform.value.message",{"_index":1531,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.modalctrl.dismiss",{"_index":866,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.modalctrl.dismiss(entry",{"_index":856,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.modalctrl.gettop",{"_index":862,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.phonenumbers.push(volunteer.phone",{"_index":1515,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.platform.is('cordova",{"_index":495,"title":{},"body":{"components/AppComponent.html":{}}}],["this.platform.ready().then",{"_index":494,"title":{},"body":{"components/AppComponent.html":{}}}],["this.presenttoast",{"_index":512,"title":{},"body":{"components/AppComponent.html":{}}}],["this.presenttoast('cererea",{"_index":1360,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.presenttoast('parol",{"_index":1430,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.remoteallocationsdb",{"_index":926,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.remotecoursesdb",{"_index":921,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.remoteorganisationsdb",{"_index":924,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.remotestaticsdb",{"_index":929,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.remotevolunteersdb",{"_index":919,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.removespecialchars(name",{"_index":1272,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["this.removespecialchars(organisation.name",{"_index":1283,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["this.removespecialchars(volunteer.name",{"_index":1719,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["this.resetpasswordform",{"_index":1358,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.route.params.subscribe",{"_index":1424,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.getcurrentnavigation",{"_index":1510,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.router.navigate(['../auth/login",{"_index":1203,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.router.navigate(['../home",{"_index":1183,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":630,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/auth/reset",{"_index":527,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/home",{"_index":1606,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["this.router.navigate([url",{"_index":523,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["this.router.url",{"_index":501,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sendmessage",{"_index":1533,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.sessionstorage",{"_index":1139,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.setcredentials",{"_index":741,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.setcredentials(body",{"_index":738,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.seterrormessage('a",{"_index":1433,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.sms.haspermission",{"_index":1532,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.sms.send(this.phonenumbers",{"_index":1530,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.splashscreen.hide",{"_index":519,"title":{},"body":{"components/AppComponent.html":{}}}],["this.statusbar.backgroundcolorbyhexstring('#264998",{"_index":496,"title":{},"body":{"components/AppComponent.html":{}}}],["this.statusbar.styledefault",{"_index":497,"title":{},"body":{"components/AppComponent.html":{}}}],["this.subscription",{"_index":860,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":865,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.toastcontroller.create",{"_index":1375,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.toastctrl.create",{"_index":533,"title":{},"body":{"components/AppComponent.html":{}}}],["this.token",{"_index":1426,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.token).subscribe(response",{"_index":1429,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.type",{"_index":353,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["this.volunteerservice.allocatevolunteer(response.id",{"_index":361,"title":{},"body":{"injectables/AllocationService.html":{}}}],["through",{"_index":1197,"title":{},"body":{"components/LogoutComponent.html":{}}}],["throw",{"_index":1016,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["title",{"_index":442,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["title')).gettext",{"_index":589,"title":{},"body":{"classes/AppPage.html":{}}}],["toast",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["toast.present",{"_index":540,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["toastcontroller",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["toastctrl",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":696,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/User.html":{}}}],["top",{"_index":1543,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["total",{"_index":1676,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["toți",{"_index":448,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["transl",{"_index":1292,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["transl[m",{"_index":1295,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["trebuie",{"_index":1314,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["triggered",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["trimite",{"_index":1378,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["true",{"_index":328,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["truth",{"_index":694,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tslib",{"_index":1823,"title":{},"body":{"dependencies.html":{}}}],["twice",{"_index":465,"title":{},"body":{"components/AppComponent.html":{}}}],["type",{"_index":223,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types/pouchdb",{"_index":1808,"title":{},"body":{"dependencies.html":{}}}],["tău",{"_index":1536,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["ui",{"_index":855,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["uitat",{"_index":1190,"title":{},"body":{"components/LoginComponent.html":{}}}],["un",{"_index":48,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/PasswordValidation.html":{}}}],["unauthenticated",{"_index":1603,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["unauthenticatedguard",{"_index":647,"title":{"guards/UnauthenticatedGuard.html":{}},"body":{"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"guards/UnauthenticatedGuard.html":{},"coverage.html":{}}}],["underline",{"_index":1079,"title":{},"body":{"components/HomePage.html":{}}}],["unei",{"_index":39,"title":{},"body":{"components/AboutPage.html":{}}}],["unor",{"_index":84,"title":{},"body":{"components/AboutPage.html":{}}}],["unsubscribed",{"_index":844,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["unsubscribes",{"_index":836,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["unui",{"_index":66,"title":{},"body":{"components/AboutPage.html":{}}}],["up",{"_index":842,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["update",{"_index":254,"title":{},"body":{"classes/Allocation.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{}}}],["updated_at",{"_index":224,"title":{},"body":{"classes/Allocation.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["updatedat",{"_index":808,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["updateorganisation",{"_index":1250,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["updateorganisation(organisation",{"_index":1267,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["updates",{"_index":286,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["updatevolunteer",{"_index":1658,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["updatevolunteer(volunteer",{"_index":1692,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["uppercase",{"_index":1325,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["uppercase.test(password",{"_index":1331,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["urgen",{"_index":64,"title":{},"body":{"components/AboutPage.html":{}}}],["url",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"classes/Organisation.html":{},"interceptors/RequestInterceptor.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{}}}],["url.includes('tel",{"_index":521,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["useclass",{"_index":568,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["used",{"_index":572,"title":{},"body":{"modules/AppModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"injectables/VolunteerService.html":{}}}],["user",{"_index":247,"title":{"interfaces/User.html":{}},"body":{"classes/Allocation.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"coverage.html":{}}}],["user's",{"_index":256,"title":{},"body":{"classes/Allocation.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{}}}],["username",{"_index":802,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["username/email",{"_index":801,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["uses",{"_index":1493,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["v",{"_index":1363,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["va",{"_index":100,"title":{},"body":{"components/AboutPage.html":{}}}],["valid",{"_index":967,"title":{},"body":{"classes/EmailValidation.html":{}}}],["validate",{"_index":166,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{}}}],["validated",{"_index":952,"title":{},"body":{"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["validates",{"_index":1298,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["validatevolunteercomponent",{"_index":165,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["validation",{"_index":1159,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validation.ts",{"_index":943,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{},"coverage.html":{}}}],["validation.ts:14",{"_index":947,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["validation.ts:16",{"_index":1305,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["validation.ts:35",{"_index":1309,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["validator",{"_index":948,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/ResetPasswordComponent.html":{},"classes/SsnValidation.html":{}}}],["validators",{"_index":1169,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["validators.required",{"_index":1176,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["validați",{"_index":82,"title":{},"body":{"components/AboutPage.html":{}}}],["valideaz",{"_index":443,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["validtor",{"_index":944,"title":{},"body":{"classes/EmailValidation.html":{}}}],["value",{"_index":289,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":715,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/PasswordValidation.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":135,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["variable",{"_index":1747,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1841,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verificați",{"_index":1365,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["verifici",{"_index":1373,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["vezi",{"_index":447,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["view",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{}}}],["viewchild",{"_index":476,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(ionrouteroutlet",{"_index":469,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"injectables/VolunteerService.html":{}}}],["voluntar",{"_index":109,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{}}}],["voluntari",{"_index":52,"title":{},"body":{"components/AboutPage.html":{}}}],["voluntarii",{"_index":449,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["voluntarilor",{"_index":103,"title":{},"body":{"components/AboutPage.html":{}}}],["volunteer",{"_index":29,"title":{"classes/Volunteer.html":{}},"body":{"components/AboutPage.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["volunteer's",{"_index":243,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["volunteer'},{'name",{"_index":141,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["volunteer._id",{"_index":334,"title":{},"body":{"injectables/AllocationService.html":{}}}],["volunteer.allocation",{"_index":1705,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.city",{"_index":1701,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.comments",{"_index":1729,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.component",{"_index":1647,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["volunteer.component.ts",{"_index":1775,"title":{},"body":{"coverage.html":{}}}],["volunteer.county",{"_index":1700,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.courses",{"_index":1711,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.courses.push(newcourse",{"_index":1716,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.created_at",{"_index":1703,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.email",{"_index":1722,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.job",{"_index":1731,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.name",{"_index":339,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["volunteer.organisation",{"_index":1709,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.page",{"_index":1646,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["volunteer.page.html",{"_index":1641,"title":{},"body":{"components/VolunteerPage.html":{}}}],["volunteer.page.scss",{"_index":1640,"title":{},"body":{"components/VolunteerPage.html":{}}}],["volunteer.phone",{"_index":1706,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.service",{"_index":311,"title":{},"body":{"injectables/AllocationService.html":{}}}],["volunteer.slug",{"_index":1707,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.ssn",{"_index":1699,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.type",{"_index":1708,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.updated_at",{"_index":1704,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer/add",{"_index":446,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["volunteer/list",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["volunteer/s",{"_index":1504,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["volunteer/validate",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["volunteerid",{"_index":1662,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteerpage",{"_index":167,"title":{"components/VolunteerPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["volunteerpagemodule",{"_index":1642,"title":{"modules/VolunteerPageModule.html":{}},"body":{"modules/VolunteerPageModule.html":{},"index.html":{},"modules.html":{}}}],["volunteers",{"_index":904,"title":{},"body":{"classes/DatabaseSyncService.html":{},"components/SendMessageComponent.html":{},"classes/Volunteer.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["volunteers.foreach((volunteer",{"_index":1514,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["volunteerservice",{"_index":273,"title":{"injectables/VolunteerService.html":{}},"body":{"injectables/AllocationService.html":{},"modules/CoreModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"index.html":{}}}],["webkit",{"_index":1064,"title":{},"body":{"components/HomePage.html":{}}}],["website",{"_index":293,"title":{},"body":{"injectables/AllocationService.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["whose",{"_index":1688,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["width",{"_index":877,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["window.open(url",{"_index":522,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["within",{"_index":420,"title":{},"body":{"components/AppComponent.html":{}}}],["without",{"_index":1230,"title":{},"body":{"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["workaround",{"_index":1446,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["world",{"_index":129,"title":{},"body":{"components/AboutPage.html":{}}}],["yes",{"_index":704,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["z",{"_index":1327,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["z0",{"_index":959,"title":{},"body":{"classes/EmailValidation.html":{}}}],["z]{2,4",{"_index":962,"title":{},"body":{"classes/EmailValidation.html":{}}}],["zone",{"_index":115,"title":{},"body":{"components/AboutPage.html":{}}}],["zone.js",{"_index":1825,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":183,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutPage.html":{"url":"components/AboutPage.html","title":"component - AboutPage","body":"\n                   \n\n\n\n\n\n  Components\n  AboutPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/about/about.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                ./about.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.page.html',\n  styleUrls: ['./about.page.scss'],\n})\n\n/**\n * The app information page, found at '/about'\n */\nexport class AboutPage { }\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n  \n\n\n  \n    \n      Despre Aplicație\n    \n  \n  \n    \n      Resource and Volunteer Management este o aplicație menită să ofere sprijin în eventualitatea unei calamități majore care ar avea loc în România. RVM este un instrument de administrare de voluntari și resurse pe care le pune la dispoziție societatea civilă către Departamentul de Situații de Urgență în cazul unui seism major sau al unui alt dezastru natural. \n    \n  \n  \n    \n      Cu ajutorul acestei componente mobile a aplicației puteți să mobilizați voluntari sau să validați identitatea unor voluntari deja existenți în platformă în cazul în care aceștia își oferă ajutorul în teren și se identifică parte din protocolul de colaborare cu DSU.\n    \n  \n  \n    \n      De asemenea, aplicația va permite și administrarea voluntarilor spontani care își oferă ajutorul în caz de dezastru. Puteți înregistra foarte simplu un voluntar nou în baza de date și îl puteți aloca unei zone de intervenție pentru un mai bun management al persoanelor implicate în eforturile de salvare din teren.  \n    \n  \n  \n    \n      Aplicația RVM este dezvoltată de Code for Romania, în parteneriat cu Departamentul pentru Situații de Urgență și cu sprijinul World Bank. \n    \n  \n\n  \n    \n      \n        \n      \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n      \n        \n      \n        \n  \n\n    \n\n    \n                \n                    ./about.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Despre Aplicație                  Resource and Volunteer Management este o aplicație menită să ofere sprijin în eventualitatea unei calamități majore care ar avea loc în România. RVM este un instrument de administrare de voluntari și resurse pe care le pune la dispoziție societatea civilă către Departamentul de Situații de Urgență în cazul unui seism major sau al unui alt dezastru natural.                   Cu ajutorul acestei componente mobile a aplicației puteți să mobilizați voluntari sau să validați identitatea unor voluntari deja existenți în platformă în cazul în care aceștia își oferă ajutorul în teren și se identifică parte din protocolul de colaborare cu DSU.                  De asemenea, aplicația va permite și administrarea voluntarilor spontani care își oferă ajutorul în caz de dezastru. Puteți înregistra foarte simplu un voluntar nou în baza de date și îl puteți aloca unei zone de intervenție pentru un mai bun management al persoanelor implicate în eforturile de salvare din teren.                    Aplicația RVM este dezvoltată de Code for Romania, în parteneriat cu Departamentul pentru Situații de Urgență și cu sprijinul World Bank.                                                                                                                   '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageModule.html":{"url":"modules/AboutPageModule.html","title":"module - AboutPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AboutPage } from './about.page';\nimport { AuthenticationGuard } from '../../core/authentication/authentication.guard';\n\n/**\n * List of all routes that are derivate from '/about'\n */\nconst routes: Routes = [\n  {\n    path: '',\n    component: AboutPage,\n    canActivate: [AuthenticationGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AboutPage]\n})\n\n/**\n * Module that loads the components derived from the 'about' section\n */\nexport class AboutPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Allocation.html":{"url":"classes/Allocation.html","title":"class - Allocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Allocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/allocation.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for allocation object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                _rev\n                            \n                            \n                                city\n                            \n                            \n                                county\n                            \n                            \n                                created_at\n                            \n                            \n                                organisation\n                            \n                            \n                                rescue_officer\n                            \n                            \n                                type\n                            \n                            \n                                updated_at\n                            \n                            \n                                volunteer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:8\n                            \n                        \n\n                \n                    \n                        Allocation id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _rev\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:13\n                            \n                        \n\n                \n                    \n                        CouchDB parameter; it is automatically set\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:63\n                            \n                        \n\n                \n                    \n                        The city in which the volunteer is being allocated\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:48\n                            \n                        \n\n                \n                    \n                        The county in which the volunteer is being allocated\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:93\n                            \n                        \n\n                \n                    \n                        Entry creation date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organisation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:78\n                            \n                        \n\n                \n                    \n                        Volunteer's organisation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rescue_officer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:18\n                            \n                        \n\n                \n                    \n                        The rescue officer user that created the allocation entry\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:103\n                            \n                        \n\n                \n                    \n                        Entry type, for allocations it's 'allocations'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:98\n                            \n                        \n\n                \n                    \n                        Entry last update date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volunteer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:33\n                            \n                        \n\n                \n                    \n                        The volunteer that is being allocated\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Allocation {\n    /**\n     * Allocation id\n     */\n    _id: string;\n\n    /**\n     * CouchDB parameter; it is automatically set\n     */\n    _rev: string;\n\n    /**\n     * The rescue officer user that created the allocation entry\n     */\n    rescue_officer: {\n      /**\n       * User's id\n       */\n        _id: string;\n\n      /**\n       * User's name\n       */\n        name: string;\n    };\n\n    /**\n     * The volunteer that is being allocated\n     */\n    volunteer: {\n      /**\n       * User's id\n       */\n        _id: string;\n\n        /**\n         * User's name\n         */\n        name: string;\n    };\n\n    /**\n     * The county in which the volunteer is being allocated\n     */\n    county: {\n      /**\n       * County id\n       */\n      _id: string;\n\n      /**\n       * County name\n       */\n      name: string;\n    };\n\n    /**\n     * The city in which the volunteer is being allocated\n     */\n    city: {\n      /**\n       * City's id\n       */\n      _id: string;\n\n      /**\n       * City's name\n       */\n      name: string;\n    };\n\n    /**\n     * Volunteer's organisation\n     */\n    organisation: {\n      /**\n       * Organisation id\n       */\n        _id: string;\n\n      /**\n       * Organisation name\n       */\n      name: string;\n    };\n\n    /**\n     * Entry creation date\n     */\n    created_at: any;\n\n    /**\n     * Entry last update date\n     */\n    updated_at: any;\n\n    /**\n     * Entry type, for allocations it's 'allocations'\n     */\n    type: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllocationService.html":{"url":"injectables/AllocationService.html","title":"injectable - AllocationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/allocation.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for allocations related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAllocation\n                            \n                            \n                                    Public\n                                getAllocationById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, volunteerService: VolunteerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/allocation.service.ts:36\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Allocations Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        volunteerService\n                                                  \n                                                        \n                                                                        VolunteerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createAllocation\n                        \n                        \n                    \n                \n            \n            \n                \ncreateAllocation(volunteer: Volunteer, county: any, city: any, organisation: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/allocation.service.ts:65\n                \n            \n\n\n            \n                \n                    Creates an allocation entry in the local database and updates volunteer's allocation status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteer\n                                    \n                                                Volunteer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer object\n\n                                    \n                                \n                                \n                                    county\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        County entry from statics database\n\n                                    \n                                \n                                \n                                    city\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        City entry from statics database\n\n                                    \n                                \n                                \n                                    organisation\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object value containing the allocated volunteer's organisation\nEither contains an object with the following properties {id, name, website}, or it's null\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        An Observable with the created object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllocationById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllocationById(allocationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/allocation.service.ts:105\n                \n            \n\n\n            \n                \n                    Returns an allocation entry by its id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    allocationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the allocation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'allocations'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/allocation.service.ts:36\n                            \n                        \n\n                \n                    \n                        Table type\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { from } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthenticationService } from '../authentication';\nimport { VolunteerService } from './volunteer.service';\nimport { Allocation } from '../model/allocation.model';\nimport { Volunteer } from '../model/volunteer.model';\nimport * as moment from 'moment';\n\n/**\n * Reference for local PouchDB Allocations Database\n */\nconst localDB = new PouchDB('allocations');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Allocations Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/allocations');\n\n/**\n * Provider for allocations related operations\n */\n@Injectable()\nexport class AllocationService {\n  /**\n   * Table type\n   */\n  private type = 'allocations';\n\n  /**\n   * Class constructor, sets the synchronization options for CouchDB and PouchDB Allocations Database\n   */\n  constructor(private authenticationService: AuthenticationService,\n              private volunteerService: VolunteerService) {\n    const options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);\n\n    localDB.createIndex({\n      index: {fields: ['volunteer._id', 'rescue_officer._id']}\n    });\n   }\n\n    /**\n     *  Creates an allocation entry in the local database and updates volunteer's allocation status\n     * @param volunteer Volunteer object\n     * @param county County entry from statics database\n     * @param city City entry from statics database\n     * @param organisation Object value containing the allocated volunteer's organisation\n     * Either contains an object with the following properties {id, name, website}, or it's null\n     * @returns An Observable with the created object\n     */\n   createAllocation(volunteer: Volunteer, county: any, city: any, organisation: any) {\n    const rescue_officer = this.authenticationService.user;\n    const allocation = new Allocation();\n    allocation.volunteer = {\n      _id: volunteer._id,\n      name: volunteer.name\n    };\n    allocation.rescue_officer = {\n      _id: rescue_officer._id,\n      name: rescue_officer.name\n    };\n    allocation.county = {\n      _id: county._id,\n      name: county.name\n    };\n    allocation.city = city;\n    allocation.created_at = moment().format('Y-MM-DD HH:mm:ss');\n    allocation.updated_at = moment().format('Y-MM-DD HH:mm:ss');\n    allocation.type = this.type;\n\n    if (organisation) {\n        allocation.organisation = {\n          _id: organisation._id,\n          name: organisation.name,\n        };\n    }\n\n    return from(localDB.post(allocation))\n    .pipe(\n        map((response: any) => {\n          this.volunteerService.allocateVolunteer(response.id, volunteer._id);\n          return response;\n        })\n      );\n   }\n\n   /**\n    * Returns an allocation entry by its id\n    * @param allocationId The id of the allocation\n    */\n   public getAllocationById(allocationId: string) {\n    return from(localDB.find({\n      selector: {\n        _id: {$eq: allocationId},\n        type: this.type\n      },\n      limit: 1\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appPages\n                            \n                            \n                                    Public\n                                authenticationService\n                            \n                            \n                                    Private\n                                isDoubleTap\n                            \n                            \n                                routerOutlet\n                            \n                            \n                                showSideMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                performAction\n                            \n                            \n                                    Async\n                                presentToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar, authenticationService: AuthenticationService, router: Router, localStorageService: LocalStorageService, location: Location, databaseSyncService: DatabaseSyncService, toastCtrl: ToastController, menuController: MenuController)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for cordova platforms\n\n                                                        \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for splash screen\n\n                                                        \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for status bar\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operations\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route navigation\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for localStorage related operations\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route location change\n\n                                                        \n                                                \n                                                \n                                                        databaseSyncService\n                                                  \n                                                        \n                                                                        DatabaseSyncService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for database synchronization\n\n                                                        \n                                                \n                                                \n                                                        toastCtrl\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller for toast management\n\n                                                        \n                                                \n                                                \n                                                        menuController\n                                                  \n                                                        \n                                                                    MenuController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller for side menu management\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeApp\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:102\n                \n            \n\n\n            \n                \n                    Application initialisation\nIf cordova is available then the splash screen is hidden and status bar style is set\nThe back-button subscription is set (if the current route is login/home\nthen it closes the app completely on double tap within 3 seconds)\nIf a modal is open, then the back-button navigation is ignored\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:167\n                \n            \n\n\n            \n                \n                    Angular lifecycle method; gets triggered after view initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            performAction\n                        \n                        \n                    \n                \n            \n            \n                \nperformAction(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains the value of the next application state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentToast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToast()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:186\n                \n            \n\n\n            \n                \n                    Presents a toast that will be automatically dismessed after 3 seconds\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appPages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      title: 'Despre Aplicație',\n      url: '/about'\n    },\n    {\n      title: 'Validează un voluntar',\n      url: '/volunteer/validate'\n    },\n    {\n      title: 'Adaugă voluntar nou',\n      url: '/volunteer/add'\n    },\n    {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    },\n    {\n      title: 'Apelează suport',\n      url: 'tel:' + config.phoneNumber\n    },\n    {\n      title: 'Delogare',\n      url: '/auth/logout'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:36\n                            \n                        \n\n                \n                    \n                        Side menu navigation pages (page name and page url)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authenticationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:85\n                            \n                        \n\n                \n                    \n                        Provider for authentication related operations\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDoubleTap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:66\n                            \n                        \n\n                \n                    \n                        Stores the current state of back-button tapping: tapped once or twice (for exiting app)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routerOutlet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IonRouterOutlet\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(IonRouterOutlet)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:26\n                            \n                        \n\n                \n                    \n                        Router outlet reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSideMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                        Boolean value that shows/hides the side menu depending on user's state\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, AfterViewInit } from '@angular/core';\n\nimport { IonRouterOutlet, Platform, ToastController, MenuController } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { AuthenticationService, LocalStorageService, DatabaseSyncService } from './core';\nimport { Router } from '@angular/router';\nimport { Deeplinks } from '@ionic-native/deeplinks';\nimport { ResetPasswordComponent } from './pages/authentication/reset-password/reset-password.component';\nimport { Location } from '@angular/common';\nimport { config } from 'src/config';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\n\n/**\n * Main app component, it is the loading container for all app pages\n */\nexport class AppComponent implements AfterViewInit {\n\n  /**\n   * Router outlet reference\n   */\n  @ViewChild(IonRouterOutlet) routerOutlet: IonRouterOutlet;\n\n  /**\n   * Boolean value that shows/hides the side menu depending on user's state\n   */\n  showSideMenu = true;\n\n  /**\n   * Side menu navigation pages (page name and page url)\n   */\n  public appPages = [\n    {\n      title: 'Despre Aplicație',\n      url: '/about'\n    },\n    {\n      title: 'Validează un voluntar',\n      url: '/volunteer/validate'\n    },\n    {\n      title: 'Adaugă voluntar nou',\n      url: '/volunteer/add'\n    },\n    {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    },\n    {\n      title: 'Apelează suport',\n      url: 'tel:' + config.phoneNumber\n    },\n    {\n      title: 'Delogare',\n      url: '/auth/logout'\n    }\n  ];\n\n  /**\n   * Stores the current state of back-button tapping: tapped once or twice (for exiting app)\n   */\n  private isDoubleTap = false;\n\n  /**\n   *\n   * @param platform Provider for cordova platforms\n   * @param splashScreen Provider for splash screen\n   * @param statusBar Provider for status bar\n   * @param authenticationService Provider for authentication related operations\n   * @param router Provider for route navigation\n   * @param localStorageService Provider for localStorage related operations\n   * @param location Provider for route location change\n   * @param databaseSyncService Provider for database synchronization\n   * @param toastCtrl Controller for toast management\n   * @param menuController Controller for side menu management\n   */\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar,\n    public authenticationService: AuthenticationService,\n    private router: Router,\n    private localStorageService: LocalStorageService,\n    private location: Location,\n    private databaseSyncService: DatabaseSyncService,\n    private toastCtrl: ToastController,\n    private menuController: MenuController) {\n    this.initializeApp();\n  }\n\n  /**\n   * Application initialisation\n   * If cordova is available then the splash screen is hidden and status bar style is set\n   * The back-button subscription is set (if the current route is login/home\n   * then it closes the app completely on double tap within 3 seconds)\n   * If a modal is open, then the back-button navigation is ignored\n   */\n  initializeApp() {\n    this.platform.ready().then(() => {\n      if (this.platform.is('cordova')) {\n        this.statusBar.backgroundColorByHexString('#264998');\n        this.statusBar.styleDefault();\n\n        document.addEventListener('backbutton', (event) => {\n          const currentPath = this.router.url;\n\n          this.menuController.getOpen().then(res => {\n            if (!!res) {\n              this.menuController.close();\n              return;\n            } else {\n              if (this.localStorageService.getItem('prevent_back')) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n                return;\n              }\n\n              if (currentPath.indexOf('login') >= 0 || currentPath.indexOf('home') >= 0) {\n                if (!this.isDoubleTap) {\n                  this.isDoubleTap = true;\n                  this.presentToast();\n\n                  setTimeout(() => {\n                    this.isDoubleTap = false;\n                   }, 3000);\n                } else {\n                  navigator['app'].exitApp();\n                }\n              } else {\n                this.location.back();\n              }\n            }\n          });\n        }, false);\n\n        if (!this.localStorageService.getItem('firstLaunch')) {\n          this.databaseSyncService.sync().then(() => {\n            this.splashScreen.hide();\n            this.localStorageService.setItem('firstLaunch', false);\n           });\n        } else {\n          this.splashScreen.hide();\n        }\n      }\n    });\n  }\n\n  /**\n   *\n   * @param url Contains the value of the next application state\n   */\n  performAction(url: string) {\n    if (url.includes('tel')) {\n      window.open(url);\n    } else {\n      this.router.navigate([url]);\n    }\n  }\n\n  /**\n   * Angular lifecycle method; gets triggered after view initialisation\n   */\n  ngAfterViewInit() {\n    this.platform.ready().then(() => {\n      if (this.platform.is('cordova')) {\n        Deeplinks.route({\n          '/auth/reset/:token': ResetPasswordComponent\n        }).subscribe((match) => {\n          setTimeout(() => {\n            this.router.navigate(['/auth/reset/', match.$args.token]);\n          }, 1000);\n        }, (nomatch) => {\n          console.warn('Unmatched Route', nomatch);\n        });\n      }\n    });\n  }\n\n  /**\n   * Presents a toast that will be automatically dismessed after 3 seconds\n   */\n  async presentToast() {\n    const toast = await this.toastCtrl.create({\n      message: 'Apăsați din nou pentru a părăsi aplicația.',\n      position: 'bottom',\n      duration: 3000\n    });\n\n    toast.present();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n          \n            RVM\n          \n        \n      \n      \n        \n          \n            \n              \n                \n                  {{p.title}}\n                \n              \n            \n          \n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          RVM                                                                                                            {{p.title}}                                                                            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CoreModule } from './core';\nimport { DatePicker } from '@ionic-native/date-picker/ngx';\nimport { SMS } from '@ionic-native/sms/ngx';\nimport { InAppBrowser } from '@ionic-native/in-app-browser/ngx';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  entryComponents: [],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n    CoreModule\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    DatePicker,\n    SMS,\n    InAppBrowser\n  ],\n  bootstrap: [AppComponent]\n})\n\n/**\n * Main app modul, contains all the important providers, plugins and modules that are used all over the app\n */\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPageOneTitleText\n                            \n                            \n                                getTitle\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPageOneTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetPageOneTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo(destination)\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    destination\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(destination) {\n    return browser.get(destination);\n  }\n\n  getTitle() {\n    return browser.getTitle();\n  }\n\n  getPageOneTitleText() {\n    return element(by.tagName('app-home')).element(by.deepCss('ion-title')).getText();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthenticationGuard } from './core';\n\n/**\n * List of all parent routes accessible from the '' route and their respective modules\n */\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    loadChildren: './pages/home/home.module#HomePageModule',\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'about',\n    loadChildren: './pages/about/about.module#AboutPageModule',\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'volunteer',\n    loadChildren: './pages/volunteer/volunteer.module#VolunteerPageModule',\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'auth',\n    loadChildren: './pages/authentication/authentication.module#AuthenticationPageModule'\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\n\n/**\n * Main app module, lazy loads all parent routes\n */\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/authentication/authentication.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Provides a guard for protecting authenticated routes (such as home, validate-volunteer)\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.guard.ts:10\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular value which handles routing operations\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service which handles the authentication operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.guard.ts:26\n                \n            \n\n\n            \n                \n                    Determines if a user can access a route, depending on its state\nIf the route isn't allowed, it automatically redirects to login page\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        a boolean value, current user's status: authenticated or not\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { AuthenticationService } from './authentication.service';\n\n/**\n * Provides a guard for protecting authenticated routes (such as home, validate-volunteer)\n */\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  /**\n   * Class constructor\n   * @param router Angular value which handles routing operations\n   * @param authenticationService The service which handles the authentication operations\n   */\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  /**\n   * Determines if a user can access a route, depending on its state\n   * If the route isn't allowed, it automatically redirects to login page\n   * @returns a boolean value, current user's status: authenticated or not\n   */\n  canActivate(): boolean {\n    if (this.authenticationService.isAuthenticated()) {\n      return true;\n    }\n\n    this.router.navigate(['/auth/login'], {\n      replaceUrl: true\n    });\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthenticationPage.html":{"url":"components/AuthenticationPage.html","title":"component - AuthenticationPage","body":"\n                   \n\n\n\n\n\n  Components\n  AuthenticationPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/authentication.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-authentication\n            \n\n            \n                styleUrls\n                ./authentication.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./authentication.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-authentication',\n  templateUrl: './authentication.page.html',\n  styleUrls: ['./authentication.page.scss'],\n})\n\n/**\n * The main page for all authentication related pages (login/logout, recover/reset password)\n */\nexport class AuthenticationPage { }\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./authentication.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthenticationPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationPageModule.html":{"url":"modules/AuthenticationPageModule.html","title":"module - AuthenticationPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthenticationPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationPageModule\n\n\n\ncluster_AuthenticationPageModule_declarations\n\n\n\n\nAuthenticationPage\n\nAuthenticationPage\n\n\n\nAuthenticationPageModule\n\nAuthenticationPageModule\n\nAuthenticationPageModule -->\n\nAuthenticationPage->AuthenticationPageModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthenticationPageModule -->\n\nLoginComponent->AuthenticationPageModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAuthenticationPageModule -->\n\nLogoutComponent->AuthenticationPageModule\n\n\n\n\n\nRecoverPasswordComponent\n\nRecoverPasswordComponent\n\nAuthenticationPageModule -->\n\nRecoverPasswordComponent->AuthenticationPageModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationPageModule -->\n\nResetPasswordComponent->AuthenticationPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/authentication/authentication.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthenticationPage\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            LogoutComponent\n                        \n                        \n                            RecoverPasswordComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthenticationPage } from './authentication.page';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { RecoverPasswordComponent } from './recover-password/recover-password.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { UnauthenticatedGuard } from 'src/app/core/authentication/unauthenticated.guard';\n\n/**\n * All routes that are derivated from '/auth' and linked to authentication components\n */\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthenticationPage,\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n    canActivate: [UnauthenticatedGuard]\n  },\n  {\n    path: 'logout',\n    component: LogoutComponent\n  },\n  {\n    path: 'reset/:token',\n    component: ResetPasswordComponent,\n  },\n  {\n    path: 'recover',\n    component: RecoverPasswordComponent,\n    canActivate: [UnauthenticatedGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [\n    AuthenticationPage,\n    ResetPasswordComponent,\n    RecoverPasswordComponent,\n    LoginComponent,\n    LogoutComponent\n  ]\n})\n/**\n * Authentication components module, loads all the auth components when it is loaded\n */\nexport class AuthenticationPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides the basic authentication operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _credentials\n                            \n                            \n                                    Public\n                                credentials$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuthenticated\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Public\n                                recoverPassword\n                            \n                            \n                                    Public\n                                resetPassword\n                            \n                            \n                                    Private\n                                setCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    credentials\n                                \n                                \n                                    accessToken\n                                \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.service.ts:26\n                            \n                        \n\n                \n                    \n                            Class constructor, initializes current credentials value if some credentials are found in local storage\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Class reference injection, handles http requests sent from this service\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service reference injection, handles operations on local storage\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:81\n                \n            \n\n\n            \n                \n                    Determines if the current user is authenticated\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        A boolean value with the authenticated status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(payload: Authentication.LoginPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:48\n                \n            \n\n\n            \n                \n                    Sends a login request to the backend server\nIf it's successful stores the credentials and returns the response body\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Authentication.LoginPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Login credentials\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable that contains the authentication credentials\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:66\n                \n            \n\n\n            \n                \n                    Sends a logout rewuest to the backend server\nIf it's successful clears the credentials information from local storage\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable with a boolean value for success (true)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            recoverPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    recoverPassword(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:132\n                \n            \n\n\n            \n                \n                    Sends a request to the backend server for password recovery\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's email, it's the one that will receive the password reset link\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable that contains a truth value: successful or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(password: string, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:142\n                \n            \n\n\n            \n                \n                    Sends a request to the backend server for password reset\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's new password\n\n                                    \n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The token from the email send by password recovery to prove that it's the same user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable that contains a truth value: successful or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setCredentials\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCredentials(credentials?: Authentication.Credentials)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:106\n                \n            \n\n\n            \n                \n                    Saves current user's credentials in local storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                Authentication.Credentials\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An object that contains the authentication token and data from server if user performed a login,\nor nothing if user just performed a log out\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _credentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Authentication.Credentials | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:21\n                            \n                        \n\n                \n                    \n                        Value that stores user's credentials after authentication\nIt's null if the user never authenticates\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            credentials$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:26\n                            \n                        \n\n                \n                    \n                        Value which emits events when credentials' values change (on login/logout)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        credentials\n                    \n                \n\n                \n                    \n                        getcredentials()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:89\n                                \n                            \n                    \n                        \n                                Getter method for the credentials object\n\n\n                                \n                                \n                                \n                                    Returns :         Authentication.Credentials | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:97\n                                \n                            \n                    \n                        \n                                Getter method for the authentication token\n\n\n                                \n                                \n                                \n                                    Returns :     string | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:123\n                                \n                            \n                    \n                        \n                                Getter method for current user's profile\n\n\n                                \n                                \n                                \n                                    Returns :         Authentication.User | null\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LocalStorageService } from '../local-storage.service';\n\n/**\n * Stores the value of credentials' key\n */\nconst credentialsKey = 'credentials';\n\n/**\n * Provides the basic authentication operations.\n */\n@Injectable()\nexport class AuthenticationService {\n  /**\n   * Value that stores user's credentials after authentication\n   * It's null if the user never authenticates\n   */\n  private _credentials: Authentication.Credentials | null;\n\n  /**\n   * Value which emits events when credentials' values change (on login/logout)\n   */\n  public credentials$ = new EventEmitter();\n\n  /**\n   * Class constructor, initializes current credentials value if some credentials are found in local storage\n   * @param httpClient Class reference injection, handles http requests sent from this service\n   * @param localStorageService Service reference injection, handles operations on local storage\n   */\n  constructor(\n    private httpClient: HttpClient,\n    private localStorageService: LocalStorageService) {\n      const savedCredentials = this.localStorageService.getItem(credentialsKey);\n      if (savedCredentials) {\n        this._credentials = JSON.parse(savedCredentials);\n      }\n  }\n\n  /**\n   * Sends a login request to the backend server\n   * If it's successful stores the credentials and returns the response body\n   * @param payload Login credentials\n   * @returns An observable that contains the authentication credentials\n   */\n  login(\n    payload: Authentication.LoginPayload\n  ): Observable {\n    const loginInfo: any = payload;\n    loginInfo.device = 'mobile';\n    return this.httpClient.post('/login', loginInfo).pipe(\n      map((body: any) => {\n        this.setCredentials(body);\n        return body;\n      })\n    );\n  }\n\n  /**\n   * Sends a logout rewuest to the backend server\n   * If it's successful clears the credentials information from local storage\n   * @returns An observable with a boolean value for success (true)\n   */\n  logout(): Observable {\n    return this.httpClient\n      .get('/logout')\n      .pipe(\n        map(() => {\n          this.setCredentials();\n          return true;\n        })\n      );\n  }\n\n  /**\n   * Determines if the current user is authenticated\n   * @returns A boolean value with the authenticated status\n   */\n  isAuthenticated(): boolean {\n    return !!this.credentials;\n  }\n\n  /**\n   * Getter method for the credentials object\n   * @returns The current credentials\n   */\n  get credentials(): Authentication.Credentials | null {\n    return this._credentials;\n  }\n\n  /**\n   * Getter method for the authentication token\n   * @returns The current token\n   */\n  get accessToken(): string | null {\n    return this.credentials ? this.credentials.token : null;\n  }\n\n  /**\n   * Saves current user's credentials in local storage\n   * @param credentials An object that contains the authentication token and data from server if user performed a login,\n   * or nothing if user just performed a log out\n   */\n  private setCredentials(credentials?: Authentication.Credentials) {\n    this._credentials = credentials || null;\n    if (credentials) {\n      this.localStorageService.setItem(\n        credentialsKey,\n        JSON.stringify(credentials)\n      );\n      this.credentials$.emit(this._credentials);\n    } else {\n      this.localStorageService.clearItem(credentialsKey);\n    }\n  }\n\n   /**\n    * Getter method for current user's profile\n    * @returns The current user\n    */\n  get user(): Authentication.User | null {\n    return this.credentials ? this.credentials.user : null;\n  }\n\n  /**\n   * Sends a request to the backend server for password recovery\n   * @param email User's email, it's the one that will receive the password reset link\n   * @returns an observable that contains a truth value: successful or not\n   */\n  public recoverPassword(email: string) {\n    return this.httpClient.post('/recoverpassword', {email, device: 'mobile'});\n  }\n\n   /**\n    * Sends a request to the backend server for password reset\n    * @param password User's new password\n    * @param token The token from the email send by password recovery to prove that it's the same user\n    * @returns an observable that contains a truth value: successful or not\n    */\n  public resetPassword(password: string, token: string) {\n    return this.httpClient.post('/resetpassword', {password, password_confirmation: password, token, device: 'mobile'});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nCustomSelectorComponent\n\nCustomSelectorComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nCustomSelectorComponent->CoreModule\n\n\n\n\n\nAllocationService\n\nAllocationService\n\nCoreModule -->\n\nAllocationService->CoreModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nCoreModule -->\n\nAuthenticationService->CoreModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nCoreModule -->\n\nCourseService->CoreModule\n\n\n\n\n\nErrorHandlerInterceptor\n\nErrorHandlerInterceptor\n\nCoreModule -->\n\nErrorHandlerInterceptor->CoreModule\n\n\n\n\n\nErrorMessageService\n\nErrorMessageService\n\nCoreModule -->\n\nErrorMessageService->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\nOrganisationService\n\nOrganisationService\n\nCoreModule -->\n\nOrganisationService->CoreModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\n\n\nStaticsService\n\nStaticsService\n\nCoreModule -->\n\nStaticsService->CoreModule\n\n\n\n\n\nVolunteerService\n\nVolunteerService\n\nCoreModule -->\n\nVolunteerService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CustomSelectorComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            CustomSelectorComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AllocationService\n                        \n                        \n                            AuthenticationService\n                        \n                        \n                            CourseService\n                        \n                        \n                            ErrorHandlerInterceptor\n                        \n                        \n                            ErrorMessageService\n                        \n                        \n                            LocalStorageService\n                        \n                        \n                            OrganisationService\n                        \n                        \n                            RequestInterceptor\n                        \n                        \n                            RequestInterceptor\n                        \n                        \n                            StaticsService\n                        \n                        \n                            VolunteerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  HTTP_INTERCEPTORS,\n  HttpClientModule\n} from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\nimport {\n  AuthenticationGuard,\n  AuthenticationService,\n} from './authentication';\nimport {\n  RequestInterceptor,\n  ErrorHandlerInterceptor\n} from './http';\nimport { LocalStorageService } from './local-storage.service';\nimport { RouteReusableStrategy } from './route-reusable-strategy';\nimport {\n  ErrorMessageService,\n  CourseService,\n  VolunteerService,\n  OrganisationService,\n  DatabaseSyncService,\n  AllocationService\n} from './service';\nimport { StaticsService } from './service/statics.service';\nimport { UnauthenticatedGuard } from './authentication/unauthenticated.guard';\nimport { CustomSelectorComponent } from './components/custom-selector/custom-selector.component';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule,\n    IonicModule,\n    FormsModule\n  ],\n  declarations: [\n    CustomSelectorComponent\n  ],\n  providers: [\n    LocalStorageService,\n    AuthenticationService,\n    AuthenticationGuard,\n    UnauthenticatedGuard,\n    RequestInterceptor,\n    ErrorHandlerInterceptor,\n    VolunteerService,\n    ErrorMessageService,\n    StaticsService,\n    CourseService,\n    OrganisationService,\n    DatabaseSyncService,\n    AllocationService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: RequestInterceptor,\n      multi: true\n    },\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy\n    }\n  ],\n  entryComponents: [\n    CustomSelectorComponent\n  ]\n})\n\n/**\n * Module for all core related services, interceptors and models\n */\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseService.html":{"url":"injectables/CourseService.html","title":"injectable - CourseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/course.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for course related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                courseNamesType\n                            \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCourseNames\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/course.service.ts:37\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Courses Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourseNames\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourseNames()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:56\n                \n            \n\n\n            \n                \n                    Returns all course names for selection\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            courseNamesType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'course_names'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/course.service.ts:37\n                            \n                        \n\n                \n                    \n                        Course's names table type\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'courses'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/course.service.ts:32\n                            \n                        \n\n                \n                    \n                        Courses' table type (if the course is not a static value)\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { from } from 'rxjs';\nimport { AuthenticationService } from '../authentication';\n\n/**\n * Reference for local PouchDB Courses Database\n */\nconst localDB = new PouchDB('courses');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Courses Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/courses');\n\n/**\n * Provider for course related operations\n */\n@Injectable()\nexport class CourseService {\n\n  /**\n   * Courses' table type (if the course is not a static value)\n   */\n  private type = 'courses';\n\n  /**\n   * Course's names table type\n   */\n  private courseNamesType = 'course_names';\n\n  /**\n   * Class constructor, sets the synchronization options for CouchDB and PouchDB Courses Database\n   * @param authService Provider for authentication related operations\n   */\n  constructor(private authService: AuthenticationService) {\n    const options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);\n   }\n\n  /**\n   * Returns all course names for selection\n   */\n  getCourseNames() {\n    return from(localDB.find({\n      selector: {\n          type: 'course_names'\n      },\n      include_docs: true,\n      attachments: true\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Credentials.html":{"url":"interfaces/Credentials.html","title":"interface - Credentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Credentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for credentials object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        token\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Authentication token\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User object\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  /**\n   * Interface for login payload\n   */\n  export interface LoginPayload {\n    /**\n     * Login username/email\n     */\n    username: string;\n\n    /**\n     * Login password\n     */\n    password: string;\n  }\n\n  /**\n   * Interface for user object\n   */\n  export interface User {\n    /**\n     * User id\n     */\n    _id: string;\n\n    /**\n     * User name\n     */\n    name: string;\n\n    /**\n     * User phone number\n     */\n    phone?: any;\n\n    /**\n     * User email address\n     */\n    email: string;\n\n    /**\n     * User creation date\n     */\n    createdAt: Date;\n\n    /**\n     * Date of the last update to the user's progile\n     */\n    updatedAt: Date;\n  }\n\n  /**\n   * Interface for credentials object\n   */\n  export interface Credentials {\n    /**\n     * User object\n     */\n    user: User;\n\n    /**\n     * Authentication token\n     */\n    token: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CustomSelectorComponent.html":{"url":"components/CustomSelectorComponent.html","title":"component - CustomSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CustomSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/components/custom-selector/custom-selector.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-custom-selector\n            \n\n            \n                styleUrls\n                ./custom-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./custom-selector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSelectedEntry\n                            \n                            \n                                dismiss\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/components/custom-selector/custom-selector.component.ts:26\n                            \n                        \n\n                \n                    \n                            Page constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Modal Controller reference for modal view related operations\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                LocalStorage service reference for store/clear on local storage\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:20\n                            \n                        \n                \n                    \n                        Data sent to the modal to represent the selections\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeSelectedEntry\n                        \n                        \n                    \n                \n            \n            \n                \nchangeSelectedEntry(entry: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:41\n                \n            \n\n\n            \n                \n                    Triggered when a user selects an entry; it closes the modal and returns to the calling page\nthe selected value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User selected entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dismiss\n                        \n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:72\n                \n            \n\n\n            \n                \n                    Closes the modal view\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:64\n                \n            \n\n\n            \n                \n                    Unsubscribes from the back-button listener and clears the local storage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:49\n                \n            \n\n\n            \n                \n                    Page initialisation, sets the subscription for the back-button event and\nsets a value in the local storage in order to know when the pop-up is open\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:26\n                            \n                        \n\n                \n                    \n                        Stores a subscription to the back button event; it will be subscribed on page initialisation\nand unsubscribed on page destroy\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { LocalStorageService } from '../../local-storage.service';\nimport { fromEvent } from 'rxjs';\n\n@Component({\n  selector: 'app-custom-selector',\n  templateUrl: './custom-selector.component.html',\n  styleUrls: ['./custom-selector.component.scss'],\n})\n\n/**\n * Custom selector with scoll loader\n * Loads big chucks of information faster and doesn't stall the UI\n */\nexport class CustomSelectorComponent implements OnInit, OnDestroy {\n  /**\n   * Data sent to the modal to represent the selections\n   */\n  @Input() items: any[];\n\n  /**\n   * Stores a subscription to the back button event; it will be subscribed on page initialisation\n   * and unsubscribed on page destroy\n   */\n  subscription: any;\n\n  /**\n   * Page constructor\n   * @param modalCtrl Modal Controller reference for modal view related operations\n   * @param localStorageService LocalStorage service reference for store/clear on local storage\n   */\n  constructor(private modalCtrl: ModalController,\n              private localStorageService: LocalStorageService) { }\n\n  /**\n   * Triggered when a user selects an entry; it closes the modal and returns to the calling page\n   * the selected value\n   * @param entry User selected entry\n   */\n  changeSelectedEntry(entry: any) {\n    this.modalCtrl.dismiss(entry);\n  }\n\n  /**\n   * Page initialisation, sets the subscription for the back-button event and\n   * sets a value in the local storage in order to know when the pop-up is open\n   */\n  ngOnInit() {\n    this.localStorageService.setItem('prevent_back', true);\n\n    const event = fromEvent(document, 'backbutton');\n    this.subscription = event.subscribe(async () => {\n        const modal = await this.modalCtrl.getTop();\n        if (modal) {\n            modal.dismiss();\n        }\n    });\n  }\n\n  /**\n   * Unsubscribes from the back-button listener and clears the local storage\n   */\n  ngOnDestroy() {\n    this.localStorageService.clearItem('prevent_back');\n    this.subscription.unsubscribe();\n  }\n\n  /**\n   * Closes the modal view\n   */\n  dismiss() {\n    this.modalCtrl.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n        \n          {{ item.name }}\n        \n      \n    \n    \n      Cancel\n    \n\n    \n\n    \n                \n                    ./custom-selector.component.scss\n                \n                .close-button {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    padding: 20px 15px;\n    background: #fff;\n    width: 100%;\n    box-shadow: 0px 0px 10px rgba(0,0,0,0.05);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ item.name }}                            Cancel    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CustomSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseSyncService.html":{"url":"classes/DatabaseSyncService.html","title":"class - DatabaseSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/database-sync.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for database synchronization (local and remote)\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                localAllocationsDB\n                            \n                            \n                                localCoursesDB\n                            \n                            \n                                localOrganisationsDB\n                            \n                            \n                                localStaticsDB\n                            \n                            \n                                localVolunteersDB\n                            \n                            \n                                remoteAllocationsDB\n                            \n                            \n                                remoteCoursesDB\n                            \n                            \n                                remoteOrganisationsDB\n                            \n                            \n                                remoteStaticsDB\n                            \n                            \n                                remoteVolunteersDB\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localAllocationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:38\n                            \n                        \n\n                \n                    \n                        Reference for local PouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localCoursesDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:20\n                            \n                        \n\n                \n                    \n                        Reference for local PouchDB Courses Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localOrganisationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:29\n                            \n                        \n\n                \n                    \n                        Reference for local PouchDB Organisations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localStaticsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:47\n                            \n                        \n\n                \n                    \n                        Reference for local PouchDB Statics Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localVolunteersDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:11\n                            \n                        \n\n                \n                    \n                        Reference for local PouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteAllocationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:42\n                            \n                        \n\n                \n                    \n                        Reference for server CouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteCoursesDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:24\n                            \n                        \n\n                \n                    \n                        Reference for server CouchDB Courses Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteOrganisationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:33\n                            \n                        \n\n                \n                    \n                        Reference for server CouchDB Organisations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteStaticsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:51\n                            \n                        \n\n                \n                    \n                        Reference for server CouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteVolunteersDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:15\n                            \n                        \n\n                \n                    \n                        Reference for server CouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sync\n                        \n                        \n                    \n                \n            \n            \n                \nsync()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/database-sync.service.ts:77\n                \n            \n\n\n            \n                \n                    Starts database synchronization\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise when all database synchronisations are finished and the view is indexed\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as PouchDB from 'pouchdb/dist/pouchdb';\nimport { environment } from '../../../environments/environment';\n\n/**\n * Service for database synchronization (local and remote)\n */\nexport class DatabaseSyncService {\n  /**\n   * Reference for local PouchDB Volunteers Database\n   */\n  localVolunteersDB: any;\n  /**\n   * Reference for server CouchDB Volunteers Database\n   */\n  remoteVolunteersDB: any;\n\n  /**\n   * Reference for local PouchDB Courses Database\n   */\n  localCoursesDB: any;\n  /**\n   * Reference for server CouchDB Courses Database\n   */\n  remoteCoursesDB: any;\n\n  /**\n   * Reference for local PouchDB Organisations Database\n   */\n  localOrganisationsDB: any;\n  /**\n   * Reference for server CouchDB Organisations Database\n   */\n  remoteOrganisationsDB: any;\n\n  /**\n   * Reference for local PouchDB Allocations Database\n   */\n  localAllocationsDB: any;\n  /**\n   * Reference for server CouchDB Allocations Database\n   */\n  remoteAllocationsDB: any;\n\n  /**\n   * Reference for local PouchDB Statics Database\n   */\n  localStaticsDB: any;\n  /**\n   * Reference for server CouchDB Allocations Database\n   */\n  remoteStaticsDB: any;\n\n    /**\n     * @ignore\n     */\n    constructor() {\n      this.localVolunteersDB = new PouchDB('volunteers');\n      this.remoteVolunteersDB = new PouchDB(environment.databaseURL + '/volunteers');\n\n      this.localCoursesDB = new PouchDB('courses');\n      this.remoteCoursesDB = new PouchDB(environment.databaseURL + '/courses');\n\n      this.localOrganisationsDB = new PouchDB('organisations');\n      this.remoteOrganisationsDB = new PouchDB(environment.databaseURL + '/organisations');\n\n      this.localAllocationsDB = new PouchDB('allocations');\n      this.remoteAllocationsDB = new PouchDB(environment.databaseURL + '/allocations');\n\n      this.localStaticsDB = new PouchDB('statics');\n      this.remoteStaticsDB = new PouchDB(environment.databaseURL + '/statics');\n     }\n\n    /**\n     * Starts database synchronization\n     * @returns A promise when all database synchronisations are finished and the view is indexed\n     */\n    sync(): Promise {\n      return Promise.all(\n          [\n            this.localStaticsDB.replicate.from(this.remoteStaticsDB),\n            this.localVolunteersDB.replicate.from(this.remoteVolunteersDB),\n            this.localCoursesDB.replicate.from(this.remoteCoursesDB),\n            this.localOrganisationsDB.replicate.from(this.remoteOrganisationsDB),\n            this.localAllocationsDB.replicate.from(this.remoteAllocationsDB)\n          ]).then(() => {\n            return this.localStaticsDB.query('cities/slug', { limit: 0 });\n           }).catch(error => console.log(`Error in promises ${error}`));\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailValidation.html":{"url":"classes/EmailValidation.html","title":"class - EmailValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/email-validation.ts\n        \n\n            \n                Description\n            \n            \n                Validtor class for email address' fields\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                emailValidation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            emailValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emailValidation(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/email-validation.ts:14\n                \n            \n\n\n            \n                \n                    Email validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the value from the input\nthat is being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the string respects the pattern, an error message otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\n\n/**\n * Validtor class for email address' fields\n */\nexport class EmailValidation {\n\n    /**\n     * Email validator\n     * @param abstractControl An abstract control reference, to automatically take the value from the input\n     * that is being validated\n     * @returns null if the string respects the pattern, an error message otherwise\n     */\n    static emailValidation(abstractControl: AbstractControl): any {\n        const email = abstractControl.value;\n        const reg = new RegExp('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$');\n\n        if (reg.test(email)) {\n            return null;\n        }\n\n        return { 'email': 'Adresa de email introdusă nu este validă (ex: email@email.com).' };\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorHandlerInterceptor.html":{"url":"interceptors/ErrorHandlerInterceptor.html","title":"interceptor - ErrorHandlerInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorHandlerInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/error-handler.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Adds a default error handler to all requests.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, localStorageService: LocalStorageService, errorMessageService: ErrorMessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/error-handler.interceptor.ts:25\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular value which handles routing operations\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected service referes the LocalStorageService for handling operations related to storage\n\n                                                        \n                                                \n                                                \n                                                        errorMessageService\n                                                  \n                                                        \n                                                                        ErrorMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected service referes the ErrorMessageService for handling operations related to error messagging\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            errorHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    errorHandler(response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/error-handler.interceptor.ts:59\n                \n            \n\n\n            \n                \n                    Handles the request errors depending on its code\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request response\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable with the http event\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/error-handler.interceptor.ts:45\n                \n            \n\n\n            \n                \n                    Intercepts all requests that are sent and adds an error handling function to them\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current request that is being sent\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Handles the next state of the request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable with the new request, with the additional information\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from '../local-storage.service';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ErrorMessageService } from '../service/error-message.service';\nimport { environment } from '../../../environments/environment';\n\n/**\n * Key that identifies the credentials\n */\nconst credentialsKey = 'credentials';\n\n/**\n * Adds a default error handler to all requests.\n */\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n\n  /**\n   * Class constructor\n   * @param router Angular value which handles routing operations\n   * @param localStorageService Injected service referes the LocalStorageService for handling operations related to storage\n   * @param errorMessageService Injected service referes the ErrorMessageService for handling operations related to error messagging\n   */\n  constructor(\n    private router: Router,\n    private localStorageService: LocalStorageService,\n    private errorMessageService: ErrorMessageService\n  ) {}\n\n   /**\n    * Intercepts all requests that are sent and adds an error handling function to them\n    * @param request The current request that is being sent\n    * @param next Handles the next state of the request\n    * @returns An observable with the new request, with the additional information\n    */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return next\n      .handle(request)\n      .pipe(catchError(error => this.errorHandler(error)));\n  }\n\n  /**\n   * Handles the request errors depending on its code\n   * @param response Request response\n   * @returns An observable with the http event\n   */\n  private errorHandler(\n    response: HttpResponse\n  ): Observable> {\n    if (response.status === 401) {\n      this.localStorageService.clearItem(credentialsKey);\n      this.router.navigate(['/auth/login'], {\n        replaceUrl: true\n      });\n    } else if (response.status === 400) {\n      const errorResponse: any = response;\n      if (errorResponse.error) {\n        if (errorResponse.error.validation) {\n          errorResponse.error.validation.keys.forEach((key: string) => {\n            this.errorMessageService.set(\n              errorResponse.error.validation.errors[key],\n              key,\n              response.url\n            );\n          });\n        } else {\n          this.errorMessageService.set(\n            errorResponse.error.error,\n            '_GLOBAL_',\n            response.url\n          );\n        }\n      }\n    }\n\n    if (!environment.production) {\n      console.error('Request error', response);\n    }\n    throw response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorMessageObject.html":{"url":"interfaces/ErrorMessageObject.html","title":"interface - ErrorMessageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorMessageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/error.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for error message\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        id\n                                \n                                \n                                        serviceUrl\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error message\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error message id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceUrl\n                                    \n                                \n                                \n                                    \n                                        serviceUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error url\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        declare namespace ErrorModel {\n\n  /**\n   * Interface for error object\n   */\n  export interface RootObject {\n    /**\n     * Error status code\n     */\n    statusCode: number;\n\n    /**\n     * Error\n     */\n    error: string;\n\n    /**\n     * Error message\n     */\n    message: string;\n\n    /**\n     * Error attributes\n     */\n    attributes?: any;\n  }\n\n  /**\n   * Interface for error message\n   */\n  export interface ErrorMessageObject {\n    /**\n     * Error message id\n     */\n    id: number;\n\n    /**\n     * Error message\n     */\n    error: string;\n\n    /**\n     * Error type\n     */\n    type: string;\n\n    /**\n     * Error url\n     */\n    serviceUrl: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorMessageService.html":{"url":"injectables/ErrorMessageService.html","title":"injectable - ErrorMessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorMessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/error-message.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for error messages\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _errors\n                            \n                            \n                                    Public\n                                errors$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errors\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/error-message.service.ts:51\n                \n            \n\n\n            \n                \n                    Clears the error messages and emits an event\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            set\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    set(error: string, type: string, serviceUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/error-message.service.ts:37\n                \n            \n\n\n            \n                \n                    Sets the error messages and emits an event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error message\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error type\n\n                                    \n                                \n                                \n                                    serviceUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Service Url that generated the error\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorModel.ErrorMessageObject[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/error-message.service.ts:11\n                            \n                        \n\n                \n                    \n                        Value that stores the error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errors$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/error-message.service.ts:16\n                            \n                        \n\n                \n                    \n                        Value that emitts events when error messages are changed\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errors\n                    \n                \n\n                \n                    \n                        geterrors()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/service/error-message.service.ts:27\n                                \n                            \n                    \n                        \n                                Getter for current error messages\n\n\n                                \n                                \n                                \n                                    Returns :         ErrorModel.ErrorMessageObject[]\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\n\n/**\n * Provider for error messages\n */\n@Injectable()\nexport class ErrorMessageService {\n  /**\n   * Value that stores the error messages\n   */\n  private _errors: ErrorModel.ErrorMessageObject[] = [];\n\n  /**\n   * Value that emitts events when error messages are changed\n   */\n  public errors$ = new EventEmitter();\n\n  /**\n   * @ignore\n   */\n  constructor() {}\n\n  /**\n   * Getter for current error messages\n   * @returns current error messages\n   */\n  get errors(): ErrorModel.ErrorMessageObject[] {\n    return this._errors;\n  }\n\n  /**\n   * Sets the error messages and emits an event\n   * @param error Error message\n   * @param type Error type\n   * @param serviceUrl Service Url that generated the error\n   */\n  public set(error: string, type: string, serviceUrl: string) {\n    this._errors.push({\n      id: Date.now(),\n      error: error,\n      type: type,\n      serviceUrl: serviceUrl\n    });\n    console.log(this._errors);\n    this.errors$.emit(this._errors);\n  }\n\n  /**\n   * Clears the error messages and emits an event\n   */\n  public clear() {\n    this._errors = [];\n    this.errors$.emit(this._errors);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                performAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.page.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            performAction\n                        \n                        \n                    \n                \n            \n            \n                \nperformAction(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/home.page.ts:45\n                \n            \n\n\n            \n                \n                    Performes the action selected by the user from the side-menu list;\nIt can either mean navigation to a new page or opening the phone's call screen\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String containing the url for the route that will be displayed on user click\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      title: 'Validează voluntar',\n      url: '/volunteer/validate'\n    }, {\n      title: 'Adaugă voluntar',\n      url: '/volunteer/add'\n    }, {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    }, {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/home/home.page.ts:18\n                            \n                        \n\n                \n                    \n                        Actions that can be performed from the side-menu\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\n\n/**\n * The main menu page of the app; first page for the authenticated user\n */\nexport class HomePage {\n\n  /**\n   * Actions that can be performed from the side-menu\n   */\n  actions = [\n    {\n      title: 'Validează voluntar',\n      url: '/volunteer/validate'\n    }, {\n      title: 'Adaugă voluntar',\n      url: '/volunteer/add'\n    }, {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    }, {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    }\n  ];\n\n  /**\n   *\n   * @param router Provider for route navigation\n   */\n  constructor(private router: Router) { }\n\n  /**\n   * Performes the action selected by the user from the side-menu list;\n   * It can either mean navigation to a new page or opening the phone's call screen\n   * @param url String containing the url for the route that will be displayed on user click\n   */\n  performAction(url: string) {\n    if (url.includes('tel')) {\n      window.open(url);\n    } else {\n      this.router.navigate([url]);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n    \n      \n    \n    \n  \n\n\n\n  \n    \n      \n          \n            {{action.title}}\n          \n      \n    \n  \n\n    \n\n    \n                \n                    home.page.scss\n                \n                .menu-column {\n  -webkit-box-shadow: 0px 0px 0px 5px rgba(240,237,240,1);\n  -moz-box-shadow: 0px 0px 0px 5px rgba(240,237,240,1);\n  box-shadow: 0px 0px 5px 2px rgba(240,237,240,1);\n  color: black;\n  font-size: 12px;\n  padding: 80px 10px;\n  text-align: center;\n  text-decoration: underline;\n\n  a {\n    color: black;\n  }\n}\n\n.home-columns {\n  align-items: center;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  \n  ion-row {\n    justify-content: center;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{action.title}}                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { HomePage } from './home.page';\nimport { AuthenticationGuard } from '../../core/authentication/authentication.guard';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage,\n        canActivate: [AuthenticationGuard]\n      }\n    ])\n  ],\n  declarations: [HomePage]\n})\n\n/**\n * Main page module\n */\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/local-storage.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for storing information in local storage\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                localStorage\n                            \n                            \n                                sessionStorage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearAll\n                            \n                            \n                                    Public\n                                clearItem\n                            \n                            \n                                    Public\n                                getItem\n                            \n                            \n                                    Public\n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/local-storage.service.ts:114\n                            \n                        \n\n                \n                    \n                            Checks if localStorage can be used for basic storing operations\nIf not, then a custom storage is created to handle this operations\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clearAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:244\n                \n            \n\n\n            \n                \n                    Clears the existing storage\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clearItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:237\n                \n            \n\n\n            \n                \n                    Removes an item from storage by its key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:229\n                \n            \n\n\n            \n                \n                    Retrieves an item by its key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setItem(key: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:221\n                \n            \n\n\n            \n                \n                    Adds an item to storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item's key\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item itself\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localStorage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:109\n                            \n                        \n\n                \n                    \n                        Handles storing inside local storage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionStorage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:114\n                            \n                        \n\n                \n                    \n                        Handles storing inside session storage\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Creates a cookie entry\n * @param name Cookie name\n * @param value Cookie value\n * @param days Cookie expiration number of days\n */\nfunction createCookie(name: any, value: any, days: any) {\n  let date: any, expires;\n\n  if (days) {\n    date = new Date();\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    expires = '; expires=' + date.toGMTString();\n  } else {\n    expires = '';\n  }\n  document.cookie = name + '=' + value + expires + '; path=/';\n}\n\n/**\n * Getter for a cookie document by its name\n * @param name Cookie's name\n * @returns cookie document \n */\nfunction readCookie(name: any) {\n  const nameEQ = name + '=',\n    ca = document.cookie.split(';');\n  let i, c;\n\n  for (i = 0; i  localStorage\n      });\n      this.localStorage = localStorage;\n      this.sessionStorage = sessionStorage;\n    }\n  }\n\n  /**\n   * Adds an item to storage\n   * @param key Item's key\n   * @param value Item itself\n   */\n  public setItem(key: string, value: any) {\n    return this.localStorage.setItem(key, value);\n  }\n\n   /**\n    * Retrieves an item by its key\n    * @param key Item key\n    */\n  public getItem(key: string) {\n    return this.localStorage.getItem(key);\n  }\n\n  /**\n   * Removes an item from storage by its key\n   * @param key Item key\n   */\n  public clearItem(key: string) {\n    return this.localStorage.removeItem(key);\n  }\n\n  /**\n   * Clears the existing storage\n   */\n  public clearAll() {\n    return this.localStorage.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loading\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, formBuilder: FormBuilder, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route navigation\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for reactive form creation\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/login/login.component.ts:54\n                \n            \n\n\n            \n                \n                    Form initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/login/login.component.ts:47\n                \n            \n\n\n            \n                \n                    Page initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/login/login.component.ts:65\n                \n            \n\n\n            \n                \n                    Authentication credentials from the form are sent to the authentication service for validation\nIf they are validated, the user will be redirected to the home page, if not, a toast will display an error message\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                        The error message that will be displayed when something didn't go as planned\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                        True if page is in loading state false if not; used in design\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/login/login.component.ts:22\n                            \n                        \n\n                \n                    \n                        Form with user's login credentials\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { AuthenticationService } from 'src/app/core';\nimport { EmailValidation } from 'src/app/core/validators/email-validation';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\n\n/**\n * Login Page component for 'auth/login' route\n */\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Form with user's login credentials\n   */\n  loginForm: FormGroup;\n\n  /**\n   * The error message that will be displayed when something didn't go as planned\n   */\n  errorMessage: string;\n\n  /**\n   * True if page is in loading state false if not; used in design\n   */\n  loading = false;\n\n  /**\n   * Class constructor\n   * @param router Provider for route navigation\n   * @param formBuilder Provider for reactive form creation\n   * @param authenticationService Provider for authentication related operation\n   */\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private authenticationService: AuthenticationService) { }\n\n  /**\n   * Page initialisation\n   */\n  ngOnInit() {\n    this.createForm();\n  }\n\n  /**\n   * Form initialisation\n   */\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, EmailValidation.emailValidation]],\n      password: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Authentication credentials from the form are sent to the authentication service for validation\n   * If they are validated, the user will be redirected to the home page, if not, a toast will display an error message\n   */\n  submit() {\n    this.loading = true;\n    this.authenticationService\n      .login(this.loginForm.value)\n      .pipe(\n        finalize(() => {\n          this.loginForm.markAsPristine();\n        })\n      )\n      .subscribe(\n        (credentials) => {\n            this.loading = false;\n            this.router.navigate(['../home'], {\n              replaceUrl: true\n            });\n        },\n        (error: any) => {\n          this.loading = false;\n          this.errorMessage = 'Informații incorecte';\n          setTimeout(() => {\n            this.errorMessage = null;\n          }, 3000);\n        }\n      );\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      Adresă de email\n      \n    \n    \n      Parolă\n      \n    \n\n    \n       {{ loginForm.controls.email.errors?.email || errorMessage }}\n      \n    \n\n    Am uitat parola\n    Login\n  \n\n  \n    \n  \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Adresă de email                    Parolă                     {{ loginForm.controls.email.errors?.email || errorMessage }}              Am uitat parola    Login          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginPayload.html":{"url":"interfaces/LoginPayload.html","title":"interface - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for login payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Login password\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Login username/email\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  /**\n   * Interface for login payload\n   */\n  export interface LoginPayload {\n    /**\n     * Login username/email\n     */\n    username: string;\n\n    /**\n     * Login password\n     */\n    password: string;\n  }\n\n  /**\n   * Interface for user object\n   */\n  export interface User {\n    /**\n     * User id\n     */\n    _id: string;\n\n    /**\n     * User name\n     */\n    name: string;\n\n    /**\n     * User phone number\n     */\n    phone?: any;\n\n    /**\n     * User email address\n     */\n    email: string;\n\n    /**\n     * User creation date\n     */\n    createdAt: Date;\n\n    /**\n     * Date of the last update to the user's progile\n     */\n    updatedAt: Date;\n  }\n\n  /**\n   * Interface for credentials object\n   */\n  export interface Credentials {\n    /**\n     * User object\n     */\n    user: User;\n\n    /**\n     * Authentication token\n     */\n    token: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutComponent.html":{"url":"components/LogoutComponent.html","title":"component - LogoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LogoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/logout/logout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout\n            \n\n            \n                styleUrls\n                ./logout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/logout/logout.component.ts:15\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operations\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/logout/logout.component.ts:29\n                \n            \n\n\n            \n                \n                    A request through the authentication service is sent for logout;\nIf its successful the user will be redirected to the login screen\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss'],\n})\n\n/**\n * Component for the logout functionality, displays nothing,\n * its purpose is only to facilitate the logout action\n */\nexport class LogoutComponent implements OnInit {\n\n  /**\n   * Class constructor\n   * @param authenticationService Provider for authentication related operations\n   * @param router Provider for router navigation\n   */\n  constructor(private authenticationService: AuthenticationService,\n              private router: Router) { }\n\n  /**\n   * A request through the authentication service is sent for logout;\n   * If its successful the user will be redirected to the login screen\n   */\n  ngOnInit() {\n    this.authenticationService.logout().subscribe(() => {\n      this.router.navigate(['../auth/login'], {\n        replaceUrl: true\n      });\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n  \n\n    \n\n    \n                \n                    ./logout.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Organisation.html":{"url":"classes/Organisation.html","title":"class - Organisation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Organisation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/organisation.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for organisation object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                _rev\n                            \n                            \n                                added_by\n                            \n                            \n                                address\n                            \n                            \n                                city\n                            \n                            \n                                comments\n                            \n                            \n                                contact_person\n                            \n                            \n                                county\n                            \n                            \n                                cover\n                            \n                            \n                                created_at\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                slug\n                            \n                            \n                                status\n                            \n                            \n                                type\n                            \n                            \n                                updated_at\n                            \n                            \n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:8\n                            \n                        \n\n                \n                    \n                        Organisation id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _rev\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:13\n                            \n                        \n\n                \n                    \n                        CouchDB parameter; it is automatically set\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            added_by\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:99\n                            \n                        \n\n                \n                    \n                        The id of the user that added this entry\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:43\n                            \n                        \n\n                \n                    \n                        Address\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:69\n                            \n                        \n\n                \n                    \n                        Organisation's city, from the statics database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:84\n                            \n                        \n\n                \n                    \n                        Additional comments/details to an organisation entry\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contact_person\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:33\n                            \n                        \n\n                \n                    \n                        Organisation contact person name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:53\n                            \n                        \n\n                \n                    \n                        Organisation's county, from the statics database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:114\n                            \n                        \n\n                \n                    \n                        Organisation's cover area, has 'locală'/'națională' value\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:89\n                            \n                        \n\n                \n                    \n                        Creation date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:48\n                            \n                        \n\n                \n                    \n                        Email address\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:18\n                            \n                        \n\n                \n                    \n                        Organisation name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:38\n                            \n                        \n\n                \n                    \n                        Phone number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:23\n                            \n                        \n\n                \n                    \n                        Organisation slug, the name without diacritics (Romanian special characters)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:109\n                            \n                        \n\n                \n                    \n                        Organisation's status 'activ'/'inactiv', organisations added by the mobile app will always have 'inactiv'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:104\n                            \n                        \n\n                \n                    \n                        Database type, in this case 'organisations'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:94\n                            \n                        \n\n                \n                    \n                        Date of the last update on the entry\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            website\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:28\n                            \n                        \n\n                \n                    \n                        Organisation website url\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Organisation {\n    /**\n     * Organisation id\n     */\n    _id: string;\n\n    /**\n     * CouchDB parameter; it is automatically set\n     */\n    _rev: string;\n\n    /**\n     * Organisation name\n     */\n    name: string;\n\n    /**\n     * Organisation slug, the name without diacritics (Romanian special characters)\n     */\n    slug: string;\n\n    /**\n     * Organisation website url\n     */\n    website: string;\n\n    /**\n     * Organisation contact person name\n     */\n    contact_person: string;\n\n    /**\n     * Phone number\n     */\n    phone: string;\n\n    /**\n     * Address\n     */\n    address: string;\n\n    /**\n     * Email address\n     */\n    email: string;\n\n    /**\n     * Organisation's county, from the statics database\n     */\n    county: {\n        /**\n         * County id\n         */\n        _id: string;\n\n        /**\n         * County name\n         */\n        name: string;\n    };\n\n\n    /**\n     * Organisation's city, from the statics database\n     */\n    city: {\n        /**\n         * City id\n         */\n        _id: string;\n\n        /**\n         * City name\n         */\n        name: string;\n    };\n\n    /**\n     * Additional comments/details to an organisation entry\n     */\n    comments: string;\n\n    /**\n     * Creation date\n     */\n    created_at: any;\n\n    /**\n     * Date of the last update on the entry\n     */\n    updated_at: any;\n\n    /**\n     * The id of the user that added this entry\n     */\n    added_by: string;\n\n    /**\n     * Database type, in this case 'organisations'\n     */\n    type: string;\n\n    /**\n     * Organisation's status 'activ'/'inactiv', organisations added by the mobile app will always have 'inactiv'\n     */\n    status: string;\n\n    /**\n     * Organisation's cover area, has 'locală'/'națională' value\n     */\n    cover: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganisationService.html":{"url":"injectables/OrganisationService.html","title":"injectable - OrganisationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OrganisationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/organisation.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for organisation related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createOrganisation\n                            \n                            \n                                deleteOrganisationById\n                            \n                            \n                                getOrganisationById\n                            \n                            \n                                getOrganisationByName\n                            \n                            \n                                getOrganisations\n                            \n                            \n                                    Private\n                                removeSpecialChars\n                            \n                            \n                                updateOrganisation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/organisation.service.ts:33\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Organisations Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected reference for AuthenticationService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createOrganisation\n                        \n                        \n                    \n                \n            \n            \n                \ncreateOrganisation(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:100\n                \n            \n\n\n            \n                \n                    Creates an organisation entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new organisation's name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with the created object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteOrganisationById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteOrganisationById(organisationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:130\n                \n            \n\n\n            \n                \n                    Deletes an entry by its id from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The organisation id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrganisationById\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrganisationById(organisationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:72\n                \n            \n\n\n            \n                \n                    Finds an organisation by its id in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Organisation's id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the organisation with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrganisationByName\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrganisationByName(organisationName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:86\n                \n            \n\n\n            \n                \n                    Finds an organisation by its name in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisationName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the organisation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all organisation with that name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrganisations\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrganisations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:57\n                \n            \n\n\n            \n                \n                    Getter method for all organisations from the local database\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all organisations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            removeSpecialChars\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeSpecialChars(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:141\n                \n            \n\n\n            \n                \n                    Removes diacritics from a string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A string with diacritics\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the new string, without diacritics\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOrganisation\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOrganisation(organisation: Organisation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:118\n                \n            \n\n\n            \n                \n                    Updates an organisation entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisation\n                                    \n                                                Organisation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new organisation entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'organisations'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/organisation.service.ts:33\n                            \n                        \n\n                \n                    \n                        Table type\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { from, Observable } from 'rxjs';\nimport { AuthenticationService } from '../authentication';\nimport { Organisation } from '../model/organisation.model';\nimport * as moment from 'moment';\n\n/**\n * Reference for local PouchDB Organisations Database\n */\nconst localDB = new PouchDB('organisations');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Organisations Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/organisations');\n\n/**\n * Provider for organisation related operations\n */\n@Injectable()\nexport class OrganisationService {\n  /**\n   * Table type\n   */\n  private type = 'organisations';\n\n  /**\n   * Class constructor, sets the synchronization options for CouchDB and PouchDB Organisations Database\n   * @param authenticationService Injected reference for AuthenticationService\n   */\n  constructor(private authenticationService: AuthenticationService) {\n    const options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);\n\n    localDB.createIndex({\n      index: {fields: ['name', 'slug']}\n    });\n   }\n\n  /**\n   * Getter method for all organisations from the local database\n   * @returns An Observable with all organisations\n   */\n  getOrganisations(): Observable {\n    return from(localDB.find({\n      selector: {\n          type: this.type\n      },\n      include_docs: true,\n      attachments: true\n    }));\n  }\n\n  /**\n   * Finds an organisation by its id in the local database\n   * @param organisationId Organisation's id\n   * @returns An Observable containing the organisation with that id\n   */\n  getOrganisationById(organisationId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        _id: {$eq: organisationId},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   * Finds an organisation by its name in the local database\n   * @param organisationName The name of the organisation\n   * @returns An Observable with all organisation with that name\n   */\n  getOrganisationByName(organisationName: string): Observable {\n    return from(localDB.find({\n      selector: {\n        name: {$eq: organisationName},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   * Creates an organisation entry in the local database\n   * @param name String value containing the new organisation's name\n   * @returns An Observable with the created object\n   */\n  createOrganisation(name: string): Observable {\n    const currentUser = this.authenticationService.user;\n    const organisation = new Organisation();\n    organisation.name = name;\n    organisation.slug = this.removeSpecialChars(name);\n    organisation.added_by = currentUser._id;\n    organisation.created_at = moment().format('Y-MM-DD HH:mm:ss');\n    organisation.updated_at = moment().format('Y-MM-DD HH:mm:ss');\n    organisation.type = this.type;\n    organisation.status = 'inactiv';\n\n    return from(localDB.post(organisation));\n  }\n\n  /**\n   * Updates an organisation entry in the local database\n   * @param organisation The new organisation entry\n   */\n  updateOrganisation(organisation: Organisation) {\n    localDB.get(organisation._id).then((doc) => {\n      doc.name = organisation.name ? organisation.name : doc.name;\n      doc.slug = organisation.name ? this.removeSpecialChars(organisation.name) : doc.slug;\n      localDB.put(doc);\n    });\n  }\n\n  /**\n   * Deletes an entry by its id from the local database\n   * @param organisationId The organisation id\n   */\n  deleteOrganisationById(organisationId: string) {\n    localDB.get(organisationId).then((doc) => {\n      return localDB.remove(doc);\n    });\n  }\n\n   /**\n    * Removes diacritics from a string\n    * @param text A string with diacritics\n    * @returns the new string, without diacritics\n    */\n  private removeSpecialChars(text: string): string {\n    const input   = 'ăâîșț';\n    const output  = 'aaist';\n    const regex = new RegExp('[' + input + ']', 'g');\n    const transl = {};\n\n    const lookup = (m) => transl[m] || m;\n\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordValidation.html":{"url":"classes/PasswordValidation.html","title":"class - PasswordValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/password-validation.ts\n        \n\n            \n                Description\n            \n            \n                Validator class for password inputs\nValidates both matching passwords for password reset (password, confirmPassword)\nand simple password fields\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                MatchPassword\n                            \n                            \n                                    Static\n                                passwordValidation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            MatchPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    MatchPassword(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/password-validation.ts:16\n                \n            \n\n\n            \n                \n                    Matching passwords validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the values from the inputs\nthat are being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the strings match, an error message otherwise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            passwordValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    passwordValidation(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/password-validation.ts:35\n                \n            \n\n\n            \n                \n                    Password validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the value from the input\nthat is being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the string respects the pattern, an error message otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AbstractControl} from '@angular/forms';\n\n/**\n * Validator class for password inputs\n * Validates both matching passwords for password reset (password, confirmPassword)\n * and simple password fields\n */\nexport class PasswordValidation {\n\n    /**\n     * Matching passwords validator\n     * @param abstractControl An abstract control reference, to automatically take the values from the inputs\n     * that are being validated\n     * @returns null if the strings match, an error message otherwise\n     */\n    static MatchPassword(abstractControl: AbstractControl): any {\n        const password = abstractControl.get('password').value;\n        const confirmPassword = abstractControl.get('confirmPassword').value;\n\n        if (password !== confirmPassword) {\n            abstractControl.get('confirmPassword').setErrors({\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            });\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Password validator\n     * @param abstractControl An abstract control reference, to automatically take the value from the input\n     * that is being validated\n     * @returns null if the string respects the pattern, an error message otherwise\n     */\n    static passwordValidation(abstractControl: AbstractControl): any {\n        const number = new RegExp('\\\\d');\n        const password = abstractControl.value;\n        const uppercase = new RegExp('[A-Z]');\n        const lowercase = new RegExp('[a-z]');\n        const special = new RegExp(/[!#$%&\\‘\\(\\)\\*?@\\[\\]^_\\+\\.`\\{\\|\\}~]/);\n\n        if (!number.test(password)) {\n            return {\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            };\n        }\n\n        if (!uppercase.test(password)) {\n            return {\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            };\n        }\n\n        if (!lowercase.test(password)) {\n            return {\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            };\n        }\n\n        if (!special.test(password)) {\n            return {\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            };\n        }\n\n        if (password.length \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PhoneValidation.html":{"url":"classes/PhoneValidation.html","title":"class - PhoneValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PhoneValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/phone-validation.ts\n        \n\n            \n                Description\n            \n            \n                Validator class for the phone number input field\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                phoneValidation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            phoneValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    phoneValidation(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/phone-validation.ts:14\n                \n            \n\n\n            \n                \n                    Phone validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the value from the input\nthat is being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the string respects the pattern, an error message otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\n\n/**\n * Validator class for the phone number input field\n */\nexport class PhoneValidation {\n\n    /**\n     * Phone validator\n     * @param abstractControl An abstract control reference, to automatically take the value from the input\n     * that is being validated\n     * @returns null if the string respects the pattern, an error message otherwise\n     */\n    static phoneValidation(abstractControl: AbstractControl): any {\n        const phone = abstractControl.value;\n        const reg = new RegExp('^[+]{0,1}[0-9]+$');\n\n        if ((reg.test(phone) && phone.length >= 10)) {\n            if (phone.length === 12 && phone.indexOf('+') >= 0) {\n                return null;\n            }\n\n            if (phone.length === 10 && phone.indexOf('+') \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecoverPasswordComponent.html":{"url":"components/RecoverPasswordComponent.html","title":"component - RecoverPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecoverPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/recover-password/recover-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recover-password\n            \n\n            \n                styleUrls\n                ./recover-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./recover-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loading\n                            \n                            \n                                resetPasswordForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentToast\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:32\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected reference for AuthenticationService\n\n                                                        \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller for toast messages display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:48\n                \n            \n\n\n            \n                \n                    Page initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentToast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToast(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:76\n                \n            \n\n\n            \n                \n                    Presents a toast that will be automatically dismessed after 3 seconds\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        toast message\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:57\n                \n            \n\n\n            \n                \n                    Sends the recover password request\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:27\n                            \n                        \n\n                \n                    \n                        Error message that will be displayed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:32\n                            \n                        \n\n                \n                    \n                        Page is loading or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPasswordForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:22\n                            \n                        \n\n                \n                    \n                        Form reference\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core';\nimport { EmailValidation } from 'src/app/core/validators/email-validation';\nimport { ToastController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-recover-password',\n  templateUrl: './recover-password.component.html',\n  styleUrls: ['./recover-password.component.scss'],\n})\n\n/**\n * Component for the recover password functionality\n */\nexport class RecoverPasswordComponent implements OnInit {\n    /**\n     * Form reference\n     */\n    resetPasswordForm: FormGroup;\n\n    /**\n     * Error message that will be displayed\n     */\n    errorMessage: string = null;\n\n    /**\n     * Page is loading or not\n     */\n    loading = false;\n\n    /**\n     * Class constructor\n     *\n     * @param router Provider for router navigation\n     * @param authenticationService Injected reference for AuthenticationService\n     * @param toastController Controller for toast messages display\n     */\n    constructor(private router: Router,\n                private authenticationService: AuthenticationService,\n                private toastController: ToastController) { }\n\n    /**\n     * Page initialisation\n     */\n    ngOnInit() {\n        this.resetPasswordForm = new FormGroup({\n        email: new FormControl('', [Validators.required, EmailValidation.emailValidation])\n        });\n    }\n\n    /**\n     * Sends the recover password request\n     */\n    resetPassword() {\n        this.loading = true;\n        this.authenticationService.recoverPassword(this.resetPasswordForm.value.email).subscribe(response => {\n            this.loading = false;\n            this.presentToast('Cererea a fost înregistrată. Vă rugăm verificați atât în inbox cât și în spam.');\n            this.router.navigate(['/auth/login']);\n        }, error => {\n            this.loading = false;\n            this.errorMessage = 'Adresa de email specificată nu există. Te rugăm să verifici și să încerci din nou.';\n            setTimeout(() => {\n                this.errorMessage = null;\n            }, 3000);\n        });\n    }\n\n     /**\n      * Presents a toast that will be automatically dismessed after 3 seconds\n      * @param message toast message\n      */\n    async presentToast(message: string) {\n        const toast = await this.toastController.create({\n          message,\n          position: 'bottom',\n          duration: 3000\n        });\n        toast.present();\n    }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      Adresă de email\n      \n    \n\n    \n       {{ resetPasswordForm.controls.email.errors?.email || errorMessage }} \n     \n\n    Autentificare\n    Trimite\n  \n\n  \n      \n  \n\n\n    \n\n    \n                \n                    ./recover-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Adresă de email                     {{ resetPasswordForm.controls.email.errors?.email || errorMessage }}          Autentificare    Trimite            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecoverPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RequestInterceptor.html":{"url":"interceptors/RequestInterceptor.html","title":"interceptor - RequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  RequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/request.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Prefixes all requests with environment.serverUrl and adds the authentication token to requests\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/request.interceptor.ts:17\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected service referes the AuthenticationService for handling authentication related operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/request.interceptor.ts:31\n                \n            \n\n\n            \n                \n                    Intercepts all requests that are sent and adds extra information to them\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current request that is being sent\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Handles the next state of the request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The new request, with the additional information\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { environment } from '../../../environments/environment';\n\n/**\n * Prefixes all requests with `environment.serverUrl` and adds the authentication token to requests\n */\n@Injectable()\nexport class RequestInterceptor implements HttpInterceptor {\n\n  /**\n   * Class constructor\n   * @param authenticationService Injected service referes the AuthenticationService for handling authentication related operations\n   */\n  constructor(private authenticationService: AuthenticationService) {}\n\n  /**\n   * Intercepts all requests that are sent and adds extra information to them\n   * @param request The current request that is being sent\n   * @param next Handles the next state of the request\n   * @returns The new request, with the additional information\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    request = request.clone({\n      setHeaders: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json; charset=utf-8',\n      Authorization: `Bearer ${this.authenticationService.accessToken}`,\n      },\n      url: environment.serverUrl + request.url\n    });\n\n    return next.handle(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/reset-password/reset-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                ./reset-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loading\n                            \n                            \n                                resetPasswordForm\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialiseView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentToast\n                            \n                            \n                                resetPassword\n                            \n                            \n                                setErrorMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService, formBuilder: FormBuilder, route: ActivatedRoute, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected reference for AuthenticationService\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder reference, used in creating rective forms\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for current route\n\n                                                        \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller for toast messages display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialiseView\n                        \n                        \n                    \n                \n            \n            \n                \ninitialiseView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:80\n                \n            \n\n\n            \n                \n                    Page initialisation after user was logged out (if neccessary)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:56\n                \n            \n\n\n            \n                \n                    Page initialisation\nIf user is already logged in when page is accessed, then a logout is performed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentToast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToast(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:118\n                \n            \n\n\n            \n                \n                    Presents a toast that will be automatically dismessed after 3 seconds\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        toast message\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:91\n                \n            \n\n\n            \n                \n                    Sends the reset password request\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setErrorMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsetErrorMessage(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:107\n                \n            \n\n\n            \n                \n                    Changes the value of the error message and clears it after 3 seconds\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        error message that will be displayed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:31\n                            \n                        \n\n                \n                    \n                        Error message that will be displayed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:36\n                            \n                        \n\n                \n                    \n                        Page is loading or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPasswordForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:21\n                            \n                        \n\n                \n                    \n                        Form reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:46\n                            \n                        \n\n                \n                    \n                        Provider for router navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:26\n                            \n                        \n\n                \n                    \n                        Token for password reset\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core';\nimport { PasswordValidation } from 'src/app/core/validators/password-validation';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss'],\n})\n\n/**\n * Component for the reset password functionality\n */\nexport class ResetPasswordComponent implements OnInit {\n    /**\n     * Form reference\n     */\n     resetPasswordForm: FormGroup;\n\n     /**\n      * Token for password reset\n      */\n    token: string;\n\n    /**\n     * Error message that will be displayed\n     */\n    errorMessage: string;\n\n    /**\n     * Page is loading or not\n     */\n    loading = false;\n\n\n    /**\n     * @param router Provider for router navigation\n     * @param authenticationService Injected reference for AuthenticationService\n     * @param formBuilder FormBuilder reference, used in creating rective forms\n     * @param route Provider for current route\n     * @param toastController Controller for toast messages display\n     */\n    constructor(public router: Router,\n                private authenticationService: AuthenticationService,\n                private formBuilder: FormBuilder,\n                private route: ActivatedRoute,\n                private toastController: ToastController) { }\n\n    /**\n     * Page initialisation\n     * If user is already logged in when page is accessed, then a logout is performed\n     */\n    ngOnInit() {\n        if (this.authenticationService.isAuthenticated() ) {\n            this.authenticationService.logout().subscribe(response => {\n                this.initialiseView();\n            });\n        } else {\n            this.initialiseView();\n        }\n\n        this.resetPasswordForm = this.formBuilder.group({\n            password: ['', [Validators.required,\n                PasswordValidation.passwordValidation\n            ]],\n            confirmPassword: ['', [Validators.required,\n                PasswordValidation.passwordValidation\n            ]],\n            }, {\n                validator: PasswordValidation.MatchPassword\n            });\n    }\n\n    /**\n     * Page initialisation after user was logged out (if neccessary)\n     */\n    initialiseView() {\n        this.route.params.subscribe(\n            (params) => {\n                this.token = params['token'];\n            }\n        );\n    }\n\n    /**\n     * Sends the reset password request\n     */\n    resetPassword() {\n        this.loading = true;\n        this.authenticationService.resetPassword(this.resetPasswordForm.value.password, this.token).subscribe(response => {\n                this.presentToast('Parolă resetată cu succes.');\n                this.loading = false;\n                this.router.navigate(['/auth/login']);\n            }, error => {\n                this.loading = false;\n                this.setErrorMessage('A apărut o eroare. Vă rugăm reîncercați.');\n            });\n    }\n\n    /**\n     * Changes the value of the error message and clears it after 3 seconds\n     * @param message error message that will be displayed\n     */\n    setErrorMessage(message: string) {\n        this.errorMessage = message;\n        setTimeout(() => {\n            this.errorMessage = null;\n        }, 3000);\n    }\n\n    /**\n     * Presents a toast that will be automatically dismessed after 3 seconds\n     * @param message toast message\n     */\n    async presentToast(message: string) {\n        const toast = await this.toastController.create({\n          message,\n          position: 'bottom',\n          duration: 3000\n        });\n        toast.present();\n    }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      Parolă\n      \n    \n\n    \n      Confirmă Parola\n      \n    \n    \n    \n       {{ resetPassword.errors?.password || resetPasswordForm.controls.confirmPassword.errors?.password || resetPasswordForm.controls.password.errors?.password }} \n    \n\n    Autentificare\n    Trimite\n  \n\n  \n      \n  \n\n\n    \n\n    \n                \n                    ./reset-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Parolă                    Confirmă Parola                         {{ resetPassword.errors?.password || resetPasswordForm.controls.confirmPassword.errors?.password || resetPasswordForm.controls.password.errors?.password }}         Autentificare    Trimite            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RootObject.html":{"url":"interfaces/RootObject.html","title":"interface - RootObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RootObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/error.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for error object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attributes\n                                \n                                \n                                        error\n                                \n                                \n                                        message\n                                \n                                \n                                        statusCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                    \n                                \n                                \n                                    \n                                        attributes:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Error attributes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error message\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error status code\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        declare namespace ErrorModel {\n\n  /**\n   * Interface for error object\n   */\n  export interface RootObject {\n    /**\n     * Error status code\n     */\n    statusCode: number;\n\n    /**\n     * Error\n     */\n    error: string;\n\n    /**\n     * Error message\n     */\n    message: string;\n\n    /**\n     * Error attributes\n     */\n    attributes?: any;\n  }\n\n  /**\n   * Interface for error message\n   */\n  export interface ErrorMessageObject {\n    /**\n     * Error message id\n     */\n    id: number;\n\n    /**\n     * Error message\n     */\n    error: string;\n\n    /**\n     * Error type\n     */\n    type: string;\n\n    /**\n     * Error url\n     */\n    serviceUrl: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteReusableStrategy.html":{"url":"classes/RouteReusableStrategy.html","title":"class - RouteReusableStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteReusableStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/route-reusable-strategy.ts\n        \n\n            \n                Description\n            \n            \n                A route strategy allowing for explicit route reuse.\nUsed as a workaround for https://github.com/angular/angular/issues/18374\nTo reuse a given route, add data: { reuse: true } to the route definition.\n\n            \n\n            \n                Extends\n            \n            \n                        RouteReuseStrategy\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                retrieve\n                            \n                            \n                                    Public\n                                shouldAttach\n                            \n                            \n                                    Public\n                                shouldDetach\n                            \n                            \n                                    Public\n                                shouldReuseRoute\n                            \n                            \n                                    Public\n                                store\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            retrieve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    retrieve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:47\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DetachedRouteHandle | null\n\n                    \n                    \n                        null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldAttach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldAttach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:38\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        false\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldDetach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldDetach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:19\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        false\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldReuseRoute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:56\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    future\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Future activated route\n\n                                    \n                                \n                                \n                                    curr\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            store\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:28\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                                \n                                    detachedTree\n                                    \n                                            DetachedRouteHandle | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The detached tree\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ActivatedRouteSnapshot,\n  DetachedRouteHandle,\n  RouteReuseStrategy\n} from '@angular/router';\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @returns false\n   */\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @param detachedTree The detached tree\n   */\n  public store(\n    route: ActivatedRouteSnapshot,\n    detachedTree: DetachedRouteHandle | null\n  ): void {}\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @returns false\n   */\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @returns null\n   */\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param future Future activated route\n   * @param curr Current activated route\n   */\n  public shouldReuseRoute(\n    future: ActivatedRouteSnapshot,\n    curr: ActivatedRouteSnapshot\n  ): boolean {\n    return future.routeConfig === curr.routeConfig || future.data.reuse;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SendMessageComponent.html":{"url":"components/SendMessageComponent.html","title":"component - SendMessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SendMessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/volunteer/send-message/send-message.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-send-message\n            \n\n            \n                styleUrls\n                ./send-message.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./send-message.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                base64Image\n                            \n                            \n                                messageForm\n                            \n                            \n                                    Private\n                                phoneNumbers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addImage\n                            \n                            \n                                checkPemission\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sms: SMS, router: Router, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/volunteer/send-message/send-message.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sms\n                                                  \n                                                        \n                                                                    SMS\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for sending SMS messages\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for url location navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addImage\n                        \n                        \n                    \n                \n            \n            \n                \naddImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:64\n                \n            \n\n\n            \n                \n                    Adds an image from camera to the app and uses base64 codification to convert it into a string\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkPemission\n                        \n                        \n                    \n                \n            \n            \n                \ncheckPemission()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:92\n                \n            \n\n\n            \n                \n                    Checks for SMS permission, if granted sends the SMS\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:47\n                \n            \n\n\n            \n                \n                    Page initialisation: the volunteer id needs to be retrieved from the url\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:78\n                \n            \n\n\n            \n                \n                    Sends the message and image to the selected volunteer/s\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            base64Image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:33\n                            \n                        \n\n                \n                    \n                        Codification of the image that will be sent\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messageForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:28\n                            \n                        \n\n                \n                    \n                        The form that contains the message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            phoneNumbers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:23\n                            \n                        \n\n                \n                    \n                        A list of selected volunteers' phone numbers\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Camera } from '@ionic-native/camera';\nimport { SMS } from '@ionic-native/sms/ngx';\nimport { Volunteer } from 'src/app/core/model/volunteer.model';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-send-message',\n  templateUrl: './send-message.component.html',\n  styleUrls: ['./send-message.component.scss']\n})\n\n/**\n * Component that handles the send message page functionality\n */\nexport class SendMessageComponent implements OnInit {\n\n  /**\n   * A list of selected volunteers' phone numbers\n   */\n  private phoneNumbers: string[] = [];\n\n  /**\n   * The form that contains the message\n   */\n  messageForm: FormGroup;\n\n  /**\n   * Codification of the image that will be sent\n   */\n  public base64Image: string;\n\n  /**\n   * @param sms Provider for sending SMS messages\n   * @param router Provider for router navigation\n   * @param location Provider for url location navigation\n   */\n  constructor(private sms: SMS,\n              private router: Router,\n              private location: Location) { }\n\n  /**\n   * Page initialisation: the volunteer id needs to be retrieved from the url\n   */\n  ngOnInit() {\n      const navigation = this.router.getCurrentNavigation();\n\n      if (navigation && navigation.extras && navigation.extras.state) {\n        const volunteers = navigation.extras.state.volunteers;\n\n        volunteers.forEach((volunteer: Volunteer) => this.phoneNumbers.push(volunteer.phone));\n      }\n\n      this.messageForm = new FormGroup({\n        message: new FormControl('', [Validators.required])\n        });\n  }\n\n  /**\n   * Adds an image from camera to the app and uses base64 codification to convert it into a string\n   */\n  addImage() {\n    Camera.getPicture({\n      destinationType: Camera.DestinationType.DATA_URL,\n      targetWidth: 1000,\n      targetHeight: 1000\n    }).then((imageData) => {\n      this.base64Image = 'data:image/jpeg;base64,' + imageData;\n    }, (err) => {\n    });\n  }\n\n  /**\n   * Sends the message and image to the selected volunteer/s\n   */\n  sendMessage() {\n    const options = {\n        replaceLineBreaks: false,\n        android: {\n            intent: 'INTENT'\n        }\n    };\n    this.sms.send(this.phoneNumbers, this.messageForm.value.message, options);\n    this.location.back();\n  }\n\n  /**\n   * Checks for SMS permission, if granted sends the SMS\n   */\n  checkPemission() {\n    this.sms.hasPermission();\n    if (this.sms.hasPermission()) {\n      this.sendMessage();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n  \n\n\n\n  \n    \n      \n      Trimite mesaj\n    \n\n    \n      \n        \n          Mesajul tău\n        \n      \n      \n        \n      \n      \n        \n          \n          \n              Adaugă o fotografie\n          \n        \n        \n          \n            \n          \n        \n       -->\n    \n\n    Trimite mesaj\n  \n\n    \n\n    \n                \n                    ./send-message.component.scss\n                \n                .sc-ion-textarea-md-h {\n    margin-top: 0;\n}\n\nion-button ion-icon {\n    font-size: 24px;\n}\n\n.full-button-bottom {\n  margin: 0;\n  height: 50px;\n}\n\n.header {\n    background-color: #f9f9f9; \n    min-height: 100px; \n    text-align: center;\n    padding: 30px 10px;\n\n    ion-icon {\n        font-size: 35px;\n    }\n\n    ion-label {\n        display: block;\n        font-size: 25px;\n    }\n}\n\n.message-textarea {\n    height: 300px;\n}\n\nion-textarea textarea {\n    height: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      Trimite mesaj                                Mesajul tău                                                                                  Adaugă o fotografie                                                                         -->        Trimite mesaj  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SendMessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SsnValidation.html":{"url":"classes/SsnValidation.html","title":"class - SsnValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SsnValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/ssn-validation.ts\n        \n\n            \n                Description\n            \n            \n                Validator class for the SSN field (CNP)\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                ssnValidation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            ssnValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ssnValidation(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/ssn-validation.ts:14\n                \n            \n\n\n            \n                \n                    Ssn validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the value from the input\nthat is being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the string respects the pattern, an error message otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\n\n/**\n * Validator class for the SSN field (CNP)\n */\nexport class SsnValidation {\n\n    /**\n     * Ssn validator\n     * @param abstractControl An abstract control reference, to automatically take the value from the input\n     * that is being validated\n     * @returns null if the string respects the pattern, an error message otherwise\n     */\n    static ssnValidation(abstractControl: AbstractControl): any {\n        const ssn = parseInt(abstractControl.value, 10) || 0;\n\n        if (ssn.toString().length === 13) {\n            const cnp = Array.from(String(ssn), Number);\n            const coefs = [2, 7, 9, 1, 4, 6, 3, 5, 8, 2, 7, 9];\n            const idx = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n            const s = idx.map((x) => coefs[x] * cnp[x]);\n            const res = s.reduce((a, b) => a + b, 0) % 11;\n\n            if ((res \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StaticsService.html":{"url":"injectables/StaticsService.html","title":"injectable - StaticsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StaticsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/statics.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for locations: counties and cities\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city_type\n                            \n                            \n                                county_type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCityList\n                            \n                            \n                                    Public\n                                getCountyList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/statics.service.ts:35\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Statics Database\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCityList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCityList(countyId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/statics.service.ts:69\n                \n            \n\n\n            \n                \n                    Getter for the list of cities\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    countyId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the county from which the cities will be selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that contains the list of cities from resource files\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCountyList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCountyList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/statics.service.ts:54\n                \n            \n\n\n            \n                \n                    Getter for the list of counties\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that contains the list of counties from resource files\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city_type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'cities'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/statics.service.ts:30\n                            \n                        \n\n                \n                    \n                        Type for city entries\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county_type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'counties'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/statics.service.ts:35\n                            \n                        \n\n                \n                    \n                        Type for county entries\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\n\n/**\n * Reference for local PouchDB Statics Database\n */\nconst localDB = new PouchDB('statics');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Statics Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/statics');\n\n/**\n * Provider for locations: counties and cities\n */\n@Injectable()\nexport class StaticsService {\n    /**\n     * Type for city entries\n     */\n    city_type = 'cities';\n\n    /**\n     * Type for county entries\n     */\n    county_type = 'counties';\n\n    /**\n     * Class constructor, sets the synchronization options for CouchDB and PouchDB Statics Database\n     */\n    constructor() {\n        const options = {\n            live: true,\n            retry: true,\n            continuous: true\n        };\n\n        localDB.replicate.from(remoteDB, options);\n    }\n\n    /**\n     * Getter for the list of counties\n     * @returns An observable that contains the list of counties from resource files\n     */\n    public getCountyList(): Observable {\n        return from(localDB.allDocs(\n            {\n                include_docs: true,\n                startkey: 'county_romania_',\n                endkey: 'county_romania_\\ufff0'\n            }\n        ));\n    }\n\n    /**\n     * Getter for the list of cities\n     * @param countyId The id of the county from which the cities will be selected\n     * @returns An observable that contains the list of cities from resource files\n     */\n    public getCityList(countyId: string): Observable {\n        return from(localDB.query('cities/slug',\n            {\n                startkey: [countyId, null],\n                endkey: [countyId, {}]\n            }\n        ));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UnauthenticatedGuard.html":{"url":"guards/UnauthenticatedGuard.html","title":"guard - UnauthenticatedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    UnauthenticatedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/authentication/unauthenticated.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Provides a guard for protecting unauthenticated routes (such as login)\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/unauthenticated.guard.ts:10\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular value which handles routing operations\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service which handles the authentication operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/unauthenticated.guard.ts:27\n                \n            \n\n\n            \n                \n                    Determines if a user can access a route, depending on its state\nIf the route isn't allowed, it automatically redirects to home page\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        a boolean value, current user's status: unauthenticated or authenticated\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { AuthenticationService } from './authentication.service';\n\n/**\n * Provides a guard for protecting unauthenticated routes (such as login)\n */\n@Injectable()\nexport class UnauthenticatedGuard implements CanActivate {\n\n   /**\n    * Class constructor\n    * @param router Angular value which handles routing operations\n    * @param authenticationService The service which handles the authentication operations\n    */\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n   /**\n    * Determines if a user can access a route, depending on its state\n    * If the route isn't allowed, it automatically redirects to home page\n    * @returns a boolean value, current user's status: unauthenticated or authenticated\n    */\n  canActivate(): boolean {\n    if (!this.authenticationService.isAuthenticated()) {\n      return true;\n    }\n\n    this.router.navigate(['/home'], {\n      replaceUrl: true\n    });\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for user object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        phone\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User creation date\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User email address\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    User phone number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date of the last update to the user's progile\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  /**\n   * Interface for login payload\n   */\n  export interface LoginPayload {\n    /**\n     * Login username/email\n     */\n    username: string;\n\n    /**\n     * Login password\n     */\n    password: string;\n  }\n\n  /**\n   * Interface for user object\n   */\n  export interface User {\n    /**\n     * User id\n     */\n    _id: string;\n\n    /**\n     * User name\n     */\n    name: string;\n\n    /**\n     * User phone number\n     */\n    phone?: any;\n\n    /**\n     * User email address\n     */\n    email: string;\n\n    /**\n     * User creation date\n     */\n    createdAt: Date;\n\n    /**\n     * Date of the last update to the user's progile\n     */\n    updatedAt: Date;\n  }\n\n  /**\n   * Interface for credentials object\n   */\n  export interface Credentials {\n    /**\n     * User object\n     */\n    user: User;\n\n    /**\n     * Authentication token\n     */\n    token: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Volunteer.html":{"url":"classes/Volunteer.html","title":"class - Volunteer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Volunteer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/volunteer.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for volunteer object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                _rev\n                            \n                            \n                                added_by\n                            \n                            \n                                allocation\n                            \n                            \n                                city\n                            \n                            \n                                comments\n                            \n                            \n                                county\n                            \n                            \n                                courses\n                            \n                            \n                                created_at\n                            \n                            \n                                email\n                            \n                            \n                                job\n                            \n                            \n                                name\n                            \n                            \n                                organisation\n                            \n                            \n                                phone\n                            \n                            \n                                slug\n                            \n                            \n                                ssn\n                            \n                            \n                                type\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:8\n                            \n                        \n\n                \n                    \n                        Volunteer's id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _rev\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:13\n                            \n                        \n\n                \n                    \n                        CouchDB parameter; it is automatically set\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            added_by\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:171\n                            \n                        \n\n                \n                    \n                        The id of the user (in the mobile case the rescue officer) that added the current volunteer in the database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:146\n                            \n                        \n\n                \n                    \n                        Volunteer's allocation status: if the value is null then the volunteer has never been allocated before,\notherwise it contains the id of the volunteer's last allocation entry from the Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:58\n                            \n                        \n\n                \n                    \n                        Volunteer's city, from the statics database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:151\n                            \n                        \n\n                \n                    \n                        Volunteer's additional comments/details\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:43\n                            \n                        \n\n                \n                    \n                        Volunteer's county, from the statics database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:100\n                            \n                        \n\n                \n                    \n                        Volunteer's courses: a list of all the course's (from the Courses Database) that belong to the current volunteer\nIf it's empty, than the volunteer has no specialisation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:161\n                            \n                        \n\n                \n                    \n                        Volunteer entry creation date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:33\n                            \n                        \n\n                \n                    \n                        Email address\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            job\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:156\n                            \n                        \n\n                \n                    \n                        Volunteer's job name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:18\n                            \n                        \n\n                \n                    \n                        Volunteer's name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organisation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:74\n                            \n                        \n\n                \n                    \n                        Volunteer's organisation; Can either be an object from the Organisation's database\nor 'null', in the second case it means that the volunteer has the 'Neafiliat' status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:38\n                            \n                        \n\n                \n                    \n                        Phone number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:23\n                            \n                        \n\n                \n                    \n                        Volunteer name without romanian special characters (diacritics)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ssn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:28\n                            \n                        \n\n                \n                    \n                        Volunteer's ssn code (CNP)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:176\n                            \n                        \n\n                \n                    \n                        Database type, in this case 'volunteers'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:166\n                            \n                        \n\n                \n                    \n                        The date of the last update\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Volunteer {\n    /**\n     * Volunteer's id\n     */\n    _id: string;\n\n    /**\n     * CouchDB parameter; it is automatically set\n     */\n    _rev: string;\n\n    /**\n     * Volunteer's name\n     */\n    name: string;\n\n    /**\n     * Volunteer name without romanian special characters (diacritics)\n     */\n    slug: string;\n\n    /**\n     * Volunteer's ssn code (CNP)\n     */\n    ssn: string;\n\n    /**\n     * Email address\n     */\n    email: string;\n\n    /**\n     * Phone number\n     */\n    phone: string;\n\n    /**\n     * Volunteer's county, from the statics database\n     */\n    county: {\n        /**\n         * County id\n         */\n        _id: string;\n\n        /**\n         * County name\n         */\n        name: string;\n    };\n\n    /**\n     * Volunteer's city, from the statics database\n     */\n    city: {\n        /**\n         * City id\n         */\n        _id: string;\n\n        /**\n         * City name\n         */\n        name: string;\n    };\n\n    /**\n     * Volunteer's organisation; Can either be an object from the Organisation's database\n     * or 'null', in the second case it means that the volunteer has the 'Neafiliat' status\n     */\n    organisation: {\n        /**\n         * Organisation's id\n         */\n       _id: string,\n\n       /**\n        * Organisation's name\n        */\n       name: string,\n\n       /**\n        * Organisation's slug (name without diacritics)\n        */\n       slug: string,\n\n       /**\n        * Organisation's website\n        */\n       website: string\n    };\n\n    /**\n     * Volunteer's courses: a list of all the course's (from the Courses Database) that belong to the current volunteer\n     * If it's empty, than the volunteer has no specialisation\n     */\n    courses: {\n        /**\n         * Course name object, from the course_name Database\n         */\n        course_name: {\n            /**\n             * Course name id\n             */\n            _id: string;\n\n            /**\n             * Course name\n             */\n            name: string;\n\n            /**\n             * Course name slug\n             */\n            slug: string;\n        }\n\n        /**\n         * Course obtained date\n         */\n        obtained: string;\n\n        /**\n         * Course acredited organisation from the acreditors database\n         */\n        acredited: {\n            /**\n             * Acreditor organisation id\n             */\n            _id: string;\n\n            /**\n             * Acreditor organisation name\n             */\n            name: string;\n        }\n    }[];\n\n    /**\n     * Volunteer's allocation status: if the value is null then the volunteer has never been allocated before,\n     * otherwise it contains the id of the volunteer's last allocation entry from the Allocations Database\n     */\n    allocation: string;\n\n    /**\n     * Volunteer's additional comments/details\n     */\n    comments: string;\n\n    /**\n     * Volunteer's job name\n     */\n    job: string;\n\n    /**\n     * Volunteer entry creation date\n     */\n    created_at: any;\n\n    /**\n     * The date of the last update\n     */\n    updated_at: any;\n\n    /**\n     * The id of the user (in the mobile case the rescue officer) that added the current volunteer in the database\n     */\n    added_by: number;\n\n    /**\n     * Database type, in this case 'volunteers'\n     */\n    type: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VolunteerPage.html":{"url":"components/VolunteerPage.html","title":"component - VolunteerPage","body":"\n                   \n\n\n\n\n\n  Components\n  VolunteerPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/volunteer/volunteer.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-volunteer\n            \n\n            \n                styleUrls\n                ./volunteer.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./volunteer.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-volunteer',\n  templateUrl: './volunteer.page.html',\n  styleUrls: ['./volunteer.page.scss'],\n})\n\n/**\n * The main page for all volunteer related pages (add, list, validate, send messages)\n */\nexport class VolunteerPage { }\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./volunteer.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VolunteerPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VolunteerPageModule.html":{"url":"modules/VolunteerPageModule.html","title":"module - VolunteerPageModule","body":"\n                   \n\n\n\n\n    Modules\n    VolunteerPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VolunteerPageModule\n\n\n\ncluster_VolunteerPageModule_declarations\n\n\n\n\nAddVolunteerComponent\n\nAddVolunteerComponent\n\n\n\nVolunteerPageModule\n\nVolunteerPageModule\n\nVolunteerPageModule -->\n\nAddVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nListVolunteerComponent\n\nListVolunteerComponent\n\nVolunteerPageModule -->\n\nListVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nSendMessageComponent\n\nSendMessageComponent\n\nVolunteerPageModule -->\n\nSendMessageComponent->VolunteerPageModule\n\n\n\n\n\nValidateVolunteerComponent\n\nValidateVolunteerComponent\n\nVolunteerPageModule -->\n\nValidateVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nVolunteerPage\n\nVolunteerPage\n\nVolunteerPageModule -->\n\nVolunteerPage->VolunteerPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/volunteer/volunteer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddVolunteerComponent\n                        \n                        \n                            ListVolunteerComponent\n                        \n                        \n                            SendMessageComponent\n                        \n                        \n                            ValidateVolunteerComponent\n                        \n                        \n                            VolunteerPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { VolunteerPage } from './volunteer.page';\nimport { AddVolunteerComponent } from './add-volunteer/add-volunteer.component';\nimport { ListVolunteerComponent } from './list-volunteer/list-volunteer.component';\nimport { ValidateVolunteerComponent } from './validate-volunteer/validate-volunteer.component';\nimport { AuthenticationGuard } from '../../core/authentication/authentication.guard';\nimport { SendMessageComponent } from './send-message/send-message.component';\n\n/**\n * All routes that are derivated from '/volunteers' and their respective components\n */\nconst routes: Routes = [\n  {\n    path: '',\n    component: VolunteerPage,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'add',\n    component: AddVolunteerComponent,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'list',\n    component: ListVolunteerComponent,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'validate',\n    component: ValidateVolunteerComponent,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'send',\n    component: SendMessageComponent,\n    canActivate: [AuthenticationGuard]\n  }\n\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n  ],\n  declarations: [\n    VolunteerPage,\n    AddVolunteerComponent,\n    ListVolunteerComponent,\n    ValidateVolunteerComponent,\n    SendMessageComponent\n  ]\n})\n\n/**\n * The volunteer components module\n */\nexport class VolunteerPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VolunteerService.html":{"url":"injectables/VolunteerService.html","title":"injectable - VolunteerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  VolunteerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/volunteer.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for volunteer related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allocateVolunteer\n                            \n                            \n                                createVolunteer\n                            \n                            \n                                deleteVolunteerById\n                            \n                            \n                                filter\n                            \n                            \n                                getVolunteerById\n                            \n                            \n                                getVolunteerBySsn\n                            \n                            \n                                getVolunteers\n                            \n                            \n                                    Private\n                                removeSpecialChars\n                            \n                            \n                                search\n                            \n                            \n                                updateVolunteer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/volunteer.service.ts:35\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Volunteers Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                        CourseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for course related operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allocateVolunteer\n                        \n                        \n                    \n                \n            \n            \n                \nallocateVolunteer(allocationId: string, volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:294\n                \n            \n\n\n            \n                \n                    Searches for a volunteer with the given volunteer id and allocates it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    allocationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Last allocation id\n\n                                    \n                                \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createVolunteer\n                        \n                        \n                    \n                \n            \n            \n                \ncreateVolunteer(name: string, ssn: string, phone: string, county: any, city: any, organisation: any, course: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:163\n                \n            \n\n\n            \n                \n                    Creates a volunteer entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's name\n\n                                    \n                                \n                                \n                                    ssn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's ssn (Social Security Number)\n\n                                    \n                                \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's phone number\n\n                                    \n                                \n                                \n                                    county\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's county\n\n                                    \n                                \n                                \n                                    city\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's city\n\n                                    \n                                \n                                \n                                    organisation\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object value containing the new volunteer's organisation\nEither contains an object with the following properties {id, name, website}, or it's null\n\n                                    \n                                \n                                \n                                    course\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer's course with properties: {id, name, acredited, obtained}\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with the created object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteVolunteerById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteVolunteerById(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:238\n                \n            \n\n\n            \n                \n                    Deletes an entry by its id from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The volunteer id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter(county: any, organisation: any, course: any, page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:253\n                \n            \n\n\n            \n                \n                    Filters local Volunteers database by the given parameters' values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    county\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        County object\n\n                                    \n                                \n                                \n                                    organisation\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    course\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course name object\n\n                                    \n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A number defining the current page of volunteers from the total list (used to paginate the response)\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of volunteers per page\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all volunteers matching the filters\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolunteerById\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolunteerById(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:128\n                \n            \n\n\n            \n                \n                    Finds a volunteer by its id in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer's id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the volunteer with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolunteerBySsn\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolunteerBySsn(ssn: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:142\n                \n            \n\n\n            \n                \n                    Finds a volunteer by its ssn in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ssn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A ssn code\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the volunteer with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolunteers\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolunteers(page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:73\n                \n            \n\n\n            \n                \n                    Getter method for all volunteers from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A number defining the current page of volunteers from the total list (used to paginate the response)\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of volunteers per page\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all volunteers\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            removeSpecialChars\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeSpecialChars(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:307\n                \n            \n\n\n            \n                \n                    Removes diacritics from a string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A string with diacritics\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the new string, without diacritics\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(keyword: string, page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:93\n                \n            \n\n\n            \n                \n                    Searches for all volunteers from the local database whose name,ssn or organisation name matches the keyword\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    keyword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The string used for search\n\n                                    \n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A number defining the current page of volunteers from the total list (used to paginate the response)\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of volunteers per page\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all volunteers\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateVolunteer\n                        \n                        \n                    \n                \n            \n            \n                \nupdateVolunteer(volunteer: Volunteer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:215\n                \n            \n\n\n            \n                \n                    Updates a volunteer entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteer\n                                    \n                                                Volunteer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new volunteer entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'volunteers'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/volunteer.service.ts:35\n                            \n                        \n\n                \n                    \n                        Table type\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { Volunteer } from '../model/volunteer.model';\nimport { from, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CourseService } from './course.service';\nimport * as moment from 'moment';\n\n/**\n * Reference for local PouchDB Volunteers Database\n */\nconst localDB = new PouchDB('volunteers');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Volunteers Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/volunteers');\n\n/**\n * Provider for volunteer related operations\n */\n@Injectable()\nexport class VolunteerService {\n\n  /**\n   * Table type\n   */\n  private type = 'volunteers';\n\n   /**\n    * Class constructor, sets the synchronization options for CouchDB and PouchDB Volunteers Database\n    * @param courseService Provider for course related operations\n    */\n  constructor(private courseService: CourseService) {\n    const options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);\n\n    localDB.createIndex({\n      index: {\n        fields: [\n          'name',\n          'slug',\n          'ssn',\n          'organisation.slug',\n          'course.[].course_name_id',\n          'organisation._id',\n          'county._id',\n          'city._id',\n          'job',\n          'comments'\n      ]}\n    });\n   }\n\n  /**\n   * Getter method for all volunteers from the local database\n   * @param page A number defining the current page of volunteers from the total list (used to paginate the response)\n   * @param limit The number of volunteers per page\n   * @returns An Observable with all volunteers\n   */\n  getVolunteers(page: number, limit: number): Observable {\n    const skip = page * limit;\n\n    return from(localDB.find({\n      selector: {\n          type: this.type\n      },\n      limit,\n      include_docs: true,\n      skip,\n    }));\n  }\n\n  /**\n   * Searches for all volunteers from the local database whose name,ssn or organisation name matches the keyword\n   * @param keyword The string used for search\n   * @param page A number defining the current page of volunteers from the total list (used to paginate the response)\n   * @param limit The number of volunteers per page\n   * @returns An Observable with all volunteers\n   */\n  search(keyword: string, page: number, limit: number): Observable {\n    const skip = page * limit;\n    const pattern = new RegExp('.*' + keyword + '.*', 'ig');\n    return from(localDB.find({\n      selector: {\n        $and: [\n          {\n            $or: [\n              {\n                slug: {$regex: pattern},\n              },\n              {\n                ssn: {$regex: pattern},\n              },\n              {\n                'organisation.slug': {$regex: pattern},\n              },\n            ]\n          },\n          {\n            type: this.type\n          }\n        ]\n      },\n      limit,\n      include_docs: true,\n      skip,\n    }));\n  }\n\n   /**\n    * Finds a volunteer by its id in the local database\n    * @param volunteerId Volunteer's id\n    * @returns An Observable containing the volunteer with that id\n    */\n  getVolunteerById(volunteerId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        _id: {$eq: volunteerId},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   * Finds a volunteer by its ssn in the local database\n   * @param ssn A ssn code\n   * @returns An Observable containing the volunteer with that id\n   */\n  getVolunteerBySsn(ssn: string): Observable {\n    return from(localDB.find({\n      selector: {\n        ssn: {$eq: ssn},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   *  Creates a volunteer entry in the local database\n   * @param name String value containing the new volunteer's name\n   * @param ssn String value containing the new volunteer's ssn (Social Security Number)\n   * @param phone String value containing the new volunteer's phone number\n   * @param county String value containing the new volunteer's county\n   * @param city String value containing the new volunteer's city\n   * @param organisation Object value containing the new volunteer's organisation\n   * Either contains an object with the following properties {id, name, website}, or it's null\n   * @param course Volunteer's course with properties: {id, name, acredited, obtained}\n   * @returns An Observable with the created object\n   */\n  createVolunteer(name: string, ssn: string, phone: string, county: any, city: any, organisation: any, course: any): Observable {\n    const volunteer = new Volunteer();\n    volunteer.name = name;\n    volunteer.ssn = ssn;\n    volunteer.county = {\n      _id: county._id,\n      name: county.name\n    };\n    volunteer.city = {\n      _id: city._id,\n      name: city.name\n    };\n    volunteer.created_at = moment().format('Y-MM-DD HH:mm:ss');\n    volunteer.updated_at = moment().format('Y-MM-DD HH:mm:ss');\n    volunteer.allocation = '';\n    volunteer.phone = phone;\n    volunteer.slug = this.removeSpecialChars(name);\n    volunteer.type = this.type;\n\n    if (organisation) {\n      volunteer.organisation = {\n        _id: organisation._id,\n        name: organisation.name,\n        website: organisation.website,\n        slug: this.removeSpecialChars(organisation.name)\n      };\n    } else {\n      volunteer.organisation = null;\n    }\n\n    volunteer.courses = [];\n\n    if (course && course._id) {\n      const newCourse = {\n        course_name : {\n          _id: course._id,\n          name: course.name,\n          slug: course.slug\n        },\n        obtained: null,\n        acredited: null\n      };\n      volunteer.courses.push(newCourse);\n    }\n\n    return from(localDB.post(volunteer));\n  }\n\n   /**\n    * Updates a volunteer entry in the local database\n    * @param volunteer The new volunteer entry\n    */\n  updateVolunteer(volunteer: Volunteer) {\n    localDB.get(volunteer._id).then((doc: Volunteer) => {\n      doc.name = volunteer.name ? volunteer.name : doc.name;\n      doc.slug = volunteer.name ? this.removeSpecialChars(volunteer.name) : doc.slug;\n      doc.ssn = volunteer.ssn ? volunteer.ssn : doc.ssn;\n      doc.email = volunteer.email ? volunteer.email : doc.email;\n      doc.phone = volunteer.phone ? volunteer.phone : doc.phone;\n      doc.county = volunteer.county ? volunteer.county : doc.county;\n      doc.city = volunteer.city ? volunteer.city : doc.city;\n      doc.organisation = volunteer.organisation ? volunteer.organisation : doc.organisation;\n      doc.courses = volunteer.courses ? volunteer.courses : doc.courses;\n      doc.comments = volunteer.comments ? volunteer.comments : doc.comments;\n      doc.job = volunteer.job ? volunteer.job : doc.job;\n      doc.allocation = volunteer.allocation ? volunteer.allocation : doc.allocation;\n      doc.updated_at = moment().format('Y-MM-DD HH:mm:ss');\n      localDB.put(doc);\n    });\n  }\n\n   /**\n    * Deletes an entry by its id from the local database\n    * @param volunteerId The volunteer id\n    */\n  deleteVolunteerById(volunteerId: string) {\n    localDB.get(volunteerId).then((doc) => {\n      localDB.remove(doc);\n    });\n  }\n\n  /**\n   * Filters local Volunteers database by the given parameters' values\n   * @param county County object\n   * @param organisationId Organisation object\n   * @param course Course name object\n   * @param page A number defining the current page of volunteers from the total list (used to paginate the response)\n   * @param limit The number of volunteers per page\n   * @returns An Observable with all volunteers matching the filters\n   */\n  filter(county: any, organisation: any, course: any, page: number, limit: number): Observable {\n    const skip = page * limit;\n    const selector: any = {$and : []};\n\n    selector['$and'].push( {\n      type: this.type,\n    });\n\n    if (!!county && !!county._id) {\n      selector['$and'].push( {\n        'county._id': {$eq: county._id},\n      });\n    }\n\n    if (!!organisation && organisation._id) {\n      selector['$and'].push(  {\n        'organisation._id': {$eq: organisation._id},\n      });\n    }\n\n    if (!!course && !!course._id) {\n      selector['$and'].push( {courses: {\n        $elemMatch : {\n          course_name_id: {$eq: course._id},\n          }\n        }\n      });\n    }\n\n    return from(localDB.find({\n      selector,\n      limit,\n      skip\n    }));\n  }\n\n  /**\n   * Searches for a volunteer with the given volunteer id and allocates it\n   * @param allocationId Last allocation id\n   * @param volunteerId Volunteer id\n   */\n  allocateVolunteer(allocationId: string, volunteerId: string) {\n    return localDB.get(volunteerId).then((doc) => {\n      doc.allocation = allocationId;\n      doc.updated_at = moment().format('Y-MM-DD HH:mm:ss');\n      localDB.put(doc);\n    });\n  }\n\n  /**\n   * Removes diacritics from a string\n   * @param text A string with diacritics\n   * @returns the new string, without diacritics\n   */\n  private removeSpecialChars(text: string): string {\n      const input   = 'ăâîșț';\n      const output  = 'aaist';\n      const regex = new RegExp('[' + input + ']', 'g');\n      const transl = {};\n\n      const lookup = (m) => transl[m] || m;\n\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.service.ts\n            \n            variable\n            credentialsKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/authentication/unauthenticated.guard.ts\n            \n            guard\n            UnauthenticatedGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/components/custom-selector/custom-selector.component.ts\n            \n            component\n            CustomSelectorComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/core/http/error-handler.interceptor.ts\n            \n            interceptor\n            ErrorHandlerInterceptor\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/http/error-handler.interceptor.ts\n            \n            variable\n            credentialsKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/http/request.interceptor.ts\n            \n            interceptor\n            RequestInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            clearData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            createCookie\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            getData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            getSessionName\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            readCookie\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            setData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/model/allocation.model.ts\n            \n            class\n            Allocation\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            interface\n            Credentials\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            interface\n            LoginPayload\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            interface\n            User\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/model/error.model.ts\n            \n            interface\n            ErrorMessageObject\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/model/error.model.ts\n            \n            interface\n            RootObject\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/model/organisation.model.ts\n            \n            class\n            Organisation\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                src/app/core/model/volunteer.model.ts\n            \n            class\n            Volunteer\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                src/app/core/route-reusable-strategy.ts\n            \n            class\n            RouteReusableStrategy\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/service/allocation.service.ts\n            \n            injectable\n            AllocationService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/service/allocation.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/allocation.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/course.service.ts\n            \n            injectable\n            CourseService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/service/course.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/course.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            class\n            DatabaseSyncService\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/core/service/error-message.service.ts\n            \n            injectable\n            ErrorMessageService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/service/organisation.service.ts\n            \n            injectable\n            OrganisationService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/service/organisation.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/organisation.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/statics.service.ts\n            \n            injectable\n            StaticsService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/service/statics.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/statics.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/volunteer.service.ts\n            \n            injectable\n            VolunteerService\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/core/service/volunteer.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/volunteer.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/email-validation.ts\n            \n            class\n            EmailValidation\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/validators/password-validation.ts\n            \n            class\n            PasswordValidation\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/validators/phone-validation.ts\n            \n            class\n            PhoneValidation\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/validators/ssn-validation.ts\n            \n            class\n            SsnValidation\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/pages/about/about.page.ts\n            \n            component\n            AboutPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/authentication.page.ts\n            \n            component\n            AuthenticationPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/logout/logout.component.ts\n            \n            component\n            LogoutComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/recover-password/recover-password.component.ts\n            \n            component\n            RecoverPasswordComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            component\n            HomePage\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/add-volunteer/add-volunteer.component.ts\n            \n            component\n            AddVolunteerComponent\n            \n                92 %\n                (26/28)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/list-volunteer/list-volunteer.component.ts\n            \n            component\n            ListVolunteerComponent\n            \n                94 %\n                (33/35)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/send-message/send-message.component.ts\n            \n            component\n            SendMessageComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts\n            \n            component\n            ValidateVolunteerComponent\n            \n                92 %\n                (24/26)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/volunteer.page.ts\n            \n            component\n            VolunteerPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.local.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^7.2.2\n        \n            @angular/core : ^7.2.2\n        \n            @angular/forms : ^7.2.2\n        \n            @angular/http : ^7.2.2\n        \n            @angular/platform-browser : ^7.2.2\n        \n            @angular/platform-browser-dynamic : ^7.2.2\n        \n            @angular/router : ^7.2.2\n        \n            @ionic-native/camera : ^5.9.0\n        \n            @ionic-native/core : ^5.11.0\n        \n            @ionic-native/date-picker : ^5.11.0\n        \n            @ionic-native/deeplinks : ^5.11.0\n        \n            @ionic-native/in-app-browser : ^5.12.0\n        \n            @ionic-native/sms : ^5.11.0\n        \n            @ionic-native/splash-screen : ^5.0.0\n        \n            @ionic-native/status-bar : ^5.9.0\n        \n            @ionic/angular : ^4.6.2\n        \n            @ionic/lab : ^2.0.6\n        \n            @types/pouchdb : ^6.4.0\n        \n            cordova-android : ^8.0.0\n        \n            cordova-ios : ^5.0.1\n        \n            cordova-plugin-camera : ^4.0.3\n        \n            cordova-plugin-datepicker : ^0.9.3\n        \n            cordova-plugin-inappbrowser : ^3.1.0\n        \n            cordova-sms-plugin : ^1.0.0\n        \n            core-js : ^2.5.4\n        \n            ionic-plugin-deeplinks : ^1.0.20\n        \n            moment : ^2.24.0\n        \n            pouchdb : ^7.1.1\n        \n            pouchdb-find : ^7.1.1\n        \n            rxjs : ~6.5.1\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            clearData   (src/.../local-storage.service.ts)\n                        \n                        \n                            createCookie   (src/.../local-storage.service.ts)\n                        \n                        \n                            getData   (src/.../local-storage.service.ts)\n                        \n                        \n                            getSessionName   (src/.../local-storage.service.ts)\n                        \n                        \n                            readCookie   (src/.../local-storage.service.ts)\n                        \n                        \n                            setData   (src/.../local-storage.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/local-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            clearData\n                        \n                        \n                    \n                \n            \n            \n                \nclearData(type: any)\n                \n            \n\n\n\n\n            \n                \n                    Clears data from storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Storage type (local or session)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createCookie\n                        \n                        \n                    \n                \n            \n            \n                \ncreateCookie(name: any, value: any, days: any)\n                \n            \n\n\n\n\n            \n                \n                    Creates a cookie entry\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie name\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie value\n\n                                    \n                                \n                                \n                                    days\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie expiration number of days\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData(type: any)\n                \n            \n\n\n\n\n            \n                \n                    Retrieves all data from storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Storage type (local or session)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSessionName\n                        \n                        \n                    \n                \n            \n            \n                \ngetSessionName()\n                \n            \n\n\n\n\n            \n                \n                    Getter for session name\n\n\n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readCookie\n                        \n                        \n                    \n                \n            \n            \n                \nreadCookie(name: any)\n                \n            \n\n\n\n\n            \n                \n                    Getter for a cookie document by its name\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie's name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setData\n                        \n                        \n                    \n                \n            \n            \n                \nsetData(type: any, data: any)\n                \n            \n\n\n\n\n            \n                \n                    Sets data into storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Storage type (local or session)\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Information that needs to be stored\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthenticationPageModule\n\n\n\ncluster_AuthenticationPageModule_declarations\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_VolunteerPageModule\n\n\n\ncluster_VolunteerPageModule_declarations\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nAuthenticationPage\n\nAuthenticationPage\n\n\n\nAuthenticationPageModule\n\nAuthenticationPageModule\n\nAuthenticationPageModule -->\n\nAuthenticationPage->AuthenticationPageModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthenticationPageModule -->\n\nLoginComponent->AuthenticationPageModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAuthenticationPageModule -->\n\nLogoutComponent->AuthenticationPageModule\n\n\n\n\n\nRecoverPasswordComponent\n\nRecoverPasswordComponent\n\nAuthenticationPageModule -->\n\nRecoverPasswordComponent->AuthenticationPageModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationPageModule -->\n\nResetPasswordComponent->AuthenticationPageModule\n\n\n\n\n\nCustomSelectorComponent\n\nCustomSelectorComponent\n\nCoreModule -->\n\nCustomSelectorComponent->CoreModule\n\n\n\n\n\nAllocationService\n\nAllocationService\n\nCoreModule -->\n\nAllocationService->CoreModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nCoreModule -->\n\nAuthenticationService->CoreModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nCoreModule -->\n\nCourseService->CoreModule\n\n\n\n\n\nErrorHandlerInterceptor\n\nErrorHandlerInterceptor\n\nCoreModule -->\n\nErrorHandlerInterceptor->CoreModule\n\n\n\n\n\nErrorMessageService\n\nErrorMessageService\n\nCoreModule -->\n\nErrorMessageService->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\nOrganisationService\n\nOrganisationService\n\nCoreModule -->\n\nOrganisationService->CoreModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\n\n\nStaticsService\n\nStaticsService\n\nCoreModule -->\n\nStaticsService->CoreModule\n\n\n\n\n\nVolunteerService\n\nVolunteerService\n\nCoreModule -->\n\nVolunteerService->CoreModule\n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nAddVolunteerComponent\n\nAddVolunteerComponent\n\n\n\nVolunteerPageModule\n\nVolunteerPageModule\n\nVolunteerPageModule -->\n\nAddVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nListVolunteerComponent\n\nListVolunteerComponent\n\nVolunteerPageModule -->\n\nListVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nSendMessageComponent\n\nSendMessageComponent\n\nVolunteerPageModule -->\n\nSendMessageComponent->VolunteerPageModule\n\n\n\n\n\nValidateVolunteerComponent\n\nValidateVolunteerComponent\n\nVolunteerPageModule -->\n\nValidateVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nVolunteerPage\n\nVolunteerPage\n\nVolunteerPageModule -->\n\nVolunteerPage->VolunteerPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        27 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AboutPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VolunteerPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (src/.../config.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            credentialsKey   (src/.../authentication.service.ts)\n                        \n                        \n                            credentialsKey   (src/.../error-handler.interceptor.ts)\n                        \n                        \n                            environment   (src/.../environment.local.ts)\n                        \n                        \n                            environment   (src/.../environment.dev.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            localDB   (src/.../allocation.service.ts)\n                        \n                        \n                            localDB   (src/.../course.service.ts)\n                        \n                        \n                            localDB   (src/.../organisation.service.ts)\n                        \n                        \n                            localDB   (src/.../volunteer.service.ts)\n                        \n                        \n                            localDB   (src/.../statics.service.ts)\n                        \n                        \n                            remoteDB   (src/.../allocation.service.ts)\n                        \n                        \n                            remoteDB   (src/.../course.service.ts)\n                        \n                        \n                            remoteDB   (src/.../organisation.service.ts)\n                        \n                        \n                            remoteDB   (src/.../volunteer.service.ts)\n                        \n                        \n                            remoteDB   (src/.../statics.service.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    /**\n     * Help phone number\n     */\n    phoneNumber: '89992142265'\n}\n                        \n                    \n\n                \n                    \n                        App config values\n\n                    \n                \n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/core/authentication/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            credentialsKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'credentials'\n                        \n                    \n\n                \n                    \n                        Stores the value of credentials' key\n\n                    \n                \n\n            \n        \n\n    src/app/core/http/error-handler.interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            credentialsKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'credentials'\n                        \n                    \n\n                \n                    \n                        Key that identifies the credentials\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.local.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'LOCAL',\n  production: false\n}\n                        \n                    \n\n                \n                    \n                        Local environment values\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.dev.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'DEV',\n  production: false,\n  serverBaseUrl: 'https://rvm-api.lxhost.ro',\n  serverUrl: 'https://rvm-api.lxhost.ro/api',\n  databaseURL: 'http://rvm.lxhost.ro:5984'\n}\n                        \n                    \n\n                \n                    \n                        Developement environment values\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'PROD',\n  production: true,\n  serverBaseUrl: 'https://rvm-api.lxhost.ro',\n  serverUrl: 'https://rvm-api.lxhost.ro/api',\n  databaseURL: 'http://rvm.lxhost.ro:5984'\n}\n                        \n                    \n\n                \n                    \n                        Production environment values\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'DEFAULT',\n  production: false,\n  serverBaseUrl: 'https://rvm-api.lxhost.ro',\n  serverUrl: 'https://rvm-api.lxhost.ro/api',\n  databaseURL: 'http://rvm.lxhost.ro:5984'\n}\n                        \n                    \n\n                \n                    \n                        Default environment values\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/allocation.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('allocations')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/allocations')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Allocations Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/course.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('courses')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Courses Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/courses')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Courses Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/organisation.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('organisations')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Organisations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/organisations')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Organisations Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/volunteer.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('volunteers')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/volunteers')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/statics.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('statics')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Statics Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/statics')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Statics Database\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
