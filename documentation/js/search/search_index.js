var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AboutPage.html",[0,0.645,1,1.225]],["body/components/AboutPage.html",[0,0.922,1,1.915,2,1.495,3,0.134,4,0.134,5,1.296,6,1.374,7,1.296,8,1.224,9,0.115,10,2.607,11,1.296,12,2.426,13,2.313,14,1.977,15,5.13,16,1.864,17,4.381,18,0.304,19,0.019,20,0.431,21,1.663,22,1.097,23,2.607,24,0.153,25,0.06,26,3.75,27,4.802,28,3.75,29,1.347,30,4.802,31,5.298,32,3.023,33,4.381,34,4.272,35,4.381,36,4.381,37,6.234,38,4.381,39,5.611,40,4.381,41,4.381,42,6.527,43,4.381,44,4.381,45,4.381,46,4.381,47,4.802,48,4.711,49,4.381,50,5.055,51,4.381,52,6.19,53,4.381,54,4.381,55,4.381,56,4.381,57,4.381,58,4.381,59,4.381,60,4.381,61,4.381,62,5.611,63,5.611,64,5.611,65,5.611,66,5.611,67,4.381,68,4.381,69,5.611,70,5.611,71,4.381,72,5.611,73,4.381,74,5.587,75,6.19,76,4.381,77,4.381,78,3.023,79,4.381,80,6.19,81,4.381,82,4.381,83,4.381,84,4.381,85,4.381,86,4.381,87,3.75,88,4.381,89,5.611,90,5.611,91,4.381,92,4.381,93,4.381,94,4.27,95,4.381,96,4.381,97,4.381,98,4.381,99,4.802,100,4.381,101,4.381,102,4.381,103,4.381,104,4.381,105,4.381,106,4.381,107,4.381,108,4.381,109,3.334,110,3.334,111,4.381,112,2.238,113,4.381,114,4.381,115,4.381,116,4.381,117,4.802,118,4.381,119,4.381,120,4.381,121,4.381,122,4.381,123,4.381,124,4.381,125,2.569,126,4.381,127,4.381,128,4.381,129,4.381,130,4.381,131,0.888,132,1.864,133,1.864,134,1.296,135,2.388,136,1.296,137,0.472,138,1.296,139,1.097,140,1.158,141,2.183,142,1.04,143,1.296,144,1.04,145,1.296,146,1.04,147,1.224,148,1.296,149,1.04,150,1.296,151,1.097,152,0.935,153,1.04,154,1.296,155,1.04,156,1.296,157,1.04,158,1.224,159,1.864,160,1.04,161,0.799,162,1.04,163,1.158,164,1.296,165,1.097,166,1.158,167,1.04,168,1.296,169,1.296,170,0.008,171,0.012,172,0.008]],["title/modules/AboutPageModule.html",[173,1.225,174,2.476]],["body/modules/AboutPageModule.html",[0,0.869,1,2.448,2,1.651,3,0.212,4,0.212,9,0.182,18,0.716,19,0.021,20,0.684,24,0.243,25,0.095,131,1.409,152,1.485,161,1.269,170,0.013,171,0.016,172,0.013,173,2.038,174,4.884,175,2.182,176,2.318,177,3.537,178,2.641,179,2.641,180,2.47,181,4.139,182,4.139,183,3.26,184,2.318,185,4.835,186,3.26,187,3.782,188,2.47,189,3.782,190,1.742,191,3.243,192,2.836,193,1.338,194,3.501,195,2.058,196,4.835,197,3.049,198,3.68,199,4.835,200,1.204,201,2.836,202,2.641,203,2.641,204,3.68,205,3.337,206,4.835,207,4.835]],["title/classes/Allocation.html",[25,0.071,208,2.104]],["body/classes/Allocation.html",[3,0.163,4,0.163,9,0.139,19,0.021,24,0.186,25,0.073,29,1.823,112,3.12,137,0.756,170,0.01,171,0.014,172,0.01,208,3.95,209,1.67,210,3.167,211,0.398,212,2.816,213,1.407,214,0.341,215,1.065,216,3.285,217,4.335,218,3.745,219,3.95,220,4.335,221,3.44,222,4.876,223,0.681,224,4.335,225,1.237,226,1.123,227,3.701,228,2.426,229,3.701,230,2.265,231,3.82,232,2.018,233,3.18,234,4.86,235,3.701,236,3.596,237,5.011,238,3.701,239,3.701,240,3.285,241,2.741,242,3.701,243,3.464,244,3.701,245,4.297,246,4.297,247,1.625,248,3.18,249,3.701,250,3.87,251,3.18,252,3.701,253,2.741,254,2.944,255,3.701,256,2.929,257,5.02]],["title/injectables/AllocationService.html",[258,0.894,259,2.273]],["body/injectables/AllocationService.html",[3,0.134,4,0.134,9,0.115,12,1.039,18,0.682,19,0.021,20,0.43,24,0.153,25,0.101,29,1.713,137,0.715,170,0.008,171,0.012,172,0.008,200,1.48,208,4.005,211,0.552,213,2.482,214,0.404,215,1.19,216,2.849,218,3.739,219,3.629,221,3.257,222,2.604,223,0.622,225,0.951,226,0.897,228,2.229,230,2.313,237,3.331,240,3.128,243,3.87,248,2.773,250,4.211,251,2.773,258,1.09,259,2.773,260,1.459,261,2.315,262,1.577,263,1.665,264,1.665,265,1.815,266,0.832,267,4.377,268,2.458,269,4.377,270,1.277,271,2.1,272,2.003,273,3.739,274,4.377,275,2.236,276,2.39,277,3.289,278,3.161,279,3.044,280,0.975,281,0.87,282,4.377,283,3.042,284,2.773,285,1.95,286,3.331,287,2.099,288,3.289,289,0.975,290,3.021,291,2.236,292,3.747,293,3.021,294,1.665,295,1.13,296,2.39,297,4.377,298,3.042,299,4.389,300,1.039,301,2.567,302,1.784,303,1.927,304,1.927,305,1.373,306,1.554,307,1.373,308,2.315,309,1.927,310,0.985,311,3.042,312,3.042,313,2.604,314,3.021,315,1.417,316,1.661,317,1.418,318,2.315,319,1.784,320,1.784,321,1.661,322,1.927,323,1.554,324,1.661,325,1.661,326,1.295,327,1.927,328,1.494,329,1.927,330,1.927,331,2.1,332,2.315,333,1.927,334,5.127,335,4.377,336,1.194,337,2.604,338,3.042,339,2.604,340,3.042,341,3.042,342,3.042,343,2.604,344,2.604,345,3.042,346,3.042,347,3.331,348,3.331,349,3.331,350,3.331,351,3.042,352,3.042,353,3.331,354,3.042,355,2.604,356,2.315,357,1.494,358,3.042,359,2.315,360,3.042,361,3.042,362,2.1,363,2.1,364,2.315,365,2.315,366,2.604]],["title/components/AppComponent.html",[0,0.645,142,1.225]],["body/components/AppComponent.html",[0,0.817,1,0.69,2,1.096,3,0.089,4,0.089,5,0.86,7,0.86,8,0.813,9,0.076,11,0.86,12,2.259,13,2.235,16,1.366,18,0.606,19,0.021,20,0.286,22,1.639,24,0.102,25,0.04,26,2.749,27,2.749,29,0.531,30,3.894,47,2.749,48,2.444,87,4.741,94,1.539,99,1.73,109,3.462,110,3.04,117,1.73,131,0.589,132,1.366,133,1.366,134,0.86,135,1.936,136,0.86,137,0.569,138,0.86,139,0.728,140,0.769,141,1.7,142,1.553,143,0.86,144,0.69,145,0.86,146,0.69,147,0.813,148,0.86,149,0.69,150,0.86,151,0.728,152,0.621,153,0.69,154,0.86,155,0.69,156,0.86,157,0.69,158,0.813,159,1.366,160,1.364,161,0.531,162,0.69,163,0.769,164,0.86,165,0.728,166,0.769,167,0.69,168,0.86,169,0.86,170,0.006,171,0.009,172,0.006,188,1.033,193,0.559,195,0.86,200,0.8,211,0.346,214,0.186,215,0.682,223,0.458,225,0.677,226,0.97,232,1.291,233,2.882,256,1.54,262,2.405,263,1.888,264,1.888,265,2.04,266,0.61,268,2.533,270,0.8,272,2.004,276,1.754,279,1.449,280,0.61,281,0.545,287,2.181,289,1.053,291,1.64,295,0.865,300,1.364,310,1.293,315,1.04,328,1.164,336,1.244,357,0.936,367,1.73,368,1.366,369,3.995,370,3.211,371,3.211,372,3.995,373,3.995,374,3.995,375,3.995,376,4.549,377,4.549,378,2.749,379,3.04,380,3.462,381,2.022,382,4.919,383,4.919,384,2.737,385,2.755,386,5.193,387,3.641,388,4.549,389,3.462,390,5.747,391,3.211,392,3.894,393,3.211,394,4.549,395,3.14,396,3.894,397,2.655,398,2.885,399,2.444,400,2.749,401,3.14,402,3.425,403,4.522,404,4.522,405,2.022,406,4.549,407,2.668,408,2.749,409,3.211,410,3.211,411,4.522,412,4.021,413,2.749,414,1.936,415,3.211,416,2.749,417,3.211,418,3.211,419,3.211,420,3.211,421,3.14,422,3.462,423,2.749,424,2.749,425,3.211,426,1.519,427,2.022,428,2.216,429,2.749,430,2.034,431,3.211,432,2.749,433,2.444,434,2.749,435,2.022,436,3.381,437,2.444,438,3.099,439,2.022,440,2.444,441,2.444,442,5.392,443,2.749,444,2.216,445,2.444,446,2.216,447,2.749,448,2.749,449,2.749,450,2.216,451,2.749,452,2.749,453,3.211,454,3.211,455,3.211,456,3.211,457,2.022,458,3.04,459,2.022,460,2.38,461,2.034,462,3.211,463,3.211,464,3.211,465,3.211,466,3.211,467,3.995,468,2.022,469,3.211,470,2.022,471,3.211,472,2.022,473,2.034,474,3.211,475,2.216,476,2.022,477,2.757,478,1.539,479,1.73,480,1.539,481,1.73,482,1.281,483,1.73,484,1.73,485,2.022,486,1.395,487,1.73,488,1.539,489,2.022,490,1.104,491,1.395,492,2.022,493,2.022,494,3.211,495,3.211,496,2.022,497,2.022,498,2.022,499,1.395,500,2.022,501,2.022,502,2.022,503,1.73,504,2.022,505,2.022,506,2.022,507,2.022,508,2.022,509,1.449,510,2.022,511,3.995,512,2.022,513,2.216,514,2.216,515,2.022,516,1.73,517,2.022,518,2.022,519,3.211,520,2.022,521,1.73,522,1.73,523,1.73,524,2.022,525,2.022,526,2.022,527,2.022,528,2.022,529,1.539,530,3.211,531,2.022,532,1.395,533,2.022,534,0.813,535,2.022,536,2.022,537,1.395,538,1.281,539,1.539,540,1.539,541,3.211]],["title/modules/AppModule.html",[173,1.225,542,2.476]],["body/modules/AppModule.html",[3,0.19,4,0.19,9,0.163,13,2.104,18,0.73,19,0.021,20,0.613,24,0.218,25,0.085,131,1.263,142,2.496,161,1.138,170,0.012,171,0.015,172,0.012,173,1.479,175,2.514,176,2.078,177,3.363,178,3.363,179,3.363,180,2.213,183,3.043,184,2.078,186,3.043,193,1.199,194,2.541,195,1.844,203,3.043,291,2.213,382,4.769,383,4.769,477,4.641,478,3.298,479,3.709,480,3.298,481,3.709,482,2.745,490,2.366,542,5.019,543,3.709,544,3.709,545,3.709,546,3.709,547,4.361,548,4.361,549,4.333,550,5.572,551,3.709,552,3.298,553,4.24,554,5.572,555,4.333,556,4.333,557,4.769,558,3.709,559,4.333,560,4.24,561,3.709,562,4.769,563,3.709,564,4.333,565,3.709,566,4.333,567,3.709,568,3.709,569,4.333,570,4.333,571,4.333,572,2.541,573,4.333]],["title/modules/AppRoutingModule.html",[173,1.225,547,2.273]],["body/modules/AppRoutingModule.html",[3,0.214,4,0.214,9,0.183,13,1.576,18,0.648,19,0.021,20,0.688,24,0.245,25,0.096,29,1.278,152,1.495,170,0.013,171,0.016,172,0.013,173,1.662,175,2.705,180,2.487,186,3.274,191,3.338,192,3.516,193,1.347,197,3.463,200,1.213,201,4.083,202,3.548,203,2.659,205,3.36,397,2.334,482,3.084,490,2.659,547,3.798,574,4.868,575,4.868,576,5.995,577,5.995,578,4.868,579,4.167,580,4.868,581,3.798,582,4.868,583,4.167,584,6.78,585,4.868,586,4.868,587,4.868,588,4.167,589,4.868,590,4.868,591,4.868,592,4.868]],["title/guards/AuthenticationGuard.html",[197,1.833,593,2.273]],["body/guards/AuthenticationGuard.html",[3,0.189,4,0.189,9,0.162,18,0.613,19,0.021,20,0.609,22,1.999,24,0.217,25,0.121,29,1.457,137,0.464,166,2.111,170,0.012,171,0.015,172,0.012,191,2.661,193,1.191,197,2.835,202,3.753,211,0.597,214,0.397,223,0.397,226,0.887,232,2.231,247,1.797,256,2.661,258,1.382,264,2.467,265,1.797,266,1.055,270,1.615,272,2.293,280,0.819,281,0.73,287,2.661,289,1.233,295,1.055,310,1.797,328,1.618,336,1.115,357,1.618,368,1.833,384,3.154,397,3.109,414,2.362,428,3.83,438,3.255,460,2.065,473,4.109,475,3.83,581,3.516,593,3.516,594,3.278,595,3.687,596,4.224,597,4.75,598,4.476,599,4.75,600,2.352,601,4.307,602,3.542,603,4.224,604,2.362,605,4.307,606,4.224,607,4.75,608,4.75,609,4.75,610,4.75,611,2.661,612,3.687,613,3.278,614,2.973,615,2.729]],["title/components/AuthenticationPage.html",[0,0.645,144,1.225]],["body/components/AuthenticationPage.html",[0,1.139,1,1.575,2,1.98,3,0.203,4,0.203,5,1.964,6,2.082,7,1.964,8,1.855,9,0.174,11,1.964,12,2.553,13,2.421,14,2.617,16,2.468,18,0.461,19,0.02,20,0.652,22,1.662,24,0.232,25,0.091,29,1.212,131,1.345,132,2.468,133,2.468,134,1.964,135,2.831,136,1.964,137,0.624,138,1.964,139,1.662,140,1.755,141,2.699,142,1.575,143,1.964,144,2.271,145,1.964,146,1.575,147,1.855,148,1.964,149,1.575,150,1.964,151,1.662,152,1.417,153,1.575,154,1.964,155,1.575,156,1.964,157,1.575,158,1.855,159,2.468,160,1.575,161,1.212,162,1.575,163,1.755,164,1.964,165,1.662,166,1.755,167,1.575,168,1.964,169,1.964,170,0.013,171,0.016,172,0.013,263,1.755,310,2.053,458,3.512,490,2.52,616,3.95,617,6.342,618,5.799,619,3.95,620,4.615,621,2.213]],["title/modules/AuthenticationPageModule.html",[173,1.225,622,2.476]],["body/modules/AuthenticationPageModule.html",[0,1.195,2,2.068,3,0.184,4,0.184,9,0.158,18,0.722,19,0.021,20,0.592,24,0.211,25,0.082,131,1.22,144,2.371,153,2.371,155,2.371,157,2.371,158,2.191,160,2.371,161,1.43,170,0.011,171,0.015,172,0.011,173,1.86,175,1.889,176,2.007,177,3.308,178,2.286,179,2.286,180,2.138,183,2.975,184,2.007,186,2.975,187,3.452,188,2.138,189,3.452,190,1.508,191,3.076,192,2.455,193,1.158,194,3.195,195,1.781,200,1.043,201,3.901,202,2.975,203,2.286,204,3.186,205,2.889,310,1.764,486,2.889,487,4.664,588,4.664,611,2.007,622,5.071,623,3.583,624,3.583,625,4.186,626,4.664,627,4.186,628,3.186,629,4.186,630,4.186,631,3.838,632,4.186,633,3.583,634,4.186,635,2.889,636,4.186,637,4.186]],["title/injectables/AuthenticationService.html",[258,0.894,272,1.161]],["body/injectables/AuthenticationService.html",[3,0.098,4,0.098,9,0.084,18,0.52,19,0.021,20,0.317,21,1.901,23,2.979,24,0.113,25,0.102,78,2.946,137,0.561,161,1.264,163,1.324,170,0.006,171,0.009,172,0.006,184,1.669,200,1.063,211,0.594,213,1.831,214,0.207,215,0.739,223,0.509,225,1.079,226,1.033,247,2.145,251,3.96,256,2.996,258,0.867,260,1.074,264,1.831,265,1.927,266,0.662,268,2.931,270,1.199,272,1.127,280,0.991,281,0.884,285,2.325,287,1.669,289,1.284,291,3.041,294,2.491,295,1.312,296,3.577,300,0.765,307,1.011,308,2.649,309,1.419,310,2.023,315,1.558,317,1.332,323,3.192,328,1.244,336,1.157,357,1.822,359,1.705,362,2.402,385,2.854,400,2.979,414,2.708,426,0.852,430,3.496,461,3.303,473,3.496,596,2.649,598,3.322,602,2.629,604,2.048,606,2.649,611,2.931,619,2.979,621,3.177,635,3.808,638,1.705,639,2.979,640,4.269,641,3.478,642,4.814,643,3.481,644,2.649,645,3.481,646,2.979,647,4.269,648,2.24,649,5.759,650,3.481,651,3.481,652,3.772,653,4.814,654,2.649,655,2.649,656,1.901,657,2.24,658,2.24,659,4.269,660,2.24,661,4.109,662,3.236,663,5.954,664,5.096,665,4.269,666,3.322,667,2.24,668,3.481,669,2.041,670,3.481,671,3.481,672,2.24,673,4.814,674,2.761,675,3.481,676,3.481,677,3.481,678,4.814,679,3.481,680,3.791,681,2.24,682,3.481,683,3.481,684,3.481,685,5.759,686,2.24,687,3.481,688,2.24,689,2.402,690,3.663,691,2.979,692,3.481,693,2.24,694,2.979,695,3.481,696,3.654,697,2.979,698,2.979,699,2.402,700,2.24,701,2.24,702,3.013,703,2.24,704,2.24,705,2.24,706,2.24,707,3.481,708,3.481,709,1.546,710,1.546,711,1.546,712,2.402,713,3.481,714,2.24,715,4.269,716,2.24,717,2.24,718,2.24,719,2.24,720,2.24,721,2.24,722,2.24,723,2.24,724,2.24,725,2.24,726,4.269,727,2.24,728,2.24,729,2.24,730,2.24,731,1.918,732,2.24,733,2.24,734,3.481,735,2.24,736,2.24]],["title/modules/CoreModule.html",[173,1.225,548,2.273]],["body/modules/CoreModule.html",[3,0.17,4,0.17,9,0.146,18,0.726,19,0.021,20,0.548,24,0.195,25,0.076,131,1.13,146,2.364,161,1.018,170,0.011,171,0.014,172,0.011,173,1.768,175,1.75,176,1.859,177,3.186,178,2.118,179,3.186,180,1.981,183,2.829,184,1.859,186,2.829,187,3.282,188,1.981,189,3.282,190,1.397,192,3.038,193,1.073,194,3.038,195,1.65,197,2.646,203,2.118,259,4.229,263,1.475,272,2.161,273,3.915,285,1.475,310,1.255,328,1.13,385,3.2,387,3.282,397,1.859,482,2.457,548,4.77,553,3.942,565,4.434,567,4.434,568,4.434,604,1.65,631,3.282,654,2.951,709,2.676,710,2.676,737,3.319,738,3.319,739,3.319,740,3.915,741,4.229,742,3.915,743,4.229,744,4.443,745,4.229,746,3.878,747,5.18,748,5.18,749,3.575,750,2.951,751,3.319,752,3.878,753,3.878,754,3.878,755,2.951,756,3.878,757,3.878,758,3.878,759,2.951,760,3.878]],["title/injectables/CourseService.html",[258,0.894,740,2.104]],["body/injectables/CourseService.html",[3,0.171,4,0.171,9,0.147,12,1.331,18,0.667,19,0.021,20,0.551,24,0.196,25,0.115,137,0.42,170,0.011,171,0.014,172,0.011,200,1.457,211,0.56,214,0.359,215,1.103,223,0.659,225,0.882,226,0.998,230,2.639,258,1.295,260,1.869,262,2.247,263,2.373,264,2.373,265,2.164,266,0.988,270,1.457,272,2.02,275,2.656,276,2.839,277,3.659,278,3.415,279,2.815,280,0.741,281,0.661,285,1.483,289,1.186,295,1.112,300,1.775,301,3.659,302,2.286,303,2.47,304,2.47,305,1.759,306,1.992,307,1.759,310,1.894,315,1.683,316,2.129,317,1.438,319,2.286,320,2.286,321,2.129,322,2.47,323,1.992,324,2.129,325,2.129,326,1.659,327,2.47,328,1.894,329,2.47,330,2.47,331,2.691,336,0.784,357,1.136,363,2.691,740,3.049,761,2.967,762,5.088,763,5.849,764,6.24,765,3.899,766,5.199,767,4.448,768,5.849,769,3.899,770,6.24,771,5.199,772,5.849,773,4.45,774,3.899,775,3.294,776,2.967,777,2.691,778,3.337]],["title/interfaces/Credentials.html",[641,1.72,779,1.527]],["body/interfaces/Credentials.html",[3,0.2,4,0.2,9,0.172,19,0.021,24,0.317,112,3.382,137,0.619,170,0.012,171,0.016,172,0.012,211,0.49,213,2.597,214,0.42,215,1.221,216,2.184,223,0.53,225,1.215,228,1.641,241,2.488,247,2.418,253,2.488,254,2.672,256,2.184,310,2.041,611,3.022,621,2.758,641,3.175,666,3.144,674,2.758,680,4.089,779,3.013,780,2.672,781,3.144,782,2.886,783,2.886,784,2.886,785,3.467,786,3.467,787,2.758,788,1.641,789,2.672,790,3.467,791,3.467,792,3.467]],["title/components/CustomSelectorComponent.html",[0,0.645,146,1.225]],["body/components/CustomSelectorComponent.html",[0,0.885,1,0.969,2,1.421,3,0.125,4,0.125,5,1.208,6,1.281,7,1.208,8,1.141,9,0.107,11,1.208,12,2.439,13,2.277,14,1.878,16,1.771,18,0.542,19,0.021,20,0.401,21,1.55,22,2.392,24,0.143,25,0.056,29,0.745,131,0.827,132,1.771,133,1.771,134,1.208,135,2.31,136,1.208,137,0.584,138,1.208,139,1.022,140,1.08,141,2.097,142,0.969,143,1.208,144,0.969,145,1.208,146,1.853,147,2.626,148,1.208,149,0.969,150,1.208,151,1.022,152,0.872,153,0.969,154,1.208,155,0.969,156,1.208,157,0.969,158,1.141,159,1.771,160,0.969,161,0.745,162,0.969,163,1.08,164,1.208,165,1.022,166,1.08,167,0.969,168,1.208,169,1.208,170,0.008,171,0.011,172,0.008,195,1.208,200,1.037,205,1.959,211,0.448,214,0.262,215,0.883,223,0.5,226,0.998,240,2.896,247,1.757,263,1.583,264,1.583,265,0.919,266,0.791,270,1.228,275,2.773,280,0.791,281,0.706,285,2.374,289,1.032,295,1.148,307,1.281,315,1.757,326,1.208,328,0.827,336,0.99,368,1.771,385,3.069,399,3.168,401,2.873,407,3.183,411,5.17,412,4.75,413,5.343,416,4.646,423,5.828,424,3.563,426,2.064,432,3.563,433,4.131,461,2.637,499,3.989,509,1.878,532,1.959,537,1.959,538,1.798,604,1.771,652,3.827,656,2.273,669,2.441,689,2.873,710,1.959,755,4.872,793,5.479,794,2.429,795,2.89,796,4.929,797,4.929,798,4.162,799,4.162,800,5.428,801,5.428,802,3.183,803,3.563,804,4.219,805,2.838,806,5.428,807,4.162,808,4.929,809,4.162,810,2.838,811,4.162,812,4.162,813,4.162,814,2.838,815,4.162,816,4.162,817,3.746,818,2.838,819,2.838,820,4.162,821,4.162,822,2.838,823,4.162,824,4.162,825,4.162,826,4.162,827,4.162,828,4.162,829,4.162,830,2.273,831,2.838,832,2.838,833,2.838,834,2.838,835,2.838,836,2.838,837,2.838,838,2.838,839,2.838,840,2.838,841,2.838,842,2.838,843,2.838,844,2.838,845,2.838,846,2.838,847,2.838,848,2.838,849,2.838,850,2.838,851,4.162,852,4.162,853,2.838,854,2.838,855,2.838,856,2.16,857,2.838,858,2.838,859,2.429,860,2.838,861,2.838,862,1.959,863,2.429,864,2.429,865,3.563,866,2.16,867,2.838]],["title/classes/DatabaseSyncService.html",[25,0.071,387,2.273]],["body/classes/DatabaseSyncService.html",[3,0.148,4,0.148,9,0.127,18,0.47,19,0.021,24,0.169,25,0.066,170,0.009,171,0.013,172,0.009,209,1.519,211,0.362,214,0.31,215,0.998,223,0.636,226,1.114,230,3.11,250,4.16,266,0.894,270,0.839,276,3.205,278,3.559,279,3.35,285,2.673,288,3.179,295,0.894,302,1.975,305,1.519,306,1.72,315,2.369,317,1.907,318,2.562,323,3.521,325,3.372,357,1.371,365,2.562,387,2.98,433,3.58,509,1.519,604,2.002,767,3.912,776,2.562,868,6.017,869,2.882,870,4.704,871,5.421,872,5.421,873,5.421,874,5.421,875,5.421,876,5.421,877,5.421,878,5.421,879,5.421,880,5.421,881,5.869,882,3.367,883,3.367,884,3.367,885,4.261,886,3.367,887,3.367,888,3.621,889,3.367,890,3.367,891,3.367,892,3.367,893,3.367,894,3.367,895,4.704,896,5.869,897,4.704,898,4.704,899,4.704,900,2.882,901,3.367,902,2.562,903,3.367,904,3.367,905,3.367,906,3.367,907,2.562,908,3.367,909,3.367,910,3.367,911,3.367,912,2.562,913,3.367,914,3.367,915,3.367,916,3.367,917,3.367,918,3.367,919,3.367,920,3.367,921,3.367,922,3.367,923,3.367,924,1.354]],["title/classes/EmailValidation.html",[25,0.071,925,2.273]],["body/classes/EmailValidation.html",[3,0.203,4,0.203,9,0.174,18,0.461,19,0.021,24,0.233,25,0.125,31,3.957,50,3.19,137,0.498,170,0.013,171,0.016,172,0.013,190,1.665,200,1.446,209,2.086,211,0.625,214,0.426,223,0.426,225,0.985,226,0.739,232,2.334,236,3.17,266,1.104,280,0.879,281,0.784,289,1.104,294,2.414,295,1.104,315,1.879,317,1.279,333,3.678,336,0.929,357,1.692,534,2.334,674,3.405,775,4.021,789,3.404,830,3.17,924,2.334,925,4.217,926,4.007,927,2.929,928,5.805,929,5.805,930,4.83,931,3.518,932,3.678,933,4.007,934,4.007,935,4.007,936,3.678,937,4.007,938,3.678,939,3.678,940,3.518,941,3.957,942,4.623,943,5.805,944,4.623,945,3.19,946,4.623,947,4.623,948,3.957,949,4.623,950,3.957,951,4.623,952,4.623,953,4.623]],["title/interceptors/ErrorHandlerInterceptor.html",[741,2.273,954,2.73]],["body/interceptors/ErrorHandlerInterceptor.html",[3,0.146,4,0.146,9,0.125,18,0.666,19,0.021,20,0.469,21,2.541,24,0.167,25,0.106,125,2.729,137,0.579,170,0.009,171,0.013,172,0.009,193,0.917,200,1.159,211,0.628,214,0.306,223,0.496,225,0.562,226,0.86,236,2.541,258,1.159,263,2.217,264,2.421,265,2.061,266,0.885,270,1.452,280,1.022,281,0.912,285,1.261,289,0.885,295,1.108,296,3.703,300,1.589,305,1.496,306,1.694,307,1.496,309,2.101,317,1.287,328,0.966,336,1.279,357,0.966,362,4.605,368,1.411,384,2.95,385,3.294,414,1.98,428,3.212,437,4.975,438,2.729,475,3.212,499,3.212,600,1.811,602,3.476,603,3.542,604,2.481,614,2.288,615,2.101,641,2.231,652,2.948,654,3.542,655,4.437,656,3.183,662,4.144,709,2.288,710,2.288,711,3.212,712,2.288,731,2.838,741,2.948,742,4.03,759,2.523,924,2.628,955,4.437,956,2.523,957,4.023,958,4.654,959,5.377,960,4.602,961,3.316,962,3.693,963,4.99,964,5.449,965,4.654,966,3.316,967,5.83,968,3.316,969,3.983,970,2.838,971,4.99,972,4.99,973,3.316,974,3.983,975,3.542,976,3.212,977,2.838,978,3.983,979,3.316,980,3.316,981,3.316,982,2.838,983,3.316,984,3.316,985,3.316,986,4.654,987,3.316,988,3.316,989,3.316,990,3.316,991,3.316,992,3.316,993,4.654,994,3.316,995,4.654,996,3.316,997,3.316,998,3.316,999,3.316,1000,3.316]],["title/interfaces/ErrorMessageObject.html",[779,1.527,1001,2.476]],["body/interfaces/ErrorMessageObject.html",[3,0.204,4,0.204,9,0.175,19,0.021,24,0.293,125,2.72,170,0.013,171,0.016,172,0.013,211,0.499,213,1.764,214,0.428,215,1.235,223,0.673,225,1.246,228,2.523,287,2.223,436,2.971,534,2.89,779,2.921,780,2.72,782,2.938,783,2.938,788,2.4,924,3.033,1001,4.015,1002,3.53,1003,5.072,1004,3.97,1005,3.201,1006,3.97,1007,4.979]],["title/injectables/ErrorMessageService.html",[258,0.894,742,2.104]],["body/injectables/ErrorMessageService.html",[3,0.17,4,0.17,9,0.146,18,0.387,19,0.021,20,0.547,24,0.195,25,0.076,137,0.417,170,0.011,171,0.014,172,0.011,211,0.557,214,0.357,215,1.098,223,0.653,225,1.189,226,1.037,228,1.395,233,3.279,258,1.289,260,1.856,262,1.864,265,1.887,266,0.984,268,3.361,270,0.965,275,2.644,280,0.736,281,0.657,289,1.269,295,1.183,300,1.767,317,1.432,336,1.171,357,1.129,414,2.481,426,1.968,436,2.644,461,3.279,499,4.295,534,2.081,604,2.202,646,4.43,669,3.035,696,4.99,697,5.326,698,4.43,702,2.826,742,3.035,900,3.314,924,3.004,969,5.711,1003,5.078,1008,5.711,1009,3.314,1010,4.585,1011,5.829,1012,6.222,1013,3.872,1014,5.175,1015,3.872,1016,5.175,1017,6.222,1018,3.872,1019,3.872,1020,5.175,1021,5.175,1022,3.872,1023,3.872,1024,5.175,1025,3.872,1026,3.872,1027,3.872,1028,5.175]],["title/components/HomePage.html",[0,0.645,149,1.225]],["body/components/HomePage.html",[0,0.947,1,1.091,2,1.548,3,0.14,4,0.14,5,1.36,6,1.442,7,1.36,8,1.285,9,0.12,11,1.36,12,2.443,13,2.328,14,2.046,16,1.93,18,0.453,19,0.021,20,0.452,22,2.066,24,0.161,25,0.063,29,0.839,109,4.365,131,0.932,132,1.93,133,1.93,134,1.36,135,2.441,136,1.36,137,0.617,138,1.36,139,1.151,140,1.216,141,2.243,142,1.091,143,1.36,144,1.091,145,1.36,146,1.091,147,1.285,148,1.36,149,1.958,150,1.36,151,1.151,152,1.619,153,1.091,154,1.36,155,1.091,156,1.36,157,1.091,158,1.285,159,1.93,160,1.091,161,0.839,162,1.091,163,1.216,164,1.36,165,1.151,166,1.216,167,1.091,168,1.36,169,1.36,170,0.009,171,0.012,172,0.009,193,0.884,211,0.488,214,0.295,215,0.962,223,0.486,225,1.027,226,0.843,247,1.961,262,1.633,266,0.862,270,0.796,280,0.862,281,0.769,289,0.608,290,3.13,295,0.608,300,1.091,317,1.254,326,1.36,336,0.911,378,3.881,384,2.919,395,3.13,397,2.75,398,3.132,403,4.909,404,5.384,426,1.216,434,3.881,436,3.558,442,5.658,443,3.881,444,3.13,445,3.451,446,3.13,447,3.881,448,3.881,449,3.881,450,3.13,451,3.881,452,3.881,490,1.746,521,2.736,522,2.736,523,2.736,581,3.339,598,2.206,600,1.746,690,3.451,804,2.736,817,3.13,856,2.433,862,2.206,863,4.511,864,4.511,865,5.658,866,2.433,1029,2.736,1030,5.27,1031,4.535,1032,6.056,1033,3.196,1034,3.196,1035,4.535,1036,3.881,1037,4.535,1038,4.535,1039,4.535,1040,4.535,1041,3.13,1042,4.535,1043,4.535,1044,3.196,1045,3.196,1046,4.535,1047,3.196,1048,3.196,1049,5.27,1050,5.27,1051,3.196,1052,3.196,1053,3.881,1054,4.535,1055,2.736,1056,2.736,1057,3.196,1058,3.196,1059,3.13,1060,3.881,1061,4.909,1062,3.196,1063,3.196,1064,3.196,1065,2.025,1066,3.196,1067,2.736,1068,4.535,1069,3.881,1070,2.736,1071,3.196]],["title/modules/HomePageModule.html",[173,1.225,1072,2.476]],["body/modules/HomePageModule.html",[0,0.89,3,0.218,4,0.218,9,0.187,18,0.72,19,0.021,20,0.7,22,1.784,24,0.249,25,0.097,131,1.444,149,2.461,161,1.3,170,0.013,171,0.017,172,0.013,173,2.068,175,2.235,176,2.375,177,3.575,178,2.705,179,2.705,180,2.53,183,3.309,184,2.375,186,3.309,187,3.839,188,2.53,189,3.839,190,1.784,192,2.905,193,1.37,194,3.553,195,2.108,197,3.095,198,3.77,201,2.905,202,2.705,203,2.705,490,2.705,1072,4.913,1073,4.24,1074,4.24,1075,4.953,1076,4.953,1077,4.953]],["title/injectables/LocalStorageService.html",[258,0.894,385,1.72]],["body/injectables/LocalStorageService.html",[3,0.152,4,0.152,9,0.13,18,0.346,19,0.021,20,0.489,21,1.89,112,2.81,137,0.746,147,1.392,170,0.009,171,0.013,172,0.009,200,0.862,201,2.03,211,0.639,214,0.319,215,1.018,223,0.575,225,1.161,226,1.058,240,1.66,248,2.193,258,0.862,260,1.66,262,1.247,264,1.824,266,0.912,268,3.386,270,1.194,280,1.046,281,0.933,284,2.193,285,1.824,289,1.302,295,1.186,317,0.957,336,1.355,357,1.731,385,1.66,399,4.747,509,1.562,529,2.634,572,2.03,602,2.619,639,2.963,652,4.392,669,2.812,702,1.89,711,4.993,788,1.247,957,3.309,975,3.649,1078,5.132,1079,2.634,1080,5.939,1081,5.502,1082,5.939,1083,4.795,1084,4.795,1085,4.795,1086,4.795,1087,2.963,1088,3.461,1089,3.461,1090,4.795,1091,4.795,1092,3.461,1093,3.649,1094,7.063,1095,4.795,1096,3.461,1097,4.104,1098,4.795,1099,3.461,1100,4.795,1101,4.795,1102,3.461,1103,4.795,1104,2.963,1105,5.523,1106,5.338,1107,2.963,1108,2.963,1109,6.237,1110,3.461,1111,3.461,1112,4.795,1113,3.461,1114,3.461,1115,4.104,1116,2.963,1117,2.963,1118,3.461,1119,3.461,1120,3.461,1121,3.461,1122,3.461,1123,3.461,1124,3.461,1125,3.461,1126,3.461,1127,3.461]],["title/components/LoginComponent.html",[0,0.645,153,1.225]],["body/components/LoginComponent.html",[0,0.993,1,1.007,2,1.462,3,0.13,4,0.13,5,1.256,6,1.331,7,1.256,8,1.186,9,0.111,11,1.256,12,2.415,13,2.29,14,1.932,16,1.822,18,0.611,19,0.021,20,0.417,22,2.275,24,0.149,25,0.099,29,0.775,50,2.955,131,0.86,132,1.822,133,1.822,134,1.256,135,2.353,136,1.256,137,0.543,138,1.256,139,1.063,140,1.122,141,2.144,142,1.007,143,1.256,144,1.007,145,1.256,146,1.007,147,1.186,148,1.256,149,1.007,150,1.256,151,1.063,152,0.906,153,1.887,154,1.256,155,1.007,156,1.256,157,1.007,158,1.186,159,1.822,160,1.007,161,0.775,162,1.007,163,1.122,164,1.256,165,1.063,166,1.122,167,1.007,168,1.256,169,1.256,170,0.008,171,0.012,172,0.008,190,1.063,193,0.816,211,0.318,214,0.272,215,0.909,223,0.465,225,0.726,226,1.01,241,2.338,247,1.386,256,2.053,262,2.205,263,1.628,265,1.901,266,0.814,270,1.255,272,2.095,280,0.561,281,0.5,289,0.561,294,1.122,295,0.958,300,1.007,309,1.869,310,1.982,326,1.256,328,1.611,336,1.013,359,2.245,368,1.822,384,2.85,397,2.416,398,2.338,402,2.955,407,3.242,426,1.917,438,2.511,460,2.936,491,4.052,513,2.036,514,2.036,534,2.223,572,2.511,581,2.713,600,1.611,604,1.822,611,3.029,615,1.869,621,1.415,641,2.815,656,2.338,674,2.416,795,2.955,802,3.242,924,2.36,925,1.869,926,2.036,936,2.713,1041,2.955,1065,2.713,1128,2.525,1129,5.039,1130,4.282,1131,4.468,1132,5.039,1133,5.529,1134,5.529,1135,5.539,1136,4.282,1137,4.282,1138,4.466,1139,4.282,1140,2.951,1141,2.951,1142,2.951,1143,3.835,1144,3.665,1145,2.951,1146,4.282,1147,4.282,1148,4.282,1149,4.282,1150,4.282,1151,3.478,1152,2.951,1153,2.036,1154,4.282,1155,2.036,1156,2.951,1157,2.951,1158,2.951,1159,2.525,1160,2.955,1161,2.525,1162,3.835,1163,2.951,1164,2.951,1165,2.951,1166,2.951,1167,2.951,1168,3.258,1169,2.951,1170,2.951,1171,3.665,1172,3.665,1173,4.282,1174,4.282,1175,3.665]],["title/interfaces/LoginPayload.html",[779,1.527,784,2.273]],["body/interfaces/LoginPayload.html",[3,0.2,4,0.2,9,0.172,19,0.021,24,0.317,112,3.382,137,0.619,170,0.012,171,0.016,172,0.012,211,0.49,213,2.398,214,0.42,215,1.221,216,2.184,223,0.53,225,1.235,228,1.641,241,2.488,247,2.357,253,2.488,254,2.672,256,2.184,310,1.862,611,3.343,621,3.343,641,2.758,666,3.97,674,2.758,680,3.373,779,3.013,780,2.672,781,3.144,782,2.886,783,2.886,784,3.644,785,4.378,786,5.039,787,2.758,788,1.641,789,2.672,790,3.467,791,3.467,792,3.467]],["title/components/LogoutComponent.html",[0,0.645,155,1.225]],["body/components/LogoutComponent.html",[0,1.117,1,1.32,2,1.765,3,0.17,4,0.17,5,1.646,6,1.745,7,1.646,8,1.555,9,0.146,11,1.646,12,2.504,13,2.374,14,2.333,16,2.2,18,0.581,19,0.021,20,0.547,24,0.195,25,0.114,29,1.015,131,1.127,132,2.2,133,2.2,134,1.646,135,2.647,136,1.646,137,0.627,138,1.646,139,1.393,140,1.471,141,2.479,142,1.32,143,1.646,144,1.32,145,1.646,146,1.32,147,1.555,148,1.646,149,1.32,150,1.646,151,1.393,152,1.188,153,1.32,154,1.646,155,2.123,156,1.646,157,1.32,158,1.555,159,2.2,160,1.32,161,1.015,162,1.32,163,1.471,164,1.646,165,1.393,166,1.471,167,1.32,168,1.646,169,1.646,170,0.011,171,0.014,172,0.011,193,1.07,211,0.416,214,0.357,223,0.357,226,0.827,247,1.674,262,2.24,263,1.967,264,1.967,265,1.252,266,0.983,270,1.451,271,2.669,272,2.205,280,0.735,281,0.656,295,0.735,310,2.013,326,1.646,328,1.127,336,1.039,368,2.2,384,3.195,395,3.569,398,2.824,426,1.471,604,2.2,611,2.479,615,2.45,635,4.603,656,2.824,662,3.032,664,4.426,691,3.31,795,3.416,802,3.647,1036,3.31,1144,4.426,1155,2.669,1176,3.31,1177,5.825,1178,5.171,1179,3.867,1180,3.867,1181,5.171,1182,2.669,1183,3.867,1184,3.867,1185,3.867,1186,3.867,1187,3.867]],["title/classes/Organisation.html",[25,0.071,221,1.833]],["body/classes/Organisation.html",[3,0.141,4,0.141,9,0.121,13,1.472,19,0.021,24,0.161,25,0.063,78,3.137,112,2.934,137,0.756,170,0.009,171,0.012,172,0.009,209,1.447,211,0.345,212,2.441,213,2.008,214,0.296,215,0.965,216,3.019,217,4.018,218,3.798,219,3.798,220,4.018,221,3.637,223,0.679,224,4.018,225,1.263,226,1.145,228,2.332,230,2.051,231,3.459,232,1.827,233,2.88,234,4.018,240,3.019,241,2.482,247,1.86,253,2.482,254,2.666,279,2.841,287,2.907,288,3.369,289,0.864,293,4.185,301,1.881,321,3.137,436,2.322,674,2.179,787,2.179,788,1.155,789,3.693,885,3.964,976,3.137,1188,2.745,1189,4.519,1190,4.018,1191,5.28,1192,6.064,1193,4.185,1194,3.207,1195,3.207,1196,3.207,1197,3.207,1198,3.207,1199,5.035,1200,3.207,1201,3.891,1202,3.207,1203,4.546,1204,4.546,1205,3.207,1206,3.207,1207,4.546,1208,4.546,1209,3.207,1210,3.207,1211,3.207,1212,3.137,1213,3.137,1214,3.891,1215,3.459,1216,3.891,1217,3.207,1218,4.546,1219,4.546,1220,3.891,1221,3.207,1222,3.891,1223,3.207,1224,3.207,1225,5.744,1226,5.744,1227,3.207]],["title/injectables/OrganisationService.html",[258,0.894,743,2.273]],["body/injectables/OrganisationService.html",[3,0.111,4,0.111,9,0.095,12,1.568,18,0.617,19,0.021,20,0.356,24,0.127,25,0.09,137,0.76,170,0.007,171,0.01,172,0.007,200,1.607,211,0.666,213,1.449,214,0.351,215,0.809,216,1.209,221,3.707,223,0.636,225,1.224,226,1.012,228,2.323,230,2.073,240,2.964,248,2.414,258,0.949,260,1.209,262,1.372,263,1.449,264,1.449,265,1.872,266,0.724,270,1.144,271,1.74,272,2.049,275,1.946,276,2.081,277,3.003,278,2.954,279,3.112,280,1.141,281,1.018,284,2.414,285,2.555,286,2.9,289,0.873,290,3.533,295,1.263,296,3.793,300,0.861,301,2.235,302,1.478,303,1.597,304,1.597,305,1.137,306,1.288,307,1.137,310,0.816,314,2.63,315,1.657,316,1.377,317,1.784,319,1.478,320,1.478,321,1.377,322,1.597,323,1.288,324,1.377,325,1.377,326,1.073,327,1.597,328,1.602,329,1.597,330,1.597,331,1.74,332,1.918,333,1.597,336,1.207,337,2.158,347,2.9,348,2.9,349,2.9,350,2.9,353,3.896,356,3.896,357,1.602,363,3.17,364,2.9,426,1.449,430,2.414,509,1.137,702,2.081,743,2.414,777,1.74,778,2.158,830,2.081,885,4.523,907,1.918,962,2.414,1059,2.63,1093,2.9,1193,1.74,1199,3.896,1212,2.63,1213,3.991,1220,2.158,1228,1.918,1229,3.81,1230,3.81,1231,3.81,1232,3.81,1233,5.12,1234,3.261,1235,3.81,1236,3.81,1237,3.81,1238,2.521,1239,3.81,1240,2.521,1241,3.261,1242,4.706,1243,3.81,1244,2.521,1245,4.382,1246,3.81,1247,2.521,1248,4.594,1249,2.521,1250,3.261,1251,2.521,1252,3.81,1253,2.521,1254,2.521,1255,2.521,1256,2.158,1257,2.158,1258,2.521,1259,2.521,1260,2.521,1261,2.521,1262,2.521,1263,2.521,1264,2.521,1265,2.521,1266,3.261,1267,3.261,1268,2.158,1269,2.158,1270,2.521,1271,2.158,1272,2.158,1273,2.158,1274,2.158,1275,2.158,1276,2.158,1277,2.158,1278,2.158,1279,3.261,1280,2.158]],["title/classes/PasswordValidation.html",[25,0.071,1281,2.476]],["body/classes/PasswordValidation.html",[3,0.15,4,0.15,9,0.129,18,0.342,19,0.021,24,0.172,25,0.107,32,4.288,34,4.774,48,5.264,137,0.512,161,1.249,170,0.009,171,0.018,172,0.009,190,1.233,200,1.643,209,1.545,211,0.589,214,0.316,223,0.439,225,0.807,226,0.761,232,2.377,236,3.228,266,0.905,280,0.905,281,0.807,289,0.905,294,2.363,295,1.124,315,1.914,317,1.635,333,3.015,336,0.956,357,1.811,534,2.377,621,3.492,699,3.284,775,4.074,788,1.233,803,5.06,830,2.599,924,2.377,927,2.169,930,4.823,932,4.074,933,4.08,934,4.08,935,4.08,936,3.745,937,3.284,938,3.015,939,3.745,940,2.606,1215,4.894,1281,4.08,1282,4.163,1283,4.759,1284,4.759,1285,5.911,1286,5.06,1287,4.759,1288,4.759,1289,4.759,1290,3.424,1291,4.759,1292,4.759,1293,4.759,1294,3.424,1295,3.424,1296,3.424,1297,3.424,1298,6.212,1299,6.212,1300,6.212,1301,6.212,1302,6.212,1303,4.288,1304,6.212,1305,6.212,1306,6.212,1307,6.212,1308,6.212,1309,3.424,1310,3.424,1311,4.759,1312,4.759,1313,3.424,1314,3.424,1315,3.424,1316,3.424,1317,3.424,1318,3.424,1319,3.424]],["title/classes/PhoneValidation.html",[25,0.071,1320,2.73]],["body/classes/PhoneValidation.html",[3,0.203,4,0.203,9,0.174,18,0.461,19,0.021,24,0.233,25,0.125,137,0.498,170,0.013,171,0.016,172,0.013,190,1.665,200,1.446,209,2.086,211,0.625,214,0.426,223,0.426,225,0.985,226,0.739,232,2.334,236,3.17,266,1.104,280,0.879,281,0.784,289,1.104,294,2.414,295,1.104,315,1.879,317,1.279,336,0.929,357,1.347,509,2.086,534,2.334,775,4.021,787,3.288,788,2.091,830,3.635,924,2.334,927,2.929,930,4.83,931,3.518,932,4.217,933,4.007,934,4.007,935,4.007,936,3.678,937,4.007,938,3.678,939,3.678,940,3.518,941,3.957,945,3.19,1320,5.066,1321,4.969,1322,4.969,1323,5.805,1324,4.623,1325,4.623,1326,6.346,1327,4.969,1328,4.623,1329,5.805]],["title/components/RecoverPasswordComponent.html",[0,0.645,157,1.225]],["body/components/RecoverPasswordComponent.html",[0,0.984,1,0.988,2,1.441,3,0.127,4,0.127,5,1.231,6,1.305,7,1.231,8,1.163,9,0.109,11,1.231,12,2.408,13,2.283,14,1.905,16,1.796,18,0.607,19,0.021,20,0.409,22,1.973,24,0.146,25,0.098,29,0.76,34,2.913,37,3.613,50,3.439,94,2.202,110,2.202,131,0.843,132,1.796,133,1.796,134,1.231,135,2.331,136,1.231,137,0.59,138,1.231,139,1.042,140,1.1,141,2.121,142,0.988,143,1.231,144,0.988,145,1.231,146,0.988,147,1.163,148,1.231,149,0.988,150,1.231,151,1.042,152,0.889,153,0.988,154,1.231,155,0.988,156,1.231,157,1.87,158,2.717,159,1.796,160,0.988,161,0.76,162,0.988,163,1.1,164,1.231,165,1.042,166,1.1,167,0.988,168,1.231,169,1.231,170,0.008,171,0.012,172,0.008,190,1.042,193,0.8,195,1.231,200,0.721,211,0.454,214,0.267,215,0.896,223,0.505,225,0.988,226,1.004,232,1.697,262,1.52,265,1.367,266,0.802,270,1.241,272,2.159,280,0.802,281,0.716,289,0.802,294,1.895,295,0.947,300,1.441,315,1.773,317,1.168,326,1.231,328,0.843,336,1.101,368,1.796,379,3.793,380,3.212,384,2.962,389,4.898,398,2.305,401,2.913,402,4.334,407,2.475,421,2.913,422,3.212,426,1.605,440,3.212,441,3.212,460,2.626,491,4.02,513,1.997,514,2.913,532,1.997,534,2.524,537,1.997,538,1.833,539,2.202,540,2.202,600,1.58,614,1.997,621,2.793,628,4.898,644,4.169,661,2.913,662,2.475,674,2.626,795,2.923,802,3.213,924,2.003,925,1.833,926,1.997,948,2.477,950,2.477,962,2.674,1010,2.674,1041,2.913,1065,2.674,1131,4.433,1138,2.913,1143,2.202,1151,3.781,1153,1.997,1155,1.997,1160,1.997,1161,2.477,1162,3.793,1168,3.212,1171,3.613,1182,1.997,1330,5.509,1331,2.202,1332,4.265,1333,3.613,1334,4.265,1335,4.221,1336,2.893,1337,3.613,1338,2.893,1339,2.893,1340,2.893,1341,2.893,1342,3.613,1343,2.477,1344,2.893,1345,2.893,1346,2.893,1347,2.893,1348,2.477,1349,3.613,1350,2.893,1351,2.893,1352,2.893,1353,2.893,1354,2.893,1355,2.893,1356,2.893,1357,2.893,1358,2.893,1359,2.893,1360,2.477,1361,4.221,1362,3.613,1363,3.212]],["title/interceptors/RequestInterceptor.html",[744,2.273,954,2.73]],["body/interceptors/RequestInterceptor.html",[3,0.182,4,0.182,9,0.156,18,0.662,19,0.021,20,0.586,21,3.49,24,0.209,25,0.118,137,0.583,170,0.011,171,0.015,172,0.011,211,0.649,214,0.382,223,0.556,226,0.865,236,2.956,258,1.348,263,2.058,264,2.058,266,1.029,270,1.501,271,2.86,272,2.3,280,1.029,281,0.918,295,1.029,296,3.292,305,1.87,306,2.117,307,1.87,310,2.069,317,1.497,326,1.763,336,1.211,357,1.208,368,1.763,414,2.303,436,2.117,437,5.175,438,3.174,602,2.956,604,2.303,655,5.175,656,3.49,662,4.204,680,3.174,709,2.86,744,3.429,759,3.153,957,4.411,960,5.159,962,3.429,963,4.633,964,4.633,970,3.547,971,5.47,972,5.47,974,4.633,976,3.735,977,3.547,978,4.633,1069,3.547,1303,2.86,1364,3.547,1365,5.412,1366,6.027,1367,4.144,1368,4.144,1369,5.412,1370,4.144,1371,4.144,1372,4.144,1373,4.144,1374,5.412,1375,4.144,1376,4.144,1377,4.144,1378,4.144,1379,4.144,1380,4.144]],["title/components/ResetPasswordComponent.html",[0,0.645,160,1.225]],["body/components/ResetPasswordComponent.html",[0,0.908,1,0.84,2,1.277,3,0.108,4,0.108,5,1.047,6,1.11,7,1.047,8,0.989,9,0.093,11,1.047,12,2.345,13,2.224,14,1.688,16,1.592,18,0.572,19,0.021,20,0.348,22,2.21,24,0.124,25,0.048,29,0.646,32,1.698,74,2.105,131,0.717,132,1.592,133,1.592,134,1.047,135,2.152,136,1.047,137,0.585,138,1.047,139,0.886,140,0.935,141,1.926,142,0.84,143,1.047,144,0.84,145,1.047,146,0.84,147,0.989,148,1.047,149,0.84,150,1.047,151,0.886,152,0.755,153,0.84,154,1.047,155,0.84,156,1.047,157,0.84,158,0.989,159,1.592,160,1.726,161,1.755,162,0.84,163,0.935,164,1.047,165,0.886,166,0.935,167,0.84,168,1.047,169,1.047,170,0.007,171,0.01,172,0.007,184,1.793,190,0.886,193,0.68,195,1.047,200,0.613,211,0.487,214,0.227,215,0.794,223,0.549,225,1.087,226,1.041,232,1.504,247,1.637,262,1.959,265,1.637,266,0.711,268,1.793,270,0.613,272,2.075,280,0.86,281,0.767,289,0.86,294,0.935,295,1.034,300,0.84,315,1.854,328,0.717,336,1.196,368,1.592,379,3.444,380,2.846,384,3.016,389,4.669,397,2.746,398,2.471,401,2.581,402,4.109,407,2.965,414,1.592,421,3.489,422,3.848,426,1.923,440,2.846,441,2.846,460,2.424,486,4.559,491,3.754,513,1.698,514,2.581,532,1.698,534,2.715,537,1.698,538,1.558,539,1.872,540,1.872,572,2.193,600,1.343,613,1.872,614,1.698,621,2.941,635,2.581,644,3.848,661,2.581,662,2.193,669,2.193,680,3.19,690,2.846,795,2.654,802,2.965,924,2.394,932,1.558,962,2.37,1010,2.37,1041,3.489,1065,2.37,1131,3.444,1135,5.486,1138,2.581,1143,1.872,1151,3.123,1153,1.698,1155,1.698,1159,2.105,1160,2.581,1162,3.444,1168,2.846,1172,3.201,1175,3.201,1182,1.698,1281,1.698,1282,1.872,1286,2.105,1331,1.872,1332,3.873,1333,3.201,1334,3.873,1337,3.201,1343,2.105,1348,2.105,1349,2.105,1360,2.105,1362,3.201,1363,2.846,1381,5.654,1382,5.056,1383,3.74,1384,5.056,1385,3.74,1386,3.74,1387,3.74,1388,3.74,1389,2.46,1390,5.056,1391,3.74,1392,2.46,1393,3.74,1394,3.74,1395,2.46,1396,2.46,1397,3.74,1398,2.46,1399,3.74,1400,2.46,1401,2.46,1402,2.46,1403,2.46,1404,2.46,1405,2.46,1406,3.74,1407,3.74,1408,2.46,1409,2.46,1410,2.46,1411,2.46,1412,2.46,1413,2.46,1414,2.46,1415,2.46,1416,2.46,1417,2.46,1418,2.46,1419,2.46,1420,2.46,1421,2.46,1422,3.74,1423,3.74,1424,3.74,1425,3.74]],["title/interfaces/RootObject.html",[779,1.527,1005,2.476]],["body/interfaces/RootObject.html",[3,0.204,4,0.204,9,0.175,19,0.021,24,0.293,125,3.415,170,0.013,171,0.016,172,0.013,211,0.5,213,2.215,214,0.428,215,1.236,223,0.646,225,1.23,228,2.097,281,0.988,287,2.792,436,2.373,534,2.916,779,2.923,780,2.724,782,2.943,783,2.943,788,2.402,924,3.033,1001,3.206,1002,3.535,1003,3.535,1004,3.976,1005,4.019,1006,5.708,1007,5.998]],["title/classes/RouteReusableStrategy.html",[25,0.071,749,2.476]],["body/classes/RouteReusableStrategy.html",[3,0.145,4,0.145,8,1.862,9,0.124,18,0.329,19,0.021,24,0.166,25,0.065,137,0.659,140,1.761,170,0.009,171,0.013,172,0.009,193,0.911,209,1.486,211,0.684,214,0.304,223,0.565,226,0.979,266,0.88,268,3.427,280,1.164,281,1.039,294,2.533,295,1.266,328,1.35,336,1.311,357,1.694,397,3.613,414,2.92,426,1.761,429,5.873,430,4.347,460,3.045,473,4.024,553,4.076,572,2.716,689,3.196,749,3.196,750,4.834,751,5.993,1426,5.436,1427,2.818,1428,4.631,1429,4.631,1430,7.186,1431,4.631,1432,4.631,1433,3.964,1434,4.631,1435,4.631,1436,4.631,1437,4.631,1438,4.631,1439,5.356,1440,5.356,1441,4.631,1442,7.276,1443,3.293,1444,7.002,1445,6.351,1446,4.631,1447,3.293,1448,4.631,1449,3.293,1450,3.293,1451,5.812,1452,3.293,1453,6.124,1454,3.293,1455,5.812,1456,3.293,1457,4.631,1458,3.293,1459,3.293,1460,3.293]],["title/components/SendMessageComponent.html",[0,0.645,162,1.225]],["body/components/SendMessageComponent.html",[0,0.935,1,0.89,2,1.334,3,0.114,4,0.114,5,1.109,6,1.176,7,1.109,8,1.048,9,0.098,11,1.109,12,2.368,13,2.274,14,1.763,16,1.663,18,0.606,19,0.021,20,0.368,22,1.688,24,0.131,25,0.051,29,1.464,32,2.697,131,0.76,132,1.663,133,1.663,134,1.109,135,2.216,136,1.109,137,0.505,138,1.109,139,0.939,140,0.991,141,1.995,142,0.89,143,1.109,144,0.89,145,1.109,146,0.89,147,1.048,148,1.109,149,0.89,150,1.109,151,0.939,152,1.44,153,0.89,154,1.109,155,0.89,156,1.109,157,0.89,158,1.048,159,1.663,160,0.89,161,0.684,162,1.777,163,2.429,164,1.109,165,0.939,166,0.991,167,0.89,168,1.109,169,1.109,170,0.007,171,0.011,172,0.007,188,1.331,190,0.939,193,0.721,200,1.167,211,0.281,214,0.24,215,0.829,223,0.48,225,0.993,226,0.998,228,1.407,262,2.109,265,1.806,266,0.743,268,2.247,270,0.649,277,2.291,280,0.496,281,0.442,289,0.496,291,1.996,295,0.99,300,0.89,317,1.081,326,1.109,336,0.942,368,1.663,384,2.935,386,5.567,398,3.198,407,2.291,412,2.974,426,1.98,436,2.66,445,2.974,460,1.25,477,2.697,509,1.763,516,2.231,529,2.974,534,2.568,538,1.651,560,5.148,561,2.231,583,2.231,602,1.423,656,2.134,661,3.593,787,1.873,795,2.749,802,3.053,817,3.593,856,1.984,859,2.231,862,1.799,866,1.984,888,2.749,957,2.697,1010,2.476,1053,2.231,1055,4.012,1056,4.012,1059,1.799,1060,2.231,1061,2.231,1065,1.651,1067,4.457,1070,5.012,1087,3.344,1138,2.697,1151,3.593,1153,1.799,1160,1.799,1182,1.799,1342,3.344,1363,3.962,1461,5.466,1462,4.86,1463,2.231,1464,4.687,1465,3.907,1466,4.687,1467,4.687,1468,4.687,1469,5.207,1470,5.207,1471,5.207,1472,2.606,1473,3.907,1474,3.907,1475,2.606,1476,5.856,1477,4.012,1478,3.907,1479,3.907,1480,5.207,1481,3.907,1482,2.606,1483,3.907,1484,3.907,1485,2.606,1486,3.344,1487,3.907,1488,2.606,1489,3.907,1490,2.606,1491,2.606,1492,3.907,1493,2.231,1494,2.606,1495,2.606,1496,2.606,1497,2.606,1498,2.606,1499,2.606,1500,2.606,1501,2.606,1502,2.606,1503,2.606,1504,2.606,1505,2.606,1506,2.606,1507,2.606,1508,2.606,1509,2.606,1510,2.606,1511,2.606,1512,2.606,1513,2.231,1514,3.907,1515,2.606,1516,2.606,1517,3.907,1518,2.606,1519,5.207,1520,3.907,1521,3.907,1522,3.907,1523,2.606,1524,5.207,1525,2.606,1526,2.606,1527,3.907,1528,2.606,1529,3.907,1530,2.606,1531,2.606,1532,2.606,1533,2.606,1534,2.606,1535,2.606,1536,2.606,1537,2.606,1538,2.606,1539,2.606,1540,2.606,1541,2.606]],["title/classes/SsnValidation.html",[25,0.071,1542,2.73]],["body/classes/SsnValidation.html",[3,0.193,4,0.193,9,0.165,18,0.439,19,0.021,24,0.221,25,0.122,34,3.032,137,0.473,170,0.012,171,0.015,172,0.012,190,1.582,200,1.721,209,1.982,211,0.605,214,0.405,223,0.405,225,0.953,226,0.702,232,2.26,236,3.07,266,1.069,280,0.835,281,0.745,289,1.069,294,2.138,295,1.069,315,1.82,336,0.883,366,4.811,421,3.88,503,4.811,509,2.797,534,2.26,775,3.927,788,1.582,830,3.07,924,2.26,927,2.784,930,4.768,931,3.344,932,4.14,933,3.88,934,3.88,935,3.88,936,3.561,937,3.88,938,3.561,939,3.561,945,4.278,1303,3.88,1322,4.811,1327,4.811,1542,4.973,1543,4.811,1544,5.14,1545,5.306,1546,5.621,1547,4.394,1548,4.394,1549,4.394,1550,4.394,1551,4.394,1552,5.306,1553,5.306,1554,5.621,1555,5.621,1556,4.811,1557,4.394,1558,5.621,1559,4.394,1560,4.394,1561,4.394,1562,4.394,1563,5.621]],["title/injectables/StaticsService.html",[258,0.894,745,2.273]],["body/injectables/StaticsService.html",[3,0.161,4,0.161,9,0.138,18,0.635,19,0.021,20,0.518,24,0.185,25,0.111,28,5.209,137,0.395,152,2.1,170,0.01,171,0.014,172,0.01,200,1.412,211,0.537,214,0.338,215,1.059,218,2.926,219,3.569,223,0.619,225,1.08,226,1.018,228,1.797,230,2.558,258,1.243,260,1.758,262,1.797,266,0.948,268,3.148,270,1.586,275,2.548,276,2.724,277,3.569,278,3.354,279,2.746,280,0.697,281,0.622,285,1.395,288,3.733,289,0.948,291,3.109,294,1.395,295,1.157,296,3.786,300,1.703,302,2.151,303,2.323,304,2.323,305,1.655,306,1.873,307,1.655,315,1.615,316,2.003,317,1.38,319,2.151,320,2.151,321,2.003,322,2.323,323,1.873,324,2.003,325,2.003,327,2.323,328,1.774,329,2.323,330,2.323,336,0.737,357,1.454,702,3.323,745,3.161,777,2.531,817,3.443,912,2.791,1564,2.791,1565,4.989,1566,6.837,1567,7.01,1568,5.67,1569,5.67,1570,4.989,1571,6.086,1572,4.989,1573,4.989,1574,3.667,1575,6.086,1576,6.086,1577,3.667,1578,3.667,1579,6.086,1580,3.667,1581,3.667,1582,4.989,1583,3.667,1584,4.989,1585,3.667,1586,3.667]],["title/guards/UnauthenticatedGuard.html",[593,2.273,631,2.273]],["body/guards/UnauthenticatedGuard.html",[3,0.19,4,0.19,9,0.163,18,0.614,19,0.021,20,0.611,22,2.003,24,0.217,25,0.121,137,0.465,170,0.012,171,0.015,172,0.012,191,2.666,193,1.195,202,3.756,211,0.599,214,0.398,223,0.398,226,0.889,232,2.236,247,1.8,256,2.666,258,1.385,264,2.469,265,1.8,266,1.057,270,1.617,272,2.294,280,0.821,281,0.733,287,2.666,289,1.234,295,1.057,310,1.8,328,1.621,336,1.117,357,1.621,368,1.838,384,3.156,397,3.113,414,2.366,428,3.838,438,3.261,460,2.071,473,4.114,475,3.838,581,3.523,593,3.523,594,3.288,596,4.232,597,4.76,598,3.838,599,4.76,600,2.359,602,3.546,603,4.232,604,2.366,606,4.232,607,4.76,608,4.76,609,4.76,610,4.76,611,2.666,612,3.698,613,3.288,615,2.737,631,3.523,1587,3.698,1588,6.493,1589,4.32,1590,4.32,1591,4.32]],["title/interfaces/User.html",[247,1.161,779,1.527]],["body/interfaces/User.html",[3,0.187,4,0.187,9,0.161,19,0.021,24,0.308,112,3.68,137,0.738,170,0.012,171,0.015,172,0.012,211,0.459,213,2.458,214,0.394,215,1.171,216,3.099,223,0.632,225,1.238,228,1.987,241,3.013,247,2.408,253,3.013,254,3.236,256,2.645,281,0.936,310,1.786,611,2.931,621,2.645,641,2.645,666,2.946,674,3.287,680,3.236,779,2.969,780,2.503,781,2.946,782,2.704,783,2.704,784,2.704,785,3.248,786,3.248,787,3.287,788,1.987,789,3.236,790,4.919,791,4.199,792,4.919]],["title/classes/Volunteer.html",[25,0.071,29,0.942]],["body/classes/Volunteer.html",[3,0.119,4,0.119,9,0.102,19,0.021,24,0.136,25,0.053,29,1.843,78,2.771,112,2.893,125,2.355,137,0.776,152,1.233,170,0.007,171,0.011,172,0.007,208,3.604,209,1.22,211,0.291,212,2.057,213,2.016,214,0.249,215,0.852,216,3.027,217,3.645,218,3.604,219,3.604,220,3.645,221,3.225,223,0.672,224,3.645,225,1.257,226,1.129,228,2.398,230,1.812,231,3.056,232,1.614,233,2.544,234,4.035,237,3.056,240,2.542,241,2.193,243,4.959,245,3.437,246,3.437,247,1.3,250,2.544,251,2.544,253,2.895,254,2.355,279,3.149,287,2.542,288,3.109,289,0.763,291,2.051,293,2.771,294,2.016,321,2.193,414,2.256,674,2.716,694,3.437,762,4.517,767,3.893,773,3.437,787,2.716,788,1.909,789,2.355,888,2.355,939,2.544,976,2.771,1189,4.1,1190,3.645,1193,4.241,1199,4.517,1201,3.437,1212,3.306,1213,3.306,1214,3.437,1215,3.056,1216,3.437,1222,5.08,1544,4.311,1545,3.437,1592,2.314,1593,4.848,1594,2.703,1595,2.703,1596,2.703,1597,2.703,1598,4.015,1599,2.703,1600,2.703,1601,2.703,1602,2.703,1603,4.015,1604,4.015,1605,4.015,1606,2.703,1607,2.703,1608,2.703,1609,2.703,1610,2.703,1611,4.015,1612,4.015,1613,4.015,1614,2.703,1615,2.703,1616,2.703,1617,2.703,1618,2.703,1619,3.437,1620,3.437,1621,3.437,1622,2.703,1623,4.015]],["title/components/VolunteerPage.html",[0,0.645,167,1.225]],["body/components/VolunteerPage.html",[0,1.138,1,1.57,2,1.976,3,0.202,4,0.202,5,1.958,6,2.076,7,1.958,8,1.849,9,0.173,11,1.958,12,2.552,13,2.42,14,2.611,16,2.463,18,0.459,19,0.02,20,0.65,22,1.657,24,0.232,25,0.09,29,1.744,131,1.341,132,2.463,133,2.463,134,1.958,135,2.828,136,1.958,137,0.623,138,1.958,139,1.657,140,2.201,141,2.695,142,1.57,143,1.958,144,1.57,145,1.958,146,1.57,147,1.849,148,1.958,149,1.57,150,1.958,151,1.657,152,1.778,153,1.57,154,1.958,155,1.57,156,1.958,157,1.57,158,1.849,159,2.463,160,1.57,161,1.208,162,1.57,163,2.201,164,1.958,165,1.657,166,2.201,167,2.268,168,1.958,169,1.958,170,0.013,171,0.016,172,0.013,263,1.75,458,3.501,490,2.512,1010,2.915,1624,3.937,1625,6.332,1626,5.787]],["title/modules/VolunteerPageModule.html",[173,1.225,1627,2.476]],["body/modules/VolunteerPageModule.html",[0,1.192,2,1.851,3,0.183,4,0.183,9,0.157,18,0.721,19,0.021,20,0.587,24,0.209,25,0.082,29,1.091,131,1.211,139,2.497,140,2.062,151,2.497,152,1.665,161,1.091,162,2.366,163,2.062,165,2.497,166,2.062,167,2.366,170,0.011,171,0.015,172,0.011,173,1.851,175,1.875,176,1.992,177,3.296,178,2.269,179,2.269,180,2.123,183,2.961,184,1.992,186,2.961,187,3.436,188,2.123,189,3.436,190,1.497,191,3.067,192,2.437,193,1.15,194,3.18,195,1.768,197,3.476,198,3.163,200,1.035,201,3.892,202,3.624,203,2.269,204,3.163,444,2.868,446,2.868,450,2.868,579,3.557,626,4.641,633,3.557,888,2.437,1462,3.163,1627,5.066,1628,3.557,1629,3.557,1630,4.156,1631,4.156,1632,6.036,1633,4.156]],["title/injectables/VolunteerService.html",[258,0.894,273,2.104]],["body/injectables/VolunteerService.html",[3,0.065,4,0.065,9,0.056,12,1.561,18,0.529,19,0.021,20,0.211,22,2.403,24,0.075,25,0.064,29,1.815,125,1.467,137,0.733,152,1.404,170,0.004,171,0.01,172,0.004,200,1.515,208,1.467,211,0.621,213,2.142,214,0.231,215,0.971,216,2.025,218,2.682,219,3.303,221,3.059,223,0.603,225,1.222,226,0.922,228,2.356,230,1.459,240,2.445,243,4.257,248,1.585,251,1.585,253,1.366,258,0.623,260,0.714,262,1.365,263,1.441,264,1.441,265,1.48,266,0.476,270,0.806,273,1.467,275,1.278,276,1.366,277,2.222,278,2.336,279,2.905,280,1.119,281,0.955,284,1.585,285,2.375,286,1.904,289,1.119,290,4.257,291,1.278,292,2.142,293,2.232,294,1.606,295,1.187,296,3.643,299,2.768,300,0.509,301,1.467,302,0.874,303,0.944,304,0.944,305,0.672,306,0.761,307,0.672,308,1.134,309,0.944,313,1.275,314,1.727,315,0.81,316,0.814,317,1.796,319,0.874,320,0.874,321,0.814,322,0.944,323,0.761,324,0.814,325,0.814,326,0.634,327,0.944,328,1.231,329,0.944,330,0.944,331,1.028,332,1.134,333,0.944,336,1.341,339,3.243,343,3.615,344,1.275,347,2.883,348,2.883,349,2.883,350,2.883,353,3.48,355,3.615,356,1.134,357,1.417,362,3.156,363,2.915,364,3.214,365,4.806,414,1.946,426,0.952,430,1.585,509,0.672,572,2.991,699,1.727,702,1.366,740,2.85,762,4.694,767,0.944,777,1.727,787,2.33,788,2.498,830,1.366,888,4.025,902,1.134,938,2.401,1059,1.727,1093,1.904,1190,1.134,1193,2.615,1212,1.727,1213,3.156,1234,2.142,1241,2.142,1242,1.275,1245,3.243,1250,2.142,1256,2.142,1257,1.275,1266,2.142,1267,2.142,1268,1.275,1269,2.142,1271,1.275,1272,1.275,1273,1.275,1274,3.243,1275,2.142,1276,1.275,1277,1.275,1278,1.275,1279,2.142,1280,1.275,1433,3.243,1544,4.753,1593,1.275,1619,1.275,1620,2.768,1621,2.768,1634,1.134,1635,2.502,1636,2.502,1637,2.502,1638,2.502,1639,2.502,1640,2.502,1641,2.502,1642,3.789,1643,2.502,1644,1.49,1645,2.502,1646,2.502,1647,5.304,1648,1.49,1649,3.789,1650,2.502,1651,2.502,1652,1.49,1653,2.502,1654,2.502,1655,2.502,1656,1.49,1657,2.502,1658,1.49,1659,3.789,1660,4.573,1661,4.573,1662,4.573,1663,4.573,1664,2.502,1665,1.49,1666,2.502,1667,1.49,1668,2.502,1669,1.49,1670,1.49,1671,2.502,1672,1.49,1673,2.502,1674,2.502,1675,2.502,1676,4.573,1677,2.502,1678,1.49,1679,1.49,1680,1.49,1681,2.502,1682,4.573,1683,1.49,1684,1.49,1685,3.234,1686,3.234,1687,3.234,1688,1.49,1689,1.49,1690,1.49,1691,3.234,1692,3.234,1693,1.49,1694,1.49,1695,3.789,1696,1.49,1697,3.234,1698,3.789,1699,3.234,1700,2.502,1701,1.49,1702,1.49,1703,1.49,1704,1.49,1705,1.49,1706,1.49,1707,1.49,1708,2.502,1709,2.502,1710,2.502,1711,2.502,1712,2.502,1713,2.502,1714,2.502,1715,2.502,1716,2.502,1717,2.502,1718,2.502,1719,2.502,1720,3.234,1721,2.502,1722,2.502,1723,3.789,1724,1.49,1725,1.49]],["title/coverage.html",[1726,4.207]],["body/coverage.html",[0,1.269,1,1.08,9,0.119,10,2.708,19,0.021,25,0.132,29,0.831,139,1.14,142,1.08,144,1.08,146,1.08,149,1.08,151,1.14,153,1.08,155,1.08,157,1.08,160,1.08,162,1.08,165,1.14,167,1.08,170,0.009,171,0.012,172,0.009,197,1.616,208,1.856,210,2.708,221,1.616,223,0.292,247,1.024,258,1.642,259,2.005,261,3.989,272,1.024,273,1.856,301,1.856,305,2.576,316,3.295,317,0.875,324,3.295,367,2.708,385,1.517,387,2.005,444,2.184,446,2.184,450,2.184,486,2.184,488,2.408,509,2.365,593,2.853,595,2.708,616,2.708,628,2.408,631,2.005,638,3.426,641,1.517,712,3.107,740,1.856,741,2.005,742,1.856,743,2.005,744,2.005,745,2.005,749,2.184,750,2.408,755,2.408,761,3.989,779,2.567,781,3.617,784,2.005,793,2.708,794,2.708,862,5.227,868,2.708,869,2.708,925,2.005,926,2.184,927,3.617,954,3.426,955,3.426,956,3.426,975,4.771,1001,2.184,1002,3.426,1005,2.184,1008,2.708,1009,2.708,1029,2.708,1078,4.909,1079,4.909,1128,2.708,1176,2.708,1188,2.708,1228,3.989,1281,2.184,1282,2.408,1320,2.408,1321,2.708,1330,2.708,1331,3.426,1364,2.708,1381,2.708,1426,2.708,1427,2.708,1461,2.708,1462,2.408,1463,2.708,1542,2.408,1543,2.708,1564,3.989,1587,2.708,1592,2.708,1624,2.708,1634,3.989,1726,2.708,1727,3.164,1728,3.164,1729,3.164,1730,3.164,1731,3.164,1732,6.27,1733,4.502,1734,7.182,1735,7.334,1736,5.241,1737,5.241,1738,3.164,1739,3.164,1740,2.708,1741,2.708,1742,2.708,1743,2.708,1744,2.708,1745,2.708,1746,3.164,1747,3.164,1748,6.033,1749,3.164,1750,3.164,1751,4.502,1752,3.164,1753,3.164,1754,5.241,1755,5.241,1756,3.164,1757,3.164,1758,3.164,1759,3.164,1760,3.164,1761,3.164,1762,3.164,1763,5.241,1764,4.502,1765,3.164,1766,3.164,1767,3.164,1768,3.164,1769,3.164,1770,3.164,1771,3.164,1772,3.164,1773,2.708,1774,2.708,1775,2.708,1776,2.708,1777,2.708,1778,3.164]],["title/dependencies.html",[176,2.071,1779,2.987]],["body/dependencies.html",[13,1.516,19,0.021,20,0.662,170,0.013,171,0.016,172,0.013,176,2.245,188,2.392,190,1.687,193,1.296,195,1.993,278,2.99,307,2.113,314,3.233,319,2.747,320,4.037,392,6.01,395,3.233,396,4.009,477,5.013,478,3.564,480,3.564,482,2.967,483,4.009,484,4.009,551,5.01,552,4.859,557,4.009,558,4.009,560,3.564,562,4.009,563,4.009,1477,4.009,1493,4.009,1513,4.009,1780,7.123,1781,4.684,1782,4.684,1783,5.853,1784,4.684,1785,6.688,1786,4.684,1787,4.684,1788,4.684,1789,4.684,1790,4.684,1791,4.684,1792,4.684,1793,4.684,1794,4.684,1795,4.684,1796,4.684,1797,4.684,1798,4.684,1799,4.684,1800,4.684,1801,4.684,1802,4.684,1803,4.684,1804,4.684,1805,4.684,1806,5.853,1807,4.684,1808,4.684,1809,4.684,1810,4.684,1811,4.684]],["title/miscellaneous/functions.html",[1812,2.062,1813,3.698]],["body/miscellaneous/functions.html",[19,0.019,21,2.588,137,0.793,170,0.013,171,0.016,172,0.013,211,0.744,214,0.437,223,0.679,240,2.272,275,2.42,280,1.313,281,1.172,284,3.002,285,2.441,289,1.22,652,4.462,669,2.779,689,4.768,702,3.22,788,1.707,1078,3.606,1079,5.435,1097,4.056,1104,5.748,1105,5.913,1106,5.493,1107,4.056,1108,4.056,1115,4.056,1116,4.056,1117,4.056,1486,4.056,1740,5.046,1741,5.046,1742,5.046,1743,5.493,1744,5.046,1745,5.046,1812,3.27,1813,4.056,1814,7.042,1815,4.738,1816,4.738,1817,4.738,1818,4.738]],["title/index.html",[214,0.331,1819,3.071]],["body/index.html",[1,2.042,2,1.392,19,0.021,131,1.189,139,2.154,142,2.356,144,2.042,146,2.042,149,2.042,151,2.154,153,2.042,155,2.042,157,2.042,160,2.042,161,1.071,162,2.042,165,2.154,167,2.042,170,0.011,171,0.015,172,0.011,173,1.392,174,4.383,175,1.84,176,1.955,177,2.227,178,2.227,179,2.227,180,2.083,181,3.491,182,3.491,183,2.925,184,1.955,191,1.955,209,1.84,259,3.789,260,1.955,272,1.936,273,3.508,385,2.867,542,4.888,543,3.491,544,3.491,545,3.491,546,3.491,547,3.789,548,4.781,594,3.104,622,5.003,623,3.491,624,3.491,737,3.491,738,3.491,739,3.491,740,3.508,741,3.789,742,3.508,743,3.789,744,4.024,745,3.789,780,2.392,945,2.815,1072,4.383,1073,3.491,1074,3.491,1303,2.815,1552,3.491,1553,3.491,1556,3.491,1627,5.003,1628,3.491,1629,3.491,1819,3.491,1820,4.078,1821,4.078]],["title/modules.html",[175,2.218]],["body/modules.html",[19,0.018,170,0.015,171,0.018,172,0.015,174,3.811,175,2.492,408,4.726,542,3.811,547,3.499,548,3.499,552,5.555,622,3.811,1072,3.811,1627,3.811,1822,7.299,1823,7.299,1824,7.366,1825,5.522]],["title/routes.html",[191,2.356]],["body/routes.html",[19,0.018,170,0.016,171,0.018,172,0.016,191,2.835]],["title/miscellaneous/variables.html",[1812,2.062,1826,3.698]],["body/miscellaneous/variables.html",[13,1.18,19,0.021,170,0.01,171,0.014,172,0.01,213,2.416,214,0.336,223,0.618,225,0.842,230,2.866,250,3.581,261,2.773,278,3.244,279,3.159,285,2.551,288,3.314,289,1.395,300,2.512,305,3.214,315,2.267,316,3.824,317,1.937,318,2.773,323,3.244,324,3.824,325,3.468,328,1.062,460,2.709,461,2.308,488,4.301,638,2.773,641,2.91,699,4.384,711,3.428,712,4.189,761,2.773,767,3.581,776,2.773,787,1.747,788,1.312,885,3.9,888,3.314,902,2.773,907,2.773,912,2.773,955,2.773,956,3.78,982,3.119,1228,2.773,1564,2.773,1634,2.773,1773,3.119,1774,3.119,1775,3.119,1776,3.119,1777,3.119,1812,2.515,1826,3.119,1827,3.644,1828,3.644,1829,3.644,1830,3.644,1831,3.644,1832,3.644,1833,3.644,1834,4.967,1835,4.967,1836,4.967,1837,4.967,1838,4.967,1839,3.644,1840,3.644,1841,3.644,1842,6.069,1843,3.644,1844,6.351,1845,5.651,1846,6.069,1847,4.967,1848,5.651,1849,4.967,1850,5.651,1851,4.967,1852,3.644,1853,3.644,1854,3.644,1855,3.644,1856,3.644]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":509,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"classes/PhoneValidation.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["0.8.29",{"_index":1811,"title":{},"body":{"dependencies.html":{}}}],["0.9.3",{"_index":1799,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1755,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":865,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{}}}],["1",{"_index":366,"title":{},"body":{"injectables/AllocationService.html":{},"classes/SsnValidation.html":{}}}],["1.0.0",{"_index":1801,"title":{},"body":{"dependencies.html":{}}}],["1.0.20",{"_index":1804,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1809,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1735,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1327,"title":{},"body":{"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["10/10",{"_index":1733,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":1759,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":862,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{},"coverage.html":{}}}],["1000",{"_index":529,"title":{},"body":{"components/AppComponent.html":{},"injectables/LocalStorageService.html":{},"components/SendMessageComponent.html":{}}}],["100px",{"_index":1535,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["10px",{"_index":866,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["11",{"_index":1558,"title":{},"body":{"classes/SsnValidation.html":{}}}],["11/11",{"_index":1746,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1328,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["12/12",{"_index":1752,"title":{},"body":{"coverage.html":{}}}],["12px",{"_index":1057,"title":{},"body":{"components/HomePage.html":{}}}],["13",{"_index":1549,"title":{},"body":{"classes/SsnValidation.html":{}}}],["13/13",{"_index":1753,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1820,"title":{},"body":{"index.html":{}}}],["15px",{"_index":858,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["17/17",{"_index":1749,"title":{},"body":{"coverage.html":{}}}],["19/19",{"_index":1750,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1552,"title":{},"body":{"classes/SsnValidation.html":{},"index.html":{}}}],["2.0.6",{"_index":1792,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":1805,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1803,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1754,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1757,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1761,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":857,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["24",{"_index":1111,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["24/26",{"_index":1772,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":1530,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["25px",{"_index":1540,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["26/28",{"_index":1765,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":1821,"title":{},"body":{"index.html":{}}}],["2px",{"_index":1052,"title":{},"body":{"components/HomePage.html":{}}}],["3",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/SsnValidation.html":{}}}],["3.1.0",{"_index":1800,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1732,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["300px",{"_index":1541,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["30px",{"_index":1536,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["33/35",{"_index":1768,"title":{},"body":{"coverage.html":{}}}],["35px",{"_index":1537,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["4",{"_index":1554,"title":{},"body":{"classes/SsnValidation.html":{}}}],["4.0.3",{"_index":1798,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":1790,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1738,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":988,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["401",{"_index":987,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["5",{"_index":1556,"title":{},"body":{"classes/SsnValidation.html":{},"index.html":{}}}],["5.0.0",{"_index":1789,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":1797,"title":{},"body":{"dependencies.html":{}}}],["5.11.0",{"_index":1785,"title":{},"body":{"dependencies.html":{}}}],["5.12.0",{"_index":1787,"title":{},"body":{"dependencies.html":{}}}],["5.9.0",{"_index":1783,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1748,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1760,"title":{},"body":{"coverage.html":{}}}],["50px",{"_index":1531,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["5px",{"_index":1049,"title":{},"body":{"components/HomePage.html":{}}}],["6",{"_index":1555,"title":{},"body":{"classes/SsnValidation.html":{}}}],["6.4.0",{"_index":1794,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":1807,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1751,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1112,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["66",{"_index":1756,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1553,"title":{},"body":{"classes/SsnValidation.html":{},"index.html":{}}}],["7.1.1",{"_index":1806,"title":{},"body":{"dependencies.html":{}}}],["7.2.2",{"_index":1780,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1747,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1737,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":1770,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":1730,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1769,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1303,"title":{},"body":{"classes/PasswordValidation.html":{},"interceptors/RequestInterceptor.html":{},"classes/SsnValidation.html":{},"index.html":{}}}],["8.0.0",{"_index":1795,"title":{},"body":{"dependencies.html":{}}}],["8/11",{"_index":1731,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1739,"title":{},"body":{"coverage.html":{}}}],["80px",{"_index":1058,"title":{},"body":{"components/HomePage.html":{}}}],["83",{"_index":1758,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1736,"title":{},"body":{"coverage.html":{}}}],["89992142265",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":945,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{},"index.html":{}}}],["9._",{"_index":944,"title":{},"body":{"classes/EmailValidation.html":{}}}],["92",{"_index":1764,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1767,"title":{},"body":{"coverage.html":{}}}],["_credentials",{"_index":640,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["_errors",{"_index":1011,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["_global_",{"_index":997,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["_id",{"_index":216,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["_rev",{"_index":217,"title":{},"body":{"classes/Allocation.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["aaist",{"_index":1273,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["about'},{'name",{"_index":138,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["about.page",{"_index":196,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["about.page.html",{"_index":17,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page.scss",{"_index":15,"title":{},"body":{"components/AboutPage.html":{}}}],["aboutpage",{"_index":1,"title":{"components/AboutPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["aboutpagemodule",{"_index":174,"title":{"modules/AboutPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"index.html":{},"modules.html":{}}}],["abstract",{"_index":933,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["abstractcontrol",{"_index":930,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["abstractcontrol.get('confirmpassword').seterrors",{"_index":1297,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["abstractcontrol.get('confirmpassword').value",{"_index":1296,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["abstractcontrol.get('password').value",{"_index":1295,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["abstractcontrol.value",{"_index":940,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{}}}],["accept",{"_index":1373,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["access",{"_index":607,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["accessed",{"_index":1394,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["accessible",{"_index":578,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["accessors",{"_index":646,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["accesstoken",{"_index":647,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["accredited",{"_index":1621,"title":{},"body":{"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["accreditor",{"_index":1699,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["acestei",{"_index":76,"title":{},"body":{"components/AboutPage.html":{}}}],["aceștia",{"_index":88,"title":{},"body":{"components/AboutPage.html":{}}}],["acreditor",{"_index":1623,"title":{},"body":{"classes/Volunteer.html":{}}}],["acreditors",{"_index":1622,"title":{},"body":{"classes/Volunteer.html":{}}}],["action",{"_index":1036,"title":{},"body":{"components/HomePage.html":{},"components/LogoutComponent.html":{}}}],["action.title",{"_index":1046,"title":{},"body":{"components/HomePage.html":{}}}],["actions",{"_index":1032,"title":{},"body":{"components/HomePage.html":{}}}],["activ'/'inactiv",{"_index":1218,"title":{},"body":{"classes/Organisation.html":{}}}],["activated",{"_index":1444,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["activatedroute",{"_index":1384,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["activatedroutesnapshot",{"_index":1442,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["actual_component",{"_index":169,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["adaug",{"_index":445,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["add",{"_index":140,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{}}}],["added",{"_index":321,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["added_by",{"_index":1189,"title":{},"body":{"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["addimage",{"_index":1469,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["additional",{"_index":976,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"classes/Organisation.html":{},"interceptors/RequestInterceptor.html":{},"classes/Volunteer.html":{}}}],["address",{"_index":789,"title":{},"body":{"interfaces/Credentials.html":{},"classes/EmailValidation.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{}}}],["adds",{"_index":957,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{}}}],["addvolunteercomponent",{"_index":139,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["admin",{"_index":1226,"title":{},"body":{"classes/Organisation.html":{}}}],["admin@admin:http://52.50.54.63:5984",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["administrare",{"_index":51,"title":{},"body":{"components/AboutPage.html":{}}}],["administrarea",{"_index":102,"title":{},"body":{"components/AboutPage.html":{}}}],["adres",{"_index":1171,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["adresa",{"_index":948,"title":{},"body":{"classes/EmailValidation.html":{},"components/RecoverPasswordComponent.html":{}}}],["afterviewinit",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["ajutorul",{"_index":75,"title":{},"body":{"components/AboutPage.html":{}}}],["al",{"_index":70,"title":{},"body":{"components/AboutPage.html":{}}}],["align",{"_index":1060,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["allocated",{"_index":237,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Volunteer.html":{}}}],["allocates",{"_index":1650,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocatevolunteer",{"_index":1635,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocatevolunteer(allocationid",{"_index":1646,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocation",{"_index":208,"title":{"classes/Allocation.html":{}},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["allocation.city",{"_index":345,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.county",{"_index":342,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.created_at",{"_index":346,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.organisation",{"_index":354,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.rescue_officer",{"_index":340,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.type",{"_index":352,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.updated_at",{"_index":351,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.volunteer",{"_index":338,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocationid",{"_index":299,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["allocations",{"_index":250,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/DatabaseSyncService.html":{},"classes/Volunteer.html":{},"miscellaneous/variables.html":{}}}],["allocationservice",{"_index":259,"title":{"injectables/AllocationService.html":{}},"body":{"injectables/AllocationService.html":{},"modules/CoreModule.html":{},"coverage.html":{},"index.html":{}}}],["allowed",{"_index":609,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["allowing",{"_index":1428,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["aloca",{"_index":114,"title":{},"body":{"components/AboutPage.html":{}}}],["already",{"_index":1393,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["alt",{"_index":71,"title":{},"body":{"components/AboutPage.html":{}}}],["always",{"_index":1219,"title":{},"body":{"classes/Organisation.html":{}}}],["android",{"_index":1513,"title":{},"body":{"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["angular",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["angular/common",{"_index":188,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"components/SendMessageComponent.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":709,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["angular/core",{"_index":20,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":190,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"classes/EmailValidation.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1781,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":551,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":193,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["apeleaz",{"_index":451,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["api.lxhost.ro",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api.lxhost.ro/api",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aplicația",{"_index":99,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["aplicație",{"_index":27,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["aplicației",{"_index":79,"title":{},"body":{"components/AboutPage.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":555,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":142,"title":{"components/AppComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["application",{"_index":406,"title":{},"body":{"components/AppComponent.html":{}}}],["application/json",{"_index":1374,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["appmodule",{"_index":542,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["apppages",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["approutingmodule",{"_index":547,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["apărut",{"_index":1419,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["apăsați",{"_index":535,"title":{},"body":{"components/AppComponent.html":{}}}],["ar",{"_index":43,"title":{},"body":{"components/AboutPage.html":{}}}],["area",{"_index":1207,"title":{},"body":{"classes/Organisation.html":{}}}],["array.from(string(ssn",{"_index":1550,"title":{},"body":{"classes/SsnValidation.html":{}}}],["asemenea",{"_index":98,"title":{},"body":{"components/AboutPage.html":{}}}],["async",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["attachments",{"_index":778,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{}}}],["attributes",{"_index":1007,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["atât",{"_index":1351,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["autentificare",{"_index":1362,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["auth",{"_index":588,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{}}}],["auth/login",{"_index":1156,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth/logout",{"_index":456,"title":{},"body":{"components/AppComponent.html":{}}}],["auth/reset/:token",{"_index":525,"title":{},"body":{"components/AppComponent.html":{}}}],["authenticated",{"_index":598,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"components/HomePage.html":{},"guards/UnauthenticatedGuard.html":{}}}],["authenticates",{"_index":695,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication",{"_index":310,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{}}}],["authentication'},{'name",{"_index":145,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["authentication.credentials",{"_index":685,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication.loginpayload",{"_index":659,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication.page",{"_index":627,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["authentication.page.html",{"_index":618,"title":{},"body":{"components/AuthenticationPage.html":{}}}],["authentication.page.scss",{"_index":617,"title":{},"body":{"components/AuthenticationPage.html":{}}}],["authentication.service",{"_index":612,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["authentication.user",{"_index":708,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication/authentication.service",{"_index":1370,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["authentication/unauthenticated.guard",{"_index":753,"title":{},"body":{"modules/CoreModule.html":{}}}],["authenticationguard",{"_index":197,"title":{"guards/AuthenticationGuard.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["authenticationpage",{"_index":144,"title":{"components/AuthenticationPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["authenticationpagemodule",{"_index":622,"title":{"modules/AuthenticationPageModule.html":{}},"body":{"modules/AuthenticationPageModule.html":{},"index.html":{},"modules.html":{}}}],["authenticationservice",{"_index":272,"title":{"injectables/AuthenticationService.html":{}},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{},"coverage.html":{},"index.html":{}}}],["authorization",{"_index":1376,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["authservice",{"_index":768,"title":{},"body":{"injectables/CourseService.html":{}}}],["automatically",{"_index":232,"title":{},"body":{"classes/Allocation.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"classes/EmailValidation.html":{},"classes/Organisation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/SsnValidation.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{}}}],["available",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"modules.html":{}}}],["avea",{"_index":44,"title":{},"body":{"components/AboutPage.html":{}}}],["await",{"_index":532,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["b",{"_index":1563,"title":{},"body":{"classes/SsnValidation.html":{}}}],["back",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["backbutton",{"_index":843,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["backend",{"_index":663,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["background",{"_index":859,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/SendMessageComponent.html":{}}}],["bank",{"_index":130,"title":{},"body":{"components/AboutPage.html":{}}}],["bar",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["bar/ngx",{"_index":481,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["base64",{"_index":1479,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["base64image",{"_index":1466,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["basic",{"_index":639,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/LocalStorageService.html":{}}}],["baza",{"_index":111,"title":{},"body":{"components/AboutPage.html":{}}}],["bearer",{"_index":1377,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["before",{"_index":1598,"title":{},"body":{"classes/Volunteer.html":{}}}],["being",{"_index":236,"title":{},"body":{"classes/Allocation.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"interceptors/RequestInterceptor.html":{},"classes/SsnValidation.html":{}}}],["belong",{"_index":1603,"title":{},"body":{"classes/Volunteer.html":{}}}],["big",{"_index":834,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["black",{"_index":1054,"title":{},"body":{"components/HomePage.html":{}}}],["block",{"_index":1539,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["body",{"_index":665,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["boolean",{"_index":473,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/RouteReusableStrategy.html":{},"guards/UnauthenticatedGuard.html":{}}}],["bootstrap",{"_index":178,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["both",{"_index":1284,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["bottom",{"_index":538,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["box",{"_index":863,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{}}}],["browse",{"_index":1824,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":552,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/ngx",{"_index":564,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":550,"title":{},"body":{"modules/AppModule.html":{}}}],["bun",{"_index":119,"title":{},"body":{"components/AboutPage.html":{}}}],["button",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/SendMessageComponent.html":{}}}],["c",{"_index":1121,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["ca",{"_index":1119,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["calamități",{"_index":40,"title":{},"body":{"components/AboutPage.html":{}}}],["call",{"_index":1040,"title":{},"body":{"components/HomePage.html":{}}}],["calling",{"_index":816,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["camera",{"_index":1477,"title":{},"body":{"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["camera.destinationtype.data_url",{"_index":1504,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["camera.getpicture",{"_index":1502,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["canactivate",{"_index":202,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"modules/HomePageModule.html":{},"guards/UnauthenticatedGuard.html":{},"modules/VolunteerPageModule.html":{}}}],["cancel",{"_index":852,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["caracter",{"_index":1308,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["caractere",{"_index":1304,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["care",{"_index":42,"title":{},"body":{"components/AboutPage.html":{}}}],["case",{"_index":1222,"title":{},"body":{"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["catch(error",{"_index":921,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["catcherror",{"_index":979,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["caz",{"_index":105,"title":{},"body":{"components/AboutPage.html":{}}}],["cazul",{"_index":65,"title":{},"body":{"components/AboutPage.html":{}}}],["center",{"_index":1061,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["change",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{}}}],["changed",{"_index":1021,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["changes",{"_index":1399,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["changeselectedentry",{"_index":799,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["changeselectedentry(entry",{"_index":813,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["characters",{"_index":1216,"title":{},"body":{"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["charset=utf",{"_index":1375,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["checkpemission",{"_index":1470,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["checks",{"_index":1087,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/SendMessageComponent.html":{}}}],["chucks",{"_index":835,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["cities",{"_index":1567,"title":{},"body":{"injectables/StaticsService.html":{}}}],["city",{"_index":218,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Organisation.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["city's",{"_index":257,"title":{},"body":{"classes/Allocation.html":{}}}],["city._id",{"_index":1681,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["city.name",{"_index":1688,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["city_type",{"_index":1568,"title":{},"body":{"injectables/StaticsService.html":{}}}],["civil",{"_index":60,"title":{},"body":{"components/AboutPage.html":{}}}],["class",{"_index":25,"title":{"classes/Allocation.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"classes/Organisation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/RouteReusableStrategy.html":{},"classes/SsnValidation.html":{},"classes/Volunteer.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["classes",{"_index":209,"title":{},"body":{"classes/Allocation.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"classes/Organisation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/RouteReusableStrategy.html":{},"classes/SsnValidation.html":{},"classes/Volunteer.html":{},"index.html":{}}}],["clear",{"_index":1012,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["clearall",{"_index":1082,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["cleardata",{"_index":1740,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cleardata(type",{"_index":1815,"title":{},"body":{"miscellaneous/functions.html":{}}}],["clearitem",{"_index":1083,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["clearitem(key",{"_index":1091,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["clears",{"_index":669,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/functions.html":{}}}],["click",{"_index":1042,"title":{},"body":{"components/HomePage.html":{}}}],["close",{"_index":853,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["closes",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["cluster_aboutpagemodule",{"_index":181,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_aboutpagemodule_declarations",{"_index":182,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":543,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":546,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":544,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":545,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_authenticationpagemodule",{"_index":623,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"index.html":{}}}],["cluster_authenticationpagemodule_declarations",{"_index":624,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"index.html":{}}}],["cluster_coremodule",{"_index":737,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_coremodule_declarations",{"_index":738,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_coremodule_providers",{"_index":739,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_homepagemodule",{"_index":1073,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_declarations",{"_index":1074,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_volunteerpagemodule",{"_index":1628,"title":{},"body":{"modules/VolunteerPageModule.html":{},"index.html":{}}}],["cluster_volunteerpagemodule_declarations",{"_index":1629,"title":{},"body":{"modules/VolunteerPageModule.html":{},"index.html":{}}}],["cnp",{"_index":1545,"title":{},"body":{"classes/SsnValidation.html":{},"classes/Volunteer.html":{}}}],["cnp[x",{"_index":1561,"title":{},"body":{"classes/SsnValidation.html":{}}}],["code",{"_index":125,"title":{},"body":{"components/AboutPage.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["codification",{"_index":1480,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["coefs",{"_index":1551,"title":{},"body":{"classes/SsnValidation.html":{}}}],["coefs[x",{"_index":1560,"title":{},"body":{"classes/SsnValidation.html":{}}}],["colaborare",{"_index":96,"title":{},"body":{"components/AboutPage.html":{}}}],["color",{"_index":1053,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["column",{"_index":1047,"title":{},"body":{"components/HomePage.html":{}}}],["columns",{"_index":1064,"title":{},"body":{"components/HomePage.html":{}}}],["comments",{"_index":1190,"title":{},"body":{"classes/Organisation.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["comments/details",{"_index":1201,"title":{},"body":{"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["commonmodule",{"_index":187,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["completely",{"_index":417,"title":{},"body":{"components/AppComponent.html":{}}}],["component",{"_index":0,"title":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["component_template",{"_index":136,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["componente",{"_index":77,"title":{},"body":{"components/AboutPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["components/custom",{"_index":754,"title":{},"body":{"modules/CoreModule.html":{}}}],["config",{"_index":488,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.phonenumber",{"_index":454,"title":{},"body":{"components/AppComponent.html":{}}}],["confirm",{"_index":1422,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["confirmpassword",{"_index":1286,"title":{},"body":{"classes/PasswordValidation.html":{},"components/ResetPasswordComponent.html":{}}}],["console.error('request",{"_index":999,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["console.log(`error",{"_index":922,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["console.log(this._errors",{"_index":1027,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["console.warn('unmatched",{"_index":531,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":200,"title":{},"body":{"modules/AboutPageModule.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["constructor",{"_index":270,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["constructor(authenticationservice",{"_index":271,"title":{},"body":{"injectables/AllocationService.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{}}}],["constructor(authservice",{"_index":765,"title":{},"body":{"injectables/CourseService.html":{}}}],["constructor(courseservice",{"_index":1644,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["constructor(httpclient",{"_index":648,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(modalctrl",{"_index":805,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["constructor(platform",{"_index":381,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":326,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{},"injectables/VolunteerService.html":{}}}],["constructor(public",{"_index":1404,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["constructor(router",{"_index":600,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["constructor(sms",{"_index":1472,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["contact",{"_index":1203,"title":{},"body":{"classes/Organisation.html":{}}}],["contact_person",{"_index":1191,"title":{},"body":{"classes/Organisation.html":{}}}],["container",{"_index":492,"title":{},"body":{"components/AppComponent.html":{}}}],["containing",{"_index":290,"title":{},"body":{"injectables/AllocationService.html":{},"components/HomePage.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["contains",{"_index":291,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["content",{"_index":1069,"title":{},"body":{"components/HomePage.html":{},"interceptors/RequestInterceptor.html":{}}}],["continuous",{"_index":330,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["control",{"_index":934,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["controller",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["convert",{"_index":1481,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["conțin",{"_index":1301,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["cookie",{"_index":1105,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["cookie's",{"_index":1116,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["cordova",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["core",{"_index":482,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"dependencies.html":{}}}],["core/authentication/authentication.guard",{"_index":198,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["coremodule",{"_index":548,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"index.html":{},"modules.html":{}}}],["corespund",{"_index":1300,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["couchdb",{"_index":230,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["counties",{"_index":1566,"title":{},"body":{"injectables/StaticsService.html":{}}}],["county",{"_index":219,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Organisation.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["county._id",{"_index":343,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["county.name",{"_index":344,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["county_romania_",{"_index":1583,"title":{},"body":{"injectables/StaticsService.html":{}}}],["county_romania_\\ufff0",{"_index":1585,"title":{},"body":{"injectables/StaticsService.html":{}}}],["county_type",{"_index":1569,"title":{},"body":{"injectables/StaticsService.html":{}}}],["countyid",{"_index":1575,"title":{},"body":{"injectables/StaticsService.html":{}}}],["course",{"_index":762,"title":{},"body":{"injectables/CourseService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["course's",{"_index":773,"title":{},"body":{"injectables/CourseService.html":{},"classes/Volunteer.html":{}}}],["course.[].course_name._id",{"_index":1680,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course._id",{"_index":1698,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course.name",{"_index":1702,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course.service",{"_index":1679,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course.slug",{"_index":1703,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course.static_accreditor",{"_index":1700,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course_name",{"_index":1619,"title":{},"body":{"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["course_name._id",{"_index":1725,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course_names",{"_index":772,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursenamestype",{"_index":763,"title":{},"body":{"injectables/CourseService.html":{}}}],["courses",{"_index":767,"title":{},"body":{"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["courseservice",{"_index":740,"title":{"injectables/CourseService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/CourseService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"index.html":{}}}],["cover",{"_index":1192,"title":{},"body":{"classes/Organisation.html":{}}}],["coverage",{"_index":1726,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createallocation",{"_index":267,"title":{},"body":{"injectables/AllocationService.html":{}}}],["createallocation(volunteer",{"_index":282,"title":{},"body":{"injectables/AllocationService.html":{}}}],["createcookie",{"_index":1741,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createcookie(name",{"_index":1108,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["created",{"_index":248,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["created_at",{"_index":220,"title":{},"body":{"classes/Allocation.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["createdat",{"_index":790,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["createform",{"_index":1133,"title":{},"body":{"components/LoginComponent.html":{}}}],["createorganisation",{"_index":1229,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["createorganisation(name",{"_index":1237,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["creates",{"_index":284,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["createvolunteer",{"_index":1636,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["createvolunteer(name",{"_index":1651,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["creating",{"_index":1386,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["creation",{"_index":241,"title":{},"body":{"classes/Allocation.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{}}}],["credentials",{"_index":641,"title":{"interfaces/Credentials.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["credentialskey",{"_index":712,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cu",{"_index":74,"title":{},"body":{"components/AboutPage.html":{},"components/ResetPasswordComponent.html":{}}}],["curr",{"_index":1451,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["curr.routeconfig",{"_index":1459,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["current",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["currentpath",{"_index":500,"title":{},"body":{"components/AppComponent.html":{}}}],["currentpath.indexof('home",{"_index":510,"title":{},"body":{"components/AppComponent.html":{}}}],["currentpath.indexof('login",{"_index":508,"title":{},"body":{"components/AppComponent.html":{}}}],["currentuser",{"_index":1255,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["currentuser._id",{"_index":1259,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["custom",{"_index":147,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["customselectorcomponent",{"_index":146,"title":{"components/CustomSelectorComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["cât",{"_index":1353,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["către",{"_index":61,"title":{},"body":{"components/AboutPage.html":{}}}],["data",{"_index":689,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"classes/RouteReusableStrategy.html":{},"miscellaneous/functions.html":{}}}],["data:image/jpeg;base64",{"_index":1509,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["database",{"_index":279,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["databasesyncservice",{"_index":387,"title":{"classes/DatabaseSyncService.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"classes/DatabaseSyncService.html":{},"coverage.html":{}}}],["databaseurl",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":112,"title":{},"body":{"components/AboutPage.html":{},"classes/Allocation.html":{},"interfaces/Credentials.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{}}}],["date.now",{"_index":1026,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["date.settime(date.gettime",{"_index":1110,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["date.togmtstring",{"_index":1113,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["datepicker",{"_index":557,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["days",{"_index":1106,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["dd",{"_index":349,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["de",{"_index":50,"title":{},"body":{"components/AboutPage.html":{},"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["declarations",{"_index":177,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["declare",{"_index":782,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{}}}],["decoration",{"_index":1062,"title":{},"body":{"components/HomePage.html":{}}}],["decorators",{"_index":468,"title":{},"body":{"components/AppComponent.html":{}}}],["deeplinks",{"_index":483,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["deeplinks.route",{"_index":524,"title":{},"body":{"components/AppComponent.html":{}}}],["default",{"_index":300,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":226,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["defining",{"_index":1660,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["definition",{"_index":1434,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["deja",{"_index":85,"title":{},"body":{"components/AboutPage.html":{}}}],["deleteorganisationbyid",{"_index":1230,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["deleteorganisationbyid(organisationid",{"_index":1239,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["deletes",{"_index":1241,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["deletevolunteerbyid",{"_index":1637,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["deletevolunteerbyid(volunteerid",{"_index":1655,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["delogare",{"_index":455,"title":{},"body":{"components/AppComponent.html":{}}}],["departamentul",{"_index":62,"title":{},"body":{"components/AboutPage.html":{}}}],["dependencies",{"_index":176,"title":{"dependencies.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{},"index.html":{}}}],["depending",{"_index":475,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["derivate",{"_index":199,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["derivated",{"_index":633,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["derived",{"_index":206,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["description",{"_index":211,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["design",{"_index":1150,"title":{},"body":{"components/LoginComponent.html":{}}}],["despre",{"_index":26,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["destinationtype",{"_index":1503,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["destroy",{"_index":829,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["detached",{"_index":1457,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["detachedroutehandle",{"_index":1445,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["detachedtree",{"_index":1455,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["determines",{"_index":606,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/UnauthenticatedGuard.html":{}}}],["dev",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["developement",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["device",{"_index":734,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["dezastru",{"_index":72,"title":{},"body":{"components/AboutPage.html":{}}}],["dezvoltat",{"_index":124,"title":{},"body":{"components/AboutPage.html":{}}}],["diacritics",{"_index":1213,"title":{},"body":{"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["didn't",{"_index":1147,"title":{},"body":{"components/LoginComponent.html":{}}}],["din",{"_index":94,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["directive",{"_index":134,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["directives",{"_index":168,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["dismessed",{"_index":441,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dismiss",{"_index":800,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["display",{"_index":1065,"title":{},"body":{"components/HomePage.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["displayed",{"_index":1041,"title":{},"body":{"components/HomePage.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["displays",{"_index":1183,"title":{},"body":{"components/LogoutComponent.html":{}}}],["dispoziție",{"_index":58,"title":{},"body":{"components/AboutPage.html":{}}}],["doc.allocation",{"_index":1720,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.city",{"_index":1713,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.comments",{"_index":1716,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.county",{"_index":1712,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.courses",{"_index":1715,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.email",{"_index":1709,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.job",{"_index":1718,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.name",{"_index":1266,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["doc.organisation",{"_index":1714,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.phone",{"_index":1711,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.slug",{"_index":1267,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["doc.ssn",{"_index":1708,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.updated_at",{"_index":1721,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["document",{"_index":1115,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["document.addeventlistener('backbutton",{"_index":498,"title":{},"body":{"components/AppComponent.html":{}}}],["document.cookie",{"_index":1114,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["document.cookie.split",{"_index":1120,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["documentation",{"_index":1727,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":837,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["double",{"_index":418,"title":{},"body":{"components/AppComponent.html":{}}}],["dsu",{"_index":97,"title":{},"body":{"components/AboutPage.html":{}}}],["duration",{"_index":539,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dynamic",{"_index":1782,"title":{},"body":{"dependencies.html":{}}}],["eforturile",{"_index":122,"title":{},"body":{"components/AboutPage.html":{}}}],["element",{"_index":133,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["elemmatch",{"_index":1724,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["email",{"_index":674,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"components/RecoverPasswordComponent.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{}}}],["email@email.com",{"_index":953,"title":{},"body":{"classes/EmailValidation.html":{}}}],["emailvalidation",{"_index":925,"title":{"classes/EmailValidation.html":{}},"body":{"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["emailvalidation(abstractcontrol",{"_index":929,"title":{},"body":{"classes/EmailValidation.html":{}}}],["emailvalidation.emailvalidation",{"_index":1161,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["emits",{"_index":697,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["emitts",{"_index":1020,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["empty",{"_index":1604,"title":{},"body":{"classes/Volunteer.html":{}}}],["endkey",{"_index":1584,"title":{},"body":{"injectables/StaticsService.html":{}}}],["entries",{"_index":1579,"title":{},"body":{"injectables/StaticsService.html":{}}}],["entry",{"_index":240,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/CustomSelectorComponent.html":{},"injectables/LocalStorageService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["entrycomponents",{"_index":565,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["env",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":305,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":998,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["environment.serverurl",{"_index":1366,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["environments/environment",{"_index":306,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["eq",{"_index":364,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["eroare",{"_index":1420,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["err",{"_index":1511,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["error",{"_index":924,"title":{},"body":{"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/SsnValidation.html":{}}}],["errorhandler",{"_index":959,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorhandler(response",{"_index":966,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorhandlerinterceptor",{"_index":741,"title":{"interceptors/ErrorHandlerInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["errormessage",{"_index":1131,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errormessageobject",{"_index":1001,"title":{"interfaces/ErrorMessageObject.html":{}},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["errormessageservice",{"_index":742,"title":{"injectables/ErrorMessageService.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"coverage.html":{},"index.html":{}}}],["errormodel",{"_index":1004,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["errormodel.errormessageobject",{"_index":1017,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["errorresponse",{"_index":989,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error",{"_index":990,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.error",{"_index":996,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.validation",{"_index":991,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.validation.errors[key",{"_index":994,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.validation.keys.foreach((key",{"_index":992,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errors",{"_index":969,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{}}}],["este",{"_index":31,"title":{},"body":{"components/AboutPage.html":{},"classes/EmailValidation.html":{}}}],["event",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{}}}],["event.preventdefault",{"_index":506,"title":{},"body":{"components/AppComponent.html":{}}}],["event.stopimmediatepropagation",{"_index":507,"title":{},"body":{"components/AppComponent.html":{}}}],["event.subscribe(async",{"_index":845,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["eventemitter",{"_index":696,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["events",{"_index":698,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["eventualitatea",{"_index":38,"title":{},"body":{"components/AboutPage.html":{}}}],["ex",{"_index":952,"title":{},"body":{"classes/EmailValidation.html":{}}}],["exist",{"_index":1356,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["existenți",{"_index":86,"title":{},"body":{"components/AboutPage.html":{}}}],["existing",{"_index":1090,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["exiting",{"_index":466,"title":{},"body":{"components/AppComponent.html":{}}}],["expiration",{"_index":1107,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["expires",{"_index":1109,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["explicit",{"_index":1429,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["export",{"_index":24,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["exports",{"_index":180,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["extends",{"_index":1435,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["extra",{"_index":1369,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["f9f9f9",{"_index":1533,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["facilitate",{"_index":1185,"title":{},"body":{"components/LogoutComponent.html":{}}}],["false",{"_index":460,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"miscellaneous/variables.html":{}}}],["faster",{"_index":836,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["fff",{"_index":860,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["field",{"_index":1322,"title":{},"body":{"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["fields",{"_index":333,"title":{},"body":{"injectables/AllocationService.html":{},"classes/EmailValidation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"injectables/VolunteerService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["files",{"_index":1576,"title":{},"body":{"injectables/StaticsService.html":{}}}],["filter",{"_index":1638,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["filter(county",{"_index":1657,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["filters",{"_index":1659,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["finalize",{"_index":1154,"title":{},"body":{"components/LoginComponent.html":{}}}],["find",{"_index":319,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["find/lib/index",{"_index":304,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["finds",{"_index":1245,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["finished",{"_index":898,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["first",{"_index":1045,"title":{},"body":{"components/HomePage.html":{}}}],["fixed",{"_index":854,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["flex",{"_index":1066,"title":{},"body":{"components/HomePage.html":{}}}],["foarte",{"_index":107,"title":{},"body":{"components/AboutPage.html":{}}}],["following",{"_index":292,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["font",{"_index":1055,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["form",{"_index":1138,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["formbuilder",{"_index":1135,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["formcontrol",{"_index":1342,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["formgroup",{"_index":1151,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["forms",{"_index":1388,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["formsmodule",{"_index":189,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["fost",{"_index":1346,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["fotografie",{"_index":1522,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["found",{"_index":23,"title":{},"body":{"components/AboutPage.html":{},"injectables/AuthenticationService.html":{}}}],["from(localdb.alldocs",{"_index":1581,"title":{},"body":{"injectables/StaticsService.html":{}}}],["from(localdb.find",{"_index":363,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["from(localdb.post(allocation",{"_index":358,"title":{},"body":{"injectables/AllocationService.html":{}}}],["from(localdb.post(organisation",{"_index":1264,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["from(localdb.post(volunteer",{"_index":1705,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["from(localdb.query('cities/slug",{"_index":1586,"title":{},"body":{"injectables/StaticsService.html":{}}}],["fromevent",{"_index":831,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["fromevent(document",{"_index":842,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["full",{"_index":583,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SendMessageComponent.html":{}}}],["function",{"_index":975,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["functionality",{"_index":1182,"title":{},"body":{"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["functions",{"_index":1813,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["future",{"_index":1453,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["future.data.reuse",{"_index":1460,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["future.routeconfig",{"_index":1458,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["g",{"_index":1276,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["generated",{"_index":1016,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["get('/logout",{"_index":724,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getaccesstoken",{"_index":703,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getallocationbyid",{"_index":269,"title":{},"body":{"injectables/AllocationService.html":{}}}],["getallocationbyid(allocationid",{"_index":297,"title":{},"body":{"injectables/AllocationService.html":{}}}],["getcitylist",{"_index":1570,"title":{},"body":{"injectables/StaticsService.html":{}}}],["getcitylist(countyid",{"_index":1573,"title":{},"body":{"injectables/StaticsService.html":{}}}],["getcountylist",{"_index":1571,"title":{},"body":{"injectables/StaticsService.html":{}}}],["getcoursenames",{"_index":764,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcredentials",{"_index":700,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getdata",{"_index":1742,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getdata(type",{"_index":1816,"title":{},"body":{"miscellaneous/functions.html":{}}}],["geterrors",{"_index":1022,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["getitem",{"_index":1084,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getitem(key",{"_index":1095,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getorganisationbyid",{"_index":1231,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisationbyid(organisationid",{"_index":1243,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisationbyname",{"_index":1232,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisationbyname(organisationname",{"_index":1246,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisations",{"_index":1233,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["gets",{"_index":431,"title":{},"body":{"components/AppComponent.html":{}}}],["getsessionname",{"_index":1743,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getter",{"_index":702,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["getuser",{"_index":705,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getvolunteerbyid",{"_index":1639,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteerbyid(volunteerid",{"_index":1664,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteerbyssn",{"_index":1640,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteerbyssn(ssn",{"_index":1666,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteers",{"_index":1641,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteers(page",{"_index":1668,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["given",{"_index":1433,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"injectables/VolunteerService.html":{}}}],["go",{"_index":1148,"title":{},"body":{"components/LoginComponent.html":{}}}],["granted",{"_index":1484,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["graph",{"_index":1825,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":593,"title":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{},"coverage.html":{}}}],["guards",{"_index":594,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{},"index.html":{}}}],["h",{"_index":1526,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["handle",{"_index":1088,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["handle(request",{"_index":983,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler",{"_index":958,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler.interceptor.ts",{"_index":956,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["handler.interceptor.ts:25",{"_index":961,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler.interceptor.ts:45",{"_index":973,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler.interceptor.ts:59",{"_index":968,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handles",{"_index":602,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["handling",{"_index":964,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["header",{"_index":1532,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["height",{"_index":1067,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["help",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hh:mm:ss",{"_index":350,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["hidden",{"_index":409,"title":{},"body":{"components/AppComponent.html":{}}}],["home",{"_index":581,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["home'},{'name",{"_index":150,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["home.page",{"_index":1076,"title":{},"body":{"modules/HomePageModule.html":{}}}],["home.page.html",{"_index":1031,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":1030,"title":{},"body":{"components/HomePage.html":{}}}],["homepage",{"_index":149,"title":{"components/HomePage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["homepagemodule",{"_index":1072,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"index.html":{},"modules.html":{}}}],["html",{"_index":132,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["http",{"_index":654,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["http://52.50.54.63:8080",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://52.50.54.63:8080/api",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://rvm.lxhost.ro:5984",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":747,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpclient",{"_index":649,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["httpclientmodule",{"_index":748,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpevent",{"_index":977,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httphandler",{"_index":972,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httpinterceptor",{"_index":978,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httprequest",{"_index":971,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httpresponse",{"_index":967,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["https://github.com/angular/angular/issues/18374",{"_index":1432,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["https://rvm",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":1529,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["id",{"_index":228,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["identific",{"_index":92,"title":{},"body":{"components/AboutPage.html":{}}}],["identifier",{"_index":1728,"title":{},"body":{"coverage.html":{}}}],["identifies",{"_index":982,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"miscellaneous/variables.html":{}}}],["identitatea",{"_index":83,"title":{},"body":{"components/AboutPage.html":{}}}],["idx",{"_index":1557,"title":{},"body":{"classes/SsnValidation.html":{}}}],["idx.map((x",{"_index":1559,"title":{},"body":{"classes/SsnValidation.html":{}}}],["ig",{"_index":1684,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["ignore",{"_index":900,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/ErrorMessageService.html":{}}}],["ignored",{"_index":425,"title":{},"body":{"components/AppComponent.html":{}}}],["image",{"_index":1476,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["imagedata",{"_index":1510,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["implements",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["implicate",{"_index":121,"title":{},"body":{"components/AboutPage.html":{}}}],["import",{"_index":18,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["important",{"_index":570,"title":{},"body":{"modules/AppModule.html":{}}}],["imports",{"_index":203,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["inactiv",{"_index":1220,"title":{},"body":{"classes/Organisation.html":{},"injectables/OrganisationService.html":{}}}],["inappbrowser",{"_index":562,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["inbox",{"_index":1352,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["include_docs",{"_index":777,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["incorecte",{"_index":1170,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":214,"title":{"index.html":{}},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexed",{"_index":899,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["information",{"_index":21,"title":{},"body":{"components/AboutPage.html":{},"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"interceptors/RequestInterceptor.html":{},"miscellaneous/functions.html":{}}}],["informații",{"_index":1169,"title":{},"body":{"components/LoginComponent.html":{}}}],["initialisation",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["initialiseview",{"_index":1382,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["initializeapp",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["initializes",{"_index":651,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["injectable",{"_index":258,"title":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}},"body":{"injectables/AllocationService.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["injectables",{"_index":260,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"index.html":{}}}],["injected",{"_index":962,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{}}}],["injection",{"_index":653,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["input",{"_index":830,"title":{},"body":{"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{},"injectables/VolunteerService.html":{}}}],["inputs",{"_index":803,"title":{},"body":{"components/CustomSelectorComponent.html":{},"classes/PasswordValidation.html":{}}}],["inside",{"_index":1103,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["instrument",{"_index":49,"title":{},"body":{"components/AboutPage.html":{}}}],["intent",{"_index":1514,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["intercept",{"_index":960,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["intercept(request",{"_index":970,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["interceptor",{"_index":954,"title":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":759,"title":{},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["intercepts",{"_index":974,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["interface",{"_index":779,"title":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{}},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":780,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{},"index.html":{}}}],["intervenție",{"_index":116,"title":{},"body":{"components/AboutPage.html":{}}}],["introdus",{"_index":949,"title":{},"body":{"classes/EmailValidation.html":{}}}],["ion",{"_index":1070,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["ionic",{"_index":477,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["ionic/angular",{"_index":195,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"modules/HomePageModule.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["ionic/lab",{"_index":1791,"title":{},"body":{"dependencies.html":{}}}],["ionicmodule",{"_index":194,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["ionicmodule.forroot",{"_index":566,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":554,"title":{},"body":{"modules/AppModule.html":{}}}],["ionrouteroutlet",{"_index":467,"title":{},"body":{"components/AppComponent.html":{}}}],["ios",{"_index":1796,"title":{},"body":{"dependencies.html":{}}}],["isauthenticated",{"_index":642,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isdoubletap",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["isn't",{"_index":608,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["it's",{"_index":251,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["item",{"_index":1094,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["item's",{"_index":1100,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["item.name",{"_index":851,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["items",{"_index":804,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{}}}],["itself",{"_index":1101,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["job",{"_index":1593,"title":{},"body":{"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["js",{"_index":1802,"title":{},"body":{"dependencies.html":{}}}],["json.parse(savedcredentials",{"_index":716,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(credentials",{"_index":729,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["justify",{"_index":1068,"title":{},"body":{"components/HomePage.html":{}}}],["key",{"_index":711,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["keyword",{"_index":1676,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["know",{"_index":824,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["l",{"_index":113,"title":{},"body":{"components/AboutPage.html":{}}}],["la",{"_index":57,"title":{},"body":{"components/AboutPage.html":{}}}],["label",{"_index":1538,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["last",{"_index":253,"title":{},"body":{"classes/Allocation.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["lazy",{"_index":592,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["le",{"_index":55,"title":{},"body":{"components/AboutPage.html":{}}}],["left",{"_index":855,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["legend",{"_index":131,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["lifecycle",{"_index":429,"title":{},"body":{"components/AppComponent.html":{},"classes/RouteReusableStrategy.html":{}}}],["limit",{"_index":365,"title":{},"body":{"injectables/AllocationService.html":{},"classes/DatabaseSyncService.html":{},"injectables/VolunteerService.html":{}}}],["link",{"_index":677,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["linked",{"_index":634,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["list",{"_index":152,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["listener",{"_index":821,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["listvolunteercomponent",{"_index":151,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["liter",{"_index":1305,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["literal",{"_index":234,"title":{},"body":{"classes/Allocation.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["live",{"_index":327,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["loadchildren",{"_index":584,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":637,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["loader",{"_index":833,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["loading",{"_index":491,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["loads",{"_index":205,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{}}}],["loc",{"_index":45,"title":{},"body":{"components/AboutPage.html":{}}}],["local",{"_index":285,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["localallocationsdb",{"_index":871,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localcoursesdb",{"_index":872,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localdb",{"_index":316,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localdb.createindex",{"_index":332,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localdb.get(organisation._id).then((doc",{"_index":1265,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["localdb.get(organisationid).then((doc",{"_index":1270,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["localdb.get(volunteer._id).then((doc",{"_index":1706,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["localdb.get(volunteerid).then((doc",{"_index":1722,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["localdb.put(doc",{"_index":1269,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localdb.remove(doc",{"_index":1271,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localdb.replicate.from(remotedb",{"_index":1580,"title":{},"body":{"injectables/StaticsService.html":{}}}],["localdb.sync(remotedb",{"_index":331,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localorganisationsdb",{"_index":873,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localstaticsdb",{"_index":874,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localstorage",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":385,"title":{"injectables/LocalStorageService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{},"index.html":{}}}],["localvolunteersdb",{"_index":875,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["locală'/'național",{"_index":1208,"title":{},"body":{"classes/Organisation.html":{}}}],["location",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/SendMessageComponent.html":{}}}],["locations",{"_index":1565,"title":{},"body":{"injectables/StaticsService.html":{}}}],["log",{"_index":692,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logged",{"_index":1390,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["login",{"_index":611,"title":{},"body":{"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{}}}],["login'},{'name",{"_index":154,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["login(payload",{"_index":658,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login(this.loginform.value",{"_index":1164,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1130,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1129,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/home",{"_index":415,"title":{},"body":{"components/AppComponent.html":{}}}],["login/login.component",{"_index":629,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["login/logout",{"_index":619,"title":{},"body":{"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{}}}],["logincomponent",{"_index":153,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["loginform",{"_index":1132,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.controls.email.errors?.email",{"_index":1173,"title":{},"body":{"components/LoginComponent.html":{}}}],["logininfo",{"_index":717,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logininfo).pipe",{"_index":720,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logininfo.device",{"_index":718,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginpayload",{"_index":784,"title":{"interfaces/LoginPayload.html":{}},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["logout",{"_index":635,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"components/LogoutComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["logout'},{'name",{"_index":156,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["logout.component.html",{"_index":1178,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout.component.scss",{"_index":1177,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout/logout.component",{"_index":630,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["logoutcomponent",{"_index":155,"title":{"components/LogoutComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["lookup",{"_index":1278,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["lowercase",{"_index":1313,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["lowercase.test(password",{"_index":1317,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["m",{"_index":1279,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["mai",{"_index":118,"title":{},"body":{"components/AboutPage.html":{}}}],["main",{"_index":490,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationPage.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/VolunteerPage.html":{}}}],["major",{"_index":68,"title":{},"body":{"components/AboutPage.html":{}}}],["majore",{"_index":41,"title":{},"body":{"components/AboutPage.html":{}}}],["management",{"_index":30,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["map",{"_index":308,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/VolunteerService.html":{}}}],["map((body",{"_index":721,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["map((response",{"_index":360,"title":{},"body":{"injectables/AllocationService.html":{}}}],["mare",{"_index":1306,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["margin",{"_index":1527,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["match",{"_index":1292,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["match.$args.token",{"_index":528,"title":{},"body":{"components/AppComponent.html":{}}}],["matches",{"_index":1675,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["matching",{"_index":171,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchpassword",{"_index":1288,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["matchpassword(abstractcontrol",{"_index":1289,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["md",{"_index":1525,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["mean",{"_index":1037,"title":{},"body":{"components/HomePage.html":{}}}],["means",{"_index":1612,"title":{},"body":{"classes/Volunteer.html":{}}}],["menit",{"_index":33,"title":{},"body":{"components/AboutPage.html":{}}}],["menu",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["menucontroller",{"_index":390,"title":{},"body":{"components/AppComponent.html":{}}}],["mesaj",{"_index":1519,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["mesajul",{"_index":1520,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message",{"_index":534,"title":{},"body":{"components/AppComponent.html":{},"classes/EmailValidation.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{}}}],["message'},{'name",{"_index":164,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["message.component",{"_index":1633,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["message.component.html",{"_index":1465,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.scss",{"_index":1464,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts",{"_index":1463,"title":{},"body":{"components/SendMessageComponent.html":{},"coverage.html":{}}}],["message.component.ts:23",{"_index":1491,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:28",{"_index":1490,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:33",{"_index":1473,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:47",{"_index":1485,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:64",{"_index":1475,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:78",{"_index":1488,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:92",{"_index":1482,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.service",{"_index":981,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["message.service.ts",{"_index":1009,"title":{},"body":{"injectables/ErrorMessageService.html":{},"coverage.html":{}}}],["message.service.ts:11",{"_index":1018,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:16",{"_index":1019,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:27",{"_index":1023,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:37",{"_index":1015,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:51",{"_index":1013,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message/send",{"_index":1462,"title":{},"body":{"components/SendMessageComponent.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["messageform",{"_index":1467,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["messages",{"_index":1010,"title":{},"body":{"injectables/ErrorMessageService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["messagging",{"_index":965,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["method",{"_index":430,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/OrganisationService.html":{},"classes/RouteReusableStrategy.html":{},"injectables/VolunteerService.html":{}}}],["methods",{"_index":266,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["min",{"_index":1534,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["minim",{"_index":1302,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["miscellaneous",{"_index":1812,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":348,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["mobile",{"_index":78,"title":{},"body":{"components/AboutPage.html":{},"injectables/AuthenticationService.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["mobilizați",{"_index":81,"title":{},"body":{"components/AboutPage.html":{}}}],["modal",{"_index":423,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["modal.dismiss",{"_index":847,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["modalcontroller",{"_index":806,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["modalctrl",{"_index":808,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["model",{"_index":212,"title":{},"body":{"classes/Allocation.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["model/allocation.model",{"_index":312,"title":{},"body":{"injectables/AllocationService.html":{}}}],["model/organisation.model",{"_index":1254,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["model/volunteer.model",{"_index":313,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["models",{"_index":760,"title":{},"body":{"modules/CoreModule.html":{}}}],["modul",{"_index":569,"title":{},"body":{"modules/AppModule.html":{}}}],["module",{"_index":173,"title":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["modules",{"_index":175,"title":{"modules.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{},"modules.html":{}}}],["moment",{"_index":314,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["moment().format('y",{"_index":347,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["moz",{"_index":1051,"title":{},"body":{"components/HomePage.html":{}}}],["multi",{"_index":757,"title":{},"body":{"modules/CoreModule.html":{}}}],["n",{"_index":37,"title":{},"body":{"components/AboutPage.html":{},"components/RecoverPasswordComponent.html":{}}}],["name",{"_index":137,"title":{},"body":{"components/AboutPage.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["name,ssn",{"_index":1674,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["nameeq",{"_index":1118,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["names",{"_index":770,"title":{},"body":{"injectables/CourseService.html":{}}}],["namespace",{"_index":783,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{}}}],["native/camera",{"_index":1493,"title":{},"body":{"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["native/core",{"_index":1784,"title":{},"body":{"dependencies.html":{}}}],["native/date",{"_index":558,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/deeplinks",{"_index":484,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["native/in",{"_index":563,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/sms",{"_index":1788,"title":{},"body":{"dependencies.html":{}}}],["native/sms/ngx",{"_index":561,"title":{},"body":{"modules/AppModule.html":{},"components/SendMessageComponent.html":{}}}],["native/splash",{"_index":478,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/status",{"_index":480,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["natural",{"_index":73,"title":{},"body":{"components/AboutPage.html":{}}}],["navigation",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["navigation.extras",{"_index":1496,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["navigation.extras.state",{"_index":1497,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["navigation.extras.state.volunteers",{"_index":1498,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["navigator['app'].exitapp",{"_index":515,"title":{},"body":{"components/AppComponent.html":{}}}],["ncerci",{"_index":1359,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["neafiliat",{"_index":1613,"title":{},"body":{"classes/Volunteer.html":{}}}],["neccessary",{"_index":1391,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["needs",{"_index":1486,"title":{},"body":{"components/SendMessageComponent.html":{},"miscellaneous/functions.html":{}}}],["never",{"_index":694,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Volunteer.html":{}}}],["new",{"_index":317,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newcourse",{"_index":1701,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["next",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["next.handle(request",{"_index":1380,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["ngafterviewinit",{"_index":377,"title":{},"body":{"components/AppComponent.html":{}}}],["ngmodule",{"_index":186,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["ngo",{"_index":1225,"title":{},"body":{"classes/Organisation.html":{}}}],["ngondestroy",{"_index":801,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["ngoninit",{"_index":802,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["nomatch",{"_index":530,"title":{},"body":{"components/AppComponent.html":{}}}],["nothing",{"_index":691,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LogoutComponent.html":{}}}],["nou",{"_index":110,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["nregistra",{"_index":106,"title":{},"body":{"components/AboutPage.html":{}}}],["nregistrat",{"_index":1347,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["nu",{"_index":950,"title":{},"body":{"classes/EmailValidation.html":{},"components/RecoverPasswordComponent.html":{}}}],["null",{"_index":294,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["number",{"_index":788,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"interfaces/RootObject.html":{},"classes/SsnValidation.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number.test(password",{"_index":1315,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["numbers",{"_index":1492,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["număr",{"_index":1307,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["o",{"_index":32,"title":{},"body":{"components/AboutPage.html":{},"classes/PasswordValidation.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["object",{"_index":213,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":296,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["obtained",{"_index":1620,"title":{},"body":{"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["ofer",{"_index":89,"title":{},"body":{"components/AboutPage.html":{}}}],["ofere",{"_index":35,"title":{},"body":{"components/AboutPage.html":{}}}],["officer",{"_index":246,"title":{},"body":{"classes/Allocation.html":{},"classes/Volunteer.html":{}}}],["once",{"_index":464,"title":{},"body":{"components/AppComponent.html":{}}}],["ondestroy",{"_index":796,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["one",{"_index":675,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["oninit",{"_index":795,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["open",{"_index":424,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["opening",{"_index":1038,"title":{},"body":{"components/HomePage.html":{}}}],["operation",{"_index":1139,"title":{},"body":{"components/LoginComponent.html":{}}}],["operations",{"_index":264,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["optional",{"_index":281,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":277,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["order",{"_index":823,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["organisation",{"_index":221,"title":{"classes/Organisation.html":{}},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["organisation's",{"_index":1199,"title":{},"body":{"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{}}}],["organisation._id",{"_index":355,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["organisation.added_by",{"_index":1258,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.created_at",{"_index":1260,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.name",{"_index":356,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["organisation.slug",{"_index":1256,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["organisation.status",{"_index":1263,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.type",{"_index":1262,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.updated_at",{"_index":1261,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.website",{"_index":1696,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["organisationid",{"_index":1242,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["organisationname",{"_index":1248,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisations",{"_index":885,"title":{},"body":{"classes/DatabaseSyncService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"miscellaneous/variables.html":{}}}],["organisationservice",{"_index":743,"title":{"injectables/OrganisationService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/OrganisationService.html":{},"coverage.html":{},"index.html":{}}}],["otherwise",{"_index":939,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{},"classes/Volunteer.html":{}}}],["out",{"_index":184,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"components/ResetPasswordComponent.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["outlet",{"_index":471,"title":{},"body":{"components/AppComponent.html":{}}}],["output",{"_index":1272,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["over",{"_index":573,"title":{},"body":{"modules/AppModule.html":{}}}],["overview",{"_index":1819,"title":{"index.html":{}},"body":{"index.html":{}}}],["p.title",{"_index":541,"title":{},"body":{"components/AppComponent.html":{}}}],["package",{"_index":1779,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":856,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["page",{"_index":22,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{}}}],["pages",{"_index":458,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/VolunteerPage.html":{}}}],["pages/about/about.module#aboutpagemodule",{"_index":586,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/authentication/authentication.module#authenticationpagemodule",{"_index":589,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/authentication/reset",{"_index":485,"title":{},"body":{"components/AppComponent.html":{}}}],["pages/home/home.module#homepagemodule",{"_index":585,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/volunteer/volunteer.module#volunteerpagemodule",{"_index":587,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paginate",{"_index":1662,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["param",{"_index":336,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["parameter",{"_index":231,"title":{},"body":{"classes/Allocation.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["parameters",{"_index":280,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1410,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["params['token",{"_index":1412,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["parent",{"_index":577,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["parol",{"_index":1172,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["parola",{"_index":1175,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["parolele",{"_index":1298,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["parseint(abstractcontrol.value",{"_index":1547,"title":{},"body":{"classes/SsnValidation.html":{}}}],["parte",{"_index":93,"title":{},"body":{"components/AboutPage.html":{}}}],["parteneriat",{"_index":127,"title":{},"body":{"components/AboutPage.html":{}}}],["password",{"_index":621,"title":{},"body":{"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/User.html":{}}}],["password'},{'name",{"_index":159,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["password.component",{"_index":487,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticationPageModule.html":{}}}],["password.component.html",{"_index":1333,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":1332,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":1331,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:107",{"_index":1398,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:118",{"_index":1395,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":1401,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:22",{"_index":1341,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:26",{"_index":1403,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:27",{"_index":1340,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:31",{"_index":1400,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:32",{"_index":1335,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:36",{"_index":1385,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:46",{"_index":1402,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:48",{"_index":1336,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:56",{"_index":1392,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:57",{"_index":1339,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:76",{"_index":1338,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:80",{"_index":1389,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:91",{"_index":1396,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.length",{"_index":1319,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["password/recover",{"_index":628,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":486,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticationPageModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password_confirmation",{"_index":736,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["passwords",{"_index":1285,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordvalidation",{"_index":1281,"title":{"classes/PasswordValidation.html":{}},"body":{"classes/PasswordValidation.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordvalidation(abstractcontrol",{"_index":1293,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordvalidation.matchpassword",{"_index":1408,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordvalidation.passwordvalidation",{"_index":1407,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["path",{"_index":201,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"modules/VolunteerPageModule.html":{}}}],["pathmatch",{"_index":582,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":938,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{},"injectables/VolunteerService.html":{}}}],["payload",{"_index":666,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["pe",{"_index":54,"title":{},"body":{"components/AboutPage.html":{}}}],["pentru",{"_index":117,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["per",{"_index":1663,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["performaction",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["performaction(url",{"_index":434,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["performed",{"_index":690,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomePage.html":{},"components/ResetPasswordComponent.html":{}}}],["performes",{"_index":1035,"title":{},"body":{"components/HomePage.html":{}}}],["permission",{"_index":1483,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["permite",{"_index":101,"title":{},"body":{"components/AboutPage.html":{}}}],["persoanelor",{"_index":120,"title":{},"body":{"components/AboutPage.html":{}}}],["person",{"_index":1204,"title":{},"body":{"classes/Organisation.html":{}}}],["phone",{"_index":787,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"classes/PhoneValidation.html":{},"components/SendMessageComponent.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["phone's",{"_index":1039,"title":{},"body":{"components/HomePage.html":{}}}],["phone.indexof",{"_index":1329,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["phone.length",{"_index":1326,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["phonenumber",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phonenumbers",{"_index":1468,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["phonevalidation",{"_index":1320,"title":{"classes/PhoneValidation.html":{}},"body":{"classes/PhoneValidation.html":{},"coverage.html":{}}}],["phonevalidation(abstractcontrol",{"_index":1323,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["picker",{"_index":1786,"title":{},"body":{"dependencies.html":{}}}],["picker/ngx",{"_index":559,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe",{"_index":359,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{}}}],["pipe(catcherror(error",{"_index":984,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["planned",{"_index":1149,"title":{},"body":{"components/LoginComponent.html":{}}}],["platform",{"_index":87,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["platforms",{"_index":393,"title":{},"body":{"components/AppComponent.html":{}}}],["plugin",{"_index":320,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["plugins",{"_index":571,"title":{},"body":{"modules/AppModule.html":{}}}],["pop",{"_index":825,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["position",{"_index":537,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["pouchdb",{"_index":278,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('allocations",{"_index":318,"title":{},"body":{"injectables/AllocationService.html":{},"classes/DatabaseSyncService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('courses",{"_index":776,"title":{},"body":{"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('organisations",{"_index":907,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('statics",{"_index":912,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/StaticsService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('volunteers",{"_index":902,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb(environment.databaseurl",{"_index":325,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb.plugin(pouchdbfind",{"_index":322,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["pouchdb/dist/pouchdb",{"_index":302,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["pouchdbfind",{"_index":303,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["prefixes",{"_index":1365,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["preloadallmodules",{"_index":576,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":591,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["presents",{"_index":440,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["presenttoast",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["presenttoast(message",{"_index":1337,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["private",{"_index":265,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["prod",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":707,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["progile",{"_index":791,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["promise",{"_index":896,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["promise.all",{"_index":914,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["promises",{"_index":923,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["properties",{"_index":215,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["protecting",{"_index":597,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["protocolul",{"_index":95,"title":{},"body":{"components/AboutPage.html":{}}}],["prove",{"_index":682,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["provide",{"_index":567,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["provider",{"_index":262,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["providers",{"_index":179,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["provides",{"_index":596,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/UnauthenticatedGuard.html":{}}}],["public",{"_index":268,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{}}}],["pune",{"_index":56,"title":{},"body":{"components/AboutPage.html":{}}}],["purpose",{"_index":1184,"title":{},"body":{"components/LogoutComponent.html":{}}}],["puteți",{"_index":80,"title":{},"body":{"components/AboutPage.html":{}}}],["părăsi",{"_index":536,"title":{},"body":{"components/AppComponent.html":{}}}],["reactive",{"_index":1137,"title":{},"body":{"components/LoginComponent.html":{}}}],["reactiveformsmodule",{"_index":626,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["readcookie",{"_index":1744,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readcookie(name",{"_index":1117,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["receive",{"_index":676,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["recover",{"_index":158,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["recover/reset",{"_index":620,"title":{},"body":{"components/AuthenticationPage.html":{}}}],["recoverpassword",{"_index":643,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["recoverpassword(email",{"_index":671,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["recoverpasswordcomponent",{"_index":157,"title":{"components/RecoverPasswordComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["recovery",{"_index":673,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["rective",{"_index":1387,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["redirected",{"_index":1144,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["redirects",{"_index":610,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["redirectto",{"_index":580,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":315,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["referes",{"_index":963,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["reg",{"_index":941,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PhoneValidation.html":{}}}],["reg.test(email",{"_index":947,"title":{},"body":{"classes/EmailValidation.html":{}}}],["reg.test(phone",{"_index":1325,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["regex",{"_index":1274,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["regexp",{"_index":1275,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["regexp('[a",{"_index":1311,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["regexp('\\\\d",{"_index":1309,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["regexp('^[+]{0,1}[0",{"_index":1324,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["regexp('^[a",{"_index":942,"title":{},"body":{"classes/EmailValidation.html":{}}}],["regexp(/[!#$%&\\‘\\(\\)\\*?@\\[\\]^_",{"_index":1314,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["related",{"_index":263,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{}}}],["remote",{"_index":870,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["remoteallocationsdb",{"_index":876,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["remotecoursesdb",{"_index":877,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["remotedb",{"_index":324,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["remoteorganisationsdb",{"_index":878,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["remotestaticsdb",{"_index":879,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["remotevolunteersdb",{"_index":880,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["removes",{"_index":1093,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["removespecialchars",{"_index":1234,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["removespecialchars(text",{"_index":1250,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["replacelinebreaks",{"_index":1512,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["replaceurl",{"_index":615,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["represent",{"_index":811,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["request",{"_index":662,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{}}}],["request.clone",{"_index":1371,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["request.url",{"_index":1379,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["requestinterceptor",{"_index":744,"title":{"interceptors/RequestInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["requests",{"_index":655,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["res",{"_index":503,"title":{},"body":{"components/AppComponent.html":{},"classes/SsnValidation.html":{}}}],["rescue",{"_index":245,"title":{},"body":{"classes/Allocation.html":{},"classes/Volunteer.html":{}}}],["rescue_officer",{"_index":222,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{}}}],["rescue_officer._id",{"_index":335,"title":{},"body":{"injectables/AllocationService.html":{}}}],["rescue_officer.name",{"_index":341,"title":{},"body":{"injectables/AllocationService.html":{}}}],["reset",{"_index":161,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["reset/:token",{"_index":636,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["resetat",{"_index":1416,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpassword",{"_index":644,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["resetpassword(password",{"_index":679,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resetpassword.errors?.password",{"_index":1423,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordcomponent",{"_index":160,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["resetpasswordform",{"_index":1334,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["resetpasswordform.controls.confirmpassword.errors?.password",{"_index":1424,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordform.controls.email.errors?.email",{"_index":1361,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["resetpasswordform.controls.password.errors?.password",{"_index":1425,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resource",{"_index":28,"title":{},"body":{"components/AboutPage.html":{},"injectables/StaticsService.html":{}}}],["respective",{"_index":579,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/VolunteerPageModule.html":{}}}],["respects",{"_index":937,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["response",{"_index":362,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/VolunteerService.html":{}}}],["response.status",{"_index":986,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["response.url",{"_index":995,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["result",{"_index":170,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":172,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resurse",{"_index":53,"title":{},"body":{"components/AboutPage.html":{}}}],["retrieve",{"_index":1436,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["retrieve(route",{"_index":1441,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["retrieved",{"_index":1487,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["retrieves",{"_index":1097,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["retry",{"_index":329,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["return",{"_index":357,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"interceptors/RequestInterceptor.html":{},"classes/RouteReusableStrategy.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["returns",{"_index":295,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["reusable",{"_index":750,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["reuse",{"_index":1430,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["rewuest",{"_index":668,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["reîncercați",{"_index":1421,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["rgba(0,0,0,0.05",{"_index":867,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["rgba(240,237,240,1",{"_index":1050,"title":{},"body":{"components/HomePage.html":{}}}],["romania",{"_index":126,"title":{},"body":{"components/AboutPage.html":{}}}],["romanian",{"_index":1214,"title":{},"body":{"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["românia",{"_index":46,"title":{},"body":{"components/AboutPage.html":{}}}],["root",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":143,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["rootobject",{"_index":1005,"title":{"interfaces/RootObject.html":{}},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["route",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/CoreModule.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"guards/UnauthenticatedGuard.html":{}}}],["router",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["routereusablestrategy",{"_index":749,"title":{"classes/RouteReusableStrategy.html":{}},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["routereusestrategy",{"_index":553,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["routermodule",{"_index":192,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["routermodule.forchild",{"_index":1077,"title":{},"body":{"modules/HomePageModule.html":{}}}],["routermodule.forchild(routes",{"_index":204,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["routermodule.forroot(routes",{"_index":590,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":191,"title":{"routes.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"guards/UnauthenticatedGuard.html":{},"modules/VolunteerPageModule.html":{},"index.html":{},"routes.html":{}}}],["routing",{"_index":603,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["routing.module",{"_index":556,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":575,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":1071,"title":{},"body":{"components/HomePage.html":{}}}],["rugăm",{"_index":1349,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["rvm",{"_index":47,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["rxjs",{"_index":307,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":309,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"injectables/VolunteerService.html":{}}}],["s",{"_index":34,"title":{},"body":{"components/AboutPage.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"classes/SsnValidation.html":{}}}],["s.reduce((a",{"_index":1562,"title":{},"body":{"classes/SsnValidation.html":{}}}],["salvare",{"_index":123,"title":{},"body":{"components/AboutPage.html":{}}}],["same",{"_index":683,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sau",{"_index":69,"title":{},"body":{"components/AboutPage.html":{}}}],["savedcredentials",{"_index":713,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["saves",{"_index":687,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sc",{"_index":1523,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["scoll",{"_index":832,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["screen",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LogoutComponent.html":{},"dependencies.html":{}}}],["screen/ngx",{"_index":479,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["se",{"_index":91,"title":{},"body":{"components/AboutPage.html":{}}}],["search",{"_index":1642,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["search(keyword",{"_index":1671,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["searches",{"_index":1649,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["second",{"_index":1611,"title":{},"body":{"classes/Volunteer.html":{}}}],["seconds",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["section",{"_index":207,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["security",{"_index":1654,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["seism",{"_index":67,"title":{},"body":{"components/AboutPage.html":{}}}],["selected",{"_index":817,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{}}}],["selection",{"_index":771,"title":{},"body":{"injectables/CourseService.html":{}}}],["selections",{"_index":812,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AboutPage.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{}}}],["selector'},{'name",{"_index":148,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["selector.component",{"_index":756,"title":{},"body":{"modules/CoreModule.html":{}}}],["selector.component.html",{"_index":798,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.scss",{"_index":797,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts",{"_index":794,"title":{},"body":{"components/CustomSelectorComponent.html":{},"coverage.html":{}}}],["selector.component.ts:20",{"_index":810,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts:26",{"_index":807,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts:41",{"_index":814,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts:49",{"_index":822,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts:64",{"_index":819,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts:72",{"_index":818,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector/custom",{"_index":755,"title":{},"body":{"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"coverage.html":{}}}],["selector['$and'].push",{"_index":1723,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["selects",{"_index":815,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["send",{"_index":163,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{}}}],["sending",{"_index":1474,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["sendmessage",{"_index":1471,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["sendmessagecomponent",{"_index":162,"title":{"components/SendMessageComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["sends",{"_index":661,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["sent",{"_index":656,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{}}}],["server",{"_index":323,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["serverbaseurl",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverurl",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":604,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["service/error",{"_index":980,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["service/statics.service",{"_index":752,"title":{},"body":{"modules/CoreModule.html":{}}}],["services",{"_index":758,"title":{},"body":{"modules/CoreModule.html":{}}}],["serviceurl",{"_index":1003,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"interfaces/RootObject.html":{}}}],["session",{"_index":1104,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["sessionstorage",{"_index":1081,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["set",{"_index":233,"title":{},"body":{"classes/Allocation.html":{},"components/AppComponent.html":{},"injectables/ErrorMessageService.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["set(error",{"_index":1014,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["setcredentials",{"_index":645,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setcredentials(credentials",{"_index":684,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setdata",{"_index":1745,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setdata(type",{"_index":1817,"title":{},"body":{"miscellaneous/functions.html":{}}}],["seterrormessage",{"_index":1383,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["seterrormessage(message",{"_index":1397,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["setheaders",{"_index":1372,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["setitem",{"_index":1085,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setitem(key",{"_index":1098,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["sets",{"_index":275,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"injectables/ErrorMessageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["settimeout",{"_index":513,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["shadow",{"_index":864,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{}}}],["shouldattach",{"_index":1437,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldattach(route",{"_index":1446,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shoulddetach",{"_index":1438,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shoulddetach(route",{"_index":1448,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldreuseroute",{"_index":1439,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldreuseroute(future",{"_index":1450,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shows/hides",{"_index":474,"title":{},"body":{"components/AppComponent.html":{}}}],["showsidemenu",{"_index":375,"title":{},"body":{"components/AppComponent.html":{}}}],["side",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["simple",{"_index":1287,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["simplu",{"_index":108,"title":{},"body":{"components/AboutPage.html":{}}}],["situații",{"_index":63,"title":{},"body":{"components/AboutPage.html":{}}}],["size",{"_index":1056,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["skip",{"_index":1682,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["slug",{"_index":1193,"title":{},"body":{"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["sms",{"_index":560,"title":{},"body":{"modules/AppModule.html":{},"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["social",{"_index":1653,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["societatea",{"_index":59,"title":{},"body":{"components/AboutPage.html":{}}}],["something",{"_index":1146,"title":{},"body":{"components/LoginComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["spam",{"_index":1354,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["special",{"_index":1215,"title":{},"body":{"classes/Organisation.html":{},"classes/PasswordValidation.html":{},"classes/Volunteer.html":{}}}],["special.test(password",{"_index":1318,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["specialisation",{"_index":1605,"title":{},"body":{"classes/Volunteer.html":{}}}],["specificat",{"_index":1355,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["splash",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["splashscreen",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["spontani",{"_index":104,"title":{},"body":{"components/AboutPage.html":{}}}],["sprijin",{"_index":36,"title":{},"body":{"components/AboutPage.html":{}}}],["sprijinul",{"_index":128,"title":{},"body":{"components/AboutPage.html":{}}}],["src/.../allocation.service.ts",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authentication.service.ts",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.ts",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../course.service.ts",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.dev.ts",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.local.ts",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":1814,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../organisation.service.ts",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../statics.service.ts",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../volunteer.service.ts",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":574,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:102",{"_index":405,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:156",{"_index":435,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:167",{"_index":427,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:186",{"_index":439,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":470,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":472,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":457,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:85",{"_index":459,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":549,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core",{"_index":1155,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["src/app/core/authentication/authentication.guard.ts",{"_index":595,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/app/core/authentication/authentication.guard.ts:10",{"_index":601,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/app/core/authentication/authentication.guard.ts:26",{"_index":605,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/app/core/authentication/authentication.service.ts",{"_index":638,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/authentication/authentication.service.ts:106",{"_index":686,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:123",{"_index":706,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:132",{"_index":672,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:142",{"_index":681,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:21",{"_index":693,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:26",{"_index":650,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:48",{"_index":660,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:66",{"_index":667,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:81",{"_index":657,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:89",{"_index":701,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:97",{"_index":704,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/unauthenticated.guard",{"_index":632,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["src/app/core/authentication/unauthenticated.guard.ts",{"_index":1587,"title":{},"body":{"guards/UnauthenticatedGuard.html":{},"coverage.html":{}}}],["src/app/core/authentication/unauthenticated.guard.ts:10",{"_index":1589,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["src/app/core/authentication/unauthenticated.guard.ts:27",{"_index":1590,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["src/app/core/components/custom",{"_index":793,"title":{},"body":{"components/CustomSelectorComponent.html":{},"coverage.html":{}}}],["src/app/core/core.module.ts",{"_index":746,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/http/error",{"_index":955,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/http/request.interceptor.ts",{"_index":1364,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["src/app/core/http/request.interceptor.ts:17",{"_index":1367,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/app/core/http/request.interceptor.ts:31",{"_index":1368,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/app/core/local",{"_index":1078,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/model/allocation.model.ts",{"_index":210,"title":{},"body":{"classes/Allocation.html":{},"coverage.html":{}}}],["src/app/core/model/allocation.model.ts:103",{"_index":249,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:13",{"_index":229,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:18",{"_index":244,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:33",{"_index":255,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:48",{"_index":238,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:63",{"_index":235,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:78",{"_index":242,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:8",{"_index":227,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:93",{"_index":239,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:98",{"_index":252,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/authentication.model.ts",{"_index":781,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/model/error.model.ts",{"_index":1002,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["src/app/core/model/organisation.model.ts",{"_index":1188,"title":{},"body":{"classes/Organisation.html":{},"coverage.html":{}}}],["src/app/core/model/organisation.model.ts:104",{"_index":1223,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:109",{"_index":1196,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:114",{"_index":1221,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:119",{"_index":1217,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:124",{"_index":1206,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:13",{"_index":1195,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:18",{"_index":1210,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:23",{"_index":1211,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:28",{"_index":1224,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:33",{"_index":1202,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:58",{"_index":1197,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:63",{"_index":1205,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:79",{"_index":1198,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:8",{"_index":1194,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:94",{"_index":1200,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:99",{"_index":1209,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/volunteer.model",{"_index":1494,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["src/app/core/model/volunteer.model.ts",{"_index":1592,"title":{},"body":{"classes/Volunteer.html":{},"coverage.html":{}}}],["src/app/core/model/volunteer.model.ts:100",{"_index":1602,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:13",{"_index":1595,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:146",{"_index":1597,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:151",{"_index":1600,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:156",{"_index":1608,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:161",{"_index":1606,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:166",{"_index":1618,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:171",{"_index":1596,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:176",{"_index":1617,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:18",{"_index":1609,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:23",{"_index":1615,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:28",{"_index":1616,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:33",{"_index":1607,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:38",{"_index":1614,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:43",{"_index":1601,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:58",{"_index":1599,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:74",{"_index":1610,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:8",{"_index":1594,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/route",{"_index":1426,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["src/app/core/service/allocation.service.ts",{"_index":261,"title":{},"body":{"injectables/AllocationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/allocation.service.ts:105",{"_index":298,"title":{},"body":{"injectables/AllocationService.html":{}}}],["src/app/core/service/allocation.service.ts:36",{"_index":274,"title":{},"body":{"injectables/AllocationService.html":{}}}],["src/app/core/service/allocation.service.ts:65",{"_index":283,"title":{},"body":{"injectables/AllocationService.html":{}}}],["src/app/core/service/course.service.ts",{"_index":761,"title":{},"body":{"injectables/CourseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/course.service.ts:32",{"_index":774,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:37",{"_index":766,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:56",{"_index":769,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/database",{"_index":868,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{}}}],["src/app/core/service/error",{"_index":1008,"title":{},"body":{"injectables/ErrorMessageService.html":{},"coverage.html":{}}}],["src/app/core/service/organisation.service.ts",{"_index":1228,"title":{},"body":{"injectables/OrganisationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/organisation.service.ts:100",{"_index":1238,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:118",{"_index":1253,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:130",{"_index":1240,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:141",{"_index":1251,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:33",{"_index":1236,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:57",{"_index":1249,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:72",{"_index":1244,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:86",{"_index":1247,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/statics.service.ts",{"_index":1564,"title":{},"body":{"injectables/StaticsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/statics.service.ts:30",{"_index":1578,"title":{},"body":{"injectables/StaticsService.html":{}}}],["src/app/core/service/statics.service.ts:35",{"_index":1572,"title":{},"body":{"injectables/StaticsService.html":{}}}],["src/app/core/service/statics.service.ts:54",{"_index":1577,"title":{},"body":{"injectables/StaticsService.html":{}}}],["src/app/core/service/statics.service.ts:69",{"_index":1574,"title":{},"body":{"injectables/StaticsService.html":{}}}],["src/app/core/service/volunteer.service.ts",{"_index":1634,"title":{},"body":{"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/volunteer.service.ts:129",{"_index":1665,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:143",{"_index":1667,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:164",{"_index":1652,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:222",{"_index":1678,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:245",{"_index":1656,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:260",{"_index":1658,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:301",{"_index":1648,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:314",{"_index":1670,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:35",{"_index":1645,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:73",{"_index":1669,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:93",{"_index":1672,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/validators/email",{"_index":926,"title":{},"body":{"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["src/app/core/validators/password",{"_index":1282,"title":{},"body":{"classes/PasswordValidation.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/core/validators/phone",{"_index":1321,"title":{},"body":{"classes/PhoneValidation.html":{},"coverage.html":{}}}],["src/app/core/validators/ssn",{"_index":1543,"title":{},"body":{"classes/SsnValidation.html":{},"coverage.html":{}}}],["src/app/pages/about/about.module.ts",{"_index":185,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["src/app/pages/about/about.page.ts",{"_index":10,"title":{},"body":{"components/AboutPage.html":{},"coverage.html":{}}}],["src/app/pages/authentication/authentication.module.ts",{"_index":625,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["src/app/pages/authentication/authentication.page.ts",{"_index":616,"title":{},"body":{"components/AuthenticationPage.html":{},"coverage.html":{}}}],["src/app/pages/authentication/login/login.component.ts",{"_index":1128,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/pages/authentication/login/login.component.ts:22",{"_index":1152,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:27",{"_index":1145,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:32",{"_index":1136,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:47",{"_index":1141,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:54",{"_index":1140,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:65",{"_index":1142,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/logout/logout.component.ts",{"_index":1176,"title":{},"body":{"components/LogoutComponent.html":{},"coverage.html":{}}}],["src/app/pages/authentication/logout/logout.component.ts:15",{"_index":1179,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/pages/authentication/logout/logout.component.ts:29",{"_index":1180,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/pages/authentication/recover",{"_index":1330,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/authentication/reset",{"_index":1381,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":1075,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":1029,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:18",{"_index":1044,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:32",{"_index":1033,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:45",{"_index":1034,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/volunteer/add",{"_index":1762,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/volunteer/list",{"_index":1766,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/volunteer/send",{"_index":1461,"title":{},"body":{"components/SendMessageComponent.html":{},"coverage.html":{}}}],["src/app/pages/volunteer/validate",{"_index":1771,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/volunteer/volunteer.module.ts",{"_index":1630,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["src/app/pages/volunteer/volunteer.page.ts",{"_index":1624,"title":{},"body":{"components/VolunteerPage.html":{},"coverage.html":{}}}],["src/config",{"_index":489,"title":{},"body":{"components/AppComponent.html":{}}}],["src/config.ts",{"_index":1773,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.dev.ts",{"_index":1774,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.local.ts",{"_index":1775,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1776,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1777,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssn",{"_index":1544,"title":{},"body":{"classes/SsnValidation.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["ssn.tostring().length",{"_index":1548,"title":{},"body":{"classes/SsnValidation.html":{}}}],["ssnvalidation",{"_index":1542,"title":{"classes/SsnValidation.html":{}},"body":{"classes/SsnValidation.html":{},"coverage.html":{}}}],["ssnvalidation(abstractcontrol",{"_index":1546,"title":{},"body":{"classes/SsnValidation.html":{}}}],["stall",{"_index":838,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["startkey",{"_index":1582,"title":{},"body":{"injectables/StaticsService.html":{}}}],["starts",{"_index":895,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["state",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["statements",{"_index":1729,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":775,"title":{},"body":{"injectables/CourseService.html":{},"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["statics",{"_index":288,"title":{},"body":{"injectables/AllocationService.html":{},"classes/DatabaseSyncService.html":{},"classes/Organisation.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"miscellaneous/variables.html":{}}}],["staticsservice",{"_index":745,"title":{"injectables/StaticsService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/StaticsService.html":{},"coverage.html":{},"index.html":{}}}],["status",{"_index":287,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/ErrorMessageObject.html":{},"classes/Organisation.html":{},"interfaces/RootObject.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{}}}],["statusbar",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["statuscode",{"_index":1006,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["storage",{"_index":652,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["storage.service",{"_index":710,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["storage.service.ts",{"_index":1079,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["storage.service.ts:109",{"_index":1102,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:114",{"_index":1086,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:221",{"_index":1099,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:229",{"_index":1096,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:237",{"_index":1092,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:244",{"_index":1089,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["store",{"_index":1440,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["store(route",{"_index":1454,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["store/clear",{"_index":809,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["stored",{"_index":1818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stores",{"_index":461,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"injectables/ErrorMessageService.html":{},"miscellaneous/variables.html":{}}}],["storing",{"_index":1080,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["strategy",{"_index":751,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["strategy.ts",{"_index":1427,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["strategy.ts:19",{"_index":1449,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:28",{"_index":1456,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:38",{"_index":1447,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:47",{"_index":1443,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:56",{"_index":1452,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["string",{"_index":225,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":1291,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["style",{"_index":410,"title":{},"body":{"components/AppComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutPage.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["styleurls",{"_index":14,"title":{},"body":{"components/AboutPage.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["submit",{"_index":1134,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe",{"_index":1166,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe((match",{"_index":526,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribed",{"_index":827,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["subscription",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["succes",{"_index":1417,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["success",{"_index":670,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["successful",{"_index":664,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LogoutComponent.html":{}}}],["such",{"_index":599,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["suport",{"_index":452,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["support",{"_index":1822,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1823,"title":{},"body":{"modules.html":{}}}],["sync",{"_index":881,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts",{"_index":869,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{}}}],["sync.service.ts:11",{"_index":887,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:15",{"_index":893,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:20",{"_index":883,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:24",{"_index":890,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:29",{"_index":884,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:33",{"_index":891,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:38",{"_index":882,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:42",{"_index":889,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:47",{"_index":886,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:51",{"_index":892,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:77",{"_index":894,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["synchronisations",{"_index":897,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["synchronization",{"_index":276,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["table",{"_index":301,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":935,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["tap",{"_index":419,"title":{},"body":{"components/AppComponent.html":{}}}],["tapped",{"_index":463,"title":{},"body":{"components/AppComponent.html":{}}}],["tapping",{"_index":462,"title":{},"body":{"components/AppComponent.html":{}}}],["targetheight",{"_index":1506,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["targetwidth",{"_index":1505,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["te",{"_index":1357,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["tel",{"_index":453,"title":{},"body":{"components/AppComponent.html":{}}}],["tel:89992142265",{"_index":1043,"title":{},"body":{"components/HomePage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["teren",{"_index":90,"title":{},"body":{"components/AboutPage.html":{}}}],["text",{"_index":1059,"title":{},"body":{"components/HomePage.html":{},"injectables/OrganisationService.html":{},"components/SendMessageComponent.html":{},"injectables/VolunteerService.html":{}}}],["textarea",{"_index":1524,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["then((imagedata",{"_index":1507,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this._credentials",{"_index":715,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._errors",{"_index":1024,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this._errors.push",{"_index":1025,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this.authenticationservice",{"_index":1163,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authenticationservice.accesstoken",{"_index":1378,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.authenticationservice.isauthenticated",{"_index":613,"title":{},"body":{"guards/AuthenticationGuard.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["this.authenticationservice.logout().subscribe",{"_index":1186,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.authenticationservice.logout().subscribe(response",{"_index":1405,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authenticationservice.recoverpassword(this.resetpasswordform.value.email).subscribe(response",{"_index":1344,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.authenticationservice.resetpassword(this.resetpasswordform.value.password",{"_index":1413,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authenticationservice.user",{"_index":337,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{}}}],["this.base64image",{"_index":1508,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.createform",{"_index":1157,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.credentials",{"_index":726,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials$.emit(this._credentials",{"_index":730,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials.token",{"_index":727,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials.user",{"_index":732,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.databasesyncservice.sync().then",{"_index":518,"title":{},"body":{"components/AppComponent.html":{}}}],["this.errorhandler(error",{"_index":985,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.errormessage",{"_index":1168,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.errormessageservice.set",{"_index":993,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.errors$.emit(this._errors",{"_index":1028,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this.formbuilder.group",{"_index":1159,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.httpclient",{"_index":723,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpclient.post('/login",{"_index":719,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpclient.post('/recoverpassword",{"_index":733,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpclient.post('/resetpassword",{"_index":735,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.initialiseview",{"_index":1406,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.initializeapp",{"_index":493,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isdoubletap",{"_index":511,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loading",{"_index":1162,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.localallocationsdb",{"_index":909,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localallocationsdb.replicate.from(this.remoteallocationsdb",{"_index":919,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localcoursesdb",{"_index":904,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localcoursesdb.replicate.from(this.remotecoursesdb",{"_index":917,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localorganisationsdb",{"_index":906,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localorganisationsdb.replicate.from(this.remoteorganisationsdb",{"_index":918,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localstaticsdb",{"_index":911,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localstaticsdb.query('cities/slug",{"_index":920,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localstaticsdb.replicate.from(this.remotestaticsdb",{"_index":915,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localstorage",{"_index":1122,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.clear",{"_index":1127,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.getitem(key",{"_index":1125,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.removeitem(key",{"_index":1126,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.setitem(key",{"_index":1124,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorageservice.clearitem('prevent_back",{"_index":848,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.localstorageservice.clearitem(credentialskey",{"_index":731,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.localstorageservice.getitem('firstlaunch",{"_index":517,"title":{},"body":{"components/AppComponent.html":{}}}],["this.localstorageservice.getitem('prevent_back",{"_index":505,"title":{},"body":{"components/AppComponent.html":{}}}],["this.localstorageservice.getitem(credentialskey",{"_index":714,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.localstorageservice.setitem",{"_index":728,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.localstorageservice.setitem('firstlaunch",{"_index":520,"title":{},"body":{"components/AppComponent.html":{}}}],["this.localstorageservice.setitem('prevent_back",{"_index":841,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.localvolunteersdb",{"_index":901,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localvolunteersdb.replicate.from(this.remotevolunteersdb",{"_index":916,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.location.back",{"_index":516,"title":{},"body":{"components/AppComponent.html":{},"components/SendMessageComponent.html":{}}}],["this.loginform",{"_index":1158,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.markaspristine",{"_index":1165,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.menucontroller.close",{"_index":504,"title":{},"body":{"components/AppComponent.html":{}}}],["this.menucontroller.getopen().then(res",{"_index":502,"title":{},"body":{"components/AppComponent.html":{}}}],["this.messageform",{"_index":1501,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.messageform.value.message",{"_index":1516,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.modalctrl.dismiss",{"_index":850,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.modalctrl.dismiss(entry",{"_index":840,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.modalctrl.gettop",{"_index":846,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.phonenumbers.push(volunteer.phone",{"_index":1500,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.platform.is('cordova",{"_index":495,"title":{},"body":{"components/AppComponent.html":{}}}],["this.platform.ready().then",{"_index":494,"title":{},"body":{"components/AppComponent.html":{}}}],["this.presenttoast",{"_index":512,"title":{},"body":{"components/AppComponent.html":{}}}],["this.presenttoast('cererea",{"_index":1345,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.presenttoast('parol",{"_index":1415,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.remoteallocationsdb",{"_index":910,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.remotecoursesdb",{"_index":905,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.remoteorganisationsdb",{"_index":908,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.remotestaticsdb",{"_index":913,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.remotevolunteersdb",{"_index":903,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.removespecialchars(keyword",{"_index":1683,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["this.removespecialchars(name",{"_index":1257,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["this.removespecialchars(organisation.name",{"_index":1268,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["this.removespecialchars(volunteer.name",{"_index":1707,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["this.resetpasswordform",{"_index":1343,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.route.params.subscribe",{"_index":1409,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.getcurrentnavigation",{"_index":1495,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.router.navigate(['../auth/login",{"_index":1187,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.router.navigate(['../home",{"_index":1167,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":614,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/auth/reset",{"_index":527,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/home",{"_index":1591,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["this.router.navigate([url",{"_index":523,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["this.router.url",{"_index":501,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sendmessage",{"_index":1518,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.sessionstorage",{"_index":1123,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.setcredentials",{"_index":725,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.setcredentials(body",{"_index":722,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.seterrormessage('a",{"_index":1418,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.sms.haspermission",{"_index":1517,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.sms.send(this.phonenumbers",{"_index":1515,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.splashscreen.hide",{"_index":519,"title":{},"body":{"components/AppComponent.html":{}}}],["this.statusbar.backgroundcolorbyhexstring('#264998",{"_index":496,"title":{},"body":{"components/AppComponent.html":{}}}],["this.statusbar.styledefault",{"_index":497,"title":{},"body":{"components/AppComponent.html":{}}}],["this.subscription",{"_index":844,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":849,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.toastcontroller.create",{"_index":1360,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.toastctrl.create",{"_index":533,"title":{},"body":{"components/AppComponent.html":{}}}],["this.token",{"_index":1411,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.token).subscribe(response",{"_index":1414,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.type",{"_index":353,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["this.volunteerservice.allocatevolunteer(response.id",{"_index":361,"title":{},"body":{"injectables/AllocationService.html":{}}}],["through",{"_index":1181,"title":{},"body":{"components/LogoutComponent.html":{}}}],["throw",{"_index":1000,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["title",{"_index":442,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["toast",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["toast.present",{"_index":540,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["toastcontroller",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["toastctrl",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":680,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/User.html":{}}}],["top",{"_index":1528,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["total",{"_index":1661,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["toți",{"_index":448,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["transl",{"_index":1277,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["transl[m",{"_index":1280,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["trebuie",{"_index":1299,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["triggered",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["trimite",{"_index":1363,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["true",{"_index":328,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["truth",{"_index":678,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tslib",{"_index":1808,"title":{},"body":{"dependencies.html":{}}}],["twice",{"_index":465,"title":{},"body":{"components/AppComponent.html":{}}}],["type",{"_index":223,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types/pouchdb",{"_index":1793,"title":{},"body":{"dependencies.html":{}}}],["tău",{"_index":1521,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["ui",{"_index":839,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["uitat",{"_index":1174,"title":{},"body":{"components/LoginComponent.html":{}}}],["un",{"_index":48,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/PasswordValidation.html":{}}}],["unauthenticated",{"_index":1588,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["unauthenticatedguard",{"_index":631,"title":{"guards/UnauthenticatedGuard.html":{}},"body":{"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"guards/UnauthenticatedGuard.html":{},"coverage.html":{}}}],["underline",{"_index":1063,"title":{},"body":{"components/HomePage.html":{}}}],["unei",{"_index":39,"title":{},"body":{"components/AboutPage.html":{}}}],["unor",{"_index":84,"title":{},"body":{"components/AboutPage.html":{}}}],["unsubscribed",{"_index":828,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["unsubscribes",{"_index":820,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["unui",{"_index":66,"title":{},"body":{"components/AboutPage.html":{}}}],["up",{"_index":826,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["update",{"_index":254,"title":{},"body":{"classes/Allocation.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{}}}],["updated_at",{"_index":224,"title":{},"body":{"classes/Allocation.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["updatedat",{"_index":792,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["updateorganisation",{"_index":1235,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["updateorganisation(organisation",{"_index":1252,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["updates",{"_index":286,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["updatevolunteer",{"_index":1643,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["updatevolunteer(volunteer",{"_index":1677,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["uppercase",{"_index":1310,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["uppercase.test(password",{"_index":1316,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["urgen",{"_index":64,"title":{},"body":{"components/AboutPage.html":{}}}],["url",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"classes/Organisation.html":{},"interceptors/RequestInterceptor.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{}}}],["url.includes('tel",{"_index":521,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["useclass",{"_index":568,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["used",{"_index":572,"title":{},"body":{"modules/AppModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"injectables/VolunteerService.html":{}}}],["user",{"_index":247,"title":{"interfaces/User.html":{}},"body":{"classes/Allocation.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"coverage.html":{}}}],["user's",{"_index":256,"title":{},"body":{"classes/Allocation.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{}}}],["username",{"_index":786,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["username/email",{"_index":785,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["users",{"_index":1227,"title":{},"body":{"classes/Organisation.html":{}}}],["uses",{"_index":1478,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["v",{"_index":1348,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["va",{"_index":100,"title":{},"body":{"components/AboutPage.html":{}}}],["valid",{"_index":951,"title":{},"body":{"classes/EmailValidation.html":{}}}],["validate",{"_index":166,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{}}}],["validated",{"_index":936,"title":{},"body":{"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["validates",{"_index":1283,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["validatevolunteercomponent",{"_index":165,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["validation",{"_index":1143,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validation.ts",{"_index":927,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{},"coverage.html":{}}}],["validation.ts:14",{"_index":931,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["validation.ts:16",{"_index":1290,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["validation.ts:35",{"_index":1294,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["validator",{"_index":932,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/ResetPasswordComponent.html":{},"classes/SsnValidation.html":{}}}],["validators",{"_index":1153,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["validators.required",{"_index":1160,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["validați",{"_index":82,"title":{},"body":{"components/AboutPage.html":{}}}],["valideaz",{"_index":443,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["validtor",{"_index":928,"title":{},"body":{"classes/EmailValidation.html":{}}}],["value",{"_index":289,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":699,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/PasswordValidation.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":135,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["variable",{"_index":1734,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1826,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verificați",{"_index":1350,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["verifici",{"_index":1358,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["vezi",{"_index":447,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["view",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{}}}],["viewchild",{"_index":476,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(ionrouteroutlet",{"_index":469,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"injectables/VolunteerService.html":{}}}],["voluntar",{"_index":109,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{}}}],["voluntari",{"_index":52,"title":{},"body":{"components/AboutPage.html":{}}}],["voluntarii",{"_index":449,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["voluntarilor",{"_index":103,"title":{},"body":{"components/AboutPage.html":{}}}],["volunteer",{"_index":29,"title":{"classes/Volunteer.html":{}},"body":{"components/AboutPage.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["volunteer's",{"_index":243,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["volunteer'},{'name",{"_index":141,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["volunteer._id",{"_index":334,"title":{},"body":{"injectables/AllocationService.html":{}}}],["volunteer.allocation",{"_index":1691,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.city",{"_index":1687,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.comments",{"_index":1717,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.component",{"_index":1632,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["volunteer.component.ts",{"_index":1763,"title":{},"body":{"coverage.html":{}}}],["volunteer.county",{"_index":1686,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.courses",{"_index":1697,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.courses.push(newcourse",{"_index":1704,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.created_at",{"_index":1689,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.email",{"_index":1710,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.job",{"_index":1719,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.name",{"_index":339,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["volunteer.organisation",{"_index":1695,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.page",{"_index":1631,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["volunteer.page.html",{"_index":1626,"title":{},"body":{"components/VolunteerPage.html":{}}}],["volunteer.page.scss",{"_index":1625,"title":{},"body":{"components/VolunteerPage.html":{}}}],["volunteer.phone",{"_index":1692,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.service",{"_index":311,"title":{},"body":{"injectables/AllocationService.html":{}}}],["volunteer.slug",{"_index":1693,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.ssn",{"_index":1685,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.type",{"_index":1694,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.updated_at",{"_index":1690,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer/add",{"_index":446,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["volunteer/list",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["volunteer/s",{"_index":1489,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["volunteer/validate",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["volunteerid",{"_index":1647,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteerpage",{"_index":167,"title":{"components/VolunteerPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["volunteerpagemodule",{"_index":1627,"title":{"modules/VolunteerPageModule.html":{}},"body":{"modules/VolunteerPageModule.html":{},"index.html":{},"modules.html":{}}}],["volunteers",{"_index":888,"title":{},"body":{"classes/DatabaseSyncService.html":{},"components/SendMessageComponent.html":{},"classes/Volunteer.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["volunteers.foreach((volunteer",{"_index":1499,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["volunteerservice",{"_index":273,"title":{"injectables/VolunteerService.html":{}},"body":{"injectables/AllocationService.html":{},"modules/CoreModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"index.html":{}}}],["webkit",{"_index":1048,"title":{},"body":{"components/HomePage.html":{}}}],["website",{"_index":293,"title":{},"body":{"injectables/AllocationService.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["whose",{"_index":1673,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["width",{"_index":861,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["window.open(url",{"_index":522,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["within",{"_index":420,"title":{},"body":{"components/AppComponent.html":{}}}],["without",{"_index":1212,"title":{},"body":{"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["workaround",{"_index":1431,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["world",{"_index":129,"title":{},"body":{"components/AboutPage.html":{}}}],["yes",{"_index":688,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["z",{"_index":1312,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["z0",{"_index":943,"title":{},"body":{"classes/EmailValidation.html":{}}}],["z]{2,4",{"_index":946,"title":{},"body":{"classes/EmailValidation.html":{}}}],["zone",{"_index":115,"title":{},"body":{"components/AboutPage.html":{}}}],["zone.js",{"_index":1810,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":183,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutPage.html":{"url":"components/AboutPage.html","title":"component - AboutPage","body":"\n                   \n\n\n\n\n\n  Components\n  AboutPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/about/about.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                ./about.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.page.html',\n  styleUrls: ['./about.page.scss'],\n})\n\n/**\n * The app information page, found at '/about'\n */\nexport class AboutPage { }\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n  \n\n\n  \n    \n      Despre Aplicație\n    \n  \n  \n    \n      Resource and Volunteer Management este o aplicație menită să ofere sprijin în eventualitatea unei calamități majore care ar avea loc în România. RVM este un instrument de administrare de voluntari și resurse pe care le pune la dispoziție societatea civilă către Departamentul de Situații de Urgență în cazul unui seism major sau al unui alt dezastru natural. \n    \n  \n  \n    \n      Cu ajutorul acestei componente mobile a aplicației puteți să mobilizați voluntari sau să validați identitatea unor voluntari deja existenți în platformă în cazul în care aceștia își oferă ajutorul în teren și se identifică parte din protocolul de colaborare cu DSU.\n    \n  \n  \n    \n      De asemenea, aplicația va permite și administrarea voluntarilor spontani care își oferă ajutorul în caz de dezastru. Puteți înregistra foarte simplu un voluntar nou în baza de date și îl puteți aloca unei zone de intervenție pentru un mai bun management al persoanelor implicate în eforturile de salvare din teren.  \n    \n  \n  \n    \n      Aplicația RVM este dezvoltată de Code for Romania, în parteneriat cu Departamentul pentru Situații de Urgență și cu sprijinul World Bank. \n    \n  \n\n  \n    \n      \n        \n      \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n      \n        \n      \n        \n  \n\n    \n\n    \n                \n                    ./about.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Despre Aplicație                  Resource and Volunteer Management este o aplicație menită să ofere sprijin în eventualitatea unei calamități majore care ar avea loc în România. RVM este un instrument de administrare de voluntari și resurse pe care le pune la dispoziție societatea civilă către Departamentul de Situații de Urgență în cazul unui seism major sau al unui alt dezastru natural.                   Cu ajutorul acestei componente mobile a aplicației puteți să mobilizați voluntari sau să validați identitatea unor voluntari deja existenți în platformă în cazul în care aceștia își oferă ajutorul în teren și se identifică parte din protocolul de colaborare cu DSU.                  De asemenea, aplicația va permite și administrarea voluntarilor spontani care își oferă ajutorul în caz de dezastru. Puteți înregistra foarte simplu un voluntar nou în baza de date și îl puteți aloca unei zone de intervenție pentru un mai bun management al persoanelor implicate în eforturile de salvare din teren.                    Aplicația RVM este dezvoltată de Code for Romania, în parteneriat cu Departamentul pentru Situații de Urgență și cu sprijinul World Bank.                                                                                                                   '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageModule.html":{"url":"modules/AboutPageModule.html","title":"module - AboutPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AboutPage } from './about.page';\nimport { AuthenticationGuard } from '../../core/authentication/authentication.guard';\n\n/**\n * List of all routes that are derivate from '/about'\n */\nconst routes: Routes = [\n  {\n    path: '',\n    component: AboutPage,\n    canActivate: [AuthenticationGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AboutPage]\n})\n\n/**\n * Module that loads the components derived from the 'about' section\n */\nexport class AboutPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Allocation.html":{"url":"classes/Allocation.html","title":"class - Allocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Allocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/allocation.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for allocation object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                _rev\n                            \n                            \n                                city\n                            \n                            \n                                county\n                            \n                            \n                                created_at\n                            \n                            \n                                organisation\n                            \n                            \n                                rescue_officer\n                            \n                            \n                                type\n                            \n                            \n                                updated_at\n                            \n                            \n                                volunteer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:8\n                            \n                        \n\n                \n                    \n                        Allocation id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _rev\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:13\n                            \n                        \n\n                \n                    \n                        CouchDB parameter; it is automatically set\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:63\n                            \n                        \n\n                \n                    \n                        The city in which the volunteer is being allocated\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:48\n                            \n                        \n\n                \n                    \n                        The county in which the volunteer is being allocated\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:93\n                            \n                        \n\n                \n                    \n                        Entry creation date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organisation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:78\n                            \n                        \n\n                \n                    \n                        Volunteer's organisation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rescue_officer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:18\n                            \n                        \n\n                \n                    \n                        The rescue officer user that created the allocation entry\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:103\n                            \n                        \n\n                \n                    \n                        Entry type, for allocations it's 'allocations'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:98\n                            \n                        \n\n                \n                    \n                        Entry last update date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volunteer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:33\n                            \n                        \n\n                \n                    \n                        The volunteer that is being allocated\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Allocation {\n    /**\n     * Allocation id\n     */\n    _id: string;\n\n    /**\n     * CouchDB parameter; it is automatically set\n     */\n    _rev: string;\n\n    /**\n     * The rescue officer user that created the allocation entry\n     */\n    rescue_officer: {\n      /**\n       * User's id\n       */\n        _id: string;\n\n      /**\n       * User's name\n       */\n        name: string;\n    };\n\n    /**\n     * The volunteer that is being allocated\n     */\n    volunteer: {\n      /**\n       * User's id\n       */\n        _id: string;\n\n        /**\n         * User's name\n         */\n        name: string;\n    };\n\n    /**\n     * The county in which the volunteer is being allocated\n     */\n    county: {\n      /**\n       * County id\n       */\n      _id: string;\n\n      /**\n       * County name\n       */\n      name: string;\n    };\n\n    /**\n     * The city in which the volunteer is being allocated\n     */\n    city: {\n      /**\n       * City's id\n       */\n      _id: string;\n\n      /**\n       * City's name\n       */\n      name: string;\n    };\n\n    /**\n     * Volunteer's organisation\n     */\n    organisation: {\n      /**\n       * Organisation id\n       */\n        _id: string;\n\n      /**\n       * Organisation name\n       */\n      name: string;\n    };\n\n    /**\n     * Entry creation date\n     */\n    created_at: any;\n\n    /**\n     * Entry last update date\n     */\n    updated_at: any;\n\n    /**\n     * Entry type, for allocations it's 'allocations'\n     */\n    type: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllocationService.html":{"url":"injectables/AllocationService.html","title":"injectable - AllocationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/allocation.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for allocations related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAllocation\n                            \n                            \n                                    Public\n                                getAllocationById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, volunteerService: VolunteerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/allocation.service.ts:36\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Allocations Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        volunteerService\n                                                  \n                                                        \n                                                                        VolunteerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createAllocation\n                        \n                        \n                    \n                \n            \n            \n                \ncreateAllocation(volunteer: Volunteer, county: any, city: any, organisation: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/allocation.service.ts:65\n                \n            \n\n\n            \n                \n                    Creates an allocation entry in the local database and updates volunteer's allocation status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteer\n                                    \n                                                Volunteer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer object\n\n                                    \n                                \n                                \n                                    county\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        County entry from statics database\n\n                                    \n                                \n                                \n                                    city\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        City entry from statics database\n\n                                    \n                                \n                                \n                                    organisation\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object value containing the allocated volunteer's organisation\nEither contains an object with the following properties {id, name, website}, or it's null\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        An Observable with the created object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllocationById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllocationById(allocationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/allocation.service.ts:105\n                \n            \n\n\n            \n                \n                    Returns an allocation entry by its id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    allocationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the allocation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'allocations'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/allocation.service.ts:36\n                            \n                        \n\n                \n                    \n                        Table type\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { from } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthenticationService } from '../authentication';\nimport { VolunteerService } from './volunteer.service';\nimport { Allocation } from '../model/allocation.model';\nimport { Volunteer } from '../model/volunteer.model';\nimport * as moment from 'moment';\n\n/**\n * Reference for local PouchDB Allocations Database\n */\nconst localDB = new PouchDB('allocations');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Allocations Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/allocations');\n\n/**\n * Provider for allocations related operations\n */\n@Injectable()\nexport class AllocationService {\n  /**\n   * Table type\n   */\n  private type = 'allocations';\n\n  /**\n   * Class constructor, sets the synchronization options for CouchDB and PouchDB Allocations Database\n   */\n  constructor(private authenticationService: AuthenticationService,\n              private volunteerService: VolunteerService) {\n    const options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);\n\n    localDB.createIndex({\n      index: {fields: ['volunteer._id', 'rescue_officer._id']}\n    });\n   }\n\n    /**\n     *  Creates an allocation entry in the local database and updates volunteer's allocation status\n     * @param volunteer Volunteer object\n     * @param county County entry from statics database\n     * @param city City entry from statics database\n     * @param organisation Object value containing the allocated volunteer's organisation\n     * Either contains an object with the following properties {id, name, website}, or it's null\n     * @returns An Observable with the created object\n     */\n   createAllocation(volunteer: Volunteer, county: any, city: any, organisation: any) {\n    const rescue_officer = this.authenticationService.user;\n    const allocation = new Allocation();\n    allocation.volunteer = {\n      _id: volunteer._id,\n      name: volunteer.name\n    };\n    allocation.rescue_officer = {\n      _id: rescue_officer._id,\n      name: rescue_officer.name\n    };\n    allocation.county = {\n      _id: county._id,\n      name: county.name\n    };\n    allocation.city = city;\n    allocation.created_at = moment().format('Y-MM-DD HH:mm:ss');\n    allocation.updated_at = moment().format('Y-MM-DD HH:mm:ss');\n    allocation.type = this.type;\n\n    if (organisation) {\n        allocation.organisation = {\n          _id: organisation._id,\n          name: organisation.name,\n        };\n    }\n\n    return from(localDB.post(allocation))\n    .pipe(\n        map((response: any) => {\n          this.volunteerService.allocateVolunteer(response.id, volunteer._id);\n          return response;\n        })\n      );\n   }\n\n   /**\n    * Returns an allocation entry by its id\n    * @param allocationId The id of the allocation\n    */\n   public getAllocationById(allocationId: string) {\n    return from(localDB.find({\n      selector: {\n        _id: {$eq: allocationId},\n        type: this.type\n      },\n      limit: 1\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appPages\n                            \n                            \n                                    Public\n                                authenticationService\n                            \n                            \n                                    Private\n                                isDoubleTap\n                            \n                            \n                                routerOutlet\n                            \n                            \n                                showSideMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                performAction\n                            \n                            \n                                    Async\n                                presentToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar, authenticationService: AuthenticationService, router: Router, localStorageService: LocalStorageService, location: Location, databaseSyncService: DatabaseSyncService, toastCtrl: ToastController, menuController: MenuController)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for cordova platforms\n\n                                                        \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for splash screen\n\n                                                        \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for status bar\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operations\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route navigation\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for localStorage related operations\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route location change\n\n                                                        \n                                                \n                                                \n                                                        databaseSyncService\n                                                  \n                                                        \n                                                                        DatabaseSyncService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for database synchronization\n\n                                                        \n                                                \n                                                \n                                                        toastCtrl\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller for toast management\n\n                                                        \n                                                \n                                                \n                                                        menuController\n                                                  \n                                                        \n                                                                    MenuController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller for side menu management\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeApp\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:102\n                \n            \n\n\n            \n                \n                    Application initialisation\nIf cordova is available then the splash screen is hidden and status bar style is set\nThe back-button subscription is set (if the current route is login/home\nthen it closes the app completely on double tap within 3 seconds)\nIf a modal is open, then the back-button navigation is ignored\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:167\n                \n            \n\n\n            \n                \n                    Angular lifecycle method; gets triggered after view initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            performAction\n                        \n                        \n                    \n                \n            \n            \n                \nperformAction(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains the value of the next application state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentToast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToast()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:186\n                \n            \n\n\n            \n                \n                    Presents a toast that will be automatically dismessed after 3 seconds\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appPages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      title: 'Despre Aplicație',\n      url: '/about'\n    },\n    {\n      title: 'Validează un voluntar',\n      url: '/volunteer/validate'\n    },\n    {\n      title: 'Adaugă voluntar nou',\n      url: '/volunteer/add'\n    },\n    {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    },\n    {\n      title: 'Apelează suport',\n      url: 'tel:' + config.phoneNumber\n    },\n    {\n      title: 'Delogare',\n      url: '/auth/logout'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:36\n                            \n                        \n\n                \n                    \n                        Side menu navigation pages (page name and page url)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authenticationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:85\n                            \n                        \n\n                \n                    \n                        Provider for authentication related operations\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDoubleTap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:66\n                            \n                        \n\n                \n                    \n                        Stores the current state of back-button tapping: tapped once or twice (for exiting app)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routerOutlet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IonRouterOutlet\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(IonRouterOutlet)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:26\n                            \n                        \n\n                \n                    \n                        Router outlet reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSideMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                        Boolean value that shows/hides the side menu depending on user's state\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, AfterViewInit } from '@angular/core';\n\nimport { IonRouterOutlet, Platform, ToastController, MenuController } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { AuthenticationService, LocalStorageService, DatabaseSyncService } from './core';\nimport { Router } from '@angular/router';\nimport { Deeplinks } from '@ionic-native/deeplinks';\nimport { ResetPasswordComponent } from './pages/authentication/reset-password/reset-password.component';\nimport { Location } from '@angular/common';\nimport { config } from 'src/config';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\n\n/**\n * Main app component, it is the loading container for all app pages\n */\nexport class AppComponent implements AfterViewInit {\n\n  /**\n   * Router outlet reference\n   */\n  @ViewChild(IonRouterOutlet) routerOutlet: IonRouterOutlet;\n\n  /**\n   * Boolean value that shows/hides the side menu depending on user's state\n   */\n  showSideMenu = true;\n\n  /**\n   * Side menu navigation pages (page name and page url)\n   */\n  public appPages = [\n    {\n      title: 'Despre Aplicație',\n      url: '/about'\n    },\n    {\n      title: 'Validează un voluntar',\n      url: '/volunteer/validate'\n    },\n    {\n      title: 'Adaugă voluntar nou',\n      url: '/volunteer/add'\n    },\n    {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    },\n    {\n      title: 'Apelează suport',\n      url: 'tel:' + config.phoneNumber\n    },\n    {\n      title: 'Delogare',\n      url: '/auth/logout'\n    }\n  ];\n\n  /**\n   * Stores the current state of back-button tapping: tapped once or twice (for exiting app)\n   */\n  private isDoubleTap = false;\n\n  /**\n   *\n   * @param platform Provider for cordova platforms\n   * @param splashScreen Provider for splash screen\n   * @param statusBar Provider for status bar\n   * @param authenticationService Provider for authentication related operations\n   * @param router Provider for route navigation\n   * @param localStorageService Provider for localStorage related operations\n   * @param location Provider for route location change\n   * @param databaseSyncService Provider for database synchronization\n   * @param toastCtrl Controller for toast management\n   * @param menuController Controller for side menu management\n   */\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar,\n    public authenticationService: AuthenticationService,\n    private router: Router,\n    private localStorageService: LocalStorageService,\n    private location: Location,\n    private databaseSyncService: DatabaseSyncService,\n    private toastCtrl: ToastController,\n    private menuController: MenuController) {\n    this.initializeApp();\n  }\n\n  /**\n   * Application initialisation\n   * If cordova is available then the splash screen is hidden and status bar style is set\n   * The back-button subscription is set (if the current route is login/home\n   * then it closes the app completely on double tap within 3 seconds)\n   * If a modal is open, then the back-button navigation is ignored\n   */\n  initializeApp() {\n    this.platform.ready().then(() => {\n      if (this.platform.is('cordova')) {\n        this.statusBar.backgroundColorByHexString('#264998');\n        this.statusBar.styleDefault();\n\n        document.addEventListener('backbutton', (event) => {\n          const currentPath = this.router.url;\n\n          this.menuController.getOpen().then(res => {\n            if (!!res) {\n              this.menuController.close();\n              return;\n            } else {\n              if (this.localStorageService.getItem('prevent_back')) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n                return;\n              }\n\n              if (currentPath.indexOf('login') >= 0 || currentPath.indexOf('home') >= 0) {\n                if (!this.isDoubleTap) {\n                  this.isDoubleTap = true;\n                  this.presentToast();\n\n                  setTimeout(() => {\n                    this.isDoubleTap = false;\n                   }, 3000);\n                } else {\n                  navigator['app'].exitApp();\n                }\n              } else {\n                this.location.back();\n              }\n            }\n          });\n        }, false);\n\n        if (!this.localStorageService.getItem('firstLaunch')) {\n          this.databaseSyncService.sync().then(() => {\n            this.splashScreen.hide();\n            this.localStorageService.setItem('firstLaunch', false);\n           });\n        } else {\n          this.splashScreen.hide();\n        }\n      }\n    });\n  }\n\n  /**\n   *\n   * @param url Contains the value of the next application state\n   */\n  performAction(url: string) {\n    if (url.includes('tel')) {\n      window.open(url);\n    } else {\n      this.router.navigate([url]);\n    }\n  }\n\n  /**\n   * Angular lifecycle method; gets triggered after view initialisation\n   */\n  ngAfterViewInit() {\n    this.platform.ready().then(() => {\n      if (this.platform.is('cordova')) {\n        Deeplinks.route({\n          '/auth/reset/:token': ResetPasswordComponent\n        }).subscribe((match) => {\n          setTimeout(() => {\n            this.router.navigate(['/auth/reset/', match.$args.token]);\n          }, 1000);\n        }, (nomatch) => {\n          console.warn('Unmatched Route', nomatch);\n        });\n      }\n    });\n  }\n\n  /**\n   * Presents a toast that will be automatically dismessed after 3 seconds\n   */\n  async presentToast() {\n    const toast = await this.toastCtrl.create({\n      message: 'Apăsați din nou pentru a părăsi aplicația.',\n      position: 'bottom',\n      duration: 3000\n    });\n\n    toast.present();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n          \n            RVM\n          \n        \n      \n      \n        \n          \n            \n              \n                \n                  {{p.title}}\n                \n              \n            \n          \n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          RVM                                                                                                            {{p.title}}                                                                            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CoreModule } from './core';\nimport { DatePicker } from '@ionic-native/date-picker/ngx';\nimport { SMS } from '@ionic-native/sms/ngx';\nimport { InAppBrowser } from '@ionic-native/in-app-browser/ngx';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  entryComponents: [],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n    CoreModule\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    DatePicker,\n    SMS,\n    InAppBrowser\n  ],\n  bootstrap: [AppComponent]\n})\n\n/**\n * Main app modul, contains all the important providers, plugins and modules that are used all over the app\n */\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthenticationGuard } from './core';\n\n/**\n * List of all parent routes accessible from the '' route and their respective modules\n */\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    loadChildren: './pages/home/home.module#HomePageModule',\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'about',\n    loadChildren: './pages/about/about.module#AboutPageModule',\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'volunteer',\n    loadChildren: './pages/volunteer/volunteer.module#VolunteerPageModule',\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'auth',\n    loadChildren: './pages/authentication/authentication.module#AuthenticationPageModule'\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\n\n/**\n * Main app module, lazy loads all parent routes\n */\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/authentication/authentication.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Provides a guard for protecting authenticated routes (such as home, validate-volunteer)\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.guard.ts:10\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular value which handles routing operations\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service which handles the authentication operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.guard.ts:26\n                \n            \n\n\n            \n                \n                    Determines if a user can access a route, depending on its state\nIf the route isn't allowed, it automatically redirects to login page\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        a boolean value, current user's status: authenticated or not\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { AuthenticationService } from './authentication.service';\n\n/**\n * Provides a guard for protecting authenticated routes (such as home, validate-volunteer)\n */\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  /**\n   * Class constructor\n   * @param router Angular value which handles routing operations\n   * @param authenticationService The service which handles the authentication operations\n   */\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  /**\n   * Determines if a user can access a route, depending on its state\n   * If the route isn't allowed, it automatically redirects to login page\n   * @returns a boolean value, current user's status: authenticated or not\n   */\n  canActivate(): boolean {\n    if (this.authenticationService.isAuthenticated()) {\n      return true;\n    }\n\n    this.router.navigate(['/auth/login'], {\n      replaceUrl: true\n    });\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthenticationPage.html":{"url":"components/AuthenticationPage.html","title":"component - AuthenticationPage","body":"\n                   \n\n\n\n\n\n  Components\n  AuthenticationPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/authentication.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-authentication\n            \n\n            \n                styleUrls\n                ./authentication.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./authentication.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-authentication',\n  templateUrl: './authentication.page.html',\n  styleUrls: ['./authentication.page.scss'],\n})\n\n/**\n * The main page for all authentication related pages (login/logout, recover/reset password)\n */\nexport class AuthenticationPage { }\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./authentication.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthenticationPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationPageModule.html":{"url":"modules/AuthenticationPageModule.html","title":"module - AuthenticationPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthenticationPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationPageModule\n\n\n\ncluster_AuthenticationPageModule_declarations\n\n\n\n\nAuthenticationPage\n\nAuthenticationPage\n\n\n\nAuthenticationPageModule\n\nAuthenticationPageModule\n\nAuthenticationPageModule -->\n\nAuthenticationPage->AuthenticationPageModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthenticationPageModule -->\n\nLoginComponent->AuthenticationPageModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAuthenticationPageModule -->\n\nLogoutComponent->AuthenticationPageModule\n\n\n\n\n\nRecoverPasswordComponent\n\nRecoverPasswordComponent\n\nAuthenticationPageModule -->\n\nRecoverPasswordComponent->AuthenticationPageModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationPageModule -->\n\nResetPasswordComponent->AuthenticationPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/authentication/authentication.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthenticationPage\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            LogoutComponent\n                        \n                        \n                            RecoverPasswordComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthenticationPage } from './authentication.page';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { RecoverPasswordComponent } from './recover-password/recover-password.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { UnauthenticatedGuard } from 'src/app/core/authentication/unauthenticated.guard';\n\n/**\n * All routes that are derivated from '/auth' and linked to authentication components\n */\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthenticationPage,\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n    canActivate: [UnauthenticatedGuard]\n  },\n  {\n    path: 'logout',\n    component: LogoutComponent\n  },\n  {\n    path: 'reset/:token',\n    component: ResetPasswordComponent,\n  },\n  {\n    path: 'recover',\n    component: RecoverPasswordComponent,\n    canActivate: [UnauthenticatedGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [\n    AuthenticationPage,\n    ResetPasswordComponent,\n    RecoverPasswordComponent,\n    LoginComponent,\n    LogoutComponent\n  ]\n})\n/**\n * Authentication components module, loads all the auth components when it is loaded\n */\nexport class AuthenticationPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides the basic authentication operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _credentials\n                            \n                            \n                                    Public\n                                credentials$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuthenticated\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Public\n                                recoverPassword\n                            \n                            \n                                    Public\n                                resetPassword\n                            \n                            \n                                    Private\n                                setCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    credentials\n                                \n                                \n                                    accessToken\n                                \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.service.ts:26\n                            \n                        \n\n                \n                    \n                            Class constructor, initializes current credentials value if some credentials are found in local storage\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Class reference injection, handles http requests sent from this service\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service reference injection, handles operations on local storage\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:81\n                \n            \n\n\n            \n                \n                    Determines if the current user is authenticated\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        A boolean value with the authenticated status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(payload: Authentication.LoginPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:48\n                \n            \n\n\n            \n                \n                    Sends a login request to the backend server\nIf it's successful stores the credentials and returns the response body\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Authentication.LoginPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Login credentials\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable that contains the authentication credentials\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:66\n                \n            \n\n\n            \n                \n                    Sends a logout rewuest to the backend server\nIf it's successful clears the credentials information from local storage\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable with a boolean value for success (true)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            recoverPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    recoverPassword(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:132\n                \n            \n\n\n            \n                \n                    Sends a request to the backend server for password recovery\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's email, it's the one that will receive the password reset link\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable that contains a truth value: successful or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(password: string, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:142\n                \n            \n\n\n            \n                \n                    Sends a request to the backend server for password reset\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's new password\n\n                                    \n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The token from the email send by password recovery to prove that it's the same user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable that contains a truth value: successful or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setCredentials\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCredentials(credentials?: Authentication.Credentials)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:106\n                \n            \n\n\n            \n                \n                    Saves current user's credentials in local storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                Authentication.Credentials\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An object that contains the authentication token and data from server if user performed a login,\nor nothing if user just performed a log out\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _credentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Authentication.Credentials | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:21\n                            \n                        \n\n                \n                    \n                        Value that stores user's credentials after authentication\nIt's null if the user never authenticates\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            credentials$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:26\n                            \n                        \n\n                \n                    \n                        Value which emits events when credentials' values change (on login/logout)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        credentials\n                    \n                \n\n                \n                    \n                        getcredentials()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:89\n                                \n                            \n                    \n                        \n                                Getter method for the credentials object\n\n\n                                \n                                \n                                \n                                    Returns :         Authentication.Credentials | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:97\n                                \n                            \n                    \n                        \n                                Getter method for the authentication token\n\n\n                                \n                                \n                                \n                                    Returns :     string | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:123\n                                \n                            \n                    \n                        \n                                Getter method for current user's profile\n\n\n                                \n                                \n                                \n                                    Returns :         Authentication.User | null\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LocalStorageService } from '../local-storage.service';\n\n/**\n * Stores the value of credentials' key\n */\nconst credentialsKey = 'credentials';\n\n/**\n * Provides the basic authentication operations.\n */\n@Injectable()\nexport class AuthenticationService {\n  /**\n   * Value that stores user's credentials after authentication\n   * It's null if the user never authenticates\n   */\n  private _credentials: Authentication.Credentials | null;\n\n  /**\n   * Value which emits events when credentials' values change (on login/logout)\n   */\n  public credentials$ = new EventEmitter();\n\n  /**\n   * Class constructor, initializes current credentials value if some credentials are found in local storage\n   * @param httpClient Class reference injection, handles http requests sent from this service\n   * @param localStorageService Service reference injection, handles operations on local storage\n   */\n  constructor(\n    private httpClient: HttpClient,\n    private localStorageService: LocalStorageService) {\n      const savedCredentials = this.localStorageService.getItem(credentialsKey);\n      if (savedCredentials) {\n        this._credentials = JSON.parse(savedCredentials);\n      }\n  }\n\n  /**\n   * Sends a login request to the backend server\n   * If it's successful stores the credentials and returns the response body\n   * @param payload Login credentials\n   * @returns An observable that contains the authentication credentials\n   */\n  login(\n    payload: Authentication.LoginPayload\n  ): Observable {\n    const loginInfo: any = payload;\n    loginInfo.device = 'mobile';\n    return this.httpClient.post('/login', loginInfo).pipe(\n      map((body: any) => {\n        this.setCredentials(body);\n        return body;\n      })\n    );\n  }\n\n  /**\n   * Sends a logout rewuest to the backend server\n   * If it's successful clears the credentials information from local storage\n   * @returns An observable with a boolean value for success (true)\n   */\n  logout(): Observable {\n    return this.httpClient\n      .get('/logout')\n      .pipe(\n        map(() => {\n          this.setCredentials();\n          return true;\n        })\n      );\n  }\n\n  /**\n   * Determines if the current user is authenticated\n   * @returns A boolean value with the authenticated status\n   */\n  isAuthenticated(): boolean {\n    return !!this.credentials;\n  }\n\n  /**\n   * Getter method for the credentials object\n   * @returns The current credentials\n   */\n  get credentials(): Authentication.Credentials | null {\n    return this._credentials;\n  }\n\n  /**\n   * Getter method for the authentication token\n   * @returns The current token\n   */\n  get accessToken(): string | null {\n    return this.credentials ? this.credentials.token : null;\n  }\n\n  /**\n   * Saves current user's credentials in local storage\n   * @param credentials An object that contains the authentication token and data from server if user performed a login,\n   * or nothing if user just performed a log out\n   */\n  private setCredentials(credentials?: Authentication.Credentials) {\n    this._credentials = credentials || null;\n    if (credentials) {\n      this.localStorageService.setItem(\n        credentialsKey,\n        JSON.stringify(credentials)\n      );\n      this.credentials$.emit(this._credentials);\n    } else {\n      this.localStorageService.clearItem(credentialsKey);\n    }\n  }\n\n   /**\n    * Getter method for current user's profile\n    * @returns The current user\n    */\n  get user(): Authentication.User | null {\n    return this.credentials ? this.credentials.user : null;\n  }\n\n  /**\n   * Sends a request to the backend server for password recovery\n   * @param email User's email, it's the one that will receive the password reset link\n   * @returns an observable that contains a truth value: successful or not\n   */\n  public recoverPassword(email: string) {\n    return this.httpClient.post('/recoverpassword', {email, device: 'mobile'});\n  }\n\n   /**\n    * Sends a request to the backend server for password reset\n    * @param password User's new password\n    * @param token The token from the email send by password recovery to prove that it's the same user\n    * @returns an observable that contains a truth value: successful or not\n    */\n  public resetPassword(password: string, token: string) {\n    return this.httpClient.post('/resetpassword', {password, password_confirmation: password, token, device: 'mobile'});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nCustomSelectorComponent\n\nCustomSelectorComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nCustomSelectorComponent->CoreModule\n\n\n\n\n\nAllocationService\n\nAllocationService\n\nCoreModule -->\n\nAllocationService->CoreModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nCoreModule -->\n\nAuthenticationService->CoreModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nCoreModule -->\n\nCourseService->CoreModule\n\n\n\n\n\nErrorHandlerInterceptor\n\nErrorHandlerInterceptor\n\nCoreModule -->\n\nErrorHandlerInterceptor->CoreModule\n\n\n\n\n\nErrorMessageService\n\nErrorMessageService\n\nCoreModule -->\n\nErrorMessageService->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\nOrganisationService\n\nOrganisationService\n\nCoreModule -->\n\nOrganisationService->CoreModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\n\n\nStaticsService\n\nStaticsService\n\nCoreModule -->\n\nStaticsService->CoreModule\n\n\n\n\n\nVolunteerService\n\nVolunteerService\n\nCoreModule -->\n\nVolunteerService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CustomSelectorComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            CustomSelectorComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AllocationService\n                        \n                        \n                            AuthenticationService\n                        \n                        \n                            CourseService\n                        \n                        \n                            ErrorHandlerInterceptor\n                        \n                        \n                            ErrorMessageService\n                        \n                        \n                            LocalStorageService\n                        \n                        \n                            OrganisationService\n                        \n                        \n                            RequestInterceptor\n                        \n                        \n                            RequestInterceptor\n                        \n                        \n                            StaticsService\n                        \n                        \n                            VolunteerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  HTTP_INTERCEPTORS,\n  HttpClientModule\n} from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\nimport {\n  AuthenticationGuard,\n  AuthenticationService,\n} from './authentication';\nimport {\n  RequestInterceptor,\n  ErrorHandlerInterceptor\n} from './http';\nimport { LocalStorageService } from './local-storage.service';\nimport { RouteReusableStrategy } from './route-reusable-strategy';\nimport {\n  ErrorMessageService,\n  CourseService,\n  VolunteerService,\n  OrganisationService,\n  DatabaseSyncService,\n  AllocationService\n} from './service';\nimport { StaticsService } from './service/statics.service';\nimport { UnauthenticatedGuard } from './authentication/unauthenticated.guard';\nimport { CustomSelectorComponent } from './components/custom-selector/custom-selector.component';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule,\n    IonicModule,\n    FormsModule\n  ],\n  declarations: [\n    CustomSelectorComponent\n  ],\n  providers: [\n    LocalStorageService,\n    AuthenticationService,\n    AuthenticationGuard,\n    UnauthenticatedGuard,\n    RequestInterceptor,\n    ErrorHandlerInterceptor,\n    VolunteerService,\n    ErrorMessageService,\n    StaticsService,\n    CourseService,\n    OrganisationService,\n    DatabaseSyncService,\n    AllocationService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: RequestInterceptor,\n      multi: true\n    },\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy\n    }\n  ],\n  entryComponents: [\n    CustomSelectorComponent\n  ]\n})\n\n/**\n * Module for all core related services, interceptors and models\n */\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseService.html":{"url":"injectables/CourseService.html","title":"injectable - CourseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/course.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for course related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                courseNamesType\n                            \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCourseNames\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/course.service.ts:37\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Courses Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourseNames\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourseNames()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:56\n                \n            \n\n\n            \n                \n                    Returns all course names for selection\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            courseNamesType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'course_names'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/course.service.ts:37\n                            \n                        \n\n                \n                    \n                        Course's names table type\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'courses'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/course.service.ts:32\n                            \n                        \n\n                \n                    \n                        Courses' table type (if the course is not a static value)\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { from } from 'rxjs';\nimport { AuthenticationService } from '../authentication';\n\n/**\n * Reference for local PouchDB Courses Database\n */\nconst localDB = new PouchDB('courses');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Courses Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/courses');\n\n/**\n * Provider for course related operations\n */\n@Injectable()\nexport class CourseService {\n\n  /**\n   * Courses' table type (if the course is not a static value)\n   */\n  private type = 'courses';\n\n  /**\n   * Course's names table type\n   */\n  private courseNamesType = 'course_names';\n\n  /**\n   * Class constructor, sets the synchronization options for CouchDB and PouchDB Courses Database\n   * @param authService Provider for authentication related operations\n   */\n  constructor(private authService: AuthenticationService) {\n    const options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);\n   }\n\n  /**\n   * Returns all course names for selection\n   */\n  getCourseNames() {\n    return from(localDB.find({\n      selector: {\n          type: 'course_names'\n      },\n      include_docs: true,\n      attachments: true\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Credentials.html":{"url":"interfaces/Credentials.html","title":"interface - Credentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Credentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for credentials object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        token\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Authentication token\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User object\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  /**\n   * Interface for login payload\n   */\n  export interface LoginPayload {\n    /**\n     * Login username/email\n     */\n    username: string;\n\n    /**\n     * Login password\n     */\n    password: string;\n  }\n\n  /**\n   * Interface for user object\n   */\n  export interface User {\n    /**\n     * User id\n     */\n    _id: string;\n\n    /**\n     * User name\n     */\n    name: string;\n\n    /**\n     * User phone number\n     */\n    phone?: any;\n\n    /**\n     * User email address\n     */\n    email: string;\n\n    /**\n     * User creation date\n     */\n    createdAt: Date;\n\n    /**\n     * Date of the last update to the user's progile\n     */\n    updatedAt: Date;\n  }\n\n  /**\n   * Interface for credentials object\n   */\n  export interface Credentials {\n    /**\n     * User object\n     */\n    user: User;\n\n    /**\n     * Authentication token\n     */\n    token: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CustomSelectorComponent.html":{"url":"components/CustomSelectorComponent.html","title":"component - CustomSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CustomSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/components/custom-selector/custom-selector.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-custom-selector\n            \n\n            \n                styleUrls\n                ./custom-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./custom-selector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSelectedEntry\n                            \n                            \n                                dismiss\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/components/custom-selector/custom-selector.component.ts:26\n                            \n                        \n\n                \n                    \n                            Page constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Modal Controller reference for modal view related operations\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                LocalStorage service reference for store/clear on local storage\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:20\n                            \n                        \n                \n                    \n                        Data sent to the modal to represent the selections\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeSelectedEntry\n                        \n                        \n                    \n                \n            \n            \n                \nchangeSelectedEntry(entry: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:41\n                \n            \n\n\n            \n                \n                    Triggered when a user selects an entry; it closes the modal and returns to the calling page\nthe selected value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User selected entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dismiss\n                        \n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:72\n                \n            \n\n\n            \n                \n                    Closes the modal view\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:64\n                \n            \n\n\n            \n                \n                    Unsubscribes from the back-button listener and clears the local storage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:49\n                \n            \n\n\n            \n                \n                    Page initialisation, sets the subscription for the back-button event and\nsets a value in the local storage in order to know when the pop-up is open\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:26\n                            \n                        \n\n                \n                    \n                        Stores a subscription to the back button event; it will be subscribed on page initialisation\nand unsubscribed on page destroy\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { LocalStorageService } from '../../local-storage.service';\nimport { fromEvent } from 'rxjs';\n\n@Component({\n  selector: 'app-custom-selector',\n  templateUrl: './custom-selector.component.html',\n  styleUrls: ['./custom-selector.component.scss'],\n})\n\n/**\n * Custom selector with scoll loader\n * Loads big chucks of information faster and doesn't stall the UI\n */\nexport class CustomSelectorComponent implements OnInit, OnDestroy {\n  /**\n   * Data sent to the modal to represent the selections\n   */\n  @Input() items: any[];\n\n  /**\n   * Stores a subscription to the back button event; it will be subscribed on page initialisation\n   * and unsubscribed on page destroy\n   */\n  subscription: any;\n\n  /**\n   * Page constructor\n   * @param modalCtrl Modal Controller reference for modal view related operations\n   * @param localStorageService LocalStorage service reference for store/clear on local storage\n   */\n  constructor(private modalCtrl: ModalController,\n              private localStorageService: LocalStorageService) { }\n\n  /**\n   * Triggered when a user selects an entry; it closes the modal and returns to the calling page\n   * the selected value\n   * @param entry User selected entry\n   */\n  changeSelectedEntry(entry: any) {\n    this.modalCtrl.dismiss(entry);\n  }\n\n  /**\n   * Page initialisation, sets the subscription for the back-button event and\n   * sets a value in the local storage in order to know when the pop-up is open\n   */\n  ngOnInit() {\n    this.localStorageService.setItem('prevent_back', true);\n\n    const event = fromEvent(document, 'backbutton');\n    this.subscription = event.subscribe(async () => {\n        const modal = await this.modalCtrl.getTop();\n        if (modal) {\n            modal.dismiss();\n        }\n    });\n  }\n\n  /**\n   * Unsubscribes from the back-button listener and clears the local storage\n   */\n  ngOnDestroy() {\n    this.localStorageService.clearItem('prevent_back');\n    this.subscription.unsubscribe();\n  }\n\n  /**\n   * Closes the modal view\n   */\n  dismiss() {\n    this.modalCtrl.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n        \n          {{ item.name }}\n        \n      \n    \n    \n      Cancel\n    \n\n    \n\n    \n                \n                    ./custom-selector.component.scss\n                \n                .close-button {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    padding: 20px 15px;\n    background: #fff;\n    width: 100%;\n    box-shadow: 0px 0px 10px rgba(0,0,0,0.05);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ item.name }}                            Cancel    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CustomSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseSyncService.html":{"url":"classes/DatabaseSyncService.html","title":"class - DatabaseSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/database-sync.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for database synchronization (local and remote)\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                localAllocationsDB\n                            \n                            \n                                localCoursesDB\n                            \n                            \n                                localOrganisationsDB\n                            \n                            \n                                localStaticsDB\n                            \n                            \n                                localVolunteersDB\n                            \n                            \n                                remoteAllocationsDB\n                            \n                            \n                                remoteCoursesDB\n                            \n                            \n                                remoteOrganisationsDB\n                            \n                            \n                                remoteStaticsDB\n                            \n                            \n                                remoteVolunteersDB\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localAllocationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:38\n                            \n                        \n\n                \n                    \n                        Reference for local PouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localCoursesDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:20\n                            \n                        \n\n                \n                    \n                        Reference for local PouchDB Courses Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localOrganisationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:29\n                            \n                        \n\n                \n                    \n                        Reference for local PouchDB Organisations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localStaticsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:47\n                            \n                        \n\n                \n                    \n                        Reference for local PouchDB Statics Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localVolunteersDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:11\n                            \n                        \n\n                \n                    \n                        Reference for local PouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteAllocationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:42\n                            \n                        \n\n                \n                    \n                        Reference for server CouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteCoursesDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:24\n                            \n                        \n\n                \n                    \n                        Reference for server CouchDB Courses Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteOrganisationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:33\n                            \n                        \n\n                \n                    \n                        Reference for server CouchDB Organisations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteStaticsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:51\n                            \n                        \n\n                \n                    \n                        Reference for server CouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteVolunteersDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:15\n                            \n                        \n\n                \n                    \n                        Reference for server CouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sync\n                        \n                        \n                    \n                \n            \n            \n                \nsync()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/database-sync.service.ts:77\n                \n            \n\n\n            \n                \n                    Starts database synchronization\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise when all database synchronisations are finished and the view is indexed\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as PouchDB from 'pouchdb/dist/pouchdb';\nimport { environment } from '../../../environments/environment';\n\n/**\n * Service for database synchronization (local and remote)\n */\nexport class DatabaseSyncService {\n  /**\n   * Reference for local PouchDB Volunteers Database\n   */\n  localVolunteersDB: any;\n  /**\n   * Reference for server CouchDB Volunteers Database\n   */\n  remoteVolunteersDB: any;\n\n  /**\n   * Reference for local PouchDB Courses Database\n   */\n  localCoursesDB: any;\n  /**\n   * Reference for server CouchDB Courses Database\n   */\n  remoteCoursesDB: any;\n\n  /**\n   * Reference for local PouchDB Organisations Database\n   */\n  localOrganisationsDB: any;\n  /**\n   * Reference for server CouchDB Organisations Database\n   */\n  remoteOrganisationsDB: any;\n\n  /**\n   * Reference for local PouchDB Allocations Database\n   */\n  localAllocationsDB: any;\n  /**\n   * Reference for server CouchDB Allocations Database\n   */\n  remoteAllocationsDB: any;\n\n  /**\n   * Reference for local PouchDB Statics Database\n   */\n  localStaticsDB: any;\n  /**\n   * Reference for server CouchDB Allocations Database\n   */\n  remoteStaticsDB: any;\n\n    /**\n     * @ignore\n     */\n    constructor() {\n      this.localVolunteersDB = new PouchDB('volunteers');\n      this.remoteVolunteersDB = new PouchDB(environment.databaseURL + '/volunteers');\n\n      this.localCoursesDB = new PouchDB('courses');\n      this.remoteCoursesDB = new PouchDB(environment.databaseURL + '/courses');\n\n      this.localOrganisationsDB = new PouchDB('organisations');\n      this.remoteOrganisationsDB = new PouchDB(environment.databaseURL + '/organisations');\n\n      this.localAllocationsDB = new PouchDB('allocations');\n      this.remoteAllocationsDB = new PouchDB(environment.databaseURL + '/allocations');\n\n      this.localStaticsDB = new PouchDB('statics');\n      this.remoteStaticsDB = new PouchDB(environment.databaseURL + '/statics');\n     }\n\n    /**\n     * Starts database synchronization\n     * @returns A promise when all database synchronisations are finished and the view is indexed\n     */\n    sync(): Promise {\n      return Promise.all(\n          [\n            this.localStaticsDB.replicate.from(this.remoteStaticsDB),\n            this.localVolunteersDB.replicate.from(this.remoteVolunteersDB),\n            this.localCoursesDB.replicate.from(this.remoteCoursesDB),\n            this.localOrganisationsDB.replicate.from(this.remoteOrganisationsDB),\n            this.localAllocationsDB.replicate.from(this.remoteAllocationsDB)\n          ]).then(() => {\n            return this.localStaticsDB.query('cities/slug', { limit: 0 });\n           }).catch(error => console.log(`Error in promises ${error}`));\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailValidation.html":{"url":"classes/EmailValidation.html","title":"class - EmailValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/email-validation.ts\n        \n\n            \n                Description\n            \n            \n                Validtor class for email address' fields\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                emailValidation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            emailValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emailValidation(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/email-validation.ts:14\n                \n            \n\n\n            \n                \n                    Email validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the value from the input\nthat is being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the string respects the pattern, an error message otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\n\n/**\n * Validtor class for email address' fields\n */\nexport class EmailValidation {\n\n    /**\n     * Email validator\n     * @param abstractControl An abstract control reference, to automatically take the value from the input\n     * that is being validated\n     * @returns null if the string respects the pattern, an error message otherwise\n     */\n    static emailValidation(abstractControl: AbstractControl): any {\n        const email = abstractControl.value;\n        const reg = new RegExp('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$');\n\n        if (reg.test(email)) {\n            return null;\n        }\n\n        return { 'email': 'Adresa de email introdusă nu este validă (ex: email@email.com).' };\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorHandlerInterceptor.html":{"url":"interceptors/ErrorHandlerInterceptor.html","title":"interceptor - ErrorHandlerInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorHandlerInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/error-handler.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Adds a default error handler to all requests.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, localStorageService: LocalStorageService, errorMessageService: ErrorMessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/error-handler.interceptor.ts:25\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular value which handles routing operations\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected service referes the LocalStorageService for handling operations related to storage\n\n                                                        \n                                                \n                                                \n                                                        errorMessageService\n                                                  \n                                                        \n                                                                        ErrorMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected service referes the ErrorMessageService for handling operations related to error messagging\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            errorHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    errorHandler(response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/error-handler.interceptor.ts:59\n                \n            \n\n\n            \n                \n                    Handles the request errors depending on its code\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request response\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable with the http event\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/error-handler.interceptor.ts:45\n                \n            \n\n\n            \n                \n                    Intercepts all requests that are sent and adds an error handling function to them\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current request that is being sent\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Handles the next state of the request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable with the new request, with the additional information\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from '../local-storage.service';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ErrorMessageService } from '../service/error-message.service';\nimport { environment } from '../../../environments/environment';\n\n/**\n * Key that identifies the credentials\n */\nconst credentialsKey = 'credentials';\n\n/**\n * Adds a default error handler to all requests.\n */\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n\n  /**\n   * Class constructor\n   * @param router Angular value which handles routing operations\n   * @param localStorageService Injected service referes the LocalStorageService for handling operations related to storage\n   * @param errorMessageService Injected service referes the ErrorMessageService for handling operations related to error messagging\n   */\n  constructor(\n    private router: Router,\n    private localStorageService: LocalStorageService,\n    private errorMessageService: ErrorMessageService\n  ) {}\n\n   /**\n    * Intercepts all requests that are sent and adds an error handling function to them\n    * @param request The current request that is being sent\n    * @param next Handles the next state of the request\n    * @returns An observable with the new request, with the additional information\n    */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return next\n      .handle(request)\n      .pipe(catchError(error => this.errorHandler(error)));\n  }\n\n  /**\n   * Handles the request errors depending on its code\n   * @param response Request response\n   * @returns An observable with the http event\n   */\n  private errorHandler(\n    response: HttpResponse\n  ): Observable> {\n    if (response.status === 401) {\n      this.localStorageService.clearItem(credentialsKey);\n      this.router.navigate(['/auth/login'], {\n        replaceUrl: true\n      });\n    } else if (response.status === 400) {\n      const errorResponse: any = response;\n      if (errorResponse.error) {\n        if (errorResponse.error.validation) {\n          errorResponse.error.validation.keys.forEach((key: string) => {\n            this.errorMessageService.set(\n              errorResponse.error.validation.errors[key],\n              key,\n              response.url\n            );\n          });\n        } else {\n          this.errorMessageService.set(\n            errorResponse.error.error,\n            '_GLOBAL_',\n            response.url\n          );\n        }\n      }\n    }\n\n    if (!environment.production) {\n      console.error('Request error', response);\n    }\n    throw response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorMessageObject.html":{"url":"interfaces/ErrorMessageObject.html","title":"interface - ErrorMessageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorMessageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/error.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for error message\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        id\n                                \n                                \n                                        serviceUrl\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error message\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error message id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceUrl\n                                    \n                                \n                                \n                                    \n                                        serviceUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error url\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        declare namespace ErrorModel {\n\n  /**\n   * Interface for error object\n   */\n  export interface RootObject {\n    /**\n     * Error status code\n     */\n    statusCode: number;\n\n    /**\n     * Error\n     */\n    error: string;\n\n    /**\n     * Error message\n     */\n    message: string;\n\n    /**\n     * Error attributes\n     */\n    attributes?: any;\n  }\n\n  /**\n   * Interface for error message\n   */\n  export interface ErrorMessageObject {\n    /**\n     * Error message id\n     */\n    id: number;\n\n    /**\n     * Error message\n     */\n    error: string;\n\n    /**\n     * Error type\n     */\n    type: string;\n\n    /**\n     * Error url\n     */\n    serviceUrl: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorMessageService.html":{"url":"injectables/ErrorMessageService.html","title":"injectable - ErrorMessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorMessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/error-message.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for error messages\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _errors\n                            \n                            \n                                    Public\n                                errors$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errors\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/error-message.service.ts:51\n                \n            \n\n\n            \n                \n                    Clears the error messages and emits an event\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            set\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    set(error: string, type: string, serviceUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/error-message.service.ts:37\n                \n            \n\n\n            \n                \n                    Sets the error messages and emits an event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error message\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error type\n\n                                    \n                                \n                                \n                                    serviceUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Service Url that generated the error\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorModel.ErrorMessageObject[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/error-message.service.ts:11\n                            \n                        \n\n                \n                    \n                        Value that stores the error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errors$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/error-message.service.ts:16\n                            \n                        \n\n                \n                    \n                        Value that emitts events when error messages are changed\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errors\n                    \n                \n\n                \n                    \n                        geterrors()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/service/error-message.service.ts:27\n                                \n                            \n                    \n                        \n                                Getter for current error messages\n\n\n                                \n                                \n                                \n                                    Returns :         ErrorModel.ErrorMessageObject[]\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\n\n/**\n * Provider for error messages\n */\n@Injectable()\nexport class ErrorMessageService {\n  /**\n   * Value that stores the error messages\n   */\n  private _errors: ErrorModel.ErrorMessageObject[] = [];\n\n  /**\n   * Value that emitts events when error messages are changed\n   */\n  public errors$ = new EventEmitter();\n\n  /**\n   * @ignore\n   */\n  constructor() {}\n\n  /**\n   * Getter for current error messages\n   * @returns current error messages\n   */\n  get errors(): ErrorModel.ErrorMessageObject[] {\n    return this._errors;\n  }\n\n  /**\n   * Sets the error messages and emits an event\n   * @param error Error message\n   * @param type Error type\n   * @param serviceUrl Service Url that generated the error\n   */\n  public set(error: string, type: string, serviceUrl: string) {\n    this._errors.push({\n      id: Date.now(),\n      error: error,\n      type: type,\n      serviceUrl: serviceUrl\n    });\n    console.log(this._errors);\n    this.errors$.emit(this._errors);\n  }\n\n  /**\n   * Clears the error messages and emits an event\n   */\n  public clear() {\n    this._errors = [];\n    this.errors$.emit(this._errors);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                performAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.page.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            performAction\n                        \n                        \n                    \n                \n            \n            \n                \nperformAction(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/home.page.ts:45\n                \n            \n\n\n            \n                \n                    Performes the action selected by the user from the side-menu list;\nIt can either mean navigation to a new page or opening the phone's call screen\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String containing the url for the route that will be displayed on user click\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      title: 'Validează voluntar',\n      url: '/volunteer/validate'\n    }, {\n      title: 'Adaugă voluntar',\n      url: '/volunteer/add'\n    }, {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    }, {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/home/home.page.ts:18\n                            \n                        \n\n                \n                    \n                        Actions that can be performed from the side-menu\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\n\n/**\n * The main menu page of the app; first page for the authenticated user\n */\nexport class HomePage {\n\n  /**\n   * Actions that can be performed from the side-menu\n   */\n  actions = [\n    {\n      title: 'Validează voluntar',\n      url: '/volunteer/validate'\n    }, {\n      title: 'Adaugă voluntar',\n      url: '/volunteer/add'\n    }, {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    }, {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    }\n  ];\n\n  /**\n   *\n   * @param router Provider for route navigation\n   */\n  constructor(private router: Router) { }\n\n  /**\n   * Performes the action selected by the user from the side-menu list;\n   * It can either mean navigation to a new page or opening the phone's call screen\n   * @param url String containing the url for the route that will be displayed on user click\n   */\n  performAction(url: string) {\n    if (url.includes('tel')) {\n      window.open(url);\n    } else {\n      this.router.navigate([url]);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n    \n      \n    \n    \n  \n\n\n\n  \n    \n      \n          \n            {{action.title}}\n          \n      \n    \n  \n\n    \n\n    \n                \n                    home.page.scss\n                \n                .menu-column {\n  -webkit-box-shadow: 0px 0px 0px 5px rgba(240,237,240,1);\n  -moz-box-shadow: 0px 0px 0px 5px rgba(240,237,240,1);\n  box-shadow: 0px 0px 5px 2px rgba(240,237,240,1);\n  color: black;\n  font-size: 12px;\n  padding: 80px 10px;\n  text-align: center;\n  text-decoration: underline;\n\n  a {\n    color: black;\n  }\n}\n\n.home-columns {\n  align-items: center;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  \n  ion-row {\n    justify-content: center;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{action.title}}                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { HomePage } from './home.page';\nimport { AuthenticationGuard } from '../../core/authentication/authentication.guard';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage,\n        canActivate: [AuthenticationGuard]\n      }\n    ])\n  ],\n  declarations: [HomePage]\n})\n\n/**\n * Main page module\n */\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/local-storage.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for storing information in local storage\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                localStorage\n                            \n                            \n                                sessionStorage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearAll\n                            \n                            \n                                    Public\n                                clearItem\n                            \n                            \n                                    Public\n                                getItem\n                            \n                            \n                                    Public\n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/local-storage.service.ts:114\n                            \n                        \n\n                \n                    \n                            Checks if localStorage can be used for basic storing operations\nIf not, then a custom storage is created to handle this operations\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clearAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:244\n                \n            \n\n\n            \n                \n                    Clears the existing storage\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clearItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:237\n                \n            \n\n\n            \n                \n                    Removes an item from storage by its key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:229\n                \n            \n\n\n            \n                \n                    Retrieves an item by its key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setItem(key: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:221\n                \n            \n\n\n            \n                \n                    Adds an item to storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item's key\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item itself\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localStorage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:109\n                            \n                        \n\n                \n                    \n                        Handles storing inside local storage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionStorage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:114\n                            \n                        \n\n                \n                    \n                        Handles storing inside session storage\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Creates a cookie entry\n * @param name Cookie name\n * @param value Cookie value\n * @param days Cookie expiration number of days\n */\nfunction createCookie(name: any, value: any, days: any) {\n  let date: any, expires;\n\n  if (days) {\n    date = new Date();\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    expires = '; expires=' + date.toGMTString();\n  } else {\n    expires = '';\n  }\n  document.cookie = name + '=' + value + expires + '; path=/';\n}\n\n/**\n * Getter for a cookie document by its name\n * @param name Cookie's name\n * @returns cookie document \n */\nfunction readCookie(name: any) {\n  const nameEQ = name + '=',\n    ca = document.cookie.split(';');\n  let i, c;\n\n  for (i = 0; i  localStorage\n      });\n      this.localStorage = localStorage;\n      this.sessionStorage = sessionStorage;\n    }\n  }\n\n  /**\n   * Adds an item to storage\n   * @param key Item's key\n   * @param value Item itself\n   */\n  public setItem(key: string, value: any) {\n    return this.localStorage.setItem(key, value);\n  }\n\n   /**\n    * Retrieves an item by its key\n    * @param key Item key\n    */\n  public getItem(key: string) {\n    return this.localStorage.getItem(key);\n  }\n\n  /**\n   * Removes an item from storage by its key\n   * @param key Item key\n   */\n  public clearItem(key: string) {\n    return this.localStorage.removeItem(key);\n  }\n\n  /**\n   * Clears the existing storage\n   */\n  public clearAll() {\n    return this.localStorage.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loading\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, formBuilder: FormBuilder, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route navigation\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for reactive form creation\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/login/login.component.ts:54\n                \n            \n\n\n            \n                \n                    Form initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/login/login.component.ts:47\n                \n            \n\n\n            \n                \n                    Page initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/login/login.component.ts:65\n                \n            \n\n\n            \n                \n                    Authentication credentials from the form are sent to the authentication service for validation\nIf they are validated, the user will be redirected to the home page, if not, a toast will display an error message\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                        The error message that will be displayed when something didn't go as planned\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                        True if page is in loading state false if not; used in design\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/login/login.component.ts:22\n                            \n                        \n\n                \n                    \n                        Form with user's login credentials\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { AuthenticationService } from 'src/app/core';\nimport { EmailValidation } from 'src/app/core/validators/email-validation';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\n\n/**\n * Login Page component for 'auth/login' route\n */\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Form with user's login credentials\n   */\n  loginForm: FormGroup;\n\n  /**\n   * The error message that will be displayed when something didn't go as planned\n   */\n  errorMessage: string;\n\n  /**\n   * True if page is in loading state false if not; used in design\n   */\n  loading = false;\n\n  /**\n   * Class constructor\n   * @param router Provider for route navigation\n   * @param formBuilder Provider for reactive form creation\n   * @param authenticationService Provider for authentication related operation\n   */\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private authenticationService: AuthenticationService) { }\n\n  /**\n   * Page initialisation\n   */\n  ngOnInit() {\n    this.createForm();\n  }\n\n  /**\n   * Form initialisation\n   */\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, EmailValidation.emailValidation]],\n      password: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Authentication credentials from the form are sent to the authentication service for validation\n   * If they are validated, the user will be redirected to the home page, if not, a toast will display an error message\n   */\n  submit() {\n    this.loading = true;\n    this.authenticationService\n      .login(this.loginForm.value)\n      .pipe(\n        finalize(() => {\n          this.loginForm.markAsPristine();\n        })\n      )\n      .subscribe(\n        (credentials) => {\n            this.loading = false;\n            this.router.navigate(['../home'], {\n              replaceUrl: true\n            });\n        },\n        (error: any) => {\n          this.loading = false;\n          this.errorMessage = 'Informații incorecte';\n          setTimeout(() => {\n            this.errorMessage = null;\n          }, 3000);\n        }\n      );\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      Adresă de email\n      \n    \n    \n      Parolă\n      \n    \n\n    \n       {{ loginForm.controls.email.errors?.email || errorMessage }}\n      \n    \n\n    Am uitat parola\n    Login\n  \n\n  \n    \n  \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Adresă de email                    Parolă                     {{ loginForm.controls.email.errors?.email || errorMessage }}              Am uitat parola    Login          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginPayload.html":{"url":"interfaces/LoginPayload.html","title":"interface - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for login payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Login password\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Login username/email\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  /**\n   * Interface for login payload\n   */\n  export interface LoginPayload {\n    /**\n     * Login username/email\n     */\n    username: string;\n\n    /**\n     * Login password\n     */\n    password: string;\n  }\n\n  /**\n   * Interface for user object\n   */\n  export interface User {\n    /**\n     * User id\n     */\n    _id: string;\n\n    /**\n     * User name\n     */\n    name: string;\n\n    /**\n     * User phone number\n     */\n    phone?: any;\n\n    /**\n     * User email address\n     */\n    email: string;\n\n    /**\n     * User creation date\n     */\n    createdAt: Date;\n\n    /**\n     * Date of the last update to the user's progile\n     */\n    updatedAt: Date;\n  }\n\n  /**\n   * Interface for credentials object\n   */\n  export interface Credentials {\n    /**\n     * User object\n     */\n    user: User;\n\n    /**\n     * Authentication token\n     */\n    token: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutComponent.html":{"url":"components/LogoutComponent.html","title":"component - LogoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LogoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/logout/logout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout\n            \n\n            \n                styleUrls\n                ./logout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/logout/logout.component.ts:15\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operations\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/logout/logout.component.ts:29\n                \n            \n\n\n            \n                \n                    A request through the authentication service is sent for logout;\nIf its successful the user will be redirected to the login screen\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss'],\n})\n\n/**\n * Component for the logout functionality, displays nothing,\n * its purpose is only to facilitate the logout action\n */\nexport class LogoutComponent implements OnInit {\n\n  /**\n   * Class constructor\n   * @param authenticationService Provider for authentication related operations\n   * @param router Provider for router navigation\n   */\n  constructor(private authenticationService: AuthenticationService,\n              private router: Router) { }\n\n  /**\n   * A request through the authentication service is sent for logout;\n   * If its successful the user will be redirected to the login screen\n   */\n  ngOnInit() {\n    this.authenticationService.logout().subscribe(() => {\n      this.router.navigate(['../auth/login'], {\n        replaceUrl: true\n      });\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n  \n\n    \n\n    \n                \n                    ./logout.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Organisation.html":{"url":"classes/Organisation.html","title":"class - Organisation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Organisation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/organisation.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for organisation object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                _rev\n                            \n                            \n                                added_by\n                            \n                            \n                                address\n                            \n                            \n                                city\n                            \n                            \n                                comments\n                            \n                            \n                                contact_person\n                            \n                            \n                                county\n                            \n                            \n                                cover\n                            \n                            \n                                created_at\n                            \n                            \n                                name\n                            \n                            \n                                slug\n                            \n                            \n                                status\n                            \n                            \n                                type\n                            \n                            \n                                updated_at\n                            \n                            \n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:8\n                            \n                        \n\n                \n                    \n                        Organisation id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _rev\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:13\n                            \n                        \n\n                \n                    \n                        CouchDB parameter; it is automatically set\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            added_by\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:109\n                            \n                        \n\n                \n                    \n                        The id of the user that added this entry\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:58\n                            \n                        \n\n                \n                    \n                        Address\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:79\n                            \n                        \n\n                \n                    \n                        Organisation's city, from the statics database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:94\n                            \n                        \n\n                \n                    \n                        Additional comments/details to an organisation entry\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contact_person\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:33\n                            \n                        \n\n                \n                    \n                        Organisation contact person object\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:63\n                            \n                        \n\n                \n                    \n                        Organisation's county, from the statics database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:124\n                            \n                        \n\n                \n                    \n                        Organisation's cover area, has 'locală'/'națională' value\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:99\n                            \n                        \n\n                \n                    \n                        Creation date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:18\n                            \n                        \n\n                \n                    \n                        Organisation name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:23\n                            \n                        \n\n                \n                    \n                        Organisation slug, the name without diacritics (Romanian special characters)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:119\n                            \n                        \n\n                \n                    \n                        Organisation's status 'activ'/'inactiv', organisations added by the mobile app will always have 'inactiv'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:114\n                            \n                        \n\n                \n                    \n                        Database type, in this case 'organisations'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:104\n                            \n                        \n\n                \n                    \n                        Date of the last update on the entry\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            website\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:28\n                            \n                        \n\n                \n                    \n                        Organisation website url\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Organisation {\n    /**\n     * Organisation id\n     */\n    _id: string;\n\n    /**\n     * CouchDB parameter; it is automatically set\n     */\n    _rev: string;\n\n    /**\n     * Organisation name\n     */\n    name: string;\n\n    /**\n     * Organisation slug, the name without diacritics (Romanian special characters)\n     */\n    slug: string;\n\n    /**\n     * Organisation website url\n     */\n    website: string;\n\n    /**\n     * Organisation contact person object\n     */\n    contact_person: {\n        /**\n         * Ngo Admin user id from Users table\n         */\n        _id: string;\n\n        /**\n         * Ngo Admin user name\n         */\n        name: string;\n\n        /**\n         * Ngo Admin email address\n         */\n        email: string;\n\n        /**\n         * Ngo Admin phone number\n         */\n        phone: string;\n    };\n\n    /**\n     * Address\n     */\n    address: string;\n\n    /**\n     * Organisation's county, from the statics database\n     */\n    county: {\n        /**\n         * County id\n         */\n        _id: string;\n\n        /**\n         * County name\n         */\n        name: string;\n    };\n\n\n    /**\n     * Organisation's city, from the statics database\n     */\n    city: {\n        /**\n         * City id\n         */\n        _id: string;\n\n        /**\n         * City name\n         */\n        name: string;\n    };\n\n    /**\n     * Additional comments/details to an organisation entry\n     */\n    comments: string;\n\n    /**\n     * Creation date\n     */\n    created_at: any;\n\n    /**\n     * Date of the last update on the entry\n     */\n    updated_at: any;\n\n    /**\n     * The id of the user that added this entry\n     */\n    added_by: string;\n\n    /**\n     * Database type, in this case 'organisations'\n     */\n    type: string;\n\n    /**\n     * Organisation's status 'activ'/'inactiv', organisations added by the mobile app will always have 'inactiv'\n     */\n    status: string;\n\n    /**\n     * Organisation's cover area, has 'locală'/'națională' value\n     */\n    cover: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganisationService.html":{"url":"injectables/OrganisationService.html","title":"injectable - OrganisationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OrganisationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/organisation.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for organisation related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createOrganisation\n                            \n                            \n                                deleteOrganisationById\n                            \n                            \n                                getOrganisationById\n                            \n                            \n                                getOrganisationByName\n                            \n                            \n                                getOrganisations\n                            \n                            \n                                    Private\n                                removeSpecialChars\n                            \n                            \n                                updateOrganisation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/organisation.service.ts:33\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Organisations Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected reference for AuthenticationService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createOrganisation\n                        \n                        \n                    \n                \n            \n            \n                \ncreateOrganisation(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:100\n                \n            \n\n\n            \n                \n                    Creates an organisation entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new organisation's name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with the created object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteOrganisationById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteOrganisationById(organisationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:130\n                \n            \n\n\n            \n                \n                    Deletes an entry by its id from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The organisation id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrganisationById\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrganisationById(organisationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:72\n                \n            \n\n\n            \n                \n                    Finds an organisation by its id in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Organisation's id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the organisation with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrganisationByName\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrganisationByName(organisationName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:86\n                \n            \n\n\n            \n                \n                    Finds an organisation by its name in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisationName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the organisation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all organisation with that name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrganisations\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrganisations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:57\n                \n            \n\n\n            \n                \n                    Getter method for all organisations from the local database\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all organisations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            removeSpecialChars\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeSpecialChars(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:141\n                \n            \n\n\n            \n                \n                    Removes diacritics from a string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A string with diacritics\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the new string, without diacritics\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOrganisation\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOrganisation(organisation: Organisation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:118\n                \n            \n\n\n            \n                \n                    Updates an organisation entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisation\n                                    \n                                                Organisation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new organisation entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'organisations'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/organisation.service.ts:33\n                            \n                        \n\n                \n                    \n                        Table type\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { from, Observable } from 'rxjs';\nimport { AuthenticationService } from '../authentication';\nimport { Organisation } from '../model/organisation.model';\nimport * as moment from 'moment';\n\n/**\n * Reference for local PouchDB Organisations Database\n */\nconst localDB = new PouchDB('organisations');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Organisations Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/organisations');\n\n/**\n * Provider for organisation related operations\n */\n@Injectable()\nexport class OrganisationService {\n  /**\n   * Table type\n   */\n  private type = 'organisations';\n\n  /**\n   * Class constructor, sets the synchronization options for CouchDB and PouchDB Organisations Database\n   * @param authenticationService Injected reference for AuthenticationService\n   */\n  constructor(private authenticationService: AuthenticationService) {\n    const options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);\n\n    localDB.createIndex({\n      index: {fields: ['name', 'slug']}\n    });\n   }\n\n  /**\n   * Getter method for all organisations from the local database\n   * @returns An Observable with all organisations\n   */\n  getOrganisations(): Observable {\n    return from(localDB.find({\n      selector: {\n          type: this.type\n      },\n      include_docs: true,\n      attachments: true\n    }));\n  }\n\n  /**\n   * Finds an organisation by its id in the local database\n   * @param organisationId Organisation's id\n   * @returns An Observable containing the organisation with that id\n   */\n  getOrganisationById(organisationId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        _id: {$eq: organisationId},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   * Finds an organisation by its name in the local database\n   * @param organisationName The name of the organisation\n   * @returns An Observable with all organisation with that name\n   */\n  getOrganisationByName(organisationName: string): Observable {\n    return from(localDB.find({\n      selector: {\n        name: {$eq: organisationName},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   * Creates an organisation entry in the local database\n   * @param name String value containing the new organisation's name\n   * @returns An Observable with the created object\n   */\n  createOrganisation(name: string): Observable {\n    const currentUser = this.authenticationService.user;\n    const organisation = new Organisation();\n    organisation.name = name;\n    organisation.slug = this.removeSpecialChars(name);\n    organisation.added_by = currentUser._id;\n    organisation.created_at = moment().format('Y-MM-DD HH:mm:ss');\n    organisation.updated_at = moment().format('Y-MM-DD HH:mm:ss');\n    organisation.type = this.type;\n    organisation.status = 'inactiv';\n\n    return from(localDB.post(organisation));\n  }\n\n  /**\n   * Updates an organisation entry in the local database\n   * @param organisation The new organisation entry\n   */\n  updateOrganisation(organisation: Organisation) {\n    localDB.get(organisation._id).then((doc) => {\n      doc.name = organisation.name ? organisation.name : doc.name;\n      doc.slug = organisation.name ? this.removeSpecialChars(organisation.name) : doc.slug;\n      localDB.put(doc);\n    });\n  }\n\n  /**\n   * Deletes an entry by its id from the local database\n   * @param organisationId The organisation id\n   */\n  deleteOrganisationById(organisationId: string) {\n    localDB.get(organisationId).then((doc) => {\n      return localDB.remove(doc);\n    });\n  }\n\n   /**\n    * Removes diacritics from a string\n    * @param text A string with diacritics\n    * @returns the new string, without diacritics\n    */\n  private removeSpecialChars(text: string): string {\n    const input   = 'ăâîșț';\n    const output  = 'aaist';\n    const regex = new RegExp('[' + input + ']', 'g');\n    const transl = {};\n\n    const lookup = (m) => transl[m] || m;\n\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordValidation.html":{"url":"classes/PasswordValidation.html","title":"class - PasswordValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/password-validation.ts\n        \n\n            \n                Description\n            \n            \n                Validator class for password inputs\nValidates both matching passwords for password reset (password, confirmPassword)\nand simple password fields\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                MatchPassword\n                            \n                            \n                                    Static\n                                passwordValidation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            MatchPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    MatchPassword(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/password-validation.ts:16\n                \n            \n\n\n            \n                \n                    Matching passwords validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the values from the inputs\nthat are being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the strings match, an error message otherwise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            passwordValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    passwordValidation(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/password-validation.ts:35\n                \n            \n\n\n            \n                \n                    Password validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the value from the input\nthat is being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the string respects the pattern, an error message otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AbstractControl} from '@angular/forms';\n\n/**\n * Validator class for password inputs\n * Validates both matching passwords for password reset (password, confirmPassword)\n * and simple password fields\n */\nexport class PasswordValidation {\n\n    /**\n     * Matching passwords validator\n     * @param abstractControl An abstract control reference, to automatically take the values from the inputs\n     * that are being validated\n     * @returns null if the strings match, an error message otherwise\n     */\n    static MatchPassword(abstractControl: AbstractControl): any {\n        const password = abstractControl.get('password').value;\n        const confirmPassword = abstractControl.get('confirmPassword').value;\n\n        if (password !== confirmPassword) {\n            abstractControl.get('confirmPassword').setErrors({\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            });\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Password validator\n     * @param abstractControl An abstract control reference, to automatically take the value from the input\n     * that is being validated\n     * @returns null if the string respects the pattern, an error message otherwise\n     */\n    static passwordValidation(abstractControl: AbstractControl): any {\n        const number = new RegExp('\\\\d');\n        const password = abstractControl.value;\n        const uppercase = new RegExp('[A-Z]');\n        const lowercase = new RegExp('[a-z]');\n        const special = new RegExp(/[!#$%&\\‘\\(\\)\\*?@\\[\\]^_\\+\\.`\\{\\|\\}~]/);\n\n        if (!number.test(password)) {\n            return {\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            };\n        }\n\n        if (!uppercase.test(password)) {\n            return {\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            };\n        }\n\n        if (!lowercase.test(password)) {\n            return {\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            };\n        }\n\n        if (!special.test(password)) {\n            return {\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            };\n        }\n\n        if (password.length \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PhoneValidation.html":{"url":"classes/PhoneValidation.html","title":"class - PhoneValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PhoneValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/phone-validation.ts\n        \n\n            \n                Description\n            \n            \n                Validator class for the phone number input field\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                phoneValidation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            phoneValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    phoneValidation(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/phone-validation.ts:14\n                \n            \n\n\n            \n                \n                    Phone validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the value from the input\nthat is being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the string respects the pattern, an error message otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\n\n/**\n * Validator class for the phone number input field\n */\nexport class PhoneValidation {\n\n    /**\n     * Phone validator\n     * @param abstractControl An abstract control reference, to automatically take the value from the input\n     * that is being validated\n     * @returns null if the string respects the pattern, an error message otherwise\n     */\n    static phoneValidation(abstractControl: AbstractControl): any {\n        const phone = abstractControl.value;\n        const reg = new RegExp('^[+]{0,1}[0-9]+$');\n\n        if ((reg.test(phone) && phone.length >= 10)) {\n            if (phone.length === 12 && phone.indexOf('+') >= 0) {\n                return null;\n            }\n\n            if (phone.length === 10 && phone.indexOf('+') \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecoverPasswordComponent.html":{"url":"components/RecoverPasswordComponent.html","title":"component - RecoverPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecoverPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/recover-password/recover-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recover-password\n            \n\n            \n                styleUrls\n                ./recover-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./recover-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loading\n                            \n                            \n                                resetPasswordForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentToast\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:32\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected reference for AuthenticationService\n\n                                                        \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller for toast messages display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:48\n                \n            \n\n\n            \n                \n                    Page initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentToast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToast(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:76\n                \n            \n\n\n            \n                \n                    Presents a toast that will be automatically dismessed after 3 seconds\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        toast message\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:57\n                \n            \n\n\n            \n                \n                    Sends the recover password request\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:27\n                            \n                        \n\n                \n                    \n                        Error message that will be displayed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:32\n                            \n                        \n\n                \n                    \n                        Page is loading or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPasswordForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:22\n                            \n                        \n\n                \n                    \n                        Form reference\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core';\nimport { EmailValidation } from 'src/app/core/validators/email-validation';\nimport { ToastController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-recover-password',\n  templateUrl: './recover-password.component.html',\n  styleUrls: ['./recover-password.component.scss'],\n})\n\n/**\n * Component for the recover password functionality\n */\nexport class RecoverPasswordComponent implements OnInit {\n    /**\n     * Form reference\n     */\n    resetPasswordForm: FormGroup;\n\n    /**\n     * Error message that will be displayed\n     */\n    errorMessage: string = null;\n\n    /**\n     * Page is loading or not\n     */\n    loading = false;\n\n    /**\n     * Class constructor\n     *\n     * @param router Provider for router navigation\n     * @param authenticationService Injected reference for AuthenticationService\n     * @param toastController Controller for toast messages display\n     */\n    constructor(private router: Router,\n                private authenticationService: AuthenticationService,\n                private toastController: ToastController) { }\n\n    /**\n     * Page initialisation\n     */\n    ngOnInit() {\n        this.resetPasswordForm = new FormGroup({\n        email: new FormControl('', [Validators.required, EmailValidation.emailValidation])\n        });\n    }\n\n    /**\n     * Sends the recover password request\n     */\n    resetPassword() {\n        this.loading = true;\n        this.authenticationService.recoverPassword(this.resetPasswordForm.value.email).subscribe(response => {\n            this.loading = false;\n            this.presentToast('Cererea a fost înregistrată. Vă rugăm verificați atât în inbox cât și în spam.');\n            this.router.navigate(['/auth/login']);\n        }, error => {\n            this.loading = false;\n            this.errorMessage = 'Adresa de email specificată nu există. Te rugăm să verifici și să încerci din nou.';\n            setTimeout(() => {\n                this.errorMessage = null;\n            }, 3000);\n        });\n    }\n\n     /**\n      * Presents a toast that will be automatically dismessed after 3 seconds\n      * @param message toast message\n      */\n    async presentToast(message: string) {\n        const toast = await this.toastController.create({\n          message,\n          position: 'bottom',\n          duration: 3000\n        });\n        toast.present();\n    }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      Adresă de email\n      \n    \n\n    \n       {{ resetPasswordForm.controls.email.errors?.email || errorMessage }} \n     \n\n    Autentificare\n    Trimite\n  \n\n  \n      \n  \n\n\n    \n\n    \n                \n                    ./recover-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Adresă de email                     {{ resetPasswordForm.controls.email.errors?.email || errorMessage }}          Autentificare    Trimite            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecoverPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RequestInterceptor.html":{"url":"interceptors/RequestInterceptor.html","title":"interceptor - RequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  RequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/request.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Prefixes all requests with environment.serverUrl and adds the authentication token to requests\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/request.interceptor.ts:17\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected service referes the AuthenticationService for handling authentication related operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/request.interceptor.ts:31\n                \n            \n\n\n            \n                \n                    Intercepts all requests that are sent and adds extra information to them\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current request that is being sent\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Handles the next state of the request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The new request, with the additional information\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { environment } from '../../../environments/environment';\n\n/**\n * Prefixes all requests with `environment.serverUrl` and adds the authentication token to requests\n */\n@Injectable()\nexport class RequestInterceptor implements HttpInterceptor {\n\n  /**\n   * Class constructor\n   * @param authenticationService Injected service referes the AuthenticationService for handling authentication related operations\n   */\n  constructor(private authenticationService: AuthenticationService) {}\n\n  /**\n   * Intercepts all requests that are sent and adds extra information to them\n   * @param request The current request that is being sent\n   * @param next Handles the next state of the request\n   * @returns The new request, with the additional information\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    request = request.clone({\n      setHeaders: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json; charset=utf-8',\n      Authorization: `Bearer ${this.authenticationService.accessToken}`,\n      },\n      url: environment.serverUrl + request.url\n    });\n\n    return next.handle(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/reset-password/reset-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                ./reset-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loading\n                            \n                            \n                                resetPasswordForm\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialiseView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentToast\n                            \n                            \n                                resetPassword\n                            \n                            \n                                setErrorMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService, formBuilder: FormBuilder, route: ActivatedRoute, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected reference for AuthenticationService\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder reference, used in creating rective forms\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for current route\n\n                                                        \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller for toast messages display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialiseView\n                        \n                        \n                    \n                \n            \n            \n                \ninitialiseView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:80\n                \n            \n\n\n            \n                \n                    Page initialisation after user was logged out (if neccessary)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:56\n                \n            \n\n\n            \n                \n                    Page initialisation\nIf user is already logged in when page is accessed, then a logout is performed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentToast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToast(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:118\n                \n            \n\n\n            \n                \n                    Presents a toast that will be automatically dismessed after 3 seconds\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        toast message\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:91\n                \n            \n\n\n            \n                \n                    Sends the reset password request\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setErrorMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsetErrorMessage(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:107\n                \n            \n\n\n            \n                \n                    Changes the value of the error message and clears it after 3 seconds\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        error message that will be displayed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:31\n                            \n                        \n\n                \n                    \n                        Error message that will be displayed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:36\n                            \n                        \n\n                \n                    \n                        Page is loading or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPasswordForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:21\n                            \n                        \n\n                \n                    \n                        Form reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:46\n                            \n                        \n\n                \n                    \n                        Provider for router navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:26\n                            \n                        \n\n                \n                    \n                        Token for password reset\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core';\nimport { PasswordValidation } from 'src/app/core/validators/password-validation';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss'],\n})\n\n/**\n * Component for the reset password functionality\n */\nexport class ResetPasswordComponent implements OnInit {\n    /**\n     * Form reference\n     */\n     resetPasswordForm: FormGroup;\n\n     /**\n      * Token for password reset\n      */\n    token: string;\n\n    /**\n     * Error message that will be displayed\n     */\n    errorMessage: string;\n\n    /**\n     * Page is loading or not\n     */\n    loading = false;\n\n\n    /**\n     * @param router Provider for router navigation\n     * @param authenticationService Injected reference for AuthenticationService\n     * @param formBuilder FormBuilder reference, used in creating rective forms\n     * @param route Provider for current route\n     * @param toastController Controller for toast messages display\n     */\n    constructor(public router: Router,\n                private authenticationService: AuthenticationService,\n                private formBuilder: FormBuilder,\n                private route: ActivatedRoute,\n                private toastController: ToastController) { }\n\n    /**\n     * Page initialisation\n     * If user is already logged in when page is accessed, then a logout is performed\n     */\n    ngOnInit() {\n        if (this.authenticationService.isAuthenticated() ) {\n            this.authenticationService.logout().subscribe(response => {\n                this.initialiseView();\n            });\n        } else {\n            this.initialiseView();\n        }\n\n        this.resetPasswordForm = this.formBuilder.group({\n            password: ['', [Validators.required,\n                PasswordValidation.passwordValidation\n            ]],\n            confirmPassword: ['', [Validators.required,\n                PasswordValidation.passwordValidation\n            ]],\n            }, {\n                validator: PasswordValidation.MatchPassword\n            });\n    }\n\n    /**\n     * Page initialisation after user was logged out (if neccessary)\n     */\n    initialiseView() {\n        this.route.params.subscribe(\n            (params) => {\n                this.token = params['token'];\n            }\n        );\n    }\n\n    /**\n     * Sends the reset password request\n     */\n    resetPassword() {\n        this.loading = true;\n        this.authenticationService.resetPassword(this.resetPasswordForm.value.password, this.token).subscribe(response => {\n                this.presentToast('Parolă resetată cu succes.');\n                this.loading = false;\n                this.router.navigate(['/auth/login']);\n            }, error => {\n                this.loading = false;\n                this.setErrorMessage('A apărut o eroare. Vă rugăm reîncercați.');\n            });\n    }\n\n    /**\n     * Changes the value of the error message and clears it after 3 seconds\n     * @param message error message that will be displayed\n     */\n    setErrorMessage(message: string) {\n        this.errorMessage = message;\n        setTimeout(() => {\n            this.errorMessage = null;\n        }, 3000);\n    }\n\n    /**\n     * Presents a toast that will be automatically dismessed after 3 seconds\n     * @param message toast message\n     */\n    async presentToast(message: string) {\n        const toast = await this.toastController.create({\n          message,\n          position: 'bottom',\n          duration: 3000\n        });\n        toast.present();\n    }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      Parolă\n      \n    \n\n    \n      Confirmă Parola\n      \n    \n    \n    \n       {{ resetPassword.errors?.password || resetPasswordForm.controls.confirmPassword.errors?.password || resetPasswordForm.controls.password.errors?.password }} \n    \n\n    Autentificare\n    Trimite\n  \n\n  \n      \n  \n\n\n    \n\n    \n                \n                    ./reset-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Parolă                    Confirmă Parola                         {{ resetPassword.errors?.password || resetPasswordForm.controls.confirmPassword.errors?.password || resetPasswordForm.controls.password.errors?.password }}         Autentificare    Trimite            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RootObject.html":{"url":"interfaces/RootObject.html","title":"interface - RootObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RootObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/error.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for error object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attributes\n                                \n                                \n                                        error\n                                \n                                \n                                        message\n                                \n                                \n                                        statusCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                    \n                                \n                                \n                                    \n                                        attributes:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Error attributes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error message\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error status code\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        declare namespace ErrorModel {\n\n  /**\n   * Interface for error object\n   */\n  export interface RootObject {\n    /**\n     * Error status code\n     */\n    statusCode: number;\n\n    /**\n     * Error\n     */\n    error: string;\n\n    /**\n     * Error message\n     */\n    message: string;\n\n    /**\n     * Error attributes\n     */\n    attributes?: any;\n  }\n\n  /**\n   * Interface for error message\n   */\n  export interface ErrorMessageObject {\n    /**\n     * Error message id\n     */\n    id: number;\n\n    /**\n     * Error message\n     */\n    error: string;\n\n    /**\n     * Error type\n     */\n    type: string;\n\n    /**\n     * Error url\n     */\n    serviceUrl: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteReusableStrategy.html":{"url":"classes/RouteReusableStrategy.html","title":"class - RouteReusableStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteReusableStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/route-reusable-strategy.ts\n        \n\n            \n                Description\n            \n            \n                A route strategy allowing for explicit route reuse.\nUsed as a workaround for https://github.com/angular/angular/issues/18374\nTo reuse a given route, add data: { reuse: true } to the route definition.\n\n            \n\n            \n                Extends\n            \n            \n                        RouteReuseStrategy\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                retrieve\n                            \n                            \n                                    Public\n                                shouldAttach\n                            \n                            \n                                    Public\n                                shouldDetach\n                            \n                            \n                                    Public\n                                shouldReuseRoute\n                            \n                            \n                                    Public\n                                store\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            retrieve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    retrieve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:47\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DetachedRouteHandle | null\n\n                    \n                    \n                        null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldAttach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldAttach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:38\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        false\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldDetach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldDetach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:19\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        false\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldReuseRoute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:56\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    future\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Future activated route\n\n                                    \n                                \n                                \n                                    curr\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            store\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:28\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                                \n                                    detachedTree\n                                    \n                                            DetachedRouteHandle | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The detached tree\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ActivatedRouteSnapshot,\n  DetachedRouteHandle,\n  RouteReuseStrategy\n} from '@angular/router';\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @returns false\n   */\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @param detachedTree The detached tree\n   */\n  public store(\n    route: ActivatedRouteSnapshot,\n    detachedTree: DetachedRouteHandle | null\n  ): void {}\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @returns false\n   */\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @returns null\n   */\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param future Future activated route\n   * @param curr Current activated route\n   */\n  public shouldReuseRoute(\n    future: ActivatedRouteSnapshot,\n    curr: ActivatedRouteSnapshot\n  ): boolean {\n    return future.routeConfig === curr.routeConfig || future.data.reuse;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SendMessageComponent.html":{"url":"components/SendMessageComponent.html","title":"component - SendMessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SendMessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/volunteer/send-message/send-message.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-send-message\n            \n\n            \n                styleUrls\n                ./send-message.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./send-message.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                base64Image\n                            \n                            \n                                messageForm\n                            \n                            \n                                    Private\n                                phoneNumbers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addImage\n                            \n                            \n                                checkPemission\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sms: SMS, router: Router, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/volunteer/send-message/send-message.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sms\n                                                  \n                                                        \n                                                                    SMS\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for sending SMS messages\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for url location navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addImage\n                        \n                        \n                    \n                \n            \n            \n                \naddImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:64\n                \n            \n\n\n            \n                \n                    Adds an image from camera to the app and uses base64 codification to convert it into a string\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkPemission\n                        \n                        \n                    \n                \n            \n            \n                \ncheckPemission()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:92\n                \n            \n\n\n            \n                \n                    Checks for SMS permission, if granted sends the SMS\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:47\n                \n            \n\n\n            \n                \n                    Page initialisation: the volunteer id needs to be retrieved from the url\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:78\n                \n            \n\n\n            \n                \n                    Sends the message and image to the selected volunteer/s\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            base64Image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:33\n                            \n                        \n\n                \n                    \n                        Codification of the image that will be sent\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messageForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:28\n                            \n                        \n\n                \n                    \n                        The form that contains the message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            phoneNumbers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:23\n                            \n                        \n\n                \n                    \n                        A list of selected volunteers' phone numbers\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Camera } from '@ionic-native/camera';\nimport { SMS } from '@ionic-native/sms/ngx';\nimport { Volunteer } from 'src/app/core/model/volunteer.model';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-send-message',\n  templateUrl: './send-message.component.html',\n  styleUrls: ['./send-message.component.scss']\n})\n\n/**\n * Component that handles the send message page functionality\n */\nexport class SendMessageComponent implements OnInit {\n\n  /**\n   * A list of selected volunteers' phone numbers\n   */\n  private phoneNumbers: string[] = [];\n\n  /**\n   * The form that contains the message\n   */\n  messageForm: FormGroup;\n\n  /**\n   * Codification of the image that will be sent\n   */\n  public base64Image: string;\n\n  /**\n   * @param sms Provider for sending SMS messages\n   * @param router Provider for router navigation\n   * @param location Provider for url location navigation\n   */\n  constructor(private sms: SMS,\n              private router: Router,\n              private location: Location) { }\n\n  /**\n   * Page initialisation: the volunteer id needs to be retrieved from the url\n   */\n  ngOnInit() {\n      const navigation = this.router.getCurrentNavigation();\n\n      if (navigation && navigation.extras && navigation.extras.state) {\n        const volunteers = navigation.extras.state.volunteers;\n\n        volunteers.forEach((volunteer: Volunteer) => this.phoneNumbers.push(volunteer.phone));\n      }\n\n      this.messageForm = new FormGroup({\n        message: new FormControl('', [Validators.required])\n        });\n  }\n\n  /**\n   * Adds an image from camera to the app and uses base64 codification to convert it into a string\n   */\n  addImage() {\n    Camera.getPicture({\n      destinationType: Camera.DestinationType.DATA_URL,\n      targetWidth: 1000,\n      targetHeight: 1000\n    }).then((imageData) => {\n      this.base64Image = 'data:image/jpeg;base64,' + imageData;\n    }, (err) => {\n    });\n  }\n\n  /**\n   * Sends the message and image to the selected volunteer/s\n   */\n  sendMessage() {\n    const options = {\n        replaceLineBreaks: false,\n        android: {\n            intent: 'INTENT'\n        }\n    };\n    this.sms.send(this.phoneNumbers, this.messageForm.value.message, options);\n    this.location.back();\n  }\n\n  /**\n   * Checks for SMS permission, if granted sends the SMS\n   */\n  checkPemission() {\n    this.sms.hasPermission();\n    if (this.sms.hasPermission()) {\n      this.sendMessage();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n  \n\n\n\n  \n    \n      \n      Trimite mesaj\n    \n\n    \n      \n        \n          Mesajul tău\n        \n      \n      \n        \n      \n      \n        \n          \n          \n              Adaugă o fotografie\n          \n        \n        \n          \n            \n          \n        \n       -->\n    \n\n    Trimite mesaj\n  \n\n    \n\n    \n                \n                    ./send-message.component.scss\n                \n                .sc-ion-textarea-md-h {\n    margin-top: 0;\n}\n\nion-button ion-icon {\n    font-size: 24px;\n}\n\n.full-button-bottom {\n  margin: 0;\n  height: 50px;\n}\n\n.header {\n    background-color: #f9f9f9; \n    min-height: 100px; \n    text-align: center;\n    padding: 30px 10px;\n\n    ion-icon {\n        font-size: 35px;\n    }\n\n    ion-label {\n        display: block;\n        font-size: 25px;\n    }\n}\n\n.message-textarea {\n    height: 300px;\n}\n\nion-textarea textarea {\n    height: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      Trimite mesaj                                Mesajul tău                                                                                  Adaugă o fotografie                                                                         -->        Trimite mesaj  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SendMessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SsnValidation.html":{"url":"classes/SsnValidation.html","title":"class - SsnValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SsnValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/ssn-validation.ts\n        \n\n            \n                Description\n            \n            \n                Validator class for the SSN field (CNP)\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                ssnValidation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            ssnValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ssnValidation(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/ssn-validation.ts:14\n                \n            \n\n\n            \n                \n                    Ssn validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the value from the input\nthat is being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the string respects the pattern, an error message otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\n\n/**\n * Validator class for the SSN field (CNP)\n */\nexport class SsnValidation {\n\n    /**\n     * Ssn validator\n     * @param abstractControl An abstract control reference, to automatically take the value from the input\n     * that is being validated\n     * @returns null if the string respects the pattern, an error message otherwise\n     */\n    static ssnValidation(abstractControl: AbstractControl): any {\n        const ssn = parseInt(abstractControl.value, 10) || 0;\n\n        if (ssn.toString().length === 13) {\n            const cnp = Array.from(String(ssn), Number);\n            const coefs = [2, 7, 9, 1, 4, 6, 3, 5, 8, 2, 7, 9];\n            const idx = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n            const s = idx.map((x) => coefs[x] * cnp[x]);\n            const res = s.reduce((a, b) => a + b, 0) % 11;\n\n            if ((res \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StaticsService.html":{"url":"injectables/StaticsService.html","title":"injectable - StaticsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StaticsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/statics.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for locations: counties and cities\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city_type\n                            \n                            \n                                county_type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCityList\n                            \n                            \n                                    Public\n                                getCountyList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/statics.service.ts:35\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Statics Database\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCityList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCityList(countyId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/statics.service.ts:69\n                \n            \n\n\n            \n                \n                    Getter for the list of cities\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    countyId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the county from which the cities will be selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that contains the list of cities from resource files\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCountyList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCountyList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/statics.service.ts:54\n                \n            \n\n\n            \n                \n                    Getter for the list of counties\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that contains the list of counties from resource files\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city_type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'cities'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/statics.service.ts:30\n                            \n                        \n\n                \n                    \n                        Type for city entries\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county_type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'counties'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/statics.service.ts:35\n                            \n                        \n\n                \n                    \n                        Type for county entries\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\n\n/**\n * Reference for local PouchDB Statics Database\n */\nconst localDB = new PouchDB('statics');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Statics Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/statics');\n\n/**\n * Provider for locations: counties and cities\n */\n@Injectable()\nexport class StaticsService {\n    /**\n     * Type for city entries\n     */\n    city_type = 'cities';\n\n    /**\n     * Type for county entries\n     */\n    county_type = 'counties';\n\n    /**\n     * Class constructor, sets the synchronization options for CouchDB and PouchDB Statics Database\n     */\n    constructor() {\n        const options = {\n            live: true,\n            retry: true,\n            continuous: true\n        };\n\n        localDB.replicate.from(remoteDB, options);\n    }\n\n    /**\n     * Getter for the list of counties\n     * @returns An observable that contains the list of counties from resource files\n     */\n    public getCountyList(): Observable {\n        return from(localDB.allDocs(\n            {\n                include_docs: true,\n                startkey: 'county_romania_',\n                endkey: 'county_romania_\\ufff0'\n            }\n        ));\n    }\n\n    /**\n     * Getter for the list of cities\n     * @param countyId The id of the county from which the cities will be selected\n     * @returns An observable that contains the list of cities from resource files\n     */\n    public getCityList(countyId: string): Observable {\n        return from(localDB.query('cities/slug',\n            {\n                startkey: [countyId, null],\n                endkey: [countyId, {}]\n            }\n        ));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UnauthenticatedGuard.html":{"url":"guards/UnauthenticatedGuard.html","title":"guard - UnauthenticatedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    UnauthenticatedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/authentication/unauthenticated.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Provides a guard for protecting unauthenticated routes (such as login)\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/unauthenticated.guard.ts:10\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular value which handles routing operations\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service which handles the authentication operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/unauthenticated.guard.ts:27\n                \n            \n\n\n            \n                \n                    Determines if a user can access a route, depending on its state\nIf the route isn't allowed, it automatically redirects to home page\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        a boolean value, current user's status: unauthenticated or authenticated\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { AuthenticationService } from './authentication.service';\n\n/**\n * Provides a guard for protecting unauthenticated routes (such as login)\n */\n@Injectable()\nexport class UnauthenticatedGuard implements CanActivate {\n\n   /**\n    * Class constructor\n    * @param router Angular value which handles routing operations\n    * @param authenticationService The service which handles the authentication operations\n    */\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n   /**\n    * Determines if a user can access a route, depending on its state\n    * If the route isn't allowed, it automatically redirects to home page\n    * @returns a boolean value, current user's status: unauthenticated or authenticated\n    */\n  canActivate(): boolean {\n    if (!this.authenticationService.isAuthenticated()) {\n      return true;\n    }\n\n    this.router.navigate(['/home'], {\n      replaceUrl: true\n    });\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for user object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        phone\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User creation date\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User email address\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    User phone number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date of the last update to the user's progile\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  /**\n   * Interface for login payload\n   */\n  export interface LoginPayload {\n    /**\n     * Login username/email\n     */\n    username: string;\n\n    /**\n     * Login password\n     */\n    password: string;\n  }\n\n  /**\n   * Interface for user object\n   */\n  export interface User {\n    /**\n     * User id\n     */\n    _id: string;\n\n    /**\n     * User name\n     */\n    name: string;\n\n    /**\n     * User phone number\n     */\n    phone?: any;\n\n    /**\n     * User email address\n     */\n    email: string;\n\n    /**\n     * User creation date\n     */\n    createdAt: Date;\n\n    /**\n     * Date of the last update to the user's progile\n     */\n    updatedAt: Date;\n  }\n\n  /**\n   * Interface for credentials object\n   */\n  export interface Credentials {\n    /**\n     * User object\n     */\n    user: User;\n\n    /**\n     * Authentication token\n     */\n    token: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Volunteer.html":{"url":"classes/Volunteer.html","title":"class - Volunteer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Volunteer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/volunteer.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for volunteer object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                _rev\n                            \n                            \n                                added_by\n                            \n                            \n                                allocation\n                            \n                            \n                                city\n                            \n                            \n                                comments\n                            \n                            \n                                county\n                            \n                            \n                                courses\n                            \n                            \n                                created_at\n                            \n                            \n                                email\n                            \n                            \n                                job\n                            \n                            \n                                name\n                            \n                            \n                                organisation\n                            \n                            \n                                phone\n                            \n                            \n                                slug\n                            \n                            \n                                ssn\n                            \n                            \n                                type\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:8\n                            \n                        \n\n                \n                    \n                        Volunteer's id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _rev\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:13\n                            \n                        \n\n                \n                    \n                        CouchDB parameter; it is automatically set\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            added_by\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:171\n                            \n                        \n\n                \n                    \n                        The id of the user (in the mobile case the rescue officer) that added the current volunteer in the database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:146\n                            \n                        \n\n                \n                    \n                        Volunteer's allocation status: if the value is null then the volunteer has never been allocated before,\notherwise it contains the id of the volunteer's last allocation entry from the Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:58\n                            \n                        \n\n                \n                    \n                        Volunteer's city, from the statics database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:151\n                            \n                        \n\n                \n                    \n                        Volunteer's additional comments/details\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:43\n                            \n                        \n\n                \n                    \n                        Volunteer's county, from the statics database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:100\n                            \n                        \n\n                \n                    \n                        Volunteer's courses: a list of all the course's (from the Courses Database) that belong to the current volunteer\nIf it's empty, than the volunteer has no specialisation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:161\n                            \n                        \n\n                \n                    \n                        Volunteer entry creation date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:33\n                            \n                        \n\n                \n                    \n                        Email address\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            job\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:156\n                            \n                        \n\n                \n                    \n                        Volunteer's job name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:18\n                            \n                        \n\n                \n                    \n                        Volunteer's name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organisation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:74\n                            \n                        \n\n                \n                    \n                        Volunteer's organisation; Can either be an object from the Organisation's database\nor 'null', in the second case it means that the volunteer has the 'Neafiliat' status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:38\n                            \n                        \n\n                \n                    \n                        Phone number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:23\n                            \n                        \n\n                \n                    \n                        Volunteer name without romanian special characters (diacritics)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ssn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:28\n                            \n                        \n\n                \n                    \n                        Volunteer's ssn code (CNP)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:176\n                            \n                        \n\n                \n                    \n                        Database type, in this case 'volunteers'\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:166\n                            \n                        \n\n                \n                    \n                        The date of the last update\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Volunteer {\n    /**\n     * Volunteer's id\n     */\n    _id: string;\n\n    /**\n     * CouchDB parameter; it is automatically set\n     */\n    _rev: string;\n\n    /**\n     * Volunteer's name\n     */\n    name: string;\n\n    /**\n     * Volunteer name without romanian special characters (diacritics)\n     */\n    slug: string;\n\n    /**\n     * Volunteer's ssn code (CNP)\n     */\n    ssn: string;\n\n    /**\n     * Email address\n     */\n    email: string;\n\n    /**\n     * Phone number\n     */\n    phone: string;\n\n    /**\n     * Volunteer's county, from the statics database\n     */\n    county: {\n        /**\n         * County id\n         */\n        _id: string;\n\n        /**\n         * County name\n         */\n        name: string;\n    };\n\n    /**\n     * Volunteer's city, from the statics database\n     */\n    city: {\n        /**\n         * City id\n         */\n        _id: string;\n\n        /**\n         * City name\n         */\n        name: string;\n    };\n\n    /**\n     * Volunteer's organisation; Can either be an object from the Organisation's database\n     * or 'null', in the second case it means that the volunteer has the 'Neafiliat' status\n     */\n    organisation: {\n        /**\n         * Organisation's id\n         */\n       _id: string,\n\n       /**\n        * Organisation's name\n        */\n       name: string,\n\n       /**\n        * Organisation's slug (name without diacritics)\n        */\n       slug: string,\n\n       /**\n        * Organisation's website\n        */\n       website: string\n    };\n\n    /**\n     * Volunteer's courses: a list of all the course's (from the Courses Database) that belong to the current volunteer\n     * If it's empty, than the volunteer has no specialisation\n     */\n    courses: {\n        /**\n         * Course name object, from the course_name Database\n         */\n        course_name: {\n            /**\n             * Course name id\n             */\n            _id: string;\n\n            /**\n             * Course name\n             */\n            name: string;\n\n            /**\n             * Course name slug\n             */\n            slug: string;\n        }\n\n        /**\n         * Course obtained date\n         */\n        obtained: string;\n\n        /**\n         * Course accredited organisation from the acreditors database\n         */\n        accredited: {\n            /**\n             * Acreditor organisation id\n             */\n            _id: string;\n\n            /**\n             * Acreditor organisation name\n             */\n            name: string;\n        }\n    }[];\n\n    /**\n     * Volunteer's allocation status: if the value is null then the volunteer has never been allocated before,\n     * otherwise it contains the id of the volunteer's last allocation entry from the Allocations Database\n     */\n    allocation: string;\n\n    /**\n     * Volunteer's additional comments/details\n     */\n    comments: string;\n\n    /**\n     * Volunteer's job name\n     */\n    job: string;\n\n    /**\n     * Volunteer entry creation date\n     */\n    created_at: any;\n\n    /**\n     * The date of the last update\n     */\n    updated_at: any;\n\n    /**\n     * The id of the user (in the mobile case the rescue officer) that added the current volunteer in the database\n     */\n    added_by: number;\n\n    /**\n     * Database type, in this case 'volunteers'\n     */\n    type: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VolunteerPage.html":{"url":"components/VolunteerPage.html","title":"component - VolunteerPage","body":"\n                   \n\n\n\n\n\n  Components\n  VolunteerPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/volunteer/volunteer.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-volunteer\n            \n\n            \n                styleUrls\n                ./volunteer.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./volunteer.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-volunteer',\n  templateUrl: './volunteer.page.html',\n  styleUrls: ['./volunteer.page.scss'],\n})\n\n/**\n * The main page for all volunteer related pages (add, list, validate, send messages)\n */\nexport class VolunteerPage { }\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./volunteer.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VolunteerPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VolunteerPageModule.html":{"url":"modules/VolunteerPageModule.html","title":"module - VolunteerPageModule","body":"\n                   \n\n\n\n\n    Modules\n    VolunteerPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VolunteerPageModule\n\n\n\ncluster_VolunteerPageModule_declarations\n\n\n\n\nAddVolunteerComponent\n\nAddVolunteerComponent\n\n\n\nVolunteerPageModule\n\nVolunteerPageModule\n\nVolunteerPageModule -->\n\nAddVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nListVolunteerComponent\n\nListVolunteerComponent\n\nVolunteerPageModule -->\n\nListVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nSendMessageComponent\n\nSendMessageComponent\n\nVolunteerPageModule -->\n\nSendMessageComponent->VolunteerPageModule\n\n\n\n\n\nValidateVolunteerComponent\n\nValidateVolunteerComponent\n\nVolunteerPageModule -->\n\nValidateVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nVolunteerPage\n\nVolunteerPage\n\nVolunteerPageModule -->\n\nVolunteerPage->VolunteerPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/volunteer/volunteer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddVolunteerComponent\n                        \n                        \n                            ListVolunteerComponent\n                        \n                        \n                            SendMessageComponent\n                        \n                        \n                            ValidateVolunteerComponent\n                        \n                        \n                            VolunteerPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { VolunteerPage } from './volunteer.page';\nimport { AddVolunteerComponent } from './add-volunteer/add-volunteer.component';\nimport { ListVolunteerComponent } from './list-volunteer/list-volunteer.component';\nimport { ValidateVolunteerComponent } from './validate-volunteer/validate-volunteer.component';\nimport { AuthenticationGuard } from '../../core/authentication/authentication.guard';\nimport { SendMessageComponent } from './send-message/send-message.component';\n\n/**\n * All routes that are derivated from '/volunteers' and their respective components\n */\nconst routes: Routes = [\n  {\n    path: '',\n    component: VolunteerPage,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'add',\n    component: AddVolunteerComponent,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'list',\n    component: ListVolunteerComponent,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'validate',\n    component: ValidateVolunteerComponent,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'send',\n    component: SendMessageComponent,\n    canActivate: [AuthenticationGuard]\n  }\n\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n  ],\n  declarations: [\n    VolunteerPage,\n    AddVolunteerComponent,\n    ListVolunteerComponent,\n    ValidateVolunteerComponent,\n    SendMessageComponent\n  ]\n})\n\n/**\n * The volunteer components module\n */\nexport class VolunteerPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VolunteerService.html":{"url":"injectables/VolunteerService.html","title":"injectable - VolunteerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  VolunteerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/volunteer.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for volunteer related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allocateVolunteer\n                            \n                            \n                                createVolunteer\n                            \n                            \n                                deleteVolunteerById\n                            \n                            \n                                filter\n                            \n                            \n                                getVolunteerById\n                            \n                            \n                                getVolunteerBySsn\n                            \n                            \n                                getVolunteers\n                            \n                            \n                                    Private\n                                removeSpecialChars\n                            \n                            \n                                search\n                            \n                            \n                                updateVolunteer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/volunteer.service.ts:35\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Volunteers Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                        CourseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for course related operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allocateVolunteer\n                        \n                        \n                    \n                \n            \n            \n                \nallocateVolunteer(allocationId: string, volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:301\n                \n            \n\n\n            \n                \n                    Searches for a volunteer with the given volunteer id and allocates it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    allocationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Last allocation id\n\n                                    \n                                \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createVolunteer\n                        \n                        \n                    \n                \n            \n            \n                \ncreateVolunteer(name: string, ssn: string, phone: string, county: any, city: any, organisation: any, course: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:164\n                \n            \n\n\n            \n                \n                    Creates a volunteer entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's name\n\n                                    \n                                \n                                \n                                    ssn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's ssn (Social Security Number)\n\n                                    \n                                \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's phone number\n\n                                    \n                                \n                                \n                                    county\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's county\n\n                                    \n                                \n                                \n                                    city\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's city\n\n                                    \n                                \n                                \n                                    organisation\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object value containing the new volunteer's organisation\nEither contains an object with the following properties {id, name, website}, or it's null\n\n                                    \n                                \n                                \n                                    course\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer's course with properties: {id, name, accredited, obtained}\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with the created object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteVolunteerById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteVolunteerById(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:245\n                \n            \n\n\n            \n                \n                    Deletes an entry by its id from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The volunteer id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter(county: any, organisation: any, course: any, page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:260\n                \n            \n\n\n            \n                \n                    Filters local Volunteers database by the given parameters' values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    county\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        County object\n\n                                    \n                                \n                                \n                                    organisation\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    course\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course name object\n\n                                    \n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A number defining the current page of volunteers from the total list (used to paginate the response)\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of volunteers per page\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all volunteers matching the filters\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolunteerById\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolunteerById(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:129\n                \n            \n\n\n            \n                \n                    Finds a volunteer by its id in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer's id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the volunteer with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolunteerBySsn\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolunteerBySsn(ssn: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:143\n                \n            \n\n\n            \n                \n                    Finds a volunteer by its ssn in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ssn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A ssn code\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the volunteer with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolunteers\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolunteers(page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:73\n                \n            \n\n\n            \n                \n                    Getter method for all volunteers from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A number defining the current page of volunteers from the total list (used to paginate the response)\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of volunteers per page\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all volunteers\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            removeSpecialChars\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeSpecialChars(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:314\n                \n            \n\n\n            \n                \n                    Removes diacritics from a string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A string with diacritics\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the new string, without diacritics\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(keyword: string, page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:93\n                \n            \n\n\n            \n                \n                    Searches for all volunteers from the local database whose name,ssn or organisation name matches the keyword\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    keyword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The string used for search\n\n                                    \n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A number defining the current page of volunteers from the total list (used to paginate the response)\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of volunteers per page\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all volunteers\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateVolunteer\n                        \n                        \n                    \n                \n            \n            \n                \nupdateVolunteer(volunteer: Volunteer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:222\n                \n            \n\n\n            \n                \n                    Updates a volunteer entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteer\n                                    \n                                                Volunteer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new volunteer entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'volunteers'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/volunteer.service.ts:35\n                            \n                        \n\n                \n                    \n                        Table type\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { Volunteer } from '../model/volunteer.model';\nimport { from, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CourseService } from './course.service';\nimport * as moment from 'moment';\n\n/**\n * Reference for local PouchDB Volunteers Database\n */\nconst localDB = new PouchDB('volunteers');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Volunteers Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/volunteers');\n\n/**\n * Provider for volunteer related operations\n */\n@Injectable()\nexport class VolunteerService {\n\n  /**\n   * Table type\n   */\n  private type = 'volunteers';\n\n   /**\n    * Class constructor, sets the synchronization options for CouchDB and PouchDB Volunteers Database\n    * @param courseService Provider for course related operations\n    */\n  constructor(private courseService: CourseService) {\n    const options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);\n\n    localDB.createIndex({\n      index: {\n        fields: [\n          'name',\n          'slug',\n          'ssn',\n          'organisation.slug',\n          'course.[].course_name._id',\n          'organisation._id',\n          'county._id',\n          'city._id',\n          'job',\n          'comments'\n      ]}\n    });\n   }\n\n  /**\n   * Getter method for all volunteers from the local database\n   * @param page A number defining the current page of volunteers from the total list (used to paginate the response)\n   * @param limit The number of volunteers per page\n   * @returns An Observable with all volunteers\n   */\n  getVolunteers(page: number, limit: number): Observable {\n    const skip = page * limit;\n\n    return from(localDB.find({\n      selector: {\n          type: this.type\n      },\n      limit,\n      include_docs: true,\n      skip,\n    }));\n  }\n\n  /**\n   * Searches for all volunteers from the local database whose name,ssn or organisation name matches the keyword\n   * @param keyword The string used for search\n   * @param page A number defining the current page of volunteers from the total list (used to paginate the response)\n   * @param limit The number of volunteers per page\n   * @returns An Observable with all volunteers\n   */\n  search(keyword: string, page: number, limit: number): Observable {\n    const skip = page * limit;\n    keyword = this.removeSpecialChars(keyword);\n    const pattern = new RegExp('.*' + keyword + '.*', 'ig');\n    return from(localDB.find({\n      selector: {\n        $and: [\n          {\n            $or: [\n              {\n                slug: {$regex: pattern},\n              },\n              {\n                ssn: {$regex: pattern},\n              },\n              {\n                'organisation.slug': {$regex: pattern},\n              },\n            ]\n          },\n          {\n            type: this.type\n          }\n        ]\n      },\n      limit,\n      include_docs: true,\n      skip,\n    }));\n  }\n\n   /**\n    * Finds a volunteer by its id in the local database\n    * @param volunteerId Volunteer's id\n    * @returns An Observable containing the volunteer with that id\n    */\n  getVolunteerById(volunteerId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        _id: {$eq: volunteerId},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   * Finds a volunteer by its ssn in the local database\n   * @param ssn A ssn code\n   * @returns An Observable containing the volunteer with that id\n   */\n  getVolunteerBySsn(ssn: string): Observable {\n    return from(localDB.find({\n      selector: {\n        ssn: {$eq: ssn},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   *  Creates a volunteer entry in the local database\n   * @param name String value containing the new volunteer's name\n   * @param ssn String value containing the new volunteer's ssn (Social Security Number)\n   * @param phone String value containing the new volunteer's phone number\n   * @param county String value containing the new volunteer's county\n   * @param city String value containing the new volunteer's city\n   * @param organisation Object value containing the new volunteer's organisation\n   * Either contains an object with the following properties {id, name, website}, or it's null\n   * @param course Volunteer's course with properties: {id, name, accredited, obtained}\n   * @returns An Observable with the created object\n   */\n  createVolunteer(name: string, ssn: string, phone: string, county: any, city: any, organisation: any, course: any): Observable {\n    const volunteer = new Volunteer();\n    volunteer.name = name;\n    volunteer.ssn = ssn;\n    volunteer.county = {\n      _id: county._id,\n      name: county.name\n    };\n    volunteer.city = {\n      _id: city._id,\n      name: city.name\n    };\n    volunteer.created_at = moment().format('Y-MM-DD HH:mm:ss');\n    volunteer.updated_at = moment().format('Y-MM-DD HH:mm:ss');\n    volunteer.allocation = '';\n    volunteer.phone = phone;\n    volunteer.slug = this.removeSpecialChars(name);\n    volunteer.type = this.type;\n\n    if (organisation) {\n      volunteer.organisation = {\n        _id: organisation._id,\n        name: organisation.name,\n        website: organisation.website,\n        slug: this.removeSpecialChars(organisation.name)\n      };\n    } else {\n      volunteer.organisation = null;\n    }\n\n    volunteer.courses = [];\n\n    if (course && course._id) {\n      let accreditor = null;\n      if (course.static_accreditor) {\n        accreditor = course.static_accreditor;\n      }\n\n      const newCourse = {\n        course_name : {\n          _id: course._id,\n          name: course.name,\n          slug: course.slug\n        },\n        obtained: null,\n        accredited: accreditor\n      };\n\n      volunteer.courses.push(newCourse);\n    }\n\n    return from(localDB.post(volunteer));\n  }\n\n   /**\n    * Updates a volunteer entry in the local database\n    * @param volunteer The new volunteer entry\n    */\n  updateVolunteer(volunteer: Volunteer) {\n    localDB.get(volunteer._id).then((doc: Volunteer) => {\n      doc.name = volunteer.name ? volunteer.name : doc.name;\n      doc.slug = volunteer.name ? this.removeSpecialChars(volunteer.name) : doc.slug;\n      doc.ssn = volunteer.ssn ? volunteer.ssn : doc.ssn;\n      doc.email = volunteer.email ? volunteer.email : doc.email;\n      doc.phone = volunteer.phone ? volunteer.phone : doc.phone;\n      doc.county = volunteer.county ? volunteer.county : doc.county;\n      doc.city = volunteer.city ? volunteer.city : doc.city;\n      doc.organisation = volunteer.organisation ? volunteer.organisation : doc.organisation;\n      doc.courses = volunteer.courses ? volunteer.courses : doc.courses;\n      doc.comments = volunteer.comments ? volunteer.comments : doc.comments;\n      doc.job = volunteer.job ? volunteer.job : doc.job;\n      doc.allocation = volunteer.allocation ? volunteer.allocation : doc.allocation;\n      doc.updated_at = moment().format('Y-MM-DD HH:mm:ss');\n      localDB.put(doc);\n    });\n  }\n\n   /**\n    * Deletes an entry by its id from the local database\n    * @param volunteerId The volunteer id\n    */\n  deleteVolunteerById(volunteerId: string) {\n    localDB.get(volunteerId).then((doc) => {\n      localDB.remove(doc);\n    });\n  }\n\n  /**\n   * Filters local Volunteers database by the given parameters' values\n   * @param county County object\n   * @param organisationId Organisation object\n   * @param course Course name object\n   * @param page A number defining the current page of volunteers from the total list (used to paginate the response)\n   * @param limit The number of volunteers per page\n   * @returns An Observable with all volunteers matching the filters\n   */\n  filter(county: any, organisation: any, course: any, page: number, limit: number): Observable {\n    const skip = page * limit;\n    const selector: any = {$and : []};\n\n    selector['$and'].push( {\n      type: this.type,\n    });\n\n    if (!!county && !!county._id) {\n      selector['$and'].push( {\n        'county._id': {$eq: county._id},\n      });\n    }\n\n    if (!!organisation && organisation._id) {\n      selector['$and'].push(  {\n        'organisation._id': {$eq: organisation._id},\n      });\n    }\n\n    if (!!course && !!course._id) {\n      selector['$and'].push( {courses: {\n        $elemMatch : {\n          'course_name._id': {$eq: course._id},\n          }\n        }\n      });\n    }\n\n    return from(localDB.find({\n      selector,\n      limit,\n      skip\n    }));\n  }\n\n  /**\n   * Searches for a volunteer with the given volunteer id and allocates it\n   * @param allocationId Last allocation id\n   * @param volunteerId Volunteer id\n   */\n  allocateVolunteer(allocationId: string, volunteerId: string) {\n    return localDB.get(volunteerId).then((doc) => {\n      doc.allocation = allocationId;\n      doc.updated_at = moment().format('Y-MM-DD HH:mm:ss');\n      localDB.put(doc);\n    });\n  }\n\n  /**\n   * Removes diacritics from a string\n   * @param text A string with diacritics\n   * @returns the new string, without diacritics\n   */\n  private removeSpecialChars(text: string): string {\n      const input   = 'ăâîșț';\n      const output  = 'aaist';\n      const regex = new RegExp('[' + input + ']', 'g');\n      const transl = {};\n\n      const lookup = (m) => transl[m] || m;\n\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.service.ts\n            \n            variable\n            credentialsKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/authentication/unauthenticated.guard.ts\n            \n            guard\n            UnauthenticatedGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/components/custom-selector/custom-selector.component.ts\n            \n            component\n            CustomSelectorComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/core/http/error-handler.interceptor.ts\n            \n            interceptor\n            ErrorHandlerInterceptor\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/http/error-handler.interceptor.ts\n            \n            variable\n            credentialsKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/http/request.interceptor.ts\n            \n            interceptor\n            RequestInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            clearData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            createCookie\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            getData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            getSessionName\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            readCookie\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            setData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/model/allocation.model.ts\n            \n            class\n            Allocation\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            interface\n            Credentials\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            interface\n            LoginPayload\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            interface\n            User\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/model/error.model.ts\n            \n            interface\n            ErrorMessageObject\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/model/error.model.ts\n            \n            interface\n            RootObject\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/model/organisation.model.ts\n            \n            class\n            Organisation\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/core/model/volunteer.model.ts\n            \n            class\n            Volunteer\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                src/app/core/route-reusable-strategy.ts\n            \n            class\n            RouteReusableStrategy\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/service/allocation.service.ts\n            \n            injectable\n            AllocationService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/service/allocation.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/allocation.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/course.service.ts\n            \n            injectable\n            CourseService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/service/course.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/course.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            class\n            DatabaseSyncService\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/core/service/error-message.service.ts\n            \n            injectable\n            ErrorMessageService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/service/organisation.service.ts\n            \n            injectable\n            OrganisationService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/service/organisation.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/organisation.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/statics.service.ts\n            \n            injectable\n            StaticsService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/service/statics.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/statics.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/volunteer.service.ts\n            \n            injectable\n            VolunteerService\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/core/service/volunteer.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/volunteer.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/email-validation.ts\n            \n            class\n            EmailValidation\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/validators/password-validation.ts\n            \n            class\n            PasswordValidation\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/validators/phone-validation.ts\n            \n            class\n            PhoneValidation\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/validators/ssn-validation.ts\n            \n            class\n            SsnValidation\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/pages/about/about.page.ts\n            \n            component\n            AboutPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/authentication.page.ts\n            \n            component\n            AuthenticationPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/logout/logout.component.ts\n            \n            component\n            LogoutComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/recover-password/recover-password.component.ts\n            \n            component\n            RecoverPasswordComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            component\n            HomePage\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/add-volunteer/add-volunteer.component.ts\n            \n            component\n            AddVolunteerComponent\n            \n                92 %\n                (26/28)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/list-volunteer/list-volunteer.component.ts\n            \n            component\n            ListVolunteerComponent\n            \n                94 %\n                (33/35)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/send-message/send-message.component.ts\n            \n            component\n            SendMessageComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts\n            \n            component\n            ValidateVolunteerComponent\n            \n                92 %\n                (24/26)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/volunteer.page.ts\n            \n            component\n            VolunteerPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.local.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^7.2.2\n        \n            @angular/core : ^7.2.2\n        \n            @angular/forms : ^7.2.2\n        \n            @angular/http : ^7.2.2\n        \n            @angular/platform-browser : ^7.2.2\n        \n            @angular/platform-browser-dynamic : ^7.2.2\n        \n            @angular/router : ^7.2.2\n        \n            @ionic-native/camera : ^5.9.0\n        \n            @ionic-native/core : ^5.11.0\n        \n            @ionic-native/date-picker : ^5.11.0\n        \n            @ionic-native/deeplinks : ^5.11.0\n        \n            @ionic-native/in-app-browser : ^5.12.0\n        \n            @ionic-native/sms : ^5.11.0\n        \n            @ionic-native/splash-screen : ^5.0.0\n        \n            @ionic-native/status-bar : ^5.9.0\n        \n            @ionic/angular : ^4.6.2\n        \n            @ionic/lab : ^2.0.6\n        \n            @types/pouchdb : ^6.4.0\n        \n            cordova-android : ^8.0.0\n        \n            cordova-ios : ^5.0.1\n        \n            cordova-plugin-camera : ^4.0.3\n        \n            cordova-plugin-datepicker : ^0.9.3\n        \n            cordova-plugin-inappbrowser : ^3.1.0\n        \n            cordova-sms-plugin : ^1.0.0\n        \n            core-js : ^2.5.4\n        \n            ionic-plugin-deeplinks : ^1.0.20\n        \n            moment : ^2.24.0\n        \n            pouchdb : ^7.1.1\n        \n            pouchdb-find : ^7.1.1\n        \n            rxjs : ~6.5.1\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            clearData   (src/.../local-storage.service.ts)\n                        \n                        \n                            createCookie   (src/.../local-storage.service.ts)\n                        \n                        \n                            getData   (src/.../local-storage.service.ts)\n                        \n                        \n                            getSessionName   (src/.../local-storage.service.ts)\n                        \n                        \n                            readCookie   (src/.../local-storage.service.ts)\n                        \n                        \n                            setData   (src/.../local-storage.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/local-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            clearData\n                        \n                        \n                    \n                \n            \n            \n                \nclearData(type: any)\n                \n            \n\n\n\n\n            \n                \n                    Clears data from storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Storage type (local or session)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createCookie\n                        \n                        \n                    \n                \n            \n            \n                \ncreateCookie(name: any, value: any, days: any)\n                \n            \n\n\n\n\n            \n                \n                    Creates a cookie entry\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie name\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie value\n\n                                    \n                                \n                                \n                                    days\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie expiration number of days\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData(type: any)\n                \n            \n\n\n\n\n            \n                \n                    Retrieves all data from storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Storage type (local or session)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSessionName\n                        \n                        \n                    \n                \n            \n            \n                \ngetSessionName()\n                \n            \n\n\n\n\n            \n                \n                    Getter for session name\n\n\n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readCookie\n                        \n                        \n                    \n                \n            \n            \n                \nreadCookie(name: any)\n                \n            \n\n\n\n\n            \n                \n                    Getter for a cookie document by its name\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie's name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setData\n                        \n                        \n                    \n                \n            \n            \n                \nsetData(type: any, data: any)\n                \n            \n\n\n\n\n            \n                \n                    Sets data into storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Storage type (local or session)\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Information that needs to be stored\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthenticationPageModule\n\n\n\ncluster_AuthenticationPageModule_declarations\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_VolunteerPageModule\n\n\n\ncluster_VolunteerPageModule_declarations\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nAuthenticationPage\n\nAuthenticationPage\n\n\n\nAuthenticationPageModule\n\nAuthenticationPageModule\n\nAuthenticationPageModule -->\n\nAuthenticationPage->AuthenticationPageModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthenticationPageModule -->\n\nLoginComponent->AuthenticationPageModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAuthenticationPageModule -->\n\nLogoutComponent->AuthenticationPageModule\n\n\n\n\n\nRecoverPasswordComponent\n\nRecoverPasswordComponent\n\nAuthenticationPageModule -->\n\nRecoverPasswordComponent->AuthenticationPageModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationPageModule -->\n\nResetPasswordComponent->AuthenticationPageModule\n\n\n\n\n\nCustomSelectorComponent\n\nCustomSelectorComponent\n\nCoreModule -->\n\nCustomSelectorComponent->CoreModule\n\n\n\n\n\nAllocationService\n\nAllocationService\n\nCoreModule -->\n\nAllocationService->CoreModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nCoreModule -->\n\nAuthenticationService->CoreModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nCoreModule -->\n\nCourseService->CoreModule\n\n\n\n\n\nErrorHandlerInterceptor\n\nErrorHandlerInterceptor\n\nCoreModule -->\n\nErrorHandlerInterceptor->CoreModule\n\n\n\n\n\nErrorMessageService\n\nErrorMessageService\n\nCoreModule -->\n\nErrorMessageService->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\nOrganisationService\n\nOrganisationService\n\nCoreModule -->\n\nOrganisationService->CoreModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\n\n\nStaticsService\n\nStaticsService\n\nCoreModule -->\n\nStaticsService->CoreModule\n\n\n\n\n\nVolunteerService\n\nVolunteerService\n\nCoreModule -->\n\nVolunteerService->CoreModule\n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nAddVolunteerComponent\n\nAddVolunteerComponent\n\n\n\nVolunteerPageModule\n\nVolunteerPageModule\n\nVolunteerPageModule -->\n\nAddVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nListVolunteerComponent\n\nListVolunteerComponent\n\nVolunteerPageModule -->\n\nListVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nSendMessageComponent\n\nSendMessageComponent\n\nVolunteerPageModule -->\n\nSendMessageComponent->VolunteerPageModule\n\n\n\n\n\nValidateVolunteerComponent\n\nValidateVolunteerComponent\n\nVolunteerPageModule -->\n\nValidateVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nVolunteerPage\n\nVolunteerPage\n\nVolunteerPageModule -->\n\nVolunteerPage->VolunteerPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        27 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AboutPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VolunteerPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (src/.../config.ts)\n                        \n                        \n                            credentialsKey   (src/.../authentication.service.ts)\n                        \n                        \n                            credentialsKey   (src/.../error-handler.interceptor.ts)\n                        \n                        \n                            environment   (src/.../environment.dev.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.local.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            localDB   (src/.../allocation.service.ts)\n                        \n                        \n                            localDB   (src/.../course.service.ts)\n                        \n                        \n                            localDB   (src/.../organisation.service.ts)\n                        \n                        \n                            localDB   (src/.../statics.service.ts)\n                        \n                        \n                            localDB   (src/.../volunteer.service.ts)\n                        \n                        \n                            remoteDB   (src/.../allocation.service.ts)\n                        \n                        \n                            remoteDB   (src/.../course.service.ts)\n                        \n                        \n                            remoteDB   (src/.../organisation.service.ts)\n                        \n                        \n                            remoteDB   (src/.../statics.service.ts)\n                        \n                        \n                            remoteDB   (src/.../volunteer.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    /**\n     * Help phone number\n     */\n    phoneNumber: '89992142265'\n}\n                        \n                    \n\n                \n                    \n                        App config values\n\n                    \n                \n\n            \n        \n\n    src/app/core/authentication/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            credentialsKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'credentials'\n                        \n                    \n\n                \n                    \n                        Stores the value of credentials' key\n\n                    \n                \n\n            \n        \n\n    src/app/core/http/error-handler.interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            credentialsKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'credentials'\n                        \n                    \n\n                \n                    \n                        Key that identifies the credentials\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.dev.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'DEV',\n  production: false,\n  serverBaseUrl: 'https://rvm-api.lxhost.ro',\n  serverUrl: 'https://rvm-api.lxhost.ro/api',\n  databaseURL: 'http://rvm.lxhost.ro:5984'\n}\n                        \n                    \n\n                \n                    \n                        Developement environment values\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'PROD',\n  production: true,\n  serverBaseUrl: 'http://52.50.54.63:8080',\n  serverUrl: 'http://52.50.54.63:8080/api',\n  databaseURL: 'admin@admin:http://52.50.54.63:5984'\n}\n                        \n                    \n\n                \n                    \n                        Production environment values\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.local.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'LOCAL',\n  production: false\n}\n                        \n                    \n\n                \n                    \n                        Local environment values\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'DEFAULT',\n  production: false,\n  serverBaseUrl: 'https://rvm-api.lxhost.ro',\n  serverUrl: 'https://rvm-api.lxhost.ro/api',\n  databaseURL: 'http://rvm.lxhost.ro:5984'\n}\n                        \n                    \n\n                \n                    \n                        Default environment values\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/allocation.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('allocations')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/allocations')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Allocations Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/course.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('courses')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Courses Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/courses')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Courses Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/organisation.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('organisations')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Organisations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/organisations')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Organisations Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/statics.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('statics')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Statics Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/statics')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Statics Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/volunteer.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('volunteers')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/volunteers')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
