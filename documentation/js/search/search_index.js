var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AboutPage.html",[0,0.682,1,1.262]],["body/components/AboutPage.html",[0,0.953,1,1.936,2,1.753,3,0.123,4,0.123,5,1.273,6,1.348,7,1.273,8,1.205,9,0.106,10,2.53,11,1.273,12,2.619,13,2.761,14,1.962,15,5.062,16,1.853,17,4.294,18,0.3,19,0.019,20,1.625,21,0.444,22,0.141,23,0.023,24,2.046,25,0.556,26,3.682,27,4.767,28,3.682,29,1.368,30,4.767,31,5.287,32,2.977,33,4.294,34,4.275,35,4.294,36,4.294,37,6.282,38,4.294,39,5.56,40,4.294,41,4.294,42,6.521,43,4.294,44,4.294,45,4.294,46,4.294,47,4.767,48,4.708,49,4.294,50,5.111,51,4.294,52,6.165,53,4.294,54,4.294,55,4.294,56,4.294,57,4.294,58,4.294,59,4.294,60,4.294,61,4.294,62,5.56,63,5.56,64,5.56,65,5.56,66,5.56,67,4.294,68,4.294,69,5.56,70,5.56,71,4.294,72,5.56,73,4.294,74,5.591,75,6.165,76,4.294,77,4.294,78,3.682,79,4.294,80,6.165,81,4.294,82,4.294,83,4.294,84,4.294,85,4.294,86,4.294,87,3.682,88,4.294,89,5.56,90,5.56,91,4.294,92,4.294,93,4.294,94,4.245,95,4.294,96,4.294,97,4.294,98,4.294,99,4.767,100,4.294,101,4.294,102,4.294,103,4.294,104,4.294,105,4.294,106,4.294,107,4.294,108,4.294,109,3.278,110,3.278,111,4.294,112,2.215,113,4.294,114,4.294,115,4.294,116,4.294,117,4.767,118,4.294,119,4.294,120,4.294,121,4.294,122,4.294,123,4.294,124,4.294,125,3.278,126,4.294,127,4.294,128,4.294,129,4.294,130,4.294,131,0.882,132,1.853,133,1.753,134,1.273,135,2.399,136,1.273,137,0.437,138,1.273,139,1.082,140,1.141,141,2.185,142,1.028,143,1.273,144,1.028,145,1.273,146,1.028,147,1.205,148,1.273,149,1.028,150,1.273,151,1.082,152,1.028,153,1.028,154,1.273,155,1.028,156,1.273,157,1.028,158,1.205,159,1.853,160,1.028,161,0.839,162,1.028,163,1.141,164,1.273,165,1.082,166,1.141,167,1.028,168,1.273,169,1.273,170,0.008,171,0.011,172,0.008]],["title/modules/AboutPageModule.html",[173,1.33,174,2.513]],["body/modules/AboutPageModule.html",[0,0.929,1,2.53,3,0.206,4,0.206,9,0.177,18,0.739,19,0.02,21,0.742,22,0.236,23,0.039,131,1.474,161,1.402,170,0.013,171,0.016,172,0.013,173,1.81,174,4.971,175,2.254,176,2.392,177,3.621,178,2.717,179,2.717,180,2.545,181,4.229,182,4.229,183,3.343,184,2.392,185,4.933,186,3.343,187,3.868,188,2.717,189,3.868,190,1.81,191,3.187,192,2.914,193,1.402,194,3.585,195,2.129,196,4.933,197,3.131,198,3.766,199,1.205,200,2.914,201,2.717,202,2.717,203,3.766]],["title/classes/Allocation.html",[23,0.028,204,2.141]],["body/classes/Allocation.html",[3,0.192,4,0.192,9,0.164,19,0.02,22,0.219,23,0.036,29,1.72,137,0.702,170,0.012,171,0.015,172,0.012,204,3.759,205,1.874,206,3.936,207,0.502,208,3.183,209,1.684,210,0.4,211,1.215,212,3.122,213,4.412,214,3.759,215,3.759,216,4.412,217,3.282,218,5.455,219,0.716,220,4.412,221,1.273,222,1.042,223,4.59,224,4.59,225,4.781,226,4.59,227,4.59,228,4.59,229,4.59,230,4.59,231,4.59,232,4.59,233,4.59]],["title/injectables/AllocationService.html",[234,0.931,235,2.31]],["body/injectables/AllocationService.html",[3,0.131,4,0.131,9,0.112,18,0.705,19,0.02,21,0.473,22,0.15,23,0.041,25,0.988,29,1.793,137,0.675,170,0.008,171,0.012,172,0.008,199,1.48,204,3.832,207,0.491,209,2.434,210,0.392,211,1.199,212,2.471,214,3.832,215,3.722,217,3.347,218,2.695,219,0.626,221,0.53,222,0.743,234,1.155,235,2.865,236,1.524,237,2.4,238,1.649,239,5.156,240,1.94,241,1.739,242,1.894,243,0.846,244,4.495,245,2.18,246,2.084,247,3.832,248,4.495,249,2.319,250,2.476,251,3.382,252,2.89,253,3.251,254,3.535,255,0.846,256,0.758,257,4.495,258,3.143,259,2.655,260,3.471,261,2.03,262,3.117,263,4.371,264,2.655,265,3.649,266,1.157,267,2.865,268,4.495,269,2.655,270,3.854,271,2.179,272,3.117,273,3.432,274,1.835,275,0.846,276,2.319,277,3.117,278,1.095,279,2.865,280,1.857,281,2.004,282,2.004,283,1.436,284,1.622,285,1.436,286,2.4,287,2.004,288,1.095,289,3.143,290,3.143,291,2.695,292,2.655,293,1.487,294,1.732,295,1.491,296,2.4,297,1.857,298,1.857,299,2.004,300,2.004,301,1.622,302,1.732,303,1.732,304,1.357,305,2.004,306,1.568,307,2.004,308,2.004,309,2.18,310,2.18,311,2.18,312,3.143,313,3.143,314,1.199,315,2.695,316,3.143,317,4.495,318,2.695,319,3.143,320,3.143,321,3.143,322,3.143,323,3.143,324,3.143,325,3.143,326,3.117,327,3.117,328,3.117,329,3.117,330,3.143,331,3.143,332,2.18,333,3.143,334,3.143,335,2.4,336,1.278,337,3.143,338,2.18,339,2.695,340,3.143,341,2.18]],["title/components/AppComponent.html",[0,0.682,142,1.262]],["body/components/AppComponent.html",[0,0.751,1,0.699,2,1.306,3,0.084,4,0.084,5,0.866,7,0.866,8,0.819,9,0.072,11,0.866,12,2.445,13,2.66,16,1.38,18,0.605,19,0.02,21,0.302,22,0.096,23,0.016,25,0.602,26,2.742,27,2.742,29,0.542,30,2.742,47,2.742,48,2.442,87,4.765,94,1.531,99,1.72,109,3.474,110,3.045,117,1.72,131,0.599,132,1.38,133,1.306,134,0.866,135,1.964,136,0.866,137,0.539,138,0.866,139,0.736,140,0.776,141,1.721,142,1.585,143,0.866,144,0.699,145,0.866,146,0.699,147,0.819,148,0.866,149,0.699,150,0.866,151,0.736,152,0.699,153,0.699,154,0.866,155,0.699,156,0.866,157,0.699,158,0.819,159,1.38,160,1.389,161,0.57,162,0.699,163,0.776,164,0.866,165,0.736,166,0.776,167,0.699,168,0.866,169,0.866,170,0.005,171,0.008,172,0.005,188,1.105,193,0.57,195,0.866,199,0.781,207,0.349,210,0.175,211,0.669,219,0.469,221,0.673,222,0.864,238,2.467,240,2.145,241,1.923,242,2.06,243,0.602,246,2.06,250,1.761,254,1.65,255,0.602,256,0.539,264,2.688,266,1.226,269,1.889,275,0.857,278,1.389,288,1.389,293,1.058,306,1.192,314,1.277,336,0.57,342,1.72,343,1.38,344,3.988,345,3.198,346,3.198,347,2.733,348,3.988,349,3.988,350,3.988,351,3.988,352,4.55,353,4.55,354,2.742,355,3.045,356,3.474,357,2.005,358,4.947,359,4.947,360,2.786,361,2.798,362,6.097,363,3.678,364,4.55,365,3.474,366,3.198,367,3.901,368,3.198,369,4.55,370,3.155,371,3.901,372,2.867,373,2.918,374,2.442,375,2.742,376,2.217,377,3.446,378,2.005,379,4.55,380,2.688,381,2.742,382,3.198,383,3.198,384,3.901,385,4.541,386,4.044,387,2.742,388,2.079,389,3.198,390,2.742,391,3.198,392,3.198,393,3.198,394,3.198,395,3.155,396,3.474,397,2.742,398,2.742,399,3.198,400,1.463,401,2.005,402,2.217,403,2.742,404,1.889,405,3.198,406,2.742,407,2.742,408,2.742,409,2.005,410,4.247,411,2.442,412,3.129,413,2.005,414,2.442,415,1.551,416,2.442,417,5.433,418,2.742,419,2.217,420,2.442,421,2.217,422,2.742,423,2.742,424,2.742,425,2.217,426,2.742,427,2.742,428,2.742,429,3.198,430,3.198,431,2.005,432,3.901,433,3.901,434,3.198,435,2.079,436,2.005,437,2.41,438,2.038,439,3.198,440,3.198,441,3.198,442,3.198,443,3.198,444,3.988,445,2.005,446,3.198,447,2.005,448,3.198,449,2.005,450,2.038,451,3.198,452,2.217,453,2.038,454,2.005,455,2.765,456,1.531,457,1.72,458,1.531,459,1.72,460,1.278,461,1.72,462,1.72,463,2.005,464,1.391,465,1.72,466,2.005,467,3.198,468,3.198,469,2.005,470,2.005,471,2.005,472,1.391,473,2.005,474,2.005,475,2.005,476,2.005,477,2.005,478,2.005,479,1.461,480,2.005,481,3.988,482,2.005,483,2.217,484,2.217,485,2.005,486,2.005,487,2.005,488,2.005,489,3.198,490,2.005,491,1.72,492,1.72,493,1.72,494,2.005,495,2.005,496,2.005,497,2.005,498,2.005,499,1.531,500,3.198,501,2.005,502,1.391,503,2.005,504,0.819,505,2.005,506,2.005,507,1.391,508,1.278,509,1.531,510,1.531,511,3.198]],["title/modules/AppModule.html",[173,1.33,512,2.513]],["body/modules/AppModule.html",[3,0.183,4,0.183,9,0.157,13,2.178,18,0.752,19,0.02,21,0.658,22,0.209,23,0.034,131,1.308,142,2.574,161,1.244,170,0.011,171,0.015,172,0.011,173,1.606,175,2,176,2.122,177,3.428,178,3.428,179,3.101,180,2.258,183,3.101,184,2.122,186,3.101,193,1.244,194,2.586,195,1.889,202,3.101,358,4.827,359,4.827,455,4.712,456,3.342,457,3.753,458,3.342,459,3.753,460,2.79,512,5.096,513,3.753,514,3.753,515,3.753,516,3.753,517,4.433,518,4.433,519,4.377,520,5.629,521,3.753,522,3.035,523,4.298,524,5.629,525,4.377,526,4.377,527,4.827,528,3.753,529,4.377,530,4.298,531,3.753,532,4.827,533,3.753,534,4.377,535,3.753,536,4.377,537,3.753,538,3.753]],["title/classes/AppPage.html",[23,0.028,539,2.767]],["body/classes/AppPage.html",[3,0.218,4,0.218,9,0.187,18,0.533,19,0.02,22,0.25,23,0.041,133,2.138,137,0.533,170,0.014,171,0.016,172,0.014,205,2.138,210,0.457,222,0.956,243,1.185,255,0.986,256,0.883,275,1.27,336,1.918,522,3.63,539,4.805,540,4.489,541,6.999,542,6.999,543,6.292,544,5.235,545,5.235,546,6.292,547,5.235,548,5.235,549,5.235,550,5.235,551,5.235,552,5.235,553,5.235,554,5.235]],["title/modules/AppRoutingModule.html",[173,1.33,517,2.31]],["body/modules/AppRoutingModule.html",[3,0.21,4,0.21,9,0.18,18,0.675,19,0.02,21,0.757,22,0.241,23,0.04,29,1.361,170,0.013,171,0.016,172,0.013,175,2.301,180,2.598,186,3.386,191,3.217,192,3.631,193,1.431,197,3.564,199,1.23,200,4.185,201,3.654,202,2.774,460,3.21,517,3.918,555,5.036,556,5.036,557,6.146,558,5.036,559,3.918,560,5.036,561,4.318,562,6.907,563,5.036,564,5.036,565,5.036,566,5.036,567,5.036,568,5.036,569,5.036]],["title/guards/AuthenticationGuard.html",[197,1.87,570,2.31]],["body/guards/AuthenticationGuard.html",[3,0.177,4,0.177,9,0.152,18,0.624,19,0.02,21,0.639,22,0.203,23,0.048,25,1.223,29,1.493,137,0.432,166,2.137,170,0.011,171,0.014,172,0.011,191,2.678,193,1.208,197,2.85,201,3.801,207,0.604,210,0.371,219,0.401,222,0.783,234,1.419,241,2.513,242,1.827,243,1.04,246,2.357,255,0.8,256,0.717,264,3.263,266,1.433,275,1.04,288,1.924,306,1.651,314,1.156,336,1.57,343,1.834,360,3.211,372,3.351,388,2.524,402,3.83,412,3.263,415,2.678,435,2.524,437,2.061,450,4.14,452,3.83,453,3.521,559,3.521,570,3.521,571,3.245,572,3.644,573,4.217,574,4.736,575,4.96,576,4.736,577,2.341,578,4.25,579,3.838,580,4.217,581,2.384,582,4.25,583,4.217,584,2.137,585,4.736,586,4.736,587,4.736,588,4.736,589,2.678,590,3.644,591,3.245,592,2.947,593,2.709]],["title/components/AuthenticationPage.html",[0,0.682,144,1.262]],["body/components/AuthenticationPage.html",[0,1.2,1,1.604,2,2.374,3,0.192,4,0.192,5,1.988,6,2.105,7,1.988,8,1.881,9,0.165,11,1.988,12,2.769,13,2.92,14,2.657,16,2.51,18,0.469,19,0.02,21,0.693,22,0.22,23,0.036,25,1.2,29,1.245,131,1.377,132,2.51,133,2.374,134,1.988,135,2.889,136,1.988,137,0.592,138,1.988,139,1.69,140,1.782,141,2.75,142,1.604,143,1.988,144,2.331,145,1.988,146,1.604,147,1.881,148,1.988,149,1.604,150,1.988,151,1.69,152,1.604,153,1.604,154,1.988,155,1.604,156,1.988,157,1.604,158,1.881,159,2.51,160,1.604,161,1.309,162,1.604,163,1.782,164,1.988,165,1.69,166,1.782,167,1.604,168,1.988,169,1.988,170,0.012,171,0.015,172,0.012,222,0.653,288,2.025,594,3.949,595,6.372,596,5.815,597,4.606]],["title/modules/AuthenticationPageModule.html",[173,1.33,598,2.513]],["body/modules/AuthenticationPageModule.html",[0,1.268,3,0.177,4,0.177,9,0.152,18,0.744,19,0.02,21,0.639,22,0.203,23,0.033,131,1.271,144,2.447,153,2.447,155,2.447,157,2.447,158,2.255,160,2.447,161,1.57,170,0.011,171,0.014,172,0.011,173,1.559,175,1.942,176,2.061,177,3.38,178,2.341,179,2.341,180,2.193,183,3.043,184,2.061,186,3.043,187,3.521,188,2.341,189,3.521,190,1.559,191,2.975,192,2.511,193,1.208,194,3.263,195,1.834,199,1.038,200,3.978,201,3.043,202,2.341,203,3.245,464,2.947,465,4.736,589,2.061,598,5.152,599,3.644,600,3.644,601,4.25,602,4.736,603,4.25,604,3.245,605,4.25,606,4.25,607,3.911,608,4.25,609,2.947,610,4.25]],["title/injectables/AuthenticationService.html",[234,0.931,246,1.199]],["body/injectables/AuthenticationService.html",[3,0.09,4,0.09,9,0.077,18,0.523,19,0.02,21,0.323,22,0.103,23,0.04,25,0.89,78,3.578,137,0.523,161,1.344,163,1.307,170,0.006,171,0.009,172,0.006,184,1.638,199,1.019,207,0.596,209,1.735,210,0.188,211,0.707,219,0.515,221,1.07,222,0.914,234,0.868,236,1.042,241,1.829,242,1.956,243,0.636,246,1.117,255,0.968,256,0.867,261,2.352,264,1.995,266,1.49,269,3.493,273,4.752,274,2.671,275,1.302,276,3.375,278,0.748,285,0.982,286,2.579,287,1.37,288,2.167,293,1.565,295,1.344,301,3.211,306,1.247,314,1.195,336,1.769,338,1.49,341,2.342,347,3.137,361,2.867,375,2.896,388,2.899,400,0.788,404,3.224,438,3.277,450,3.478,453,3.967,573,2.579,575,3.611,579,2.794,581,2.041,583,2.579,584,2.562,589,2.949,609,3.784,611,1.641,612,2.896,613,4.172,614,3.537,615,4.729,616,3.377,617,2.579,618,3.377,619,2.896,620,4.172,621,2.149,622,5.708,623,3.377,624,3.377,625,3.377,626,3.768,627,4.729,628,2.579,629,2.579,630,1.861,631,2.149,632,2.149,633,4.172,634,2.149,635,4.099,636,3.224,637,5.912,638,5.069,639,4.172,640,3.279,641,2.149,642,3.377,643,1.995,644,2.153,645,3.377,646,3.377,647,2.149,648,3.416,649,4.729,650,2.768,651,3.377,652,3.377,653,3.377,654,4.729,655,3.377,656,3.81,657,2.149,658,3.377,659,3.377,660,3.377,661,5.708,662,2.149,663,3.377,664,2.149,665,2.342,666,3.611,667,3.377,668,3.377,669,2.149,670,3.377,671,3.377,672,3.578,673,2.896,674,2.896,675,2.342,676,3.377,677,2.149,678,2.149,679,2.815,680,2.149,681,2.149,682,2.149,683,2.149,684,3.377,685,3.377,686,1.49,687,1.49,688,1.49,689,2.342,690,3.377,691,2.149,692,4.172,693,2.149,694,2.149,695,2.149,696,2.149,697,2.149,698,2.149,699,2.149,700,2.149,701,2.149,702,2.149,703,4.172,704,2.149,705,2.149,706,2.149,707,2.149,708,1.843,709,2.149,710,2.149,711,3.377,712,2.149,713,2.149]],["title/modules/CoreModule.html",[173,1.33,518,2.31]],["body/modules/CoreModule.html",[3,0.159,4,0.159,9,0.136,18,0.745,19,0.02,21,0.572,22,0.182,23,0.03,131,1.137,146,2.421,161,1.081,170,0.01,171,0.013,172,0.01,173,1.883,175,1.738,176,1.844,177,3.199,178,2.095,179,3.199,180,1.963,183,2.827,184,1.844,186,2.827,187,3.271,188,2.095,189,3.271,190,1.396,192,3.032,193,1.081,194,3.032,195,1.642,197,2.648,202,2.095,235,4.263,240,1.642,246,2.213,247,3.951,261,1.471,288,1.325,306,1.137,361,3.243,363,3.271,372,1.963,460,2.425,518,4.84,523,3.918,535,4.4,537,4.4,538,4.4,581,1.642,607,3.271,628,2.904,686,2.638,687,2.638,714,3.262,715,3.262,716,3.262,717,3.951,718,4.263,719,3.951,720,4.263,721,4.49,722,4.263,723,3.804,724,5.132,725,5.132,726,3.558,727,2.904,728,3.262,729,3.804,730,3.804,731,3.804,732,2.904,733,3.804,734,3.804,735,3.804,736,2.904,737,3.804]],["title/classes/Course.html",[23,0.028,738,2.31]],["body/classes/Course.html",[3,0.196,4,0.196,9,0.168,19,0.02,22,0.224,23,0.037,25,1.21,112,3.033,137,0.598,170,0.012,171,0.015,172,0.012,205,1.914,207,0.512,208,3.25,209,1.72,210,0.409,211,1.231,212,2.994,213,4.454,216,4.454,219,0.712,220,4.454,221,1.268,222,1.052,225,4.077,738,4.095,739,4.019,740,4.454,741,4.905,742,6.424,743,4.905,744,5.508,745,5.879,746,4.688,747,4.688,748,4.688,749,4.688,750,4.688,751,4.688,752,4.688,753,4.688,754,4.688]],["title/injectables/CourseService.html",[234,0.931,717,2.141]],["body/injectables/CourseService.html",[3,0.097,4,0.097,9,0.083,12,1.956,18,0.617,19,0.02,21,0.349,22,0.111,23,0.034,25,0.826,29,1.523,112,1.198,137,0.677,152,1.718,170,0.006,171,0.009,172,0.006,199,1.205,207,0.663,210,0.313,211,0.751,212,1.002,219,0.657,221,1.157,222,0.901,234,0.922,236,1.126,238,1.81,240,2.129,241,1.908,242,1.451,243,0.676,246,1.632,249,1.851,250,1.977,251,2.914,252,2.415,253,2.907,254,3.633,255,1.106,256,0.991,259,2.12,260,3.504,261,2.576,262,2.488,263,2.74,265,3.144,266,0.967,267,3.144,271,3.325,275,1.268,276,3.612,278,0.809,279,2.287,280,1.372,281,1.481,282,1.481,283,1.061,284,1.198,285,1.061,288,1.527,292,2.12,293,1.187,294,1.28,295,1.602,297,1.372,298,1.372,299,1.481,300,1.481,301,1.198,302,1.28,303,1.28,304,1.002,305,1.481,306,1.756,307,1.481,308,1.481,309,1.611,310,1.611,311,1.611,314,1.27,326,2.488,327,2.488,328,2.488,329,2.488,332,3.697,336,1.67,400,1.81,404,2.12,679,1.851,717,2.12,738,4.685,740,2.488,744,5.037,755,1.774,756,3.588,757,3.588,758,3.588,759,3.588,760,3.588,761,4.932,762,4.932,763,3.588,764,2.323,765,3.588,766,4.511,767,4.385,768,3.588,769,2.323,770,4.385,771,3.588,772,2.323,773,2.74,774,4.571,775,3.588,776,2.323,777,3.766,778,3.588,779,3.588,780,2.323,781,4.385,782,3.588,783,2.323,784,3.588,785,4.932,786,3.76,787,2.74,788,2.323,789,3.588,790,3.588,791,2.323,792,3.588,793,2.323,794,2.287,795,2.323,796,1.774,797,4.385,798,2.323,799,4.071,800,2.488,801,3.077,802,3.348,803,2.323,804,2.323,805,4.385,806,2.323,807,2.323,808,2.323,809,2.323,810,2.323,811,2.323,812,2.323,813,3.588,814,3.588,815,3.588,816,3.588,817,3.588,818,1.992,819,1.774,820,2.323,821,1.774,822,2.323]],["title/interfaces/Credentials.html",[614,1.757,823,1.564]],["body/interfaces/Credentials.html",[3,0.206,4,0.206,9,0.177,19,0.02,22,0.314,112,3.135,137,0.503,170,0.013,171,0.016,172,0.013,207,0.54,209,2.414,210,0.431,211,1.272,212,2.133,219,0.621,221,1.262,288,1.721,584,2.861,589,2.396,614,3.328,640,3.427,648,2.55,650,2.396,656,4.054,823,3.136,824,2.92,825,3.427,826,4.374,827,2.722,828,3.15,829,3.15,830,3.773,831,2.55,832,3.773,833,3.773]],["title/components/CustomSelectorComponent.html",[0,0.682,146,1.262]],["body/components/CustomSelectorComponent.html",[0,0.923,1,0.972,2,1.683,3,0.116,4,0.116,5,1.205,6,1.276,7,1.205,8,1.14,9,0.1,11,1.205,12,2.626,13,2.738,14,1.884,16,1.779,18,0.551,19,0.02,20,2.701,21,0.42,22,0.133,23,0.022,25,0.923,29,0.754,131,0.834,132,1.779,133,1.683,134,1.205,135,2.337,136,1.205,137,0.551,138,1.205,139,1.024,140,1.08,141,2.116,142,0.972,143,1.205,144,0.972,145,1.205,146,1.886,147,2.621,148,1.205,149,0.972,150,1.205,151,1.024,152,0.972,153,0.972,154,1.205,155,0.972,156,1.205,157,0.972,158,1.14,159,1.779,160,0.972,161,0.793,162,0.972,163,1.08,164,1.205,165,1.024,166,1.08,167,0.972,168,1.205,169,1.205,170,0.007,171,0.011,172,0.007,195,1.205,199,1.007,207,0.451,210,0.244,211,0.863,219,0.511,222,0.886,240,1.779,241,1.595,242,0.924,243,0.776,249,2.794,255,0.776,256,0.696,260,3.33,261,2.419,266,1.194,275,1.138,285,1.276,293,1.791,304,1.205,306,0.834,314,1.026,343,1.779,361,3.113,374,3.148,376,2.859,380,3.199,385,5.184,386,4.775,387,5.362,390,4.643,397,5.868,398,3.535,400,1.987,406,3.535,407,4.643,435,3.047,438,2.628,472,4.005,479,1.884,502,1.936,507,1.936,508,1.779,581,1.779,584,2.095,626,3.854,630,2.271,643,2.436,665,2.859,687,1.936,732,4.902,834,5.505,835,2.393,836,4.902,837,4.902,838,4.123,839,4.123,840,5.414,841,5.414,842,3.199,843,3.535,844,4.204,845,2.791,846,5.414,847,4.123,848,4.902,849,4.123,850,2.791,851,4.123,852,4.123,853,4.123,854,2.791,855,4.123,856,4.123,857,3.754,858,2.791,859,2.791,860,4.123,861,4.123,862,2.791,863,4.123,864,4.123,865,4.123,866,4.123,867,4.123,868,4.123,869,4.123,870,2.271,871,2.791,872,2.791,873,2.791,874,2.791,875,2.791,876,2.791,877,2.791,878,2.791,879,2.791,880,2.791,881,2.791,882,2.791,883,4.123,884,4.123,885,2.791,886,2.791,887,2.791,888,2.131,889,2.791,890,2.791,891,2.393,892,2.791,893,2.791,894,1.936,895,2.393,896,2.393,897,3.535,898,2.131,899,2.791]],["title/classes/DatabaseSyncService.html",[23,0.028,363,2.31]],["body/classes/DatabaseSyncService.html",[3,0.137,4,0.137,9,0.118,18,0.595,19,0.02,22,0.157,23,0.026,24,2.283,25,0.62,170,0.009,171,0.012,172,0.009,199,0.804,205,1.344,207,0.36,210,0.287,211,0.972,219,0.653,222,0.991,239,5.02,243,0.875,250,3.22,252,3.811,253,3.61,254,3.844,261,2.732,265,3.43,275,0.62,280,1.945,283,1.504,284,1.699,292,2.744,293,2.438,295,1.967,296,2.514,301,3.57,303,3.396,336,1.32,363,2.961,479,1.504,581,2.005,766,3.929,796,2.514,827,1.814,900,5.393,901,2.514,902,4.645,903,5.382,904,5.382,905,5.382,906,5.382,907,5.382,908,5.382,909,5.382,910,5.382,911,5.382,912,5.382,913,5.845,914,3.292,915,3.292,916,3.292,917,4.707,918,3.292,919,3.292,920,4.274,921,3.292,922,3.292,923,3.292,924,3.292,925,3.292,926,3.292,927,4.645,928,4.645,929,3.292,930,2.283,931,3.292,932,2.514,933,3.292,934,3.292,935,3.292,936,3.292,937,2.514,938,3.292,939,3.292,940,3.292,941,3.292,942,2.514,943,3.292,944,3.292,945,3.292,946,3.292,947,3.292,948,3.292,949,3.292,950,3.292,951,2.823,952,3.292,953,3.292,954,3.292,955,1.344]],["title/classes/EmailValidation.html",[23,0.028,956,2.31]],["body/classes/EmailValidation.html",[3,0.196,4,0.196,9,0.168,18,0.478,19,0.02,22,0.224,23,0.037,31,4.027,50,3.256,137,0.478,170,0.012,171,0.015,172,0.012,190,1.723,199,1.438,205,1.917,207,0.513,210,0.41,219,0.443,221,0.993,222,0.665,243,1.108,255,0.884,256,0.792,266,1.298,274,2.625,275,1.108,293,1.947,295,1.335,314,0.983,336,1.673,415,2.854,504,2.403,650,3.366,794,4.098,870,3.242,955,2.403,956,4.296,957,4.081,958,2.993,959,5.886,960,4.911,961,3.256,962,3.752,963,4.081,964,4.081,965,4.081,966,3.477,967,3.752,968,4.081,969,3.752,970,4.081,971,3.586,972,4.027,973,4.696,974,5.886,975,4.696,976,3.256,977,4.696,978,4.696,979,4.027,980,4.696,981,4.027,982,4.696,983,4.696,984,4.696]],["title/interceptors/ErrorHandlerInterceptor.html",[718,2.31,985,2.767]],["body/interceptors/ErrorHandlerInterceptor.html",[3,0.135,4,0.135,9,0.116,18,0.68,19,0.02,21,0.485,22,0.154,23,0.042,25,1.091,125,3.497,137,0.542,170,0.008,171,0.012,172,0.008,193,0.917,199,1.119,207,0.633,210,0.282,219,0.503,221,0.545,222,0.754,234,1.177,240,2.501,241,2.459,242,2.103,243,0.862,255,1.003,256,0.898,261,1.249,266,1.01,275,1.091,276,3.506,278,1.595,283,1.475,284,1.665,285,1.475,287,2.057,295,1.302,306,0.965,314,1.331,336,0.917,341,4.632,343,1.393,360,2.987,361,3.341,388,2.093,402,3.176,411,4.991,412,2.706,452,3.176,472,3.176,577,1.778,579,3.755,580,3.497,581,2.501,592,2.238,593,2.057,614,2.221,626,2.92,628,3.497,629,4.424,630,3.192,636,4.193,644,2.92,686,2.238,687,2.238,688,3.176,689,2.238,708,2.768,718,2.92,719,4.071,736,2.465,955,2.669,966,2.706,986,4.424,987,2.465,988,4.018,989,4.58,990,5.324,991,4.565,992,3.228,993,3.693,994,4.968,995,5.45,996,4.58,997,3.228,998,5.794,999,3.228,1000,3.927,1001,2.768,1002,4.968,1003,4.968,1004,3.228,1005,3.927,1006,3.497,1007,3.927,1008,2.768,1009,3.927,1010,3.228,1011,3.228,1012,3.228,1013,2.768,1014,3.228,1015,3.228,1016,3.228,1017,4.58,1018,3.228,1019,3.228,1020,3.228,1021,3.228,1022,3.228,1023,3.228,1024,4.58,1025,3.228,1026,4.58,1027,3.228,1028,3.228,1029,3.228,1030,3.228,1031,3.228]],["title/interfaces/ErrorMessageObject.html",[823,1.564,1032,2.513]],["body/interfaces/ErrorMessageObject.html",[3,0.21,4,0.21,9,0.18,19,0.02,22,0.294,170,0.013,171,0.016,172,0.013,207,0.55,209,1.848,210,0.439,211,1.287,219,0.695,221,1.265,271,3.349,504,2.709,823,3.057,824,2.975,827,2.774,828,3.21,955,3.007,1032,4.262,1033,3.845,1034,5.274,1035,3.564,1036,4.318,1037,3.492,1038,4.318,1039,4.318]],["title/injectables/ErrorMessageService.html",[234,0.931,719,2.141]],["body/injectables/ErrorMessageService.html",[3,0.158,4,0.158,9,0.136,18,0.386,19,0.02,21,0.571,22,0.182,23,0.03,24,2.634,25,0.715,137,0.386,170,0.01,171,0.013,172,0.01,207,0.56,210,0.331,211,1.073,219,0.672,221,1.188,222,0.919,234,1.317,236,1.842,238,1.881,242,1.92,243,0.965,249,2.645,255,0.715,256,0.641,266,1.474,271,1.842,275,1.17,278,1.786,295,1.457,314,1.215,336,1.08,347,3.633,384,4.396,388,2.652,400,1.881,410,3.268,438,3.268,472,4.308,504,2.093,581,2.213,619,4.396,643,3.029,672,4.976,673,5.327,674,4.396,679,2.645,719,3.029,955,3.075,1000,5.732,1034,5.105,1040,5.732,1041,3.257,1042,5.049,1043,5.803,1044,6.213,1045,3.798,1046,5.127,1047,3.798,1048,5.127,1049,6.213,1050,3.798,1051,3.798,1052,5.127,1053,5.127,1054,3.798,1055,3.798,1056,5.127,1057,3.798,1058,3.798,1059,3.798,1060,5.127]],["title/components/HomePage.html",[0,0.682,149,1.262]],["body/components/HomePage.html",[0,0.989,1,1.096,2,1.837,3,0.131,4,0.131,5,1.358,6,1.438,7,1.358,8,1.285,9,0.113,11,1.358,12,2.644,13,2.788,14,2.056,16,1.941,18,0.458,19,0.02,21,0.473,22,0.15,23,0.025,25,0.593,29,0.851,109,4.374,131,0.941,132,1.941,133,1.837,134,1.358,135,2.472,136,1.358,137,0.583,138,1.358,139,1.155,140,1.217,141,2.266,142,1.096,143,1.358,144,1.096,145,1.358,146,1.096,147,1.285,148,1.358,149,1.995,150,1.358,151,1.155,152,1.829,153,1.096,154,1.358,155,1.096,156,1.358,157,1.096,158,1.285,159,1.941,160,1.096,161,0.894,162,1.096,163,1.217,164,1.358,165,1.155,166,1.217,167,1.096,168,1.358,169,1.358,170,0.008,171,0.012,172,0.008,193,0.894,207,0.492,210,0.275,211,0.942,219,0.496,221,1.022,222,0.744,238,1.65,243,0.847,255,0.847,256,0.759,266,0.694,267,2.867,275,0.593,278,1.096,295,1.279,304,1.358,314,0.942,354,3.857,360,2.965,370,3.119,372,2.955,373,3.156,400,1.155,408,3.857,410,4.465,417,5.689,418,3.857,419,3.119,420,3.435,421,3.119,422,3.857,423,3.857,424,3.857,425,3.119,426,3.857,427,3.857,428,3.857,432,4.912,433,5.196,435,2.056,491,2.698,492,2.698,493,2.698,559,3.346,577,1.734,584,2.216,666,3.435,844,2.698,857,3.119,888,2.403,894,2.182,895,4.501,896,4.501,897,5.689,898,2.403,1061,2.698,1062,5.25,1063,4.498,1064,6.06,1065,3.147,1066,3.147,1067,4.498,1068,4.498,1069,4.498,1070,4.498,1071,4.498,1072,4.498,1073,3.119,1074,4.498,1075,3.147,1076,4.498,1077,3.147,1078,3.147,1079,5.25,1080,5.25,1081,3.147,1082,3.147,1083,3.857,1084,4.498,1085,2.698,1086,2.698,1087,3.147,1088,3.147,1089,3.119,1090,3.857,1091,4.912,1092,3.147,1093,3.147,1094,3.147,1095,2.006,1096,3.147,1097,2.698,1098,4.498,1099,3.857,1100,2.698,1101,3.147]],["title/modules/HomePageModule.html",[173,1.33,1102,2.513]],["body/modules/HomePageModule.html",[0,0.939,3,0.208,4,0.208,9,0.179,18,0.741,19,0.02,21,0.75,22,0.238,23,0.039,131,1.491,149,2.536,161,1.418,170,0.013,171,0.016,172,0.013,173,1.83,175,2.28,176,2.419,177,3.639,178,2.748,179,2.748,180,2.574,183,3.366,184,2.419,186,3.366,187,3.895,188,2.748,189,3.895,190,1.83,192,2.947,193,1.418,194,3.61,195,2.153,197,3.153,198,3.809,200,2.947,201,2.748,202,2.748,1102,4.985,1103,4.277,1104,4.277,1105,4.988,1106,4.988,1107,4.988]],["title/injectables/LocalStorageService.html",[234,0.931,361,1.757]],["body/injectables/LocalStorageService.html",[3,0.141,4,0.141,9,0.121,18,0.344,19,0.02,21,0.508,25,0.89,112,2.815,137,0.708,147,1.379,170,0.009,171,0.012,172,0.009,199,0.825,200,1.995,207,0.646,210,0.295,211,0.99,219,0.587,221,1.158,222,0.938,234,0.868,236,1.637,238,1.239,241,1.829,243,0.89,255,1.027,256,0.92,259,1.995,260,1.86,261,1.829,266,1.514,275,1.172,277,2.341,295,0.96,314,1.415,336,1.68,347,3.66,361,1.637,374,4.751,479,1.543,499,2.578,579,2.793,612,2.895,626,4.433,643,2.793,644,2.152,679,1.742,688,5.046,826,2.152,988,3.278,1006,3.61,1035,1.742,1108,5.159,1109,2.578,1110,5.911,1111,5.456,1112,5.911,1113,4.728,1114,4.728,1115,4.728,1116,4.728,1117,2.895,1118,2.152,1119,3.376,1120,3.376,1121,4.728,1122,4.728,1123,3.376,1124,3.61,1125,7.094,1126,4.728,1127,3.376,1128,4.054,1129,4.728,1130,3.376,1131,4.728,1132,4.728,1133,3.376,1134,4.728,1135,5.529,1136,5.335,1137,2.895,1138,2.895,1139,6.222,1140,3.376,1141,3.376,1142,4.728,1143,3.376,1144,3.376,1145,4.054,1146,2.895,1147,2.895,1148,3.376,1149,3.376,1150,3.376,1151,3.376,1152,3.376,1153,3.376,1154,3.376,1155,3.376,1156,3.376,1157,3.376]],["title/components/LoginComponent.html",[0,0.682,153,1.262]],["body/components/LoginComponent.html",[0,0.943,1,1.008,2,1.729,3,0.121,4,0.121,5,1.25,6,1.323,7,1.25,8,1.182,9,0.104,11,1.25,12,2.611,13,2.753,14,1.935,16,1.828,18,0.623,19,0.02,20,2.759,21,0.435,22,0.138,23,0.023,25,0.545,29,0.783,50,2.937,131,0.865,132,1.828,133,1.729,134,1.25,135,2.378,136,1.25,137,0.51,138,1.25,139,1.062,140,1.12,141,2.161,142,1.008,143,1.25,144,1.008,145,1.25,146,1.008,147,1.182,148,1.25,149,1.008,150,1.25,151,1.062,152,1.008,153,1.919,154,1.25,155,1.008,156,1.25,157,1.008,158,1.182,159,1.828,160,1.008,161,0.823,162,1.008,163,1.12,164,1.25,165,1.062,166,1.12,167,1.008,168,1.25,169,1.25,170,0.008,171,0.011,172,0.008,190,1.062,193,0.823,207,0.316,210,0.253,211,0.887,219,0.473,221,0.715,222,0.896,238,2.247,240,1.828,242,1.94,243,0.798,246,2.146,255,0.545,256,0.488,266,0.639,274,1.182,275,0.943,278,1.008,287,1.846,288,2.133,304,1.25,306,1.647,314,1.049,338,2.008,343,1.828,360,2.891,372,2.185,373,2.333,377,2.937,380,3.256,400,1.837,412,2.502,435,2.799,437,2.97,453,2.7,483,2.008,484,2.008,504,2.25,559,2.7,577,1.595,581,1.828,584,1.638,589,2.97,593,1.846,614,2.843,630,2.333,648,1.494,650,2.428,842,3.256,955,2.394,956,1.846,957,2.008,967,2.7,1073,2.937,1095,2.7,1118,2.7,1158,2.483,1159,5.008,1160,4.235,1161,4.477,1162,4.477,1163,5.008,1164,5.51,1165,5.51,1166,5.562,1167,4.235,1168,4.235,1169,4.498,1170,4.235,1171,4.235,1172,2.895,1173,2.895,1174,2.895,1175,3.824,1176,3.631,1177,2.895,1178,4.235,1179,4.235,1180,4.235,1181,4.235,1182,4.235,1183,3.472,1184,2.895,1185,2.008,1186,4.235,1187,2.008,1188,2.895,1189,2.895,1190,2.483,1191,2.937,1192,2.483,1193,3.824,1194,2.895,1195,2.895,1196,2.895,1197,2.895,1198,2.895,1199,3.234,1200,2.895,1201,2.895,1202,3.631,1203,3.631,1204,4.235,1205,4.235,1206,3.631]],["title/interfaces/LoginPayload.html",[823,1.564,829,2.31]],["body/interfaces/LoginPayload.html",[3,0.209,4,0.209,9,0.179,19,0.02,22,0.316,112,3.16,137,0.51,170,0.013,171,0.016,172,0.013,207,0.547,209,2.247,210,0.437,211,1.282,212,2.161,219,0.578,221,1.264,288,1.744,584,2.667,589,2.97,614,2.97,640,4.247,648,3.557,650,2.428,656,2.958,823,3.145,824,2.958,825,3.472,826,3.192,827,2.758,828,3.192,829,3.904,830,5.264,831,2.584,832,3.823,833,3.823]],["title/components/LogoutComponent.html",[0,0.682,155,1.262]],["body/components/LogoutComponent.html",[0,1.106,1,1.354,2,2.126,3,0.162,4,0.162,5,1.678,6,1.777,7,1.678,8,1.587,9,0.139,11,1.678,12,2.718,13,2.866,14,2.38,16,2.248,18,0.597,19,0.02,20,3.235,21,0.585,22,0.186,23,0.031,25,0.732,29,1.051,131,1.162,132,2.248,133,2.126,134,1.678,135,2.707,136,1.678,137,0.597,138,1.678,139,1.426,140,1.504,141,2.534,142,1.354,143,1.678,144,1.354,145,1.678,146,1.354,147,1.587,148,1.678,149,1.354,150,1.678,151,1.426,152,1.354,153,1.354,154,1.678,155,2.185,156,1.678,157,1.354,158,1.587,159,2.248,160,1.354,161,1.105,162,1.354,163,1.504,164,1.678,165,1.426,166,1.504,167,1.354,168,1.678,169,1.678,170,0.01,171,0.014,172,0.01,193,1.105,207,0.425,210,0.339,219,0.367,222,0.738,238,2.301,240,2.248,241,2.015,242,1.286,243,0.981,245,2.696,246,2.274,255,0.732,256,0.656,275,0.732,288,2.185,304,1.678,306,1.162,314,1.09,343,2.248,360,3.267,370,3.611,373,2.869,400,1.426,581,2.248,584,2.015,589,2.525,593,2.478,609,4.349,630,2.869,636,3.077,638,4.465,842,3.706,1176,4.465,1187,2.696,1207,3.333,1208,5.872,1209,5.207,1210,3.888,1211,3.888,1212,5.207,1213,3.888,1214,3.888]],["title/classes/Organisation.html",[23,0.028,217,1.87]],["body/classes/Organisation.html",[3,0.173,4,0.173,9,0.149,19,0.02,22,0.199,23,0.033,25,1.143,137,0.68,170,0.011,171,0.014,172,0.011,205,1.697,207,0.454,208,2.882,209,1.525,210,0.363,211,1.14,212,2.885,213,4.209,214,3.586,215,3.586,216,4.209,217,3.132,219,0.716,220,4.209,221,1.294,222,1.067,225,3.775,264,3.586,272,4.209,650,2.943,741,4.635,831,3.132,1215,3.564,1216,6.07,1217,4.635,1218,6.07,1219,6.07,1220,4.209,1221,5.443,1222,4.157,1223,4.157,1224,4.157,1225,4.157,1226,4.157,1227,4.157,1228,4.157,1229,4.157,1230,4.157,1231,4.157,1232,4.157,1233,4.157,1234,4.157,1235,4.157,1236,4.157,1237,4.157,1238,4.157]],["title/injectables/OrganisationService.html",[234,0.931,720,2.31]],["body/injectables/OrganisationService.html",[3,0.101,4,0.101,9,0.087,12,1.654,18,0.626,19,0.02,21,0.365,22,0.116,23,0.035,25,0.849,137,0.721,170,0.006,171,0.01,172,0.006,199,1.573,207,0.673,209,1.362,210,0.324,211,0.777,212,1.048,217,3.765,219,0.653,221,1.224,222,0.894,234,0.954,236,1.177,238,1.362,240,1.602,241,1.436,242,1.897,243,0.699,245,1.683,246,2.087,249,1.915,250,2.045,251,2.982,252,2.483,253,2.959,254,3.567,255,1.124,256,1.007,259,2.193,260,3.39,261,2.6,262,2.574,266,0.994,267,3.217,271,3.121,275,1.25,276,3.593,277,2.574,278,0.845,279,2.366,280,1.434,281,1.547,282,1.547,283,1.109,284,1.252,285,1.109,288,0.845,292,2.193,293,1.67,294,1.337,295,1.83,297,1.434,298,1.434,299,1.547,300,1.547,301,1.252,302,1.337,303,1.337,304,1.048,305,1.547,306,1.626,307,1.547,308,1.547,309,1.683,310,1.683,311,1.683,314,1.249,315,2.081,326,2.574,327,2.574,328,2.574,329,2.574,332,3.5,335,3.854,336,1.546,400,1.362,404,2.193,479,1.109,679,1.915,720,2.366,773,2.834,777,3.854,799,3.441,800,1.683,801,2.081,802,2.834,819,1.853,821,1.853,870,2.045,917,4.998,937,1.853,993,2.366,1089,2.574,1124,2.834,1220,1.683,1239,1.853,1240,3.712,1241,3.712,1242,3.712,1243,3.712,1244,5.047,1245,3.183,1246,3.712,1247,3.712,1248,3.712,1249,2.427,1250,5.047,1251,3.712,1252,2.427,1253,4.663,1254,3.712,1255,2.427,1256,3.712,1257,2.427,1258,4.507,1259,2.427,1260,3.183,1261,2.427,1262,4.918,1263,3.183,1264,3.712,1265,2.427,1266,2.427,1267,2.427,1268,2.081,1269,2.081,1270,2.427,1271,2.427,1272,2.427,1273,2.427,1274,2.427,1275,2.427,1276,2.427,1277,2.427,1278,2.427,1279,3.183,1280,3.183,1281,2.081,1282,2.427,1283,2.081,1284,2.081,1285,2.081,1286,2.081,1287,2.081,1288,2.081,1289,2.081,1290,3.183,1291,2.081]],["title/classes/PasswordValidation.html",[23,0.028,1292,2.513]],["body/classes/PasswordValidation.html",[3,0.146,4,0.146,9,0.125,18,0.356,19,0.02,22,0.167,23,0.027,32,4.37,34,4.857,48,5.349,137,0.493,170,0.009,171,0.016,172,0.009,190,1.283,199,1.633,205,1.428,207,0.53,210,0.305,219,0.457,221,0.817,222,0.686,243,0.912,255,0.912,256,0.817,266,1.068,274,2.573,275,1.13,293,1.986,295,1.706,314,1.014,336,1.791,415,2.91,504,2.451,648,3.614,675,3.359,794,4.156,843,4.154,870,2.669,955,2.451,958,2.229,960,4.907,961,2.425,962,3.825,963,4.162,964,4.162,965,4.162,966,3.546,967,3.825,968,3.359,969,3.088,970,4.162,971,2.67,1035,1.804,1292,4.162,1293,4.245,1294,4.845,1295,4.845,1296,4.845,1297,4.845,1298,4.845,1299,4.845,1300,3.497,1301,3.497,1302,4.154,1303,3.497,1304,3.497,1305,6.302,1306,6.302,1307,6.302,1308,6.302,1309,6.302,1310,4.017,1311,6.302,1312,6.302,1313,6.302,1314,6.302,1315,6.302,1316,6.52,1317,3.497,1318,3.497,1319,4.845,1320,4.845,1321,3.497,1322,3.497,1323,3.497,1324,3.497,1325,3.497,1326,3.497,1327,3.497]],["title/classes/PhoneValidation.html",[23,0.028,1328,2.767]],["body/classes/PhoneValidation.html",[3,0.197,4,0.197,9,0.169,18,0.48,19,0.02,22,0.225,23,0.037,137,0.48,170,0.012,171,0.015,172,0.012,190,1.729,199,1.441,205,1.924,207,0.515,210,0.411,219,0.445,221,0.995,222,0.668,243,1.111,255,0.887,256,0.795,266,1.301,274,2.629,275,1.111,293,1.952,295,1.34,314,0.987,336,1.34,415,2.861,479,2.154,504,2.409,794,4.105,831,3.322,870,3.25,955,2.409,958,3.004,960,4.916,961,3.268,962,3.76,963,4.091,964,4.091,965,4.091,966,3.485,967,3.76,968,4.091,969,3.76,970,4.091,971,3.598,972,4.041,976,3.268,1328,5.153,1329,5.058,1330,5.899,1331,4.713,1332,4.713,1333,6.439,1334,5.058,1335,4.713,1336,5.899]],["title/components/RecoverPasswordComponent.html",[0,0.682,157,1.262]],["body/components/RecoverPasswordComponent.html",[0,0.929,1,0.983,2,1.697,3,0.118,4,0.118,5,1.218,6,1.289,7,1.218,8,1.152,9,0.101,11,1.218,12,2.601,13,2.742,14,1.899,16,1.793,18,0.618,19,0.02,20,2.717,21,0.424,22,0.135,23,0.039,25,0.929,29,0.762,34,2.881,37,3.563,50,3.421,94,2.154,110,2.154,131,0.843,132,1.793,133,1.697,134,1.218,135,2.349,136,1.218,137,0.554,138,1.218,139,1.035,140,1.091,141,2.129,142,0.983,143,1.218,144,0.983,145,1.218,146,0.983,147,1.152,148,1.218,149,0.983,150,1.218,151,1.035,152,0.983,153,0.983,154,1.218,155,0.983,156,1.218,157,1.896,158,2.729,159,1.793,160,0.983,161,0.802,162,0.983,163,1.091,164,1.218,165,1.035,166,1.091,167,0.983,168,1.218,169,1.218,170,0.007,171,0.011,172,0.007,190,1.035,193,0.802,195,1.218,199,0.689,207,0.454,210,0.246,211,0.87,219,0.514,221,0.979,222,0.889,238,1.525,242,1.375,243,0.782,246,2.212,255,0.782,256,0.701,266,0.916,274,2.014,275,0.929,278,1.447,293,1.801,295,1.181,304,1.218,306,0.843,314,1.139,343,1.793,355,3.767,356,3.173,360,3.004,365,4.917,373,2.289,376,2.881,377,4.351,380,2.455,395,2.881,396,3.173,400,1.525,414,3.173,415,2.015,416,3.173,435,2.487,437,2.639,483,1.956,484,2.881,502,1.956,504,2.562,507,1.956,508,1.798,509,2.154,510,2.154,577,1.554,592,1.956,604,4.917,617,4.155,635,2.881,636,2.455,648,2.808,650,2.639,842,3.215,955,2.014,956,1.798,957,1.956,979,2.419,981,2.419,993,2.649,1042,2.881,1073,2.881,1095,2.649,1161,4.43,1162,4.43,1169,2.881,1175,2.154,1183,3.774,1185,1.956,1187,1.956,1191,1.956,1192,2.419,1193,3.767,1199,3.173,1202,3.563,1337,5.521,1338,2.154,1339,4.23,1340,3.563,1341,4.23,1342,4.155,1343,2.821,1344,3.563,1345,2.821,1346,2.821,1347,2.821,1348,2.821,1349,3.563,1350,2.419,1351,2.821,1352,2.821,1353,2.821,1354,2.821,1355,2.419,1356,3.563,1357,2.821,1358,2.821,1359,2.821,1360,2.821,1361,2.821,1362,2.821,1363,2.821,1364,2.821,1365,2.821,1366,2.821,1367,2.419,1368,4.155,1369,3.563,1370,3.173]],["title/interceptors/RequestInterceptor.html",[721,2.31,985,2.767]],["body/interceptors/RequestInterceptor.html",[3,0.17,4,0.17,9,0.146,18,0.676,19,0.02,21,0.614,22,0.195,23,0.047,25,1.133,137,0.547,170,0.011,171,0.014,172,0.011,207,0.657,210,0.356,219,0.568,222,0.762,234,1.382,240,2.321,241,2.08,243,1.013,245,2.829,246,2.364,255,1.013,256,0.907,275,1.013,276,3.103,283,1.864,284,2.105,285,1.864,288,2.227,295,1.528,304,1.761,314,1.259,336,1.16,343,1.761,388,2.457,410,2.601,411,5.21,412,3.177,579,3.177,581,2.321,629,5.21,630,3.522,636,4.261,644,4.075,656,3.177,686,2.829,721,3.427,736,3.115,966,3.177,988,4.433,991,5.157,993,3.427,994,4.61,995,4.61,1001,3.498,1002,5.482,1003,5.482,1005,4.61,1007,4.61,1008,3.498,1009,4.61,1099,3.498,1310,2.601,1371,3.498,1372,5.377,1373,6.014,1374,4.08,1375,4.08,1376,5.377,1377,4.08,1378,4.08,1379,4.08,1380,4.08,1381,5.377,1382,4.08,1383,4.08,1384,4.08,1385,4.08,1386,4.08,1387,4.08]],["title/components/ResetPasswordComponent.html",[0,0.682,160,1.262]],["body/components/ResetPasswordComponent.html",[0,0.839,1,0.829,2,1.494,3,0.099,4,0.099,5,1.028,6,1.088,7,1.028,8,0.972,9,0.085,11,1.028,12,2.528,13,2.665,14,1.672,16,1.579,18,0.579,19,0.02,20,2.453,21,0.358,22,0.114,23,0.019,25,0.448,29,0.644,32,1.651,74,2.042,131,0.712,132,1.579,133,1.494,134,1.028,135,2.157,136,1.028,137,0.549,138,1.028,139,0.874,140,0.921,141,1.922,142,0.829,143,1.028,144,0.829,145,1.028,146,0.829,147,0.972,148,1.028,149,0.829,150,1.028,151,0.874,152,0.829,153,0.829,154,1.028,155,0.829,156,1.028,157,0.829,158,0.972,159,1.579,160,1.741,161,1.879,162,0.829,163,0.921,164,1.028,165,0.874,166,0.921,167,0.829,168,1.028,169,1.028,170,0.006,171,0.009,172,0.006,184,1.774,190,0.874,193,0.677,195,1.028,199,0.582,207,0.487,210,0.208,211,0.766,219,0.56,221,1.08,222,0.923,238,1.978,242,1.653,243,0.689,246,2.119,255,0.839,256,0.751,266,0.982,274,0.972,275,1.015,278,0.829,293,1.883,306,0.712,314,1.241,343,1.579,347,1.887,355,3.401,356,2.793,360,3.059,365,4.671,372,2.937,373,2.453,376,2.536,377,4.11,380,2.952,388,1.672,395,3.465,396,3.816,400,1.834,414,2.793,415,1.774,416,2.793,435,2.795,437,2.423,464,4.584,483,1.651,484,2.536,502,1.651,504,2.763,507,1.651,508,1.518,509,1.818,510,1.818,577,1.312,584,1.933,591,1.818,592,1.651,609,2.536,617,3.816,635,2.536,636,2.161,643,2.161,648,3.058,656,3.186,666,2.793,842,2.952,955,2.42,962,1.518,993,2.332,1042,2.536,1073,3.465,1095,2.332,1118,2.332,1161,3.401,1162,4.117,1166,5.491,1169,2.536,1175,1.818,1183,3.088,1185,1.651,1187,1.651,1190,2.042,1191,2.536,1193,3.401,1199,2.793,1203,3.136,1206,3.136,1292,1.651,1293,1.818,1302,2.042,1338,1.818,1339,3.819,1340,3.136,1341,3.819,1344,3.136,1350,2.042,1355,2.042,1356,2.042,1367,2.042,1369,3.136,1370,2.793,1388,5.668,1389,4.997,1390,3.658,1391,4.997,1392,3.658,1393,3.658,1394,3.658,1395,3.658,1396,2.381,1397,4.997,1398,3.658,1399,2.381,1400,3.658,1401,3.658,1402,2.381,1403,2.381,1404,3.658,1405,2.381,1406,3.658,1407,2.381,1408,2.381,1409,2.381,1410,2.381,1411,2.381,1412,2.381,1413,3.658,1414,3.658,1415,2.381,1416,2.381,1417,2.381,1418,2.381,1419,2.381,1420,2.381,1421,2.381,1422,2.381,1423,2.381,1424,2.381,1425,2.381,1426,2.381,1427,2.381,1428,2.381,1429,3.658,1430,3.658,1431,3.658,1432,3.658]],["title/interfaces/RootObject.html",[823,1.564,1037,2.513]],["body/interfaces/RootObject.html",[3,0.21,4,0.21,9,0.18,19,0.02,22,0.294,170,0.013,171,0.016,172,0.013,207,0.55,209,2.255,210,0.439,211,1.287,219,0.669,221,1.251,256,1.037,271,2.442,504,2.892,823,3.057,824,2.975,827,2.774,828,3.21,955,3.007,1032,3.492,1033,3.845,1034,3.845,1035,3.564,1036,4.318,1037,4.262,1038,5.923,1039,5.923]],["title/classes/RouteReusableStrategy.html",[23,0.028,726,2.513]],["body/classes/RouteReusableStrategy.html",[3,0.134,4,0.134,8,1.861,9,0.115,18,0.326,19,0.02,22,0.153,23,0.025,137,0.621,140,1.763,170,0.008,171,0.012,172,0.008,193,0.911,205,1.308,207,0.693,210,0.28,219,0.576,222,0.865,243,0.858,255,1.149,256,1.029,274,2.722,275,1.255,306,1.362,314,1.366,336,1.642,347,3.707,372,3.921,388,3.144,400,1.672,403,5.898,404,4.064,437,3.075,450,4.042,523,4.049,665,3.16,726,3.16,727,4.841,728,6.026,787,3.479,1118,2.904,1433,5.437,1434,2.747,1435,4.557,1436,4.557,1437,7.224,1438,4.557,1439,4.557,1440,4.557,1441,4.557,1442,4.557,1443,4.557,1444,4.557,1445,5.302,1446,5.302,1447,4.557,1448,7.321,1449,3.204,1450,7.028,1451,6.34,1452,4.557,1453,3.204,1454,4.557,1455,3.204,1456,3.204,1457,5.775,1458,3.204,1459,6.102,1460,3.204,1461,5.775,1462,3.204,1463,4.557,1464,3.204,1465,3.204,1466,3.204]],["title/components/SendMessageComponent.html",[0,0.682,162,1.262]],["body/components/SendMessageComponent.html",[0,0.884,1,0.904,2,1.594,3,0.108,4,0.108,5,1.12,6,1.185,7,1.12,8,1.059,9,0.093,11,1.12,12,2.566,13,2.739,14,1.784,16,1.685,18,0.599,19,0.02,20,2.586,21,0.39,22,0.124,23,0.02,25,0.488,29,1.514,32,2.707,131,0.775,132,1.685,133,1.594,134,1.12,135,2.254,136,1.12,137,0.478,138,1.12,139,0.952,140,1.004,141,2.026,142,0.904,143,1.12,144,0.904,145,1.12,146,0.904,147,1.059,148,1.12,149,0.904,150,1.12,151,0.952,152,1.635,153,0.904,154,1.12,155,0.904,156,1.12,157,0.904,158,1.059,159,1.685,160,0.904,161,0.737,162,1.819,163,2.43,164,1.12,165,0.952,166,1.004,167,0.904,168,1.12,169,1.12,170,0.007,171,0.01,172,0.007,190,0.952,193,0.737,199,1.147,207,0.284,210,0.226,211,0.817,219,0.493,221,0.993,222,0.89,238,1.916,242,1.728,243,0.735,251,2.306,255,0.488,256,0.438,266,0.572,269,2.306,271,1.893,275,0.983,278,0.904,295,1.11,304,1.12,314,0.817,343,1.685,347,2.422,360,2.993,373,2.877,380,2.306,386,2.981,400,1.916,410,2.488,420,2.981,435,1.784,437,1.258,455,2.707,479,1.784,499,2.981,504,2.565,508,1.654,530,5.203,531,2.224,561,2.224,630,2.15,635,3.621,831,2.014,842,3.085,857,3.621,888,1.981,891,2.224,894,1.799,898,1.981,920,3.255,988,2.707,1042,2.707,1083,2.224,1085,4.024,1086,4.024,1089,1.799,1090,2.224,1091,2.224,1095,1.654,1097,4.477,1100,5.045,1117,3.347,1169,2.707,1183,3.621,1185,1.799,1191,1.799,1349,3.347,1370,3.987,1467,5.511,1468,4.908,1469,2.224,1470,4.693,1471,3.904,1472,4.693,1473,4.693,1474,4.693,1475,5.222,1476,5.222,1477,5.222,1478,2.594,1479,3.904,1480,3.904,1481,2.594,1482,5.884,1483,4.024,1484,3.904,1485,3.904,1486,5.222,1487,3.904,1488,2.594,1489,3.904,1490,3.904,1491,2.594,1492,3.347,1493,3.904,1494,2.594,1495,3.904,1496,2.594,1497,2.594,1498,3.904,1499,2.224,1500,2.594,1501,2.594,1502,2.594,1503,2.594,1504,2.594,1505,2.594,1506,2.594,1507,2.594,1508,2.594,1509,2.594,1510,2.594,1511,2.594,1512,2.594,1513,2.594,1514,2.594,1515,2.594,1516,2.594,1517,2.594,1518,2.594,1519,2.224,1520,3.904,1521,2.594,1522,2.594,1523,3.904,1524,2.594,1525,5.222,1526,3.904,1527,3.904,1528,3.904,1529,2.594,1530,5.222,1531,2.594,1532,2.594,1533,3.904,1534,2.594,1535,3.904,1536,2.594,1537,2.594,1538,2.594,1539,2.594,1540,2.594,1541,2.594,1542,2.594,1543,2.594,1544,2.594,1545,2.594,1546,2.594,1547,2.594]],["title/classes/SsnValidation.html",[23,0.028,1548,2.767]],["body/classes/SsnValidation.html",[3,0.185,4,0.185,9,0.159,18,0.452,19,0.02,22,0.212,23,0.035,34,3.081,137,0.452,170,0.012,171,0.015,172,0.012,190,1.63,199,1.706,205,1.814,207,0.486,210,0.388,219,0.419,221,0.959,222,0.63,243,1.07,255,0.837,256,0.75,266,1.253,274,2.321,275,1.07,293,1.88,314,0.93,395,3.941,415,2.756,479,2.864,504,2.321,794,3.994,870,3.131,955,2.321,958,2.832,960,4.842,961,3.081,962,3.623,963,3.941,964,3.941,965,3.941,966,3.358,967,3.623,968,3.941,969,3.623,970,3.941,976,4.345,1035,2.293,1310,3.623,1334,4.873,1548,5.043,1549,4.873,1550,5.683,1551,4.785,1552,4.443,1553,4.443,1554,4.443,1555,4.443,1556,4.443,1557,4.443,1558,5.373,1559,5.373,1560,5.683,1561,5.683,1562,5.683,1563,4.34,1564,4.443,1565,4.873,1566,4.443,1567,4.443,1568,4.443,1569,5.683,1570,4.443,1571,5.683]],["title/injectables/StaticsService.html",[234,0.931,722,2.31]],["body/injectables/StaticsService.html",[3,0.15,4,0.15,9,0.128,18,0.647,19,0.02,21,0.54,22,0.171,23,0.044,25,1.198,28,5.202,137,0.365,152,2.388,170,0.009,171,0.013,172,0.009,199,1.376,207,0.539,210,0.313,211,1.032,214,2.913,215,3.584,219,0.636,221,1.073,222,0.901,234,1.267,236,1.739,238,1.809,243,0.928,249,2.544,250,2.716,251,3.584,252,3.104,253,3.391,254,3.13,255,0.675,256,0.605,261,1.388,265,4.054,266,1.087,269,3.584,271,2.391,274,1.465,275,1.142,276,3.59,278,1.717,280,2.119,281,2.286,282,2.286,283,1.639,284,1.851,285,1.639,293,1.631,294,1.976,295,1.401,297,2.119,298,2.119,299,2.286,300,2.286,301,1.851,302,1.976,303,1.976,305,2.286,306,1.814,307,2.286,308,2.286,314,0.751,336,1.401,347,3.391,679,3.13,722,3.143,800,2.487,857,3.419,942,2.739,1572,2.739,1573,4.931,1574,6.857,1575,7.04,1576,5.634,1577,5.634,1578,4.931,1579,6.067,1580,4.931,1581,4.931,1582,3.587,1583,5.202,1584,6.067,1585,3.587,1586,3.587,1587,6.067,1588,3.587,1589,3.587,1590,4.931,1591,3.587,1592,4.931,1593,3.587,1594,3.587]],["title/guards/UnauthenticatedGuard.html",[570,2.31,607,2.31]],["body/guards/UnauthenticatedGuard.html",[3,0.178,4,0.178,9,0.153,18,0.625,19,0.02,21,0.641,22,0.204,23,0.048,25,1.225,137,0.434,170,0.011,171,0.014,172,0.011,191,2.684,193,1.212,201,3.805,207,0.605,210,0.372,219,0.403,222,0.784,234,1.422,241,2.516,242,1.831,243,1.042,246,2.358,255,0.803,256,0.719,264,3.27,266,1.434,275,1.042,288,1.928,306,1.654,314,1.159,336,1.573,343,1.84,360,3.213,372,3.356,388,2.529,402,3.838,412,3.27,415,2.684,435,2.529,437,2.068,450,4.146,452,3.838,453,3.528,559,3.528,570,3.528,571,3.256,573,4.226,574,4.746,575,4.226,576,4.746,577,2.349,579,3.842,580,4.226,581,2.389,583,4.226,584,2.141,585,4.746,586,4.746,587,4.746,588,4.746,589,2.684,590,3.656,591,3.256,593,2.718,607,3.528,1595,3.656,1596,6.504,1597,4.264,1598,4.264,1599,4.264]],["title/interfaces/User.html",[584,1.402,823,1.564]],["body/interfaces/User.html",[3,0.198,4,0.198,9,0.17,19,0.02,22,0.309,112,3.666,137,0.689,170,0.012,171,0.015,172,0.012,207,0.52,209,2.372,210,0.415,211,1.242,212,2.922,219,0.671,221,1.266,256,1.001,288,1.656,584,2.748,589,2.306,614,2.877,640,3.297,648,2.453,650,3.283,656,2.809,823,3.11,824,2.809,825,3.297,826,3.031,827,2.619,828,3.031,829,3.031,830,3.631,831,3.493,832,5.169,833,5.169]],["title/classes/Volunteer.html",[23,0.028,29,0.98]],["body/classes/Volunteer.html",[3,0.168,4,0.168,9,0.144,19,0.02,22,0.192,23,0.032,25,1.124,29,1.613,137,0.705,170,0.01,171,0.014,172,0.01,204,3.527,205,1.641,207,0.439,208,2.786,209,1.474,210,0.351,211,1.114,212,2.991,213,4.139,214,3.527,215,3.527,216,4.139,217,3.08,219,0.717,220,4.139,221,1.295,222,1.063,225,4.407,272,2.786,650,2.895,740,2.786,741,4.558,743,3.068,766,3.805,831,3.08,1035,2.746,1217,4.558,1220,4.407,1551,4.558,1600,3.445,1601,5.118,1602,5.323,1603,4.018,1604,4.018,1605,4.018,1606,4.018,1607,4.018,1608,4.018,1609,4.018,1610,4.018,1611,4.018,1612,4.018,1613,4.018,1614,4.018,1615,4.018,1616,4.018,1617,4.018,1618,4.018,1619,4.018,1620,3.445]],["title/components/VolunteerPage.html",[0,0.682,167,1.262]],["body/components/VolunteerPage.html",[0,1.2,1,1.604,2,2.374,3,0.192,4,0.192,5,1.988,6,2.105,7,1.988,8,1.881,9,0.165,11,1.988,12,2.769,13,2.92,14,2.657,16,2.51,18,0.469,19,0.02,21,0.693,22,0.22,23,0.036,24,3.194,25,0.867,29,1.722,131,1.377,132,2.51,133,2.374,134,1.988,135,2.889,136,1.988,137,0.592,138,1.988,139,1.69,140,1.782,141,2.75,142,1.604,143,1.988,144,1.604,145,1.988,146,1.604,147,1.881,148,1.988,149,1.604,150,1.988,151,1.69,152,1.604,153,1.604,154,1.988,155,1.604,156,1.988,157,1.604,158,1.881,159,2.51,160,1.604,161,1.309,162,1.604,163,1.782,164,1.988,165,1.69,166,1.782,167,2.331,168,1.988,169,1.988,170,0.012,171,0.015,172,0.012,1621,3.949,1622,6.372,1623,5.815]],["title/modules/VolunteerPageModule.html",[173,1.33,1624,2.513]],["body/modules/VolunteerPageModule.html",[0,1.261,3,0.175,4,0.175,9,0.15,18,0.742,19,0.02,21,0.629,22,0.2,23,0.033,131,1.25,139,2.568,140,2.115,151,2.568,152,1.904,161,1.189,162,2.438,163,2.115,165,2.568,166,2.115,167,2.438,170,0.011,171,0.014,172,0.011,173,1.535,175,1.912,176,2.028,177,3.354,178,2.304,179,2.304,180,2.158,183,3.011,184,2.028,186,3.011,187,3.484,188,2.304,189,3.484,190,1.535,191,2.952,192,2.471,193,1.189,194,3.229,195,1.805,197,3.545,198,3.194,199,1.022,200,3.958,201,3.69,202,2.304,203,3.194,419,2.901,421,2.901,425,2.901,602,4.687,1468,3.194,1624,5.142,1625,3.587,1626,3.587,1627,4.183,1628,4.183,1629,6.088,1630,4.183]],["title/injectables/VolunteerService.html",[234,0.931,247,2.141]],["body/injectables/VolunteerService.html",[3,0.059,4,0.059,9,0.051,12,1.644,18,0.532,19,0.02,21,0.213,22,0.068,23,0.025,25,0.589,29,1.872,112,1.24,125,1.835,137,0.693,152,1.56,170,0.004,171,0.01,172,0.004,199,1.477,204,1.42,207,0.624,209,1.644,210,0.21,211,0.938,212,1.78,214,2.647,215,2.967,217,2.876,219,0.617,221,1.236,222,0.809,234,0.618,236,0.688,238,1.352,240,1.59,241,1.425,242,1.482,243,0.453,247,1.42,249,1.24,250,1.324,251,2.177,252,1.723,253,2.311,254,3.312,255,1.099,256,0.94,259,1.42,260,2.766,261,2.405,262,1.667,263,4.685,266,1.287,267,3.911,269,1.42,270,2.061,271,3.288,272,2.169,273,1.835,274,1.684,275,1.171,276,3.44,277,1.667,278,0.494,279,1.532,280,0.838,281,0.904,282,0.904,283,0.648,284,0.732,285,0.648,286,1.083,287,0.904,291,1.216,292,1.42,293,0.795,294,0.781,295,1.87,297,0.838,298,0.838,299,0.904,300,0.904,301,0.732,302,0.781,303,0.781,304,0.612,305,0.904,306,1.233,307,0.904,308,0.904,309,0.983,310,0.983,311,0.983,314,1.396,318,3.159,326,1.667,327,1.667,328,1.667,329,1.667,332,3.106,335,1.083,336,1.427,338,0.983,339,1.216,341,3.31,388,2.047,400,0.882,404,1.42,435,3.047,479,0.648,675,1.667,679,1.24,717,2.82,738,3.553,740,2.169,743,2.389,766,0.904,773,1.835,774,3.841,777,2.813,786,4.487,787,2.813,799,3.148,800,1.667,802,3.148,818,2.061,819,1.835,821,1.083,827,0.781,831,2.463,870,1.324,920,4.766,930,0.983,932,1.083,951,5.394,969,2.348,1035,3.587,1089,1.667,1118,3.201,1124,1.835,1217,1.083,1220,2.169,1245,2.061,1253,3.841,1260,2.061,1262,3.841,1263,2.061,1268,2.061,1269,1.216,1279,2.061,1280,2.061,1281,1.216,1283,1.216,1284,1.216,1285,3.159,1286,2.061,1287,1.216,1288,1.216,1289,1.216,1290,2.061,1291,1.216,1551,4.747,1583,3.159,1601,1.216,1620,2.061,1631,1.083,1632,2.404,1633,2.404,1634,2.404,1635,2.404,1636,2.404,1637,2.404,1638,2.404,1639,3.684,1640,2.404,1641,1.418,1642,2.404,1643,2.404,1644,1.418,1645,3.684,1646,2.404,1647,3.129,1648,2.404,1649,2.404,1650,1.418,1651,2.404,1652,2.404,1653,2.404,1654,1.418,1655,2.404,1656,1.418,1657,3.684,1658,4.479,1659,4.479,1660,4.479,1661,4.479,1662,2.404,1663,1.418,1664,2.404,1665,1.418,1666,2.404,1667,1.418,1668,1.418,1669,2.404,1670,1.418,1671,2.404,1672,2.404,1673,2.404,1674,4.123,1675,2.404,1676,1.418,1677,1.418,1678,1.418,1679,3.129,1680,2.404,1681,1.418,1682,4.479,1683,1.418,1684,3.129,1685,3.129,1686,1.418,1687,1.418,1688,3.129,1689,1.418,1690,1.418,1691,1.418,1692,1.418,1693,3.129,1694,3.129,1695,1.418,1696,1.418,1697,3.684,1698,1.418,1699,3.129,1700,1.418,1701,1.418,1702,1.418,1703,1.418,1704,1.418,1705,1.418,1706,1.418,1707,1.418,1708,1.418,1709,1.418,1710,2.404,1711,2.404,1712,2.404,1713,2.404,1714,2.404,1715,2.404,1716,2.404,1717,2.404,1718,2.404,1719,2.404,1720,2.404,1721,2.404,1722,3.129,1723,2.404,1724,3.684,1725,1.418]],["title/coverage.html",[1726,4.258]],["body/coverage.html",[0,1.327,1,1.033,9,0.106,10,2.544,19,0.02,23,0.054,29,0.802,139,1.089,142,1.033,144,1.033,146,1.033,149,1.033,151,1.089,153,1.033,155,1.033,157,1.033,160,1.033,162,1.033,165,1.089,167,1.033,170,0.008,171,0.011,172,0.008,197,1.531,204,1.753,206,2.544,217,1.531,219,0.28,234,1.678,235,1.891,237,3.878,246,0.982,247,1.753,279,1.891,283,2.547,294,3.262,295,0.843,302,3.262,342,2.544,361,1.439,363,1.891,419,2.057,421,2.057,425,2.057,464,2.057,479,2.984,539,2.265,540,2.544,570,2.748,572,2.544,584,1.148,594,2.544,604,2.265,607,1.891,611,3.292,614,1.439,689,2.99,717,1.753,718,1.891,719,1.753,720,1.891,721,1.891,722,1.891,726,2.057,727,2.265,732,2.265,738,1.891,739,2.544,755,3.878,823,2.556,825,3.521,829,1.891,834,2.544,835,2.544,894,5.226,900,3.292,901,3.292,930,2.99,956,1.891,957,2.057,958,3.553,976,2.057,985,3.292,986,3.292,987,3.292,1006,4.717,1032,2.057,1033,3.292,1037,2.057,1040,2.544,1041,2.544,1061,2.544,1108,4.867,1109,4.867,1158,2.544,1207,2.544,1215,2.544,1239,3.878,1292,2.057,1293,2.265,1310,1.891,1328,2.265,1329,2.544,1337,2.544,1338,3.292,1371,2.544,1388,2.544,1433,2.544,1434,2.544,1467,2.544,1468,2.265,1469,2.544,1548,2.265,1549,2.544,1563,3.292,1572,3.878,1595,2.544,1600,2.544,1621,2.544,1631,4.256,1726,2.544,1727,2.967,1728,2.967,1729,2.967,1730,2.967,1731,2.967,1732,2.967,1733,5.078,1734,4.311,1735,7.28,1736,7.331,1737,4.311,1738,4.311,1739,4.311,1740,2.967,1741,2.544,1742,2.544,1743,2.544,1744,2.544,1745,2.544,1746,2.544,1747,2.967,1748,2.967,1749,2.967,1750,4.311,1751,4.311,1752,2.544,1753,2.967,1754,2.967,1755,4.311,1756,4.311,1757,4.311,1758,4.311,1759,2.967,1760,2.967,1761,6.177,1762,2.967,1763,2.967,1764,5.574,1765,5.078,1766,2.967,1767,2.967,1768,2.967,1769,2.967,1770,2.967,1771,2.967,1772,2.967,1773,2.967,1774,2.967,1775,5.078,1776,2.967,1777,2.967,1778,2.967,1779,2.967,1780,2.967,1781,2.967,1782,2.967,1783,2.967,1784,2.967,1785,2.967,1786,2.544,1787,2.544,1788,2.544,1789,2.544,1790,3.697,1791,2.544,1792,2.544,1793,2.967]],["title/dependencies.html",[176,2.116,1794,3.017]],["body/dependencies.html",[13,1.797,19,0.02,21,0.699,170,0.012,171,0.015,172,0.012,176,2.253,188,2.56,190,1.705,193,1.321,195,2.005,253,3.017,285,2.123,292,2.745,297,2.745,298,4.088,367,6.057,370,3.222,371,3.984,455,5.074,456,3.548,458,3.548,460,2.962,461,3.984,462,3.984,521,5.013,522,4.436,527,3.984,528,3.984,530,3.548,532,3.984,533,3.984,1483,3.984,1499,3.984,1519,3.984,1795,7.17,1796,4.646,1797,4.646,1798,5.847,1799,4.646,1800,6.714,1801,4.646,1802,4.646,1803,4.646,1804,4.646,1805,4.646,1806,4.646,1807,4.646,1808,4.646,1809,4.646,1810,4.646,1811,4.646,1812,4.646,1813,4.646,1814,4.646,1815,4.646,1816,4.646,1817,4.646,1818,4.646,1819,4.646,1820,4.646,1821,5.847,1822,4.646,1823,4.646,1824,4.646,1825,4.646,1826,4.646]],["title/miscellaneous/functions.html",[1827,2.092,1828,3.742]],["body/miscellaneous/functions.html",[19,0.019,137,0.756,170,0.012,171,0.015,172,0.012,207,0.759,210,0.41,219,0.701,249,2.427,255,1.308,256,1.172,259,2.779,260,2.591,261,2.489,266,1.419,626,4.517,643,2.779,644,2.999,665,4.816,679,3.04,826,4.299,1035,2.427,1108,3.592,1109,5.49,1128,4.034,1135,5.955,1136,5.517,1137,4.034,1138,4.034,1145,4.034,1146,4.034,1147,4.034,1492,4.034,1741,5.053,1742,5.053,1743,5.053,1744,5.517,1745,5.053,1746,5.053,1827,3.262,1828,4.034,1829,7.086,1830,4.704,1831,4.704,1832,4.704,1833,4.704]],["title/index.html",[210,0.316,1834,3.108]],["body/index.html",[1,2.077,2,1.638,19,0.02,131,1.199,139,2.188,142,2.413,144,2.077,146,2.077,149,2.077,151,2.188,153,2.077,155,2.077,157,2.077,160,2.077,161,1.14,162,2.077,165,2.188,167,2.077,170,0.01,171,0.014,172,0.01,173,1.472,174,4.404,175,1.833,176,1.945,177,2.21,178,2.21,179,2.21,180,2.07,181,3.44,182,3.44,183,2.929,184,1.945,191,1.945,205,1.638,235,3.802,236,1.945,246,1.973,247,3.524,361,2.892,512,4.937,513,3.44,514,3.44,515,3.44,516,3.44,517,3.802,518,4.852,571,3.063,598,5.06,599,3.44,600,3.44,714,3.44,715,3.44,716,3.44,717,3.524,718,3.802,719,3.524,720,3.802,721,4.048,722,3.802,824,2.37,1102,4.404,1103,3.44,1104,3.44,1310,2.557,1558,3.44,1559,3.44,1563,3.063,1565,3.44,1624,5.06,1625,3.44,1626,3.44,1752,3.44,1834,3.44,1835,4.012]],["title/modules.html",[175,2.269]],["body/modules.html",[19,0.017,170,0.014,171,0.017,172,0.014,174,3.844,175,2.533,381,4.753,512,3.844,517,3.533,518,3.533,522,5.107,598,3.844,1102,3.844,1624,3.844,1836,7.365,1837,7.365,1838,7.435,1839,5.543]],["title/routes.html",[191,2.408]],["body/routes.html",[19,0.018,170,0.015,171,0.018,172,0.015,191,2.894]],["title/miscellaneous/variables.html",[1827,2.092,1840,3.742]],["body/miscellaneous/variables.html",[19,0.02,170,0.009,171,0.013,172,0.009,209,2.213,210,0.309,219,0.645,221,0.824,237,2.702,239,4.272,252,3.487,253,3.266,254,3.623,261,2.595,265,3.566,266,1.628,278,2.579,283,3.268,293,2.323,294,3.868,295,1.996,296,2.702,301,3.266,302,3.868,303,3.487,306,1.46,437,2.713,438,2.256,611,2.702,614,2.925,675,4.183,688,3.387,689,4.183,755,2.702,766,3.566,796,2.702,900,2.702,901,3.73,917,4.272,920,3.879,930,4.183,932,2.702,937,2.702,942,2.702,986,2.702,987,3.73,1013,3.034,1239,2.702,1572,2.702,1631,2.702,1786,3.034,1787,3.034,1788,3.034,1789,3.034,1790,3.034,1791,4.189,1792,4.189,1827,2.454,1840,3.034,1841,4.885,1842,3.539,1843,3.539,1844,3.539,1845,5.594,1846,3.539,1847,3.539,1848,3.539,1849,3.539,1850,4.885,1851,4.885,1852,4.885,1853,4.885,1854,3.539,1855,3.539,1856,6.032,1857,6.33,1858,3.539,1859,5.594,1860,6.545,1861,5.594,1862,5.594,1863,5.594,1864,5.594,1865,3.539,1866,3.539,1867,3.539,1868,4.885]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":479,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"classes/PhoneValidation.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["0.8.29",{"_index":1826,"title":{},"body":{"dependencies.html":{}}}],["0.9.3",{"_index":1814,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1761,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1768,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1730,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":897,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{}}}],["1",{"_index":1560,"title":{},"body":{"classes/SsnValidation.html":{}}}],["1.0.0",{"_index":1816,"title":{},"body":{"dependencies.html":{}}}],["1.0.20",{"_index":1819,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1824,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1736,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":1747,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":1754,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1765,"title":{},"body":{"coverage.html":{}}}],["1/20",{"_index":1757,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1751,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1749,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1756,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1753,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1334,"title":{},"body":{"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["10/10",{"_index":1734,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":1772,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":894,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{},"coverage.html":{}}}],["1000",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"injectables/LocalStorageService.html":{},"components/SendMessageComponent.html":{}}}],["100px",{"_index":1541,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["10px",{"_index":898,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["11",{"_index":1565,"title":{},"body":{"classes/SsnValidation.html":{},"index.html":{}}}],["11/11",{"_index":1759,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1335,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["12/12",{"_index":1760,"title":{},"body":{"coverage.html":{}}}],["12px",{"_index":1087,"title":{},"body":{"components/HomePage.html":{}}}],["13",{"_index":1554,"title":{},"body":{"classes/SsnValidation.html":{}}}],["13/13",{"_index":1763,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1752,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["15px",{"_index":890,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["2",{"_index":1558,"title":{},"body":{"classes/SsnValidation.html":{},"index.html":{}}}],["2.0.6",{"_index":1807,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":1820,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1818,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1767,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1773,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1755,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":889,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["23/25",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":1141,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["24/28",{"_index":1777,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":1536,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["25",{"_index":1748,"title":{},"body":{"coverage.html":{}}}],["25px",{"_index":1546,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["27",{"_index":1835,"title":{},"body":{"index.html":{}}}],["2px",{"_index":1082,"title":{},"body":{"components/HomePage.html":{}}}],["3",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/SsnValidation.html":{}}}],["3.1.0",{"_index":1815,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1733,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":484,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["300px",{"_index":1547,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["30px",{"_index":1542,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["32/34",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1750,"title":{},"body":{"coverage.html":{}}}],["35px",{"_index":1543,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["4",{"_index":1561,"title":{},"body":{"classes/SsnValidation.html":{}}}],["4.0.3",{"_index":1813,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":1805,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1739,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1019,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["401",{"_index":1018,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["5",{"_index":1563,"title":{},"body":{"classes/SsnValidation.html":{},"coverage.html":{},"index.html":{}}}],["5.0.0",{"_index":1804,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":1812,"title":{},"body":{"dependencies.html":{}}}],["5.11.0",{"_index":1800,"title":{},"body":{"dependencies.html":{}}}],["5.12.0",{"_index":1802,"title":{},"body":{"dependencies.html":{}}}],["5.9.0",{"_index":1798,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1762,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1764,"title":{},"body":{"coverage.html":{}}}],["50px",{"_index":1537,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["5px",{"_index":1079,"title":{},"body":{"components/HomePage.html":{}}}],["6",{"_index":1562,"title":{},"body":{"classes/SsnValidation.html":{}}}],["6.4.0",{"_index":1809,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":1822,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1758,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":1770,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1142,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["66",{"_index":1766,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1559,"title":{},"body":{"classes/SsnValidation.html":{},"index.html":{}}}],["7.1.1",{"_index":1821,"title":{},"body":{"dependencies.html":{}}}],["7.2.2",{"_index":1795,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":1738,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":1731,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1769,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1310,"title":{},"body":{"classes/PasswordValidation.html":{},"interceptors/RequestInterceptor.html":{},"classes/SsnValidation.html":{},"coverage.html":{},"index.html":{}}}],["8.0.0",{"_index":1810,"title":{},"body":{"dependencies.html":{}}}],["8/11",{"_index":1732,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1740,"title":{},"body":{"coverage.html":{}}}],["80px",{"_index":1088,"title":{},"body":{"components/HomePage.html":{}}}],["83",{"_index":1771,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1776,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1737,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":976,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{},"coverage.html":{}}}],["9._",{"_index":975,"title":{},"body":{"classes/EmailValidation.html":{}}}],["92",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["_credentials",{"_index":613,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["_errors",{"_index":1043,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["_global_",{"_index":1028,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["_id",{"_index":212,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["_rev",{"_index":213,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["aaist",{"_index":1284,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["about'},{'name",{"_index":138,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["about.page",{"_index":196,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["about.page.html",{"_index":17,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page.scss",{"_index":15,"title":{},"body":{"components/AboutPage.html":{}}}],["aboutpage",{"_index":1,"title":{"components/AboutPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["aboutpagemodule",{"_index":174,"title":{"modules/AboutPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"index.html":{},"modules.html":{}}}],["abstract",{"_index":963,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["abstractcontrol",{"_index":960,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["abstractcontrol.get('confirmpassword').seterrors",{"_index":1304,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["abstractcontrol.get('confirmpassword').value",{"_index":1303,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["abstractcontrol.get('password').value",{"_index":1301,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["abstractcontrol.value",{"_index":971,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{}}}],["accept",{"_index":1380,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["access",{"_index":585,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["accessed",{"_index":1401,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["accessors",{"_index":619,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["accesstoken",{"_index":620,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["acestei",{"_index":76,"title":{},"body":{"components/AboutPage.html":{}}}],["aceștia",{"_index":88,"title":{},"body":{"components/AboutPage.html":{}}}],["acredited",{"_index":740,"title":{},"body":{"classes/Course.html":{},"injectables/CourseService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["acredited.id",{"_index":798,"title":{},"body":{"injectables/CourseService.html":{}}}],["action",{"_index":1068,"title":{},"body":{"components/HomePage.html":{}}}],["action.title",{"_index":1076,"title":{},"body":{"components/HomePage.html":{}}}],["actions",{"_index":1064,"title":{},"body":{"components/HomePage.html":{}}}],["activated",{"_index":1450,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["activatedroute",{"_index":1391,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["activatedroutesnapshot",{"_index":1448,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["actual_component",{"_index":169,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["adaug",{"_index":420,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["add",{"_index":140,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{}}}],["added",{"_index":299,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["added_by",{"_index":741,"title":{},"body":{"classes/Course.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["addimage",{"_index":1475,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["additional",{"_index":1007,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["address",{"_index":1216,"title":{},"body":{"classes/Organisation.html":{}}}],["adds",{"_index":988,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{}}}],["addvolunteercomponent",{"_index":139,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["administrare",{"_index":51,"title":{},"body":{"components/AboutPage.html":{}}}],["administrarea",{"_index":102,"title":{},"body":{"components/AboutPage.html":{}}}],["adres",{"_index":1202,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["adresa",{"_index":979,"title":{},"body":{"classes/EmailValidation.html":{},"components/RecoverPasswordComponent.html":{}}}],["afterviewinit",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["ajutorul",{"_index":75,"title":{},"body":{"components/AboutPage.html":{}}}],["al",{"_index":70,"title":{},"body":{"components/AboutPage.html":{}}}],["align",{"_index":1090,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["allocated",{"_index":268,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocates",{"_index":1646,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocatevolunteer",{"_index":1632,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocatevolunteer(allocationid",{"_index":1643,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocation",{"_index":204,"title":{"classes/Allocation.html":{}},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["allocation.city",{"_index":324,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.county",{"_index":322,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.created_at",{"_index":325,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.organisation",{"_index":333,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.rescue_officer",{"_index":319,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.type",{"_index":331,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.updated_at",{"_index":330,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.volunteer",{"_index":316,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocationid",{"_index":1647,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocations",{"_index":239,"title":{},"body":{"injectables/AllocationService.html":{},"classes/DatabaseSyncService.html":{},"miscellaneous/variables.html":{}}}],["allocationservice",{"_index":235,"title":{"injectables/AllocationService.html":{}},"body":{"injectables/AllocationService.html":{},"modules/CoreModule.html":{},"coverage.html":{},"index.html":{}}}],["allowed",{"_index":587,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["allowing",{"_index":1435,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["aloca",{"_index":114,"title":{},"body":{"components/AboutPage.html":{}}}],["already",{"_index":1400,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["alt",{"_index":71,"title":{},"body":{"components/AboutPage.html":{}}}],["android",{"_index":1519,"title":{},"body":{"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["angular",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["angular/common",{"_index":188,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":686,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["angular/core",{"_index":21,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":190,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"classes/EmailValidation.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1796,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":521,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":193,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["apeleaz",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["api.lxhost.ro",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api.lxhost.ro/api",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aplicația",{"_index":99,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["aplicație",{"_index":27,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["aplicației",{"_index":79,"title":{},"body":{"components/AboutPage.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"dependencies.html":{}}}],["app.component",{"_index":525,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":142,"title":{"components/AppComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["application",{"_index":379,"title":{},"body":{"components/AppComponent.html":{}}}],["application/json",{"_index":1381,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["appmodule",{"_index":512,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["apppage",{"_index":539,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["apppages",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["approutingmodule",{"_index":517,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["apărut",{"_index":1426,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["apăsați",{"_index":505,"title":{},"body":{"components/AppComponent.html":{}}}],["ar",{"_index":43,"title":{},"body":{"components/AboutPage.html":{}}}],["array.from(string(ssn",{"_index":1556,"title":{},"body":{"classes/SsnValidation.html":{}}}],["asemenea",{"_index":98,"title":{},"body":{"components/AboutPage.html":{}}}],["async",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["attachments",{"_index":801,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{}}}],["attributes",{"_index":1039,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["atât",{"_index":1358,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["autentificare",{"_index":1369,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["auth",{"_index":566,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/logout",{"_index":430,"title":{},"body":{"components/AppComponent.html":{}}}],["auth/reset/:token",{"_index":495,"title":{},"body":{"components/AppComponent.html":{}}}],["authenticated",{"_index":575,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/UnauthenticatedGuard.html":{}}}],["authenticates",{"_index":671,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication",{"_index":288,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{}}}],["authentication'},{'name",{"_index":145,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["authentication.credentials",{"_index":661,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication.loginpayload",{"_index":633,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication.page",{"_index":603,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["authentication.page.html",{"_index":596,"title":{},"body":{"components/AuthenticationPage.html":{}}}],["authentication.page.scss",{"_index":595,"title":{},"body":{"components/AuthenticationPage.html":{}}}],["authentication.service",{"_index":590,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["authentication.user",{"_index":685,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication/authentication.service",{"_index":1377,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["authentication/unauthenticated.guard",{"_index":730,"title":{},"body":{"modules/CoreModule.html":{}}}],["authenticationguard",{"_index":197,"title":{"guards/AuthenticationGuard.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["authenticationpage",{"_index":144,"title":{"components/AuthenticationPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["authenticationpagemodule",{"_index":598,"title":{"modules/AuthenticationPageModule.html":{}},"body":{"modules/AuthenticationPageModule.html":{},"index.html":{},"modules.html":{}}}],["authenticationservice",{"_index":246,"title":{"injectables/AuthenticationService.html":{}},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{},"coverage.html":{},"index.html":{}}}],["authorization",{"_index":1383,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["authservice",{"_index":767,"title":{},"body":{"injectables/CourseService.html":{}}}],["automatically",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/SsnValidation.html":{},"guards/UnauthenticatedGuard.html":{}}}],["available",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"modules.html":{}}}],["avea",{"_index":44,"title":{},"body":{"components/AboutPage.html":{}}}],["await",{"_index":502,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["b",{"_index":1571,"title":{},"body":{"classes/SsnValidation.html":{}}}],["back",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["backbutton",{"_index":875,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["backend",{"_index":637,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["background",{"_index":891,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/SendMessageComponent.html":{}}}],["bank",{"_index":130,"title":{},"body":{"components/AboutPage.html":{}}}],["bar",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["bar/ngx",{"_index":459,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["base64",{"_index":1485,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["base64image",{"_index":1472,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["basic",{"_index":612,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/LocalStorageService.html":{}}}],["baza",{"_index":111,"title":{},"body":{"components/AboutPage.html":{}}}],["bearer",{"_index":1384,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["being",{"_index":966,"title":{},"body":{"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"interceptors/RequestInterceptor.html":{},"classes/SsnValidation.html":{}}}],["belong",{"_index":785,"title":{},"body":{"injectables/CourseService.html":{}}}],["black",{"_index":1084,"title":{},"body":{"components/HomePage.html":{}}}],["block",{"_index":1545,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["body",{"_index":639,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["boolean",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/RouteReusableStrategy.html":{},"guards/UnauthenticatedGuard.html":{}}}],["bootstrap",{"_index":178,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["bottom",{"_index":508,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["box",{"_index":895,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{}}}],["browse",{"_index":1838,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":522,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(destination",{"_index":550,"title":{},"body":{"classes/AppPage.html":{}}}],["browser.gettitle",{"_index":551,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/ngx",{"_index":534,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":520,"title":{},"body":{"modules/AppModule.html":{}}}],["bun",{"_index":119,"title":{},"body":{"components/AboutPage.html":{}}}],["button",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/SendMessageComponent.html":{}}}],["c",{"_index":1151,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["ca",{"_index":1149,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["calamități",{"_index":40,"title":{},"body":{"components/AboutPage.html":{}}}],["call",{"_index":1072,"title":{},"body":{"components/HomePage.html":{}}}],["calling",{"_index":856,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["camera",{"_index":1483,"title":{},"body":{"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["camera.destinationtype.data_url",{"_index":1510,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["camera.getpicture",{"_index":1508,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["canactivate",{"_index":201,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"modules/HomePageModule.html":{},"guards/UnauthenticatedGuard.html":{},"modules/VolunteerPageModule.html":{}}}],["cancel",{"_index":884,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["caracter",{"_index":1315,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["caractere",{"_index":1311,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["care",{"_index":42,"title":{},"body":{"components/AboutPage.html":{}}}],["catch(error",{"_index":952,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["catcherror",{"_index":1010,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["caz",{"_index":105,"title":{},"body":{"components/AboutPage.html":{}}}],["cazul",{"_index":65,"title":{},"body":{"components/AboutPage.html":{}}}],["center",{"_index":1091,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["change",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{}}}],["changed",{"_index":1053,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["changes",{"_index":1406,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["changeselectedentry",{"_index":839,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["changeselectedentry(entry",{"_index":853,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["charset=utf",{"_index":1382,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["checkpemission",{"_index":1476,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["checks",{"_index":1117,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/SendMessageComponent.html":{}}}],["cities",{"_index":1575,"title":{},"body":{"injectables/StaticsService.html":{}}}],["city",{"_index":214,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Organisation.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["city._id.tostring",{"_index":1689,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["city.id",{"_index":1681,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["city.name",{"_index":1690,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["city_type",{"_index":1576,"title":{},"body":{"injectables/StaticsService.html":{}}}],["civil",{"_index":60,"title":{},"body":{"components/AboutPage.html":{}}}],["class",{"_index":23,"title":{"classes/Allocation.html":{},"classes/AppPage.html":{},"classes/Course.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"classes/Organisation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/RouteReusableStrategy.html":{},"classes/SsnValidation.html":{},"classes/Volunteer.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["classes",{"_index":205,"title":{},"body":{"classes/Allocation.html":{},"classes/AppPage.html":{},"classes/Course.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"classes/Organisation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/RouteReusableStrategy.html":{},"classes/SsnValidation.html":{},"classes/Volunteer.html":{},"index.html":{}}}],["clear",{"_index":1044,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["clearall",{"_index":1112,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["cleardata",{"_index":1741,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cleardata(type",{"_index":1830,"title":{},"body":{"miscellaneous/functions.html":{}}}],["clearitem",{"_index":1113,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["clearitem(key",{"_index":1122,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["clears",{"_index":643,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/functions.html":{}}}],["click",{"_index":1074,"title":{},"body":{"components/HomePage.html":{}}}],["close",{"_index":885,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["closes",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["cluster_aboutpagemodule",{"_index":181,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_aboutpagemodule_declarations",{"_index":182,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":513,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":516,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":514,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":515,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_authenticationpagemodule",{"_index":599,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"index.html":{}}}],["cluster_authenticationpagemodule_declarations",{"_index":600,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"index.html":{}}}],["cluster_coremodule",{"_index":714,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_coremodule_declarations",{"_index":715,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_coremodule_providers",{"_index":716,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_homepagemodule",{"_index":1103,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_declarations",{"_index":1104,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_volunteerpagemodule",{"_index":1625,"title":{},"body":{"modules/VolunteerPageModule.html":{},"index.html":{}}}],["cluster_volunteerpagemodule_declarations",{"_index":1626,"title":{},"body":{"modules/VolunteerPageModule.html":{},"index.html":{}}}],["cnp",{"_index":1555,"title":{},"body":{"classes/SsnValidation.html":{}}}],["cnp[x",{"_index":1568,"title":{},"body":{"classes/SsnValidation.html":{}}}],["code",{"_index":125,"title":{},"body":{"components/AboutPage.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/VolunteerService.html":{}}}],["codification",{"_index":1486,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["coefs",{"_index":1557,"title":{},"body":{"classes/SsnValidation.html":{}}}],["coefs[x",{"_index":1567,"title":{},"body":{"classes/SsnValidation.html":{}}}],["colaborare",{"_index":96,"title":{},"body":{"components/AboutPage.html":{}}}],["color",{"_index":1083,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["column",{"_index":1077,"title":{},"body":{"components/HomePage.html":{}}}],["columns",{"_index":1094,"title":{},"body":{"components/HomePage.html":{}}}],["comments",{"_index":1217,"title":{},"body":{"classes/Organisation.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["commonmodule",{"_index":187,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["completely",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["component",{"_index":0,"title":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["component_template",{"_index":136,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["componente",{"_index":77,"title":{},"body":{"components/AboutPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"index.html":{}}}],["components/custom",{"_index":731,"title":{},"body":{"modules/CoreModule.html":{}}}],["confirm",{"_index":1429,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["confirmpassword",{"_index":1302,"title":{},"body":{"classes/PasswordValidation.html":{},"components/ResetPasswordComponent.html":{}}}],["console.error('request",{"_index":1030,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["console.log(`error",{"_index":953,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["console.log(this._errors",{"_index":1059,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["console.warn('unmatched",{"_index":501,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":199,"title":{},"body":{"modules/AboutPageModule.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"components/AboutPage.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{}}}],["constructor(authenticationservice",{"_index":245,"title":{},"body":{"injectables/AllocationService.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{}}}],["constructor(authservice",{"_index":764,"title":{},"body":{"injectables/CourseService.html":{}}}],["constructor(courseservice",{"_index":1641,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["constructor(httpclient",{"_index":621,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(modalctrl",{"_index":845,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["constructor(platform",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":304,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{},"injectables/VolunteerService.html":{}}}],["constructor(public",{"_index":1411,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["constructor(router",{"_index":577,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["constructor(sms",{"_index":1478,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["contact_person",{"_index":1218,"title":{},"body":{"classes/Organisation.html":{}}}],["containing",{"_index":267,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"components/HomePage.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["contains",{"_index":269,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["content",{"_index":1099,"title":{},"body":{"components/HomePage.html":{},"interceptors/RequestInterceptor.html":{}}}],["context",{"_index":1791,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continuous",{"_index":308,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["control",{"_index":964,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["controller",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["convert",{"_index":1487,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["conțin",{"_index":1308,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["cookie",{"_index":1135,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["cookie's",{"_index":1146,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["cordova",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["core",{"_index":460,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"dependencies.html":{}}}],["core/authentication/authentication.guard",{"_index":198,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["coremodule",{"_index":518,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"index.html":{},"modules.html":{}}}],["corespund",{"_index":1307,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["couchdb",{"_index":252,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["counties",{"_index":1574,"title":{},"body":{"injectables/StaticsService.html":{}}}],["county",{"_index":215,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Organisation.html":{},"injectables/StaticsService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["county._id",{"_index":323,"title":{},"body":{"injectables/AllocationService.html":{}}}],["county._id.tostring",{"_index":1686,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["county.id",{"_index":1680,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["county.name",{"_index":1687,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["county_romania_",{"_index":1591,"title":{},"body":{"injectables/StaticsService.html":{}}}],["county_romania_\\ufff0",{"_index":1593,"title":{},"body":{"injectables/StaticsService.html":{}}}],["county_type",{"_index":1577,"title":{},"body":{"injectables/StaticsService.html":{}}}],["countyid",{"_index":1583,"title":{},"body":{"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["course",{"_index":738,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"injectables/CourseService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["course's",{"_index":778,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.[].course_name_id",{"_index":1678,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course._id",{"_index":1705,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course.acredited",{"_index":815,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.added_by",{"_index":808,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.course_name",{"_index":805,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.created_at",{"_index":806,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.name",{"_index":1706,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course.obtained",{"_index":817,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.service",{"_index":1677,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course.type",{"_index":810,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.updated_at",{"_index":807,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.volunteer_id",{"_index":804,"title":{},"body":{"injectables/CourseService.html":{}}}],["course_name",{"_index":742,"title":{},"body":{"classes/Course.html":{}}}],["course_name.id",{"_index":797,"title":{},"body":{"injectables/CourseService.html":{}}}],["course_name_id",{"_index":1620,"title":{},"body":{"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["course_names",{"_index":822,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseid",{"_index":774,"title":{},"body":{"injectables/CourseService.html":{},"injectables/VolunteerService.html":{}}}],["coursename",{"_index":770,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursenameid",{"_index":781,"title":{},"body":{"injectables/CourseService.html":{}}}],["courses",{"_index":766,"title":{},"body":{"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["courseservice",{"_index":717,"title":{"injectables/CourseService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/CourseService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"index.html":{}}}],["cover",{"_index":1219,"title":{},"body":{"classes/Organisation.html":{}}}],["coverage",{"_index":1726,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createallocation",{"_index":244,"title":{},"body":{"injectables/AllocationService.html":{}}}],["createallocation(volunteer",{"_index":257,"title":{},"body":{"injectables/AllocationService.html":{}}}],["createcookie",{"_index":1742,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createcookie(name",{"_index":1138,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["createcourse",{"_index":756,"title":{},"body":{"injectables/CourseService.html":{}}}],["createcourse(coursename",{"_index":768,"title":{},"body":{"injectables/CourseService.html":{}}}],["created",{"_index":277,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["created_at",{"_index":216,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["createdat",{"_index":832,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["createform",{"_index":1164,"title":{},"body":{"components/LoginComponent.html":{}}}],["createorganisation",{"_index":1240,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["createorganisation(name",{"_index":1248,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["creates",{"_index":259,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["createvolunteer",{"_index":1633,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["createvolunteer(name",{"_index":1649,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["creating",{"_index":1393,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["creation",{"_index":1170,"title":{},"body":{"components/LoginComponent.html":{}}}],["credentials",{"_index":614,"title":{"interfaces/Credentials.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["credentialskey",{"_index":689,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cu",{"_index":74,"title":{},"body":{"components/AboutPage.html":{},"components/ResetPasswordComponent.html":{}}}],["curr",{"_index":1457,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["curr.routeconfig",{"_index":1465,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["current",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["currentpath",{"_index":473,"title":{},"body":{"components/AppComponent.html":{}}}],["currentpath.indexof('home",{"_index":480,"title":{},"body":{"components/AppComponent.html":{}}}],["currentpath.indexof('login",{"_index":478,"title":{},"body":{"components/AppComponent.html":{}}}],["currentuser",{"_index":1267,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["currentuser._id",{"_index":1271,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["custom",{"_index":147,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["customselectorcomponent",{"_index":146,"title":{"components/CustomSelectorComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["cât",{"_index":1360,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["către",{"_index":61,"title":{},"body":{"components/AboutPage.html":{}}}],["data",{"_index":665,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"classes/RouteReusableStrategy.html":{},"miscellaneous/functions.html":{}}}],["data.id",{"_index":1704,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["data:image/jpeg;base64",{"_index":1515,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["database",{"_index":254,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["databasesyncservice",{"_index":363,"title":{"classes/DatabaseSyncService.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"classes/DatabaseSyncService.html":{},"coverage.html":{}}}],["databaseurl",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":112,"title":{},"body":{"components/AboutPage.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"injectables/VolunteerService.html":{}}}],["date.now",{"_index":1058,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["date.settime(date.gettime",{"_index":1140,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["date.togmtstring",{"_index":1143,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["datepicker",{"_index":527,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["days",{"_index":1136,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["dd",{"_index":328,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["de",{"_index":50,"title":{},"body":{"components/AboutPage.html":{},"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["declarations",{"_index":177,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["declare",{"_index":827,"title":{},"body":{"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{},"injectables/VolunteerService.html":{}}}],["decoration",{"_index":1092,"title":{},"body":{"components/HomePage.html":{}}}],["decorators",{"_index":445,"title":{},"body":{"components/AppComponent.html":{}}}],["deeplinks",{"_index":461,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["deeplinks.route",{"_index":494,"title":{},"body":{"components/AppComponent.html":{}}}],["default",{"_index":278,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":222,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["defining",{"_index":1658,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["definition",{"_index":1440,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["deja",{"_index":85,"title":{},"body":{"components/AboutPage.html":{}}}],["deletecoursebyid",{"_index":757,"title":{},"body":{"injectables/CourseService.html":{}}}],["deletecoursebyid(courseid",{"_index":771,"title":{},"body":{"injectables/CourseService.html":{}}}],["deleteorganisationbyid",{"_index":1241,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["deleteorganisationbyid(organisationid",{"_index":1251,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["deletes",{"_index":773,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["deletevolunteerbyid",{"_index":1634,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["deletevolunteerbyid(volunteerid",{"_index":1653,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["delogare",{"_index":429,"title":{},"body":{"components/AppComponent.html":{}}}],["departamentul",{"_index":62,"title":{},"body":{"components/AboutPage.html":{}}}],["dependencies",{"_index":176,"title":{"dependencies.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{},"index.html":{}}}],["depending",{"_index":452,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["description",{"_index":207,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["design",{"_index":1182,"title":{},"body":{"components/LoginComponent.html":{}}}],["despre",{"_index":26,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["destination",{"_index":548,"title":{},"body":{"classes/AppPage.html":{}}}],["destinationtype",{"_index":1509,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["destroy",{"_index":869,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["detached",{"_index":1463,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["detachedroutehandle",{"_index":1451,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["detachedtree",{"_index":1461,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["determines",{"_index":583,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/UnauthenticatedGuard.html":{}}}],["dev",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["developement",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["device",{"_index":711,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["dezastru",{"_index":72,"title":{},"body":{"components/AboutPage.html":{}}}],["dezvoltat",{"_index":124,"title":{},"body":{"components/AboutPage.html":{}}}],["diacritics",{"_index":1262,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["didn't",{"_index":1179,"title":{},"body":{"components/LoginComponent.html":{}}}],["din",{"_index":94,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["directive",{"_index":134,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["directives",{"_index":168,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["dismessed",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dismiss",{"_index":840,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["display",{"_index":1095,"title":{},"body":{"components/HomePage.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["displayed",{"_index":1073,"title":{},"body":{"components/HomePage.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dispoziție",{"_index":58,"title":{},"body":{"components/AboutPage.html":{}}}],["doc.acredited",{"_index":814,"title":{},"body":{"injectables/CourseService.html":{}}}],["doc.allocation",{"_index":1722,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.city",{"_index":1715,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.comments",{"_index":1718,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.county",{"_index":1714,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.course_name",{"_index":813,"title":{},"body":{"injectables/CourseService.html":{}}}],["doc.courses",{"_index":1717,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.email",{"_index":1711,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.job",{"_index":1720,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.name",{"_index":1279,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["doc.obtained",{"_index":816,"title":{},"body":{"injectables/CourseService.html":{}}}],["doc.organisation",{"_index":1716,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.phone",{"_index":1713,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.slug",{"_index":1280,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["doc.ssn",{"_index":1710,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.updated_at",{"_index":818,"title":{},"body":{"injectables/CourseService.html":{},"injectables/VolunteerService.html":{}}}],["document",{"_index":1145,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["document.addeventlistener('backbutton",{"_index":471,"title":{},"body":{"components/AppComponent.html":{}}}],["document.cookie",{"_index":1144,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["document.cookie.split",{"_index":1150,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["documentation",{"_index":1727,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["double",{"_index":392,"title":{},"body":{"components/AppComponent.html":{}}}],["dsu",{"_index":97,"title":{},"body":{"components/AboutPage.html":{}}}],["duration",{"_index":509,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dynamic",{"_index":1797,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/app.po.ts",{"_index":540,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:12",{"_index":544,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":547,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":545,"title":{},"body":{"classes/AppPage.html":{}}}],["eforturile",{"_index":122,"title":{},"body":{"components/AboutPage.html":{}}}],["element",{"_index":133,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["element(by.tagname('app",{"_index":552,"title":{},"body":{"classes/AppPage.html":{}}}],["elemmatch",{"_index":1725,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["email",{"_index":650,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"components/RecoverPasswordComponent.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{}}}],["email@email.com",{"_index":984,"title":{},"body":{"classes/EmailValidation.html":{}}}],["emailvalidation",{"_index":956,"title":{"classes/EmailValidation.html":{}},"body":{"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["emailvalidation(abstractcontrol",{"_index":959,"title":{},"body":{"classes/EmailValidation.html":{}}}],["emailvalidation.emailvalidation",{"_index":1192,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["emit",{"_index":930,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emits",{"_index":673,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["emitts",{"_index":1052,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["endkey",{"_index":1592,"title":{},"body":{"injectables/StaticsService.html":{}}}],["entries",{"_index":1587,"title":{},"body":{"injectables/StaticsService.html":{}}}],["entry",{"_index":260,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["entrycomponents",{"_index":535,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["env",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":283,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":1029,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["environment.serverurl",{"_index":1373,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["environments/environment",{"_index":284,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["eq",{"_index":802,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["eroare",{"_index":1427,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["err",{"_index":1517,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["error",{"_index":955,"title":{},"body":{"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/SsnValidation.html":{}}}],["errorhandler",{"_index":990,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorhandler(response",{"_index":997,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorhandlerinterceptor",{"_index":718,"title":{"interceptors/ErrorHandlerInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["errormessage",{"_index":1161,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errormessageobject",{"_index":1032,"title":{"interfaces/ErrorMessageObject.html":{}},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["errormessageservice",{"_index":719,"title":{"injectables/ErrorMessageService.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"coverage.html":{},"index.html":{}}}],["errormodel",{"_index":1036,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["errormodel.errormessageobject",{"_index":1049,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["errorresponse",{"_index":1020,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error",{"_index":1021,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.error",{"_index":1027,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.validation",{"_index":1022,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.validation.errors[key",{"_index":1025,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.validation.keys.foreach((key",{"_index":1023,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errors",{"_index":1000,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{}}}],["este",{"_index":31,"title":{},"body":{"components/AboutPage.html":{},"classes/EmailValidation.html":{}}}],["event",{"_index":472,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{}}}],["event.preventdefault",{"_index":476,"title":{},"body":{"components/AppComponent.html":{}}}],["event.stopimmediatepropagation",{"_index":477,"title":{},"body":{"components/AppComponent.html":{}}}],["event.subscribe(async",{"_index":877,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["eventemitter",{"_index":672,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["events",{"_index":674,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["eventualitatea",{"_index":38,"title":{},"body":{"components/AboutPage.html":{}}}],["ex",{"_index":983,"title":{},"body":{"classes/EmailValidation.html":{}}}],["exist",{"_index":1363,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["existenți",{"_index":86,"title":{},"body":{"components/AboutPage.html":{}}}],["existing",{"_index":1121,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["exiting",{"_index":443,"title":{},"body":{"components/AppComponent.html":{}}}],["expiration",{"_index":1137,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["expires",{"_index":1139,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["explicit",{"_index":1436,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["export",{"_index":22,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["exports",{"_index":180,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["extends",{"_index":1441,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["extra",{"_index":1376,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["f9f9f9",{"_index":1539,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["false",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"miscellaneous/variables.html":{}}}],["fff",{"_index":892,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["fields",{"_index":311,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["files",{"_index":1584,"title":{},"body":{"injectables/StaticsService.html":{}}}],["filter",{"_index":1635,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["filter(countyid",{"_index":1655,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["filters",{"_index":1657,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["finalize",{"_index":1186,"title":{},"body":{"components/LoginComponent.html":{}}}],["find",{"_index":297,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["find/lib/index",{"_index":282,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["finds",{"_index":777,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["fixed",{"_index":886,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["flex",{"_index":1096,"title":{},"body":{"components/HomePage.html":{}}}],["foarte",{"_index":107,"title":{},"body":{"components/AboutPage.html":{}}}],["following",{"_index":270,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["font",{"_index":1085,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["form",{"_index":1169,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["formbuilder",{"_index":1166,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["formcontrol",{"_index":1349,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["formgroup",{"_index":1183,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["forms",{"_index":1395,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["formsmodule",{"_index":189,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["fost",{"_index":1353,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["fotografie",{"_index":1528,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["found",{"_index":625,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["from(localdb.alldocs",{"_index":1589,"title":{},"body":{"injectables/StaticsService.html":{}}}],["from(localdb.find",{"_index":799,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["from(localdb.post(allocation",{"_index":337,"title":{},"body":{"injectables/AllocationService.html":{}}}],["from(localdb.post(course",{"_index":811,"title":{},"body":{"injectables/CourseService.html":{}}}],["from(localdb.post(organisation",{"_index":1277,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["from(localdb.post(volunteer",{"_index":1700,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["from(localdb.query('cities/slug",{"_index":1594,"title":{},"body":{"injectables/StaticsService.html":{}}}],["fromevent",{"_index":871,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["fromevent(document",{"_index":874,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["full",{"_index":561,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SendMessageComponent.html":{}}}],["function",{"_index":1006,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["functions",{"_index":1828,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["future",{"_index":1459,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["future.data.reuse",{"_index":1466,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["future.routeconfig",{"_index":1464,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["g",{"_index":1287,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["generated",{"_index":1048,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["get('/logout",{"_index":701,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getaccesstoken",{"_index":680,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getcitylist",{"_index":1578,"title":{},"body":{"injectables/StaticsService.html":{}}}],["getcitylist(countyid",{"_index":1581,"title":{},"body":{"injectables/StaticsService.html":{}}}],["getcountylist",{"_index":1579,"title":{},"body":{"injectables/StaticsService.html":{}}}],["getcoursebyid",{"_index":758,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyid(courseid",{"_index":775,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyname",{"_index":759,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyname(coursenameid",{"_index":779,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyvolunteerid",{"_index":760,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyvolunteerid(volunteerid",{"_index":782,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursenames",{"_index":761,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourses",{"_index":762,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcredentials",{"_index":677,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getdata",{"_index":1743,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getdata(type",{"_index":1831,"title":{},"body":{"miscellaneous/functions.html":{}}}],["geterrors",{"_index":1054,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["getitem",{"_index":1114,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getitem(key",{"_index":1126,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getorganisationbyid",{"_index":1242,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisationbyid(organisationid",{"_index":1254,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisationbyname",{"_index":1243,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisationbyname(organisationname",{"_index":1256,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisations",{"_index":1244,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getpageonetitletext",{"_index":541,"title":{},"body":{"classes/AppPage.html":{}}}],["gets",{"_index":405,"title":{},"body":{"components/AppComponent.html":{}}}],["getsessionname",{"_index":1744,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getter",{"_index":679,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["gettitle",{"_index":542,"title":{},"body":{"classes/AppPage.html":{}}}],["getuser",{"_index":682,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getvolunteerbyid",{"_index":1636,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteerbyid(volunteerid",{"_index":1662,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteerbyssn",{"_index":1637,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteerbyssn(ssn",{"_index":1664,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteers",{"_index":1638,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteers(page",{"_index":1666,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["given",{"_index":787,"title":{},"body":{"injectables/CourseService.html":{},"classes/RouteReusableStrategy.html":{},"injectables/VolunteerService.html":{}}}],["go",{"_index":1180,"title":{},"body":{"components/LoginComponent.html":{}}}],["granted",{"_index":1490,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["graph",{"_index":1839,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":570,"title":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{},"coverage.html":{}}}],["guards",{"_index":571,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{},"index.html":{}}}],["h",{"_index":1532,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["h:mm:ss",{"_index":329,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["handle",{"_index":1119,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["handle(request",{"_index":1014,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler",{"_index":989,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler.interceptor.ts",{"_index":987,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["handler.interceptor.ts:25",{"_index":992,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler.interceptor.ts:45",{"_index":1004,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler.interceptor.ts:59",{"_index":999,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handles",{"_index":579,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["handling",{"_index":995,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["header",{"_index":1538,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["height",{"_index":1097,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["hidden",{"_index":382,"title":{},"body":{"components/AppComponent.html":{}}}],["home",{"_index":559,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["home')).element(by.deepcss('ion",{"_index":553,"title":{},"body":{"classes/AppPage.html":{}}}],["home'},{'name",{"_index":150,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["home.page",{"_index":1106,"title":{},"body":{"modules/HomePageModule.html":{}}}],["home.page.html",{"_index":1063,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":1062,"title":{},"body":{"components/HomePage.html":{}}}],["homepage",{"_index":149,"title":{"components/HomePage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["homepagemodule",{"_index":1102,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"index.html":{},"modules.html":{}}}],["html",{"_index":132,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["http",{"_index":628,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["http://admin:admin@rvm.lxhost.ro:5984",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://rvm.lxhost.ro:5984",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":724,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpclient",{"_index":622,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["httpclientmodule",{"_index":725,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpevent",{"_index":1008,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httphandler",{"_index":1003,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httpinterceptor",{"_index":1009,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httprequest",{"_index":1002,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httpresponse",{"_index":998,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["https://github.com/angular/angular/issues/18374",{"_index":1439,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["https://rvm",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":1535,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["id",{"_index":271,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"injectables/OrganisationService.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["identific",{"_index":92,"title":{},"body":{"components/AboutPage.html":{}}}],["identifier",{"_index":1728,"title":{},"body":{"coverage.html":{}}}],["identifies",{"_index":1013,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"miscellaneous/variables.html":{}}}],["identitatea",{"_index":83,"title":{},"body":{"components/AboutPage.html":{}}}],["idx",{"_index":1564,"title":{},"body":{"classes/SsnValidation.html":{}}}],["idx.map((x",{"_index":1566,"title":{},"body":{"classes/SsnValidation.html":{}}}],["ig",{"_index":1683,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["ignore",{"_index":24,"title":{},"body":{"components/AboutPage.html":{},"classes/DatabaseSyncService.html":{},"injectables/ErrorMessageService.html":{},"components/VolunteerPage.html":{}}}],["ignored",{"_index":399,"title":{},"body":{"components/AppComponent.html":{}}}],["image",{"_index":1482,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["imagedata",{"_index":1516,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["implements",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["implicate",{"_index":121,"title":{},"body":{"components/AboutPage.html":{}}}],["import",{"_index":18,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["imports",{"_index":202,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["inactiv",{"_index":1276,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["inappbrowser",{"_index":532,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["inbox",{"_index":1359,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["include_docs",{"_index":800,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["incorecte",{"_index":1201,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":210,"title":{"index.html":{}},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["information",{"_index":644,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"interceptors/RequestInterceptor.html":{},"miscellaneous/functions.html":{}}}],["informații",{"_index":1200,"title":{},"body":{"components/LoginComponent.html":{}}}],["initialisation",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["initialiseview",{"_index":1389,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["initializeapp",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["initializes",{"_index":624,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["injectable",{"_index":234,"title":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}},"body":{"injectables/AllocationService.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["injectables",{"_index":236,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"index.html":{}}}],["injected",{"_index":993,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{}}}],["injection",{"_index":627,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["input",{"_index":870,"title":{},"body":{"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{},"injectables/VolunteerService.html":{}}}],["inputs",{"_index":843,"title":{},"body":{"components/CustomSelectorComponent.html":{},"classes/PasswordValidation.html":{}}}],["inside",{"_index":1134,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["instrument",{"_index":49,"title":{},"body":{"components/AboutPage.html":{}}}],["intent",{"_index":1520,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["intercept",{"_index":991,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["intercept(request",{"_index":1001,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["interceptor",{"_index":985,"title":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":736,"title":{},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["intercepts",{"_index":1005,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["interface",{"_index":823,"title":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{}},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":824,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{},"index.html":{}}}],["intervenție",{"_index":116,"title":{},"body":{"components/AboutPage.html":{}}}],["introdus",{"_index":980,"title":{},"body":{"classes/EmailValidation.html":{}}}],["ion",{"_index":1100,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["ionic",{"_index":455,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["ionic/angular",{"_index":195,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"modules/HomePageModule.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["ionic/lab",{"_index":1806,"title":{},"body":{"dependencies.html":{}}}],["ionicmodule",{"_index":194,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["ionicmodule.forroot",{"_index":536,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":524,"title":{},"body":{"modules/AppModule.html":{}}}],["ionrouteroutlet",{"_index":444,"title":{},"body":{"components/AppComponent.html":{}}}],["ios",{"_index":1811,"title":{},"body":{"dependencies.html":{}}}],["isauthenticated",{"_index":615,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isdoubletap",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["isn't",{"_index":586,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["it's",{"_index":273,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/VolunteerService.html":{}}}],["item",{"_index":1125,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["item's",{"_index":1131,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["item.name",{"_index":883,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["items",{"_index":844,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{}}}],["itself",{"_index":1132,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["job",{"_index":1601,"title":{},"body":{"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["js",{"_index":1817,"title":{},"body":{"dependencies.html":{}}}],["json.parse(savedcredentials",{"_index":693,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(credentials",{"_index":706,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["justify",{"_index":1098,"title":{},"body":{"components/HomePage.html":{}}}],["key",{"_index":688,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["keyword",{"_index":1674,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["know",{"_index":864,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["l",{"_index":113,"title":{},"body":{"components/AboutPage.html":{}}}],["la",{"_index":57,"title":{},"body":{"components/AboutPage.html":{}}}],["label",{"_index":1544,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["last",{"_index":1648,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["le",{"_index":55,"title":{},"body":{"components/AboutPage.html":{}}}],["left",{"_index":887,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["legend",{"_index":131,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["lifecycle",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"classes/RouteReusableStrategy.html":{}}}],["limit",{"_index":951,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/VolunteerService.html":{}}}],["link",{"_index":653,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["list",{"_index":152,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["listener",{"_index":861,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["listvolunteercomponent",{"_index":151,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["liter",{"_index":1312,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["literal",{"_index":225,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["live",{"_index":305,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["loadchildren",{"_index":562,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loading",{"_index":1162,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["loc",{"_index":45,"title":{},"body":{"components/AboutPage.html":{}}}],["local",{"_index":261,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["localallocationsdb",{"_index":903,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localcoursesdb",{"_index":904,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localdb",{"_index":294,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localdb.createindex",{"_index":310,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localdb.get(course._id).then((doc",{"_index":812,"title":{},"body":{"injectables/CourseService.html":{}}}],["localdb.get(courseid).then(doc",{"_index":820,"title":{},"body":{"injectables/CourseService.html":{}}}],["localdb.get(organisation._id).then((doc",{"_index":1278,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["localdb.get(organisationid).then((doc",{"_index":1282,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["localdb.get(volunteer._id).then((doc",{"_index":1708,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["localdb.get(volunteerid).then((doc",{"_index":1723,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["localdb.put(doc",{"_index":819,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localdb.remove(doc",{"_index":821,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localdb.replicate.from(remotedb",{"_index":1588,"title":{},"body":{"injectables/StaticsService.html":{}}}],["localdb.sync(remotedb",{"_index":309,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localorganisationsdb",{"_index":905,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localstaticsdb",{"_index":906,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localstorage",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":361,"title":{"injectables/LocalStorageService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{},"index.html":{}}}],["localvolunteersdb",{"_index":907,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["location",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["locations",{"_index":1573,"title":{},"body":{"injectables/StaticsService.html":{}}}],["log",{"_index":668,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logged",{"_index":1397,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["login",{"_index":589,"title":{},"body":{"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{}}}],["login'},{'name",{"_index":154,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["login(payload",{"_index":632,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login(this.loginform.value",{"_index":1195,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1160,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1159,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/home",{"_index":389,"title":{},"body":{"components/AppComponent.html":{}}}],["login/login.component",{"_index":605,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["login/logout",{"_index":676,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logincomponent",{"_index":153,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["loginform",{"_index":1163,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.controls.email.errors?.email",{"_index":1204,"title":{},"body":{"components/LoginComponent.html":{}}}],["logininfo",{"_index":694,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logininfo).pipe",{"_index":697,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logininfo.device",{"_index":695,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginpayload",{"_index":829,"title":{"interfaces/LoginPayload.html":{}},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["logout",{"_index":609,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"components/LogoutComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["logout'},{'name",{"_index":156,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["logout.component.html",{"_index":1209,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout.component.scss",{"_index":1208,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout/logout.component",{"_index":606,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["logoutcomponent",{"_index":155,"title":{"components/LogoutComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["lookup",{"_index":1289,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["lowercase",{"_index":1321,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["lowercase.test(password",{"_index":1325,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["m",{"_index":1290,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["mai",{"_index":118,"title":{},"body":{"components/AboutPage.html":{}}}],["major",{"_index":68,"title":{},"body":{"components/AboutPage.html":{}}}],["majore",{"_index":41,"title":{},"body":{"components/AboutPage.html":{}}}],["management",{"_index":30,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["map",{"_index":286,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/VolunteerService.html":{}}}],["map((body",{"_index":698,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["map((response",{"_index":339,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["mare",{"_index":1313,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["margin",{"_index":1533,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["match",{"_index":1298,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["match.$args.token",{"_index":498,"title":{},"body":{"components/AppComponent.html":{}}}],["matches",{"_index":1673,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["matching",{"_index":171,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchpassword",{"_index":1294,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["matchpassword(abstractcontrol",{"_index":1295,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["md",{"_index":1531,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["mean",{"_index":1069,"title":{},"body":{"components/HomePage.html":{}}}],["menit",{"_index":33,"title":{},"body":{"components/AboutPage.html":{}}}],["menu",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["mesaj",{"_index":1525,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["mesajul",{"_index":1526,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message",{"_index":504,"title":{},"body":{"components/AppComponent.html":{},"classes/EmailValidation.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{}}}],["message'},{'name",{"_index":164,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["message.component",{"_index":1630,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["message.component.html",{"_index":1471,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.scss",{"_index":1470,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts",{"_index":1469,"title":{},"body":{"components/SendMessageComponent.html":{},"coverage.html":{}}}],["message.component.ts:19",{"_index":1497,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:24",{"_index":1496,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:29",{"_index":1479,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:41",{"_index":1491,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:58",{"_index":1481,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:72",{"_index":1494,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:85",{"_index":1488,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.service",{"_index":1012,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["message.service.ts",{"_index":1041,"title":{},"body":{"injectables/ErrorMessageService.html":{},"coverage.html":{}}}],["message.service.ts:11",{"_index":1050,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:16",{"_index":1051,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:27",{"_index":1055,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:37",{"_index":1047,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:51",{"_index":1045,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message/send",{"_index":1468,"title":{},"body":{"components/SendMessageComponent.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["messageform",{"_index":1473,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["messages",{"_index":1042,"title":{},"body":{"injectables/ErrorMessageService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["messagging",{"_index":996,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["method",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"classes/RouteReusableStrategy.html":{},"injectables/VolunteerService.html":{}}}],["methods",{"_index":243,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["min",{"_index":1540,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["minim",{"_index":1309,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["miscellaneous",{"_index":1827,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":327,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["mobile",{"_index":78,"title":{},"body":{"components/AboutPage.html":{},"injectables/AuthenticationService.html":{}}}],["mobilizați",{"_index":81,"title":{},"body":{"components/AboutPage.html":{}}}],["modal",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["modal.dismiss",{"_index":879,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["modalcontroller",{"_index":846,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["modalctrl",{"_index":848,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["model",{"_index":208,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["model/allocation.model",{"_index":290,"title":{},"body":{"injectables/AllocationService.html":{}}}],["model/course.model",{"_index":795,"title":{},"body":{"injectables/CourseService.html":{}}}],["model/organisation.model",{"_index":1266,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["model/volunteer.model",{"_index":291,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["models",{"_index":737,"title":{},"body":{"modules/CoreModule.html":{}}}],["module",{"_index":173,"title":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["modules",{"_index":175,"title":{"modules.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{},"modules.html":{}}}],["moment",{"_index":292,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["moment().format('y",{"_index":326,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["moz",{"_index":1081,"title":{},"body":{"components/HomePage.html":{}}}],["multi",{"_index":734,"title":{},"body":{"modules/CoreModule.html":{}}}],["n",{"_index":37,"title":{},"body":{"components/AboutPage.html":{},"components/RecoverPasswordComponent.html":{}}}],["name",{"_index":137,"title":{},"body":{"components/AboutPage.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["name,ssn",{"_index":1672,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["nameeq",{"_index":1148,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["names",{"_index":789,"title":{},"body":{"injectables/CourseService.html":{}}}],["namespace",{"_index":828,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{}}}],["native/camera",{"_index":1499,"title":{},"body":{"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["native/core",{"_index":1799,"title":{},"body":{"dependencies.html":{}}}],["native/date",{"_index":528,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/deeplinks",{"_index":462,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["native/in",{"_index":533,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/sms",{"_index":1803,"title":{},"body":{"dependencies.html":{}}}],["native/sms/ngx",{"_index":531,"title":{},"body":{"modules/AppModule.html":{},"components/SendMessageComponent.html":{}}}],["native/splash",{"_index":456,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/status",{"_index":458,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["natural",{"_index":73,"title":{},"body":{"components/AboutPage.html":{}}}],["navigateto",{"_index":543,"title":{},"body":{"classes/AppPage.html":{}}}],["navigateto(destination",{"_index":546,"title":{},"body":{"classes/AppPage.html":{}}}],["navigation",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["navigation.extras",{"_index":1502,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["navigation.extras.state",{"_index":1503,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["navigation.extras.state.volunteers",{"_index":1504,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["navigator['app'].exitapp",{"_index":485,"title":{},"body":{"components/AppComponent.html":{}}}],["ncerci",{"_index":1366,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["neccessary",{"_index":1398,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["needs",{"_index":1492,"title":{},"body":{"components/SendMessageComponent.html":{},"miscellaneous/functions.html":{}}}],["never",{"_index":670,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["new",{"_index":295,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["next.handle(request",{"_index":1387,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["ngafterviewinit",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["ngmodule",{"_index":186,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["ngondestroy",{"_index":841,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["ngoninit",{"_index":842,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["nomatch",{"_index":500,"title":{},"body":{"components/AppComponent.html":{}}}],["nothing",{"_index":667,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["nou",{"_index":110,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["nregistra",{"_index":106,"title":{},"body":{"components/AboutPage.html":{}}}],["nregistrat",{"_index":1354,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["nu",{"_index":981,"title":{},"body":{"classes/EmailValidation.html":{},"components/RecoverPasswordComponent.html":{}}}],["null",{"_index":274,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["number",{"_index":1035,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"injectables/LocalStorageService.html":{},"classes/PasswordValidation.html":{},"interfaces/RootObject.html":{},"classes/SsnValidation.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["number.test(password",{"_index":1323,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["numbers",{"_index":1498,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["număr",{"_index":1314,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["o",{"_index":32,"title":{},"body":{"components/AboutPage.html":{},"classes/PasswordValidation.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["object",{"_index":209,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":276,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["obtained",{"_index":743,"title":{},"body":{"classes/Course.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["ofer",{"_index":89,"title":{},"body":{"components/AboutPage.html":{}}}],["ofere",{"_index":35,"title":{},"body":{"components/AboutPage.html":{}}}],["once",{"_index":441,"title":{},"body":{"components/AppComponent.html":{}}}],["ondestroy",{"_index":836,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["one",{"_index":651,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"components/AboutPage.html":{},"components/CustomSelectorComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["open",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["opening",{"_index":1070,"title":{},"body":{"components/HomePage.html":{}}}],["operation",{"_index":1171,"title":{},"body":{"components/LoginComponent.html":{}}}],["operations",{"_index":241,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["optional",{"_index":256,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":251,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["order",{"_index":863,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["organisation",{"_index":217,"title":{"classes/Organisation.html":{}},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["organisation's",{"_index":1250,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation._id",{"_index":1679,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["organisation.added_by",{"_index":1270,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.created_at",{"_index":1272,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.id",{"_index":334,"title":{},"body":{"injectables/AllocationService.html":{}}}],["organisation.name",{"_index":335,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["organisation.slug",{"_index":1268,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["organisation.status",{"_index":1275,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.type",{"_index":1274,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.updated_at",{"_index":1273,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.website",{"_index":1698,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["organisationid",{"_index":1253,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["organisationname",{"_index":1258,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisations",{"_index":917,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"miscellaneous/variables.html":{}}}],["organisationservice",{"_index":720,"title":{"injectables/OrganisationService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/OrganisationService.html":{},"coverage.html":{},"index.html":{}}}],["otherwise",{"_index":970,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["out",{"_index":184,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"components/ResetPasswordComponent.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["outlet",{"_index":448,"title":{},"body":{"components/AppComponent.html":{}}}],["output",{"_index":1283,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["overview",{"_index":1834,"title":{"index.html":{}},"body":{"index.html":{}}}],["p.title",{"_index":511,"title":{},"body":{"components/AppComponent.html":{}}}],["package",{"_index":1794,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":888,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["page",{"_index":435,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["pages",{"_index":434,"title":{},"body":{"components/AppComponent.html":{}}}],["pages/about/about.module#aboutpagemodule",{"_index":564,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/authentication/authentication.module#authenticationpagemodule",{"_index":567,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/authentication/reset",{"_index":463,"title":{},"body":{"components/AppComponent.html":{}}}],["pages/home/home.module#homepagemodule",{"_index":563,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/volunteer/volunteer.module#volunteerpagemodule",{"_index":565,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paginate",{"_index":1660,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["param",{"_index":314,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["parameters",{"_index":255,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1417,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["params['token",{"_index":1419,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["parol",{"_index":1203,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["parola",{"_index":1206,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["parolele",{"_index":1305,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["parseint(abstractcontrol.value",{"_index":1552,"title":{},"body":{"classes/SsnValidation.html":{}}}],["parte",{"_index":93,"title":{},"body":{"components/AboutPage.html":{}}}],["parteneriat",{"_index":127,"title":{},"body":{"components/AboutPage.html":{}}}],["password",{"_index":648,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/User.html":{}}}],["password'},{'name",{"_index":159,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["password.component",{"_index":465,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticationPageModule.html":{}}}],["password.component.html",{"_index":1340,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":1339,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":1338,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:103",{"_index":1405,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:114",{"_index":1402,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":1408,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:18",{"_index":1348,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:22",{"_index":1410,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:23",{"_index":1347,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:27",{"_index":1407,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:28",{"_index":1342,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:32",{"_index":1392,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:42",{"_index":1409,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:44",{"_index":1343,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:52",{"_index":1399,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:53",{"_index":1346,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:72",{"_index":1345,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:76",{"_index":1396,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:87",{"_index":1403,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.length",{"_index":1327,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["password/recover",{"_index":604,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":464,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthenticationPageModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password_confirmation",{"_index":713,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["passwords",{"_index":1296,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordvalidation",{"_index":1292,"title":{"classes/PasswordValidation.html":{}},"body":{"classes/PasswordValidation.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordvalidation(abstractcontrol",{"_index":1299,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordvalidation.matchpassword",{"_index":1415,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordvalidation.passwordvalidation",{"_index":1414,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["path",{"_index":200,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"modules/VolunteerPageModule.html":{}}}],["pathmatch",{"_index":560,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":969,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{},"injectables/VolunteerService.html":{}}}],["payload",{"_index":640,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["pe",{"_index":54,"title":{},"body":{"components/AboutPage.html":{}}}],["pentru",{"_index":117,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["per",{"_index":1661,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["performaction",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["performaction(url",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["performed",{"_index":666,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomePage.html":{},"components/ResetPasswordComponent.html":{}}}],["performes",{"_index":1067,"title":{},"body":{"components/HomePage.html":{}}}],["permission",{"_index":1489,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["permite",{"_index":101,"title":{},"body":{"components/AboutPage.html":{}}}],["persoanelor",{"_index":120,"title":{},"body":{"components/AboutPage.html":{}}}],["phone",{"_index":831,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"classes/PhoneValidation.html":{},"components/SendMessageComponent.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["phone's",{"_index":1071,"title":{},"body":{"components/HomePage.html":{}}}],["phone.indexof",{"_index":1336,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["phone.length",{"_index":1333,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["phonenumbers",{"_index":1474,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["phonevalidation",{"_index":1328,"title":{"classes/PhoneValidation.html":{}},"body":{"classes/PhoneValidation.html":{},"coverage.html":{}}}],["phonevalidation(abstractcontrol",{"_index":1330,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["picker",{"_index":1801,"title":{},"body":{"dependencies.html":{}}}],["picker/ngx",{"_index":529,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe",{"_index":338,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"injectables/VolunteerService.html":{}}}],["pipe(catcherror(error",{"_index":1015,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["planned",{"_index":1181,"title":{},"body":{"components/LoginComponent.html":{}}}],["platform",{"_index":87,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["platforms",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["plugin",{"_index":298,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["pop",{"_index":865,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["position",{"_index":507,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["pouchdb",{"_index":253,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('allocations",{"_index":296,"title":{},"body":{"injectables/AllocationService.html":{},"classes/DatabaseSyncService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('courses",{"_index":796,"title":{},"body":{"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('organisations",{"_index":937,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('statics",{"_index":942,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/StaticsService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('volunteers",{"_index":932,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb(environment.databaseurl",{"_index":303,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb.plugin(pouchdbfind",{"_index":300,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["pouchdb/dist/pouchdb",{"_index":280,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["pouchdbfind",{"_index":281,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["prefixes",{"_index":1372,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["preloadallmodules",{"_index":557,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":569,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["presents",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["presenttoast",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["presenttoast(message",{"_index":1344,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["private",{"_index":242,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["prod",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":684,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["promise",{"_index":928,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["promise.all",{"_index":944,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["promises",{"_index":954,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["properties",{"_index":211,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["protecting",{"_index":574,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["protocolul",{"_index":95,"title":{},"body":{"components/AboutPage.html":{}}}],["protractor",{"_index":549,"title":{},"body":{"classes/AppPage.html":{}}}],["prove",{"_index":658,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["provide",{"_index":537,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["provider",{"_index":238,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["providers",{"_index":179,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["provides",{"_index":573,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/UnauthenticatedGuard.html":{}}}],["public",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{}}}],["pune",{"_index":56,"title":{},"body":{"components/AboutPage.html":{}}}],["puteți",{"_index":80,"title":{},"body":{"components/AboutPage.html":{}}}],["părăsi",{"_index":506,"title":{},"body":{"components/AppComponent.html":{}}}],["reactive",{"_index":1168,"title":{},"body":{"components/LoginComponent.html":{}}}],["reactiveformsmodule",{"_index":602,"title":{},"body":{"modules/AuthenticationPageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["readcookie",{"_index":1745,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readcookie(name",{"_index":1147,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["receive",{"_index":652,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["recover",{"_index":158,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["recoverpassword",{"_index":616,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["recoverpassword(email",{"_index":646,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["recoverpasswordcomponent",{"_index":157,"title":{"components/RecoverPasswordComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["recovery",{"_index":649,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["rective",{"_index":1394,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["redirected",{"_index":1176,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{}}}],["redirects",{"_index":588,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["redirectto",{"_index":558,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":293,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["referes",{"_index":994,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["reg",{"_index":972,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PhoneValidation.html":{}}}],["reg.test(email",{"_index":978,"title":{},"body":{"classes/EmailValidation.html":{}}}],["reg.test(phone",{"_index":1332,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["regex",{"_index":1285,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["regexp",{"_index":1286,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["regexp('[a",{"_index":1319,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["regexp('\\\\d",{"_index":1317,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["regexp('^[+]{0,1}[0",{"_index":1331,"title":{},"body":{"classes/PhoneValidation.html":{}}}],["regexp('^[a",{"_index":973,"title":{},"body":{"classes/EmailValidation.html":{}}}],["regexp(/[!#$%&\\‘\\(\\)\\*?@\\[\\]^_",{"_index":1322,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["related",{"_index":240,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/VolunteerService.html":{}}}],["remote",{"_index":902,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["remoteallocationsdb",{"_index":908,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["remotecoursesdb",{"_index":909,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["remotedb",{"_index":302,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["remoteorganisationsdb",{"_index":910,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["remotestaticsdb",{"_index":911,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["remotevolunteersdb",{"_index":912,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["removes",{"_index":1124,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["removespecialchars",{"_index":1245,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["removespecialchars(text",{"_index":1260,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["replacelinebreaks",{"_index":1518,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["replaceurl",{"_index":593,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["reprezent",{"_index":851,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["request",{"_index":636,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{}}}],["request.clone",{"_index":1378,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["request.url",{"_index":1386,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["requestinterceptor",{"_index":721,"title":{"interceptors/RequestInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["requests",{"_index":629,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["require",{"_index":1792,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":1569,"title":{},"body":{"classes/SsnValidation.html":{}}}],["rescue_officer",{"_index":218,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{}}}],["rescue_officer._id",{"_index":320,"title":{},"body":{"injectables/AllocationService.html":{}}}],["rescue_officer.id",{"_index":313,"title":{},"body":{"injectables/AllocationService.html":{}}}],["rescue_officer.name",{"_index":321,"title":{},"body":{"injectables/AllocationService.html":{}}}],["reset",{"_index":161,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["reset/:token",{"_index":610,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["resetat",{"_index":1423,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpassword",{"_index":617,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["resetpassword(password",{"_index":655,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resetpassword.errors?.password",{"_index":1430,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordcomponent",{"_index":160,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["resetpasswordform",{"_index":1341,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["resetpasswordform.controls.confirmpassword.errors?.password",{"_index":1431,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordform.controls.email.errors?.email",{"_index":1368,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["resetpasswordform.controls.password.errors?.password",{"_index":1432,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resource",{"_index":28,"title":{},"body":{"components/AboutPage.html":{},"injectables/StaticsService.html":{}}}],["respects",{"_index":968,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["response",{"_index":341,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/VolunteerService.html":{}}}],["response.status",{"_index":1017,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["response.url",{"_index":1026,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["result",{"_index":170,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":172,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resurse",{"_index":53,"title":{},"body":{"components/AboutPage.html":{}}}],["retrieve",{"_index":1442,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["retrieve(route",{"_index":1447,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["retrieved",{"_index":1493,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["retrieves",{"_index":1128,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["retrives",{"_index":784,"title":{},"body":{"injectables/CourseService.html":{}}}],["retry",{"_index":307,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["return",{"_index":336,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"interceptors/RequestInterceptor.html":{},"classes/RouteReusableStrategy.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["returns",{"_index":275,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["reusable",{"_index":727,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["reuse",{"_index":1437,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["rewuest",{"_index":642,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["reîncercați",{"_index":1428,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["rgba(0,0,0,0.05",{"_index":899,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["rgba(240,237,240,1",{"_index":1080,"title":{},"body":{"components/HomePage.html":{}}}],["romania",{"_index":126,"title":{},"body":{"components/AboutPage.html":{}}}],["românia",{"_index":46,"title":{},"body":{"components/AboutPage.html":{}}}],["root",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":143,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["rootobject",{"_index":1037,"title":{"interfaces/RootObject.html":{}},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["route",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"modules/CoreModule.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"guards/UnauthenticatedGuard.html":{}}}],["router",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["routereusablestrategy",{"_index":726,"title":{"classes/RouteReusableStrategy.html":{}},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["routereusestrategy",{"_index":523,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["routermodule",{"_index":192,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["routermodule.forchild",{"_index":1107,"title":{},"body":{"modules/HomePageModule.html":{}}}],["routermodule.forchild(routes",{"_index":203,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["routermodule.forroot(routes",{"_index":568,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":191,"title":{"routes.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/AuthenticationPageModule.html":{},"guards/UnauthenticatedGuard.html":{},"modules/VolunteerPageModule.html":{},"index.html":{},"routes.html":{}}}],["routing",{"_index":580,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["routing.module",{"_index":526,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":556,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":1101,"title":{},"body":{"components/HomePage.html":{}}}],["rugăm",{"_index":1356,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["rvm",{"_index":47,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["rxjs",{"_index":285,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["rxjs/internal/observable/from",{"_index":929,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["rxjs/operators",{"_index":287,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"injectables/VolunteerService.html":{}}}],["s",{"_index":34,"title":{},"body":{"components/AboutPage.html":{},"classes/PasswordValidation.html":{},"components/RecoverPasswordComponent.html":{},"classes/SsnValidation.html":{}}}],["s.reduce((a",{"_index":1570,"title":{},"body":{"classes/SsnValidation.html":{}}}],["salvare",{"_index":123,"title":{},"body":{"components/AboutPage.html":{}}}],["same",{"_index":659,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sau",{"_index":69,"title":{},"body":{"components/AboutPage.html":{}}}],["savedcredentials",{"_index":690,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["saves",{"_index":663,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sc",{"_index":1529,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["screen",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LogoutComponent.html":{},"dependencies.html":{}}}],["screen/ngx",{"_index":457,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["se",{"_index":91,"title":{},"body":{"components/AboutPage.html":{}}}],["search",{"_index":1639,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["search(keyword",{"_index":1669,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["searches",{"_index":1645,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["seconds",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["security",{"_index":1652,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["seism",{"_index":67,"title":{},"body":{"components/AboutPage.html":{}}}],["selected",{"_index":857,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{},"injectables/StaticsService.html":{}}}],["selection",{"_index":790,"title":{},"body":{"injectables/CourseService.html":{}}}],["selections",{"_index":852,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{}}}],["selector'},{'name",{"_index":148,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["selector.component",{"_index":733,"title":{},"body":{"modules/CoreModule.html":{}}}],["selector.component.html",{"_index":838,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.scss",{"_index":837,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts",{"_index":835,"title":{},"body":{"components/CustomSelectorComponent.html":{},"coverage.html":{}}}],["selector.component.ts:16",{"_index":850,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts:22",{"_index":847,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts:37",{"_index":854,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts:45",{"_index":862,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts:60",{"_index":859,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector.component.ts:68",{"_index":858,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["selector/custom",{"_index":732,"title":{},"body":{"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"coverage.html":{}}}],["selector['$and'].push",{"_index":1724,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["selects",{"_index":855,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["send",{"_index":163,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{}}}],["sending",{"_index":1480,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["sendmessage",{"_index":1477,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["sendmessagecomponent",{"_index":162,"title":{"components/SendMessageComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["sends",{"_index":635,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["sent",{"_index":630,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{}}}],["server",{"_index":301,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["serverbaseurl",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverurl",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":581,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["service/error",{"_index":1011,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["service/statics.service",{"_index":729,"title":{},"body":{"modules/CoreModule.html":{}}}],["services",{"_index":735,"title":{},"body":{"modules/CoreModule.html":{}}}],["serviceurl",{"_index":1034,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"interfaces/RootObject.html":{}}}],["session",{"_index":826,"title":{},"body":{"interfaces/Credentials.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["sessionstorage",{"_index":1111,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["set",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"injectables/ErrorMessageService.html":{}}}],["set(error",{"_index":1046,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["setcredentials",{"_index":618,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setcredentials(credentials",{"_index":660,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setdata",{"_index":1746,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setdata(type",{"_index":1832,"title":{},"body":{"miscellaneous/functions.html":{}}}],["seterrormessage",{"_index":1390,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["seterrormessage(message",{"_index":1404,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["setheaders",{"_index":1379,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["setitem",{"_index":1115,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setitem(key",{"_index":1129,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["sets",{"_index":249,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"injectables/ErrorMessageService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["settimeout",{"_index":483,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["shadow",{"_index":896,"title":{},"body":{"components/CustomSelectorComponent.html":{},"components/HomePage.html":{}}}],["shouldattach",{"_index":1443,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldattach(route",{"_index":1452,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shoulddetach",{"_index":1444,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shoulddetach(route",{"_index":1454,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldreuseroute",{"_index":1445,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldreuseroute(future",{"_index":1456,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shows/hides",{"_index":451,"title":{},"body":{"components/AppComponent.html":{}}}],["showsidemenu",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["side",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["simplu",{"_index":108,"title":{},"body":{"components/AboutPage.html":{}}}],["situații",{"_index":63,"title":{},"body":{"components/AboutPage.html":{}}}],["size",{"_index":1086,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["skip",{"_index":1682,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["slug",{"_index":1220,"title":{},"body":{"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["sms",{"_index":530,"title":{},"body":{"modules/AppModule.html":{},"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["social",{"_index":1651,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["societatea",{"_index":59,"title":{},"body":{"components/AboutPage.html":{}}}],["something",{"_index":1178,"title":{},"body":{"components/LoginComponent.html":{}}}],["sort",{"_index":803,"title":{},"body":{"injectables/CourseService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"modules/AuthenticationPageModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["spam",{"_index":1361,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["spec\\.ts",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":1316,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["special.test(password",{"_index":1326,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["specificat",{"_index":1362,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["splash",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["splashscreen",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["spontani",{"_index":104,"title":{},"body":{"components/AboutPage.html":{}}}],["sprijin",{"_index":36,"title":{},"body":{"components/AboutPage.html":{}}}],["sprijinul",{"_index":128,"title":{},"body":{"components/AboutPage.html":{}}}],["src/.../allocation.service.ts",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authentication.service.ts",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../course.service.ts",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.dev.ts",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.local.ts",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":1829,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../organisation.service.ts",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../statics.service.ts",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../volunteer.service.ts",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":555,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:141",{"_index":409,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:152",{"_index":401,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:171",{"_index":413,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":447,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":449,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":431,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:60",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:78",{"_index":436,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:94",{"_index":378,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":519,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core",{"_index":1187,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["src/app/core/authentication/authentication.guard.ts",{"_index":572,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/app/core/authentication/authentication.guard.ts:10",{"_index":578,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/app/core/authentication/authentication.guard.ts:26",{"_index":582,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/app/core/authentication/authentication.service.ts",{"_index":611,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/authentication/authentication.service.ts:106",{"_index":662,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:123",{"_index":683,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:132",{"_index":647,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:142",{"_index":657,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:21",{"_index":669,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:26",{"_index":623,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:48",{"_index":634,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:66",{"_index":641,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:81",{"_index":631,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:89",{"_index":678,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:97",{"_index":681,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/unauthenticated.guard",{"_index":608,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["src/app/core/authentication/unauthenticated.guard.ts",{"_index":1595,"title":{},"body":{"guards/UnauthenticatedGuard.html":{},"coverage.html":{}}}],["src/app/core/authentication/unauthenticated.guard.ts:10",{"_index":1597,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["src/app/core/authentication/unauthenticated.guard.ts:27",{"_index":1598,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["src/app/core/components/custom",{"_index":834,"title":{},"body":{"components/CustomSelectorComponent.html":{},"coverage.html":{}}}],["src/app/core/core.module.ts",{"_index":723,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/http/error",{"_index":986,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/http/request.interceptor.ts",{"_index":1371,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["src/app/core/http/request.interceptor.ts:17",{"_index":1374,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/app/core/http/request.interceptor.ts:31",{"_index":1375,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/app/core/local",{"_index":1108,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/model/allocation.model.ts",{"_index":206,"title":{},"body":{"classes/Allocation.html":{},"coverage.html":{}}}],["src/app/core/model/allocation.model.ts:11",{"_index":233,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:15",{"_index":227,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:19",{"_index":226,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:23",{"_index":229,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:27",{"_index":228,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:28",{"_index":232,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:29",{"_index":231,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:5",{"_index":223,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:6",{"_index":224,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:7",{"_index":230,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/authentication.model.ts",{"_index":825,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/model/course.model.ts",{"_index":739,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["src/app/core/model/course.model.ts:12",{"_index":748,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:16",{"_index":752,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:17",{"_index":751,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:18",{"_index":753,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:19",{"_index":749,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:20",{"_index":745,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:5",{"_index":746,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:6",{"_index":747,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:7",{"_index":754,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:8",{"_index":750,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/error.model.ts",{"_index":1033,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["src/app/core/model/organisation.model.ts",{"_index":1215,"title":{},"body":{"classes/Organisation.html":{},"coverage.html":{}}}],["src/app/core/model/organisation.model.ts:10",{"_index":1228,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:11",{"_index":1233,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:12",{"_index":1225,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:13",{"_index":1231,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:14",{"_index":1229,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:18",{"_index":1226,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:22",{"_index":1227,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:23",{"_index":1230,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:24",{"_index":1237,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:25",{"_index":1224,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:26",{"_index":1236,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:27",{"_index":1235,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:28",{"_index":1221,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:5",{"_index":1222,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:6",{"_index":1223,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:7",{"_index":1232,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:8",{"_index":1234,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:9",{"_index":1238,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/volunteer.model",{"_index":1500,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["src/app/core/model/volunteer.model.ts",{"_index":1600,"title":{},"body":{"classes/Volunteer.html":{},"coverage.html":{}}}],["src/app/core/model/volunteer.model.ts:10",{"_index":1612,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:11",{"_index":1616,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:12",{"_index":1609,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:16",{"_index":1607,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:20",{"_index":1615,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:26",{"_index":1610,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:33",{"_index":1606,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:34",{"_index":1608,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:35",{"_index":1613,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:36",{"_index":1611,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:37",{"_index":1619,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:38",{"_index":1605,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:39",{"_index":1602,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:5",{"_index":1603,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:6",{"_index":1604,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:7",{"_index":1614,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:8",{"_index":1617,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:9",{"_index":1618,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/route",{"_index":1433,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["src/app/core/service/allocation.service.ts",{"_index":237,"title":{},"body":{"injectables/AllocationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/allocation.service.ts:36",{"_index":248,"title":{},"body":{"injectables/AllocationService.html":{}}}],["src/app/core/service/allocation.service.ts:65",{"_index":258,"title":{},"body":{"injectables/AllocationService.html":{}}}],["src/app/core/service/course.service.ts",{"_index":755,"title":{},"body":{"injectables/CourseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/course.service.ts:102",{"_index":783,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:116",{"_index":769,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:132",{"_index":793,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:146",{"_index":772,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:155",{"_index":788,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:34",{"_index":765,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:58",{"_index":791,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:73",{"_index":780,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:88",{"_index":776,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/database",{"_index":900,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/error",{"_index":1040,"title":{},"body":{"injectables/ErrorMessageService.html":{},"coverage.html":{}}}],["src/app/core/service/organisation.service.ts",{"_index":1239,"title":{},"body":{"injectables/OrganisationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/organisation.service.ts:100",{"_index":1249,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:118",{"_index":1265,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:130",{"_index":1252,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:141",{"_index":1261,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:33",{"_index":1247,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:57",{"_index":1259,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:72",{"_index":1255,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:86",{"_index":1257,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/statics.service.ts",{"_index":1572,"title":{},"body":{"injectables/StaticsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/statics.service.ts:30",{"_index":1586,"title":{},"body":{"injectables/StaticsService.html":{}}}],["src/app/core/service/statics.service.ts:35",{"_index":1580,"title":{},"body":{"injectables/StaticsService.html":{}}}],["src/app/core/service/statics.service.ts:54",{"_index":1585,"title":{},"body":{"injectables/StaticsService.html":{}}}],["src/app/core/service/statics.service.ts:69",{"_index":1582,"title":{},"body":{"injectables/StaticsService.html":{}}}],["src/app/core/service/volunteer.service.ts",{"_index":1631,"title":{},"body":{"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/volunteer.service.ts:129",{"_index":1663,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:143",{"_index":1665,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:164",{"_index":1650,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:220",{"_index":1676,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:243",{"_index":1654,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:258",{"_index":1656,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:299",{"_index":1644,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:312",{"_index":1668,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:36",{"_index":1642,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:74",{"_index":1667,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:94",{"_index":1670,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/validators/email",{"_index":957,"title":{},"body":{"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["src/app/core/validators/password",{"_index":1293,"title":{},"body":{"classes/PasswordValidation.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/core/validators/phone",{"_index":1329,"title":{},"body":{"classes/PhoneValidation.html":{},"coverage.html":{}}}],["src/app/core/validators/ssn",{"_index":1549,"title":{},"body":{"classes/SsnValidation.html":{},"coverage.html":{}}}],["src/app/pages/about/about.module.ts",{"_index":185,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["src/app/pages/about/about.page.ts",{"_index":10,"title":{},"body":{"components/AboutPage.html":{},"coverage.html":{}}}],["src/app/pages/authentication/authentication.module.ts",{"_index":601,"title":{},"body":{"modules/AuthenticationPageModule.html":{}}}],["src/app/pages/authentication/authentication.page.ts",{"_index":594,"title":{},"body":{"components/AuthenticationPage.html":{},"coverage.html":{}}}],["src/app/pages/authentication/authentication.page.ts:9",{"_index":597,"title":{},"body":{"components/AuthenticationPage.html":{}}}],["src/app/pages/authentication/login/login.component.ts",{"_index":1158,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/pages/authentication/login/login.component.ts:18",{"_index":1184,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:23",{"_index":1177,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:28",{"_index":1167,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:43",{"_index":1173,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:50",{"_index":1172,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/login/login.component.ts:61",{"_index":1174,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/authentication/logout/logout.component.ts",{"_index":1207,"title":{},"body":{"components/LogoutComponent.html":{},"coverage.html":{}}}],["src/app/pages/authentication/logout/logout.component.ts:10",{"_index":1210,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/pages/authentication/logout/logout.component.ts:24",{"_index":1211,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/pages/authentication/recover",{"_index":1337,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/authentication/reset",{"_index":1388,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":1105,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":1061,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:14",{"_index":1075,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:28",{"_index":1065,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:41",{"_index":1066,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/volunteer/add",{"_index":1774,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/volunteer/list",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/volunteer/send",{"_index":1467,"title":{},"body":{"components/SendMessageComponent.html":{},"coverage.html":{}}}],["src/app/pages/volunteer/validate",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/volunteer/volunteer.module.ts",{"_index":1627,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["src/app/pages/volunteer/volunteer.page.ts",{"_index":1621,"title":{},"body":{"components/VolunteerPage.html":{},"coverage.html":{}}}],["src/environments/environment.dev.ts",{"_index":1786,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.local.ts",{"_index":1787,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1788,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1789,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1790,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssn",{"_index":1551,"title":{},"body":{"classes/SsnValidation.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["ssn.tostring().length",{"_index":1553,"title":{},"body":{"classes/SsnValidation.html":{}}}],["ssnvalidation",{"_index":1548,"title":{"classes/SsnValidation.html":{}},"body":{"classes/SsnValidation.html":{},"coverage.html":{}}}],["ssnvalidation(abstractcontrol",{"_index":1550,"title":{},"body":{"classes/SsnValidation.html":{}}}],["startkey",{"_index":1590,"title":{},"body":{"injectables/StaticsService.html":{}}}],["starts",{"_index":927,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["state",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["statements",{"_index":1729,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":794,"title":{},"body":{"injectables/CourseService.html":{},"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["statics",{"_index":265,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/StaticsService.html":{},"miscellaneous/variables.html":{}}}],["staticsservice",{"_index":722,"title":{"injectables/StaticsService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/StaticsService.html":{},"coverage.html":{},"index.html":{}}}],["status",{"_index":264,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Organisation.html":{},"guards/UnauthenticatedGuard.html":{}}}],["statusbar",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["statuscode",{"_index":1038,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["storage",{"_index":626,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["storage.service",{"_index":687,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["storage.service.ts",{"_index":1109,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["storage.service.ts:109",{"_index":1133,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:114",{"_index":1116,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:221",{"_index":1130,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:229",{"_index":1127,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:237",{"_index":1123,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:244",{"_index":1120,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["store",{"_index":1446,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["store(route",{"_index":1460,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["store/clear",{"_index":849,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["stored",{"_index":1833,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stores",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CustomSelectorComponent.html":{},"injectables/ErrorMessageService.html":{},"miscellaneous/variables.html":{}}}],["storing",{"_index":1110,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["strategy",{"_index":728,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["strategy.ts",{"_index":1434,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["strategy.ts:19",{"_index":1455,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:28",{"_index":1462,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:38",{"_index":1453,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:47",{"_index":1449,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:56",{"_index":1458,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["string",{"_index":221,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":1297,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["style",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutPage.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["styleurls",{"_index":14,"title":{},"body":{"components/AboutPage.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["submit",{"_index":1165,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe",{"_index":1197,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe((match",{"_index":496,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribed",{"_index":867,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["subscription",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["succes",{"_index":1424,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["success",{"_index":645,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["successful",{"_index":638,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LogoutComponent.html":{}}}],["such",{"_index":576,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["suport",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["support",{"_index":1836,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1837,"title":{},"body":{"modules.html":{}}}],["sync",{"_index":913,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts",{"_index":901,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sync.service.ts:15",{"_index":919,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:19",{"_index":925,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:24",{"_index":915,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:28",{"_index":922,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:33",{"_index":916,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:37",{"_index":923,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:42",{"_index":914,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:46",{"_index":921,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:51",{"_index":918,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:55",{"_index":924,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts:80",{"_index":926,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["synchronization",{"_index":250,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/StaticsService.html":{},"injectables/VolunteerService.html":{}}}],["table",{"_index":279,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1793,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":965,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["tap",{"_index":393,"title":{},"body":{"components/AppComponent.html":{}}}],["tapped",{"_index":440,"title":{},"body":{"components/AppComponent.html":{}}}],["tapping",{"_index":439,"title":{},"body":{"components/AppComponent.html":{}}}],["targetheight",{"_index":1512,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["targetwidth",{"_index":1511,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["te",{"_index":1364,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["tel:89992142265",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["teren",{"_index":90,"title":{},"body":{"components/AboutPage.html":{}}}],["text",{"_index":1089,"title":{},"body":{"components/HomePage.html":{},"injectables/OrganisationService.html":{},"components/SendMessageComponent.html":{},"injectables/VolunteerService.html":{}}}],["textarea",{"_index":1530,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["then((imagedata",{"_index":1513,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this._credentials",{"_index":692,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._errors",{"_index":1056,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this._errors.push",{"_index":1057,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this.authenticationservice",{"_index":1194,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authenticationservice.accesstoken",{"_index":1385,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.authenticationservice.isauthenticated",{"_index":591,"title":{},"body":{"guards/AuthenticationGuard.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["this.authenticationservice.logout().subscribe",{"_index":1213,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.authenticationservice.logout().subscribe(response",{"_index":1412,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authenticationservice.recoverpassword(this.resetpasswordform.value.email).subscribe(response",{"_index":1351,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.authenticationservice.resetpassword(this.resetpasswordform.value.password",{"_index":1420,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authenticationservice.user",{"_index":315,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{}}}],["this.authservice.user._id",{"_index":809,"title":{},"body":{"injectables/CourseService.html":{}}}],["this.base64image",{"_index":1514,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.courseservice.createcourse(course",{"_index":1701,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["this.createform",{"_index":1188,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.credentials",{"_index":703,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials$.emit(this._credentials",{"_index":707,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials.token",{"_index":704,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials.user",{"_index":709,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.databasesyncservice.sync().then",{"_index":488,"title":{},"body":{"components/AppComponent.html":{}}}],["this.errorhandler(error",{"_index":1016,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.errormessage",{"_index":1199,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.errormessageservice.set",{"_index":1024,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.errors$.emit(this._errors",{"_index":1060,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this.formbuilder.group",{"_index":1190,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.httpclient",{"_index":700,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpclient.post('/login",{"_index":696,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpclient.post('/recoverpassword",{"_index":710,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpclient.post('/resetpassword",{"_index":712,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.initialiseview",{"_index":1413,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.initializeapp",{"_index":466,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isdoubletap",{"_index":481,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loading",{"_index":1193,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.localallocationsdb",{"_index":939,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localallocationsdb.replicate.from(this.remoteallocationsdb",{"_index":949,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localcoursesdb",{"_index":934,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localcoursesdb.replicate.from(this.remotecoursesdb",{"_index":947,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localorganisationsdb",{"_index":936,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localorganisationsdb.replicate.from(this.remoteorganisationsdb",{"_index":948,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localstaticsdb",{"_index":941,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localstaticsdb.query('cities/slug",{"_index":950,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localstaticsdb.replicate.from(this.remotestaticsdb",{"_index":945,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localstorage",{"_index":1152,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.clear",{"_index":1157,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.getitem(key",{"_index":1155,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.removeitem(key",{"_index":1156,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.setitem(key",{"_index":1154,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorageservice.clearitem('prevent_back",{"_index":880,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.localstorageservice.clearitem(credentialskey",{"_index":708,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.localstorageservice.getitem('firstlaunch",{"_index":487,"title":{},"body":{"components/AppComponent.html":{}}}],["this.localstorageservice.getitem('prevent_back",{"_index":475,"title":{},"body":{"components/AppComponent.html":{}}}],["this.localstorageservice.getitem(credentialskey",{"_index":691,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.localstorageservice.setitem",{"_index":705,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.localstorageservice.setitem('firstlaunch",{"_index":490,"title":{},"body":{"components/AppComponent.html":{}}}],["this.localstorageservice.setitem('prevent_back",{"_index":873,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.localvolunteersdb",{"_index":931,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.localvolunteersdb.replicate.from(this.remotevolunteersdb",{"_index":946,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.location.back",{"_index":486,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loginform",{"_index":1189,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.markaspristine",{"_index":1196,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.messageform",{"_index":1507,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.messageform.value.message",{"_index":1522,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.modalctrl.dismiss",{"_index":882,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.modalctrl.dismiss(entry",{"_index":872,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.modalctrl.gettop",{"_index":878,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.phonenumbers.push(volunteer.phone",{"_index":1506,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.platform.is('cordova",{"_index":468,"title":{},"body":{"components/AppComponent.html":{}}}],["this.platform.ready().then",{"_index":467,"title":{},"body":{"components/AppComponent.html":{}}}],["this.presenttoast",{"_index":482,"title":{},"body":{"components/AppComponent.html":{}}}],["this.presenttoast('cererea",{"_index":1352,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.presenttoast('parol",{"_index":1422,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.remoteallocationsdb",{"_index":940,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.remotecoursesdb",{"_index":935,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.remoteorganisationsdb",{"_index":938,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.remotestaticsdb",{"_index":943,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.remotevolunteersdb",{"_index":933,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["this.removespecialchars(name",{"_index":1269,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["this.removespecialchars(organisation.name",{"_index":1281,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["this.removespecialchars(volunteer.name",{"_index":1709,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["this.resetpasswordform",{"_index":1350,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.route.params.subscribe",{"_index":1416,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.getcurrentnavigation",{"_index":1501,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.router.navigate(['../auth/login",{"_index":1214,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.router.navigate(['../home",{"_index":1198,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":592,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/auth/reset",{"_index":497,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/home",{"_index":1599,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["this.router.navigate([url",{"_index":493,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["this.router.url",{"_index":474,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sendmessage",{"_index":1524,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.sessionstorage",{"_index":1153,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.setcredentials",{"_index":702,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.setcredentials(body",{"_index":699,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.seterrormessage('a",{"_index":1425,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.sms.haspermission",{"_index":1523,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.sms.send(this.phonenumbers",{"_index":1521,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.splashscreen.hide",{"_index":489,"title":{},"body":{"components/AppComponent.html":{}}}],["this.statusbar.backgroundcolorbyhexstring('#264998",{"_index":469,"title":{},"body":{"components/AppComponent.html":{}}}],["this.statusbar.styledefault",{"_index":470,"title":{},"body":{"components/AppComponent.html":{}}}],["this.subscription",{"_index":876,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":881,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["this.toastcontroller.create",{"_index":1367,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.toastctrl.create",{"_index":503,"title":{},"body":{"components/AppComponent.html":{}}}],["this.token",{"_index":1418,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.token).subscribe(response",{"_index":1421,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.type",{"_index":332,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["this.updatevolunteer(volunteer",{"_index":1707,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["this.volunteerservice.allocatevolunteer(response.id",{"_index":340,"title":{},"body":{"injectables/AllocationService.html":{}}}],["through",{"_index":1212,"title":{},"body":{"components/LogoutComponent.html":{}}}],["throw",{"_index":1031,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["title",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["title')).gettext",{"_index":554,"title":{},"body":{"classes/AppPage.html":{}}}],["toast",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["toast.present",{"_index":510,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["toastcontroller",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["toastctrl",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":656,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/User.html":{}}}],["top",{"_index":1534,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["total",{"_index":1659,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["toți",{"_index":423,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["transl",{"_index":1288,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["transl[m",{"_index":1291,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["trebuie",{"_index":1306,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["triggered",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["trimite",{"_index":1370,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["true",{"_index":306,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["truth",{"_index":654,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tslib",{"_index":1823,"title":{},"body":{"dependencies.html":{}}}],["twice",{"_index":442,"title":{},"body":{"components/AppComponent.html":{}}}],["type",{"_index":219,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"classes/DatabaseSyncService.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types/pouchdb",{"_index":1808,"title":{},"body":{"dependencies.html":{}}}],["tău",{"_index":1527,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["uitat",{"_index":1205,"title":{},"body":{"components/LoginComponent.html":{}}}],["un",{"_index":48,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/PasswordValidation.html":{}}}],["unauthenticated",{"_index":1596,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["unauthenticatedguard",{"_index":607,"title":{"guards/UnauthenticatedGuard.html":{}},"body":{"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"guards/UnauthenticatedGuard.html":{},"coverage.html":{}}}],["underline",{"_index":1093,"title":{},"body":{"components/HomePage.html":{}}}],["unei",{"_index":39,"title":{},"body":{"components/AboutPage.html":{}}}],["unor",{"_index":84,"title":{},"body":{"components/AboutPage.html":{}}}],["unsubscribed",{"_index":868,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["unsubscribes",{"_index":860,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["unui",{"_index":66,"title":{},"body":{"components/AboutPage.html":{}}}],["up",{"_index":866,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["updatecourse",{"_index":763,"title":{},"body":{"injectables/CourseService.html":{}}}],["updatecourse(course",{"_index":792,"title":{},"body":{"injectables/CourseService.html":{}}}],["updated_at",{"_index":220,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["updatedat",{"_index":833,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["updateorganisation",{"_index":1246,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["updateorganisation(organisation",{"_index":1264,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["updates",{"_index":262,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["updatevolunteer",{"_index":1640,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["updatevolunteer(volunteer",{"_index":1675,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["uppercase",{"_index":1318,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["uppercase.test(password",{"_index":1324,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["urgen",{"_index":64,"title":{},"body":{"components/AboutPage.html":{}}}],["url",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{}}}],["url.includes('tel",{"_index":491,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["useclass",{"_index":538,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["used",{"_index":1118,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"injectables/VolunteerService.html":{}}}],["user",{"_index":584,"title":{"interfaces/User.html":{}},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"interfaces/LoginPayload.html":{},"components/LogoutComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["user's",{"_index":453,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["username",{"_index":830,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["uses",{"_index":1484,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["v",{"_index":1355,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["va",{"_index":100,"title":{},"body":{"components/AboutPage.html":{}}}],["valid",{"_index":982,"title":{},"body":{"classes/EmailValidation.html":{}}}],["validate",{"_index":166,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{}}}],["validated",{"_index":967,"title":{},"body":{"classes/EmailValidation.html":{},"components/LoginComponent.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["validatevolunteercomponent",{"_index":165,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["validation",{"_index":1175,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validation.ts",{"_index":958,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{},"coverage.html":{}}}],["validation.ts:11",{"_index":961,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"classes/SsnValidation.html":{}}}],["validation.ts:30",{"_index":1300,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["validator",{"_index":962,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/ResetPasswordComponent.html":{},"classes/SsnValidation.html":{}}}],["validators",{"_index":1185,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["validators.required",{"_index":1191,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{}}}],["validați",{"_index":82,"title":{},"body":{"components/AboutPage.html":{}}}],["valideaz",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["value",{"_index":266,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"classes/EmailValidation.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/OrganisationService.html":{},"classes/PasswordValidation.html":{},"classes/PhoneValidation.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"classes/SsnValidation.html":{},"injectables/StaticsService.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":675,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/PasswordValidation.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":135,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["variable",{"_index":1735,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1840,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verificați",{"_index":1357,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["verifici",{"_index":1365,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["vezi",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["view",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/CustomSelectorComponent.html":{}}}],["viewchild",{"_index":454,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(ionrouteroutlet",{"_index":446,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/OrganisationService.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"injectables/VolunteerService.html":{}}}],["voluntar",{"_index":109,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{}}}],["voluntari",{"_index":52,"title":{},"body":{"components/AboutPage.html":{}}}],["voluntarii",{"_index":424,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["voluntarilor",{"_index":103,"title":{},"body":{"components/AboutPage.html":{}}}],["volunteer",{"_index":29,"title":{"classes/Volunteer.html":{}},"body":{"components/AboutPage.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/AuthenticationPage.html":{},"injectables/CourseService.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["volunteer's",{"_index":263,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/VolunteerService.html":{}}}],["volunteer'},{'name",{"_index":141,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{}}}],["volunteer._id",{"_index":317,"title":{},"body":{"injectables/AllocationService.html":{}}}],["volunteer._id).subscribe((data",{"_index":1702,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.allocation",{"_index":1693,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.city",{"_index":1688,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.comments",{"_index":1719,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.component",{"_index":1629,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["volunteer.component.ts",{"_index":1775,"title":{},"body":{"coverage.html":{}}}],["volunteer.county",{"_index":1685,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.courses",{"_index":1699,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.courses.push",{"_index":1703,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.created_at",{"_index":1691,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.email",{"_index":1712,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.id",{"_index":312,"title":{},"body":{"injectables/AllocationService.html":{}}}],["volunteer.job",{"_index":1721,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.name",{"_index":318,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["volunteer.organisation",{"_index":1697,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.page",{"_index":1628,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["volunteer.page.html",{"_index":1623,"title":{},"body":{"components/VolunteerPage.html":{}}}],["volunteer.page.scss",{"_index":1622,"title":{},"body":{"components/VolunteerPage.html":{}}}],["volunteer.phone",{"_index":1694,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.service",{"_index":289,"title":{},"body":{"injectables/AllocationService.html":{}}}],["volunteer.slug",{"_index":1695,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.ssn",{"_index":1684,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.type",{"_index":1696,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.updated_at",{"_index":1692,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer/add",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["volunteer/list",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["volunteer/s",{"_index":1495,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["volunteer/validate",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["volunteer_id",{"_index":744,"title":{},"body":{"classes/Course.html":{},"injectables/CourseService.html":{}}}],["volunteerid",{"_index":786,"title":{},"body":{"injectables/CourseService.html":{},"injectables/VolunteerService.html":{}}}],["volunteerpage",{"_index":167,"title":{"components/VolunteerPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/AuthenticationPage.html":{},"components/CustomSelectorComponent.html":{},"components/HomePage.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SendMessageComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["volunteerpagemodule",{"_index":1624,"title":{"modules/VolunteerPageModule.html":{}},"body":{"modules/VolunteerPageModule.html":{},"index.html":{},"modules.html":{}}}],["volunteers",{"_index":920,"title":{},"body":{"classes/DatabaseSyncService.html":{},"components/SendMessageComponent.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["volunteers.foreach((volunteer",{"_index":1505,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["volunteerservice",{"_index":247,"title":{"injectables/VolunteerService.html":{}},"body":{"injectables/AllocationService.html":{},"modules/CoreModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"index.html":{}}}],["webkit",{"_index":1078,"title":{},"body":{"components/HomePage.html":{}}}],["website",{"_index":272,"title":{},"body":{"injectables/AllocationService.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["whose",{"_index":1671,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["width",{"_index":893,"title":{},"body":{"components/CustomSelectorComponent.html":{}}}],["window.open(url",{"_index":492,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["within",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["without",{"_index":1263,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["workaround",{"_index":1438,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["world",{"_index":129,"title":{},"body":{"components/AboutPage.html":{}}}],["yes",{"_index":664,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["z",{"_index":1320,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["z0",{"_index":974,"title":{},"body":{"classes/EmailValidation.html":{}}}],["z]{2,4",{"_index":977,"title":{},"body":{"classes/EmailValidation.html":{}}}],["zone",{"_index":115,"title":{},"body":{"components/AboutPage.html":{}}}],["zone.js",{"_index":1825,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":183,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutPage.html":{"url":"components/AboutPage.html","title":"component - AboutPage","body":"\n                   \n\n\n\n\n\n  Components\n  AboutPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/about/about.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                ./about.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.page.html',\n  styleUrls: ['./about.page.scss'],\n})\nexport class AboutPage {\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n  \n\n\n  \n    \n      Despre Aplicație\n    \n  \n  \n    \n      Resource and Volunteer Management este o aplicație menită să ofere sprijin în eventualitatea unei calamități majore care ar avea loc în România. RVM este un instrument de administrare de voluntari și resurse pe care le pune la dispoziție societatea civilă către Departamentul de Situații de Urgență în cazul unui seism major sau al unui alt dezastru natural. \n    \n  \n  \n    \n      Cu ajutorul acestei componente mobile a aplicației puteți să mobilizați voluntari sau să validați identitatea unor voluntari deja existenți în platformă în cazul în care aceștia își oferă ajutorul în teren și se identifică parte din protocolul de colaborare cu DSU.\n    \n  \n  \n    \n      De asemenea, aplicația va permite și administrarea voluntarilor spontani care își oferă ajutorul în caz de dezastru. Puteți înregistra foarte simplu un voluntar nou în baza de date și îl puteți aloca unei zone de intervenție pentru un mai bun management al persoanelor implicate în eforturile de salvare din teren.  \n    \n  \n  \n    \n      Aplicația RVM este dezvoltată de Code for Romania, în parteneriat cu Departamentul pentru Situații de Urgență și cu sprijinul World Bank. \n    \n  \n\n  \n    \n      \n        \n      \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n      \n        \n      \n        \n  \n\n    \n\n    \n                \n                    ./about.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Despre Aplicație                  Resource and Volunteer Management este o aplicație menită să ofere sprijin în eventualitatea unei calamități majore care ar avea loc în România. RVM este un instrument de administrare de voluntari și resurse pe care le pune la dispoziție societatea civilă către Departamentul de Situații de Urgență în cazul unui seism major sau al unui alt dezastru natural.                   Cu ajutorul acestei componente mobile a aplicației puteți să mobilizați voluntari sau să validați identitatea unor voluntari deja existenți în platformă în cazul în care aceștia își oferă ajutorul în teren și se identifică parte din protocolul de colaborare cu DSU.                  De asemenea, aplicația va permite și administrarea voluntarilor spontani care își oferă ajutorul în caz de dezastru. Puteți înregistra foarte simplu un voluntar nou în baza de date și îl puteți aloca unei zone de intervenție pentru un mai bun management al persoanelor implicate în eforturile de salvare din teren.                    Aplicația RVM este dezvoltată de Code for Romania, în parteneriat cu Departamentul pentru Situații de Urgență și cu sprijinul World Bank.                                                                                                                   '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageModule.html":{"url":"modules/AboutPageModule.html","title":"module - AboutPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AboutPage } from './about.page';\nimport { AuthenticationGuard } from '../../core/authentication/authentication.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AboutPage,\n    canActivate: [AuthenticationGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AboutPage]\n})\nexport class AboutPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Allocation.html":{"url":"classes/Allocation.html","title":"class - Allocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Allocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/allocation.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for allocation object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                _rev\n                            \n                            \n                                city\n                            \n                            \n                                county\n                            \n                            \n                                created_at\n                            \n                            \n                                organisation\n                            \n                            \n                                rescue_officer\n                            \n                            \n                                type\n                            \n                            \n                                updated_at\n                            \n                            \n                                volunteer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _rev\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organisation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rescue_officer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volunteer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Allocation {\n    _id: string;\n    _rev: string;\n    rescue_officer: {\n        _id: string;\n        name: string;\n    };\n    volunteer: {\n        _id: string;\n        name: string;\n    };\n    county: {\n      _id: string;\n      name: string;\n    };\n    city: {\n      _id: string;\n      name: string;\n    };\n    organisation: {\n        _id: string;\n        name: string;\n    };\n    created_at: any;\n    updated_at: any;\n    type: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllocationService.html":{"url":"injectables/AllocationService.html","title":"injectable - AllocationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/allocation.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for allocations related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAllocation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, volunteerService: VolunteerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/allocation.service.ts:36\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Allocations Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        volunteerService\n                                                  \n                                                        \n                                                                        VolunteerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createAllocation\n                        \n                        \n                    \n                \n            \n            \n                \ncreateAllocation(volunteer: Volunteer, county: any, city: any, organisation: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/allocation.service.ts:65\n                \n            \n\n\n            \n                \n                    Creates an allocation entry in the local database and updates volunteer's allocation status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteer\n                                    \n                                                Volunteer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer object\n\n                                    \n                                \n                                \n                                    county\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        County entry from statics database\n\n                                    \n                                \n                                \n                                    city\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        City entry from statics database\n\n                                    \n                                \n                                \n                                    organisation\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object value containing the allocated volunteer's organisation\nEither contains an object with the following properties {id, name, website}, or it's null\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        An Observable with the created object\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'allocations'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/allocation.service.ts:36\n                            \n                        \n\n                \n                    \n                        Table type\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { from } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthenticationService } from '../authentication';\nimport { VolunteerService } from './volunteer.service';\nimport { Allocation } from '../model/allocation.model';\nimport { Volunteer } from '../model/volunteer.model';\nimport * as moment from 'moment';\n\n/**\n * Reference for local PouchDB Allocations Database\n */\nconst localDB = new PouchDB('allocations');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Allocations Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/allocations');\n\n/**\n * Provider for allocations related operations\n */\n@Injectable()\nexport class AllocationService {\n  /**\n   * Table type\n   */\n  private type = 'allocations';\n\n  /**\n   * Class constructor, sets the synchronization options for CouchDB and PouchDB Allocations Database\n   */\n  constructor(private authenticationService: AuthenticationService,\n              private volunteerService: VolunteerService) {\n    const options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);\n\n    localDB.createIndex({\n      index: {fields: ['volunteer.id', 'rescue_officer.id']}\n    });\n   }\n\n    /**\n     *  Creates an allocation entry in the local database and updates volunteer's allocation status\n     * @param volunteer Volunteer object\n     * @param county County entry from statics database\n     * @param city City entry from statics database\n     * @param organisation Object value containing the allocated volunteer's organisation\n     * Either contains an object with the following properties {id, name, website}, or it's null\n     * @returns An Observable with the created object\n     */\n   createAllocation(volunteer: Volunteer, county: any, city: any, organisation: any) {\n    const rescue_officer = this.authenticationService.user;\n    const allocation = new Allocation();\n    allocation.volunteer = {\n      _id: volunteer._id,\n      name: volunteer.name\n    };\n    allocation.rescue_officer = {\n      _id: rescue_officer._id,\n      name: rescue_officer.name\n    };\n    allocation.county = {\n      _id: county._id,\n      name\n    };\n    allocation.city = city;\n    allocation.created_at = moment().format('Y-MM-DD H:mm:ss');\n    allocation.updated_at = moment().format('Y-MM-DD H:mm:ss');\n    allocation.type = this.type;\n\n    if (organisation) {\n        allocation.organisation = {\n          _id: organisation.id,\n          name: organisation.name,\n        };\n    }\n\n    return from(localDB.post(allocation))\n    .pipe(\n        map((response: any) => {\n          this.volunteerService.allocateVolunteer(response.id, volunteer._id);\n          return response;\n        })\n      );\n   }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appPages\n                            \n                            \n                                    Public\n                                authenticationService\n                            \n                            \n                                    Private\n                                isDoubleTap\n                            \n                            \n                                routerOutlet\n                            \n                            \n                                showSideMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                performAction\n                            \n                            \n                                    Async\n                                presentToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar, authenticationService: AuthenticationService, router: Router, localStorageService: LocalStorageService, location: Location, databaseSyncService: DatabaseSyncService, toastCtrl: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for cordova platforms\n\n                                                        \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for splash screen\n\n                                                        \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for status bar\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operations\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route navigation\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for localStorage related operations\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route location change\n\n                                                        \n                                                \n                                                \n                                                        databaseSyncService\n                                                  \n                                                        \n                                                                        DatabaseSyncService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for database synchronization\n\n                                                        \n                                                \n                                                \n                                                        toastCtrl\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller for toast management\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeApp\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:94\n                \n            \n\n\n            \n                \n                    Application initialisation\nIf cordova is available then the splash screen is hidden and status bar style is set\nThe back-button subscription is set (if the current route is login/home\nthen it closes the app completely on double tap within 3 seconds)\nIf a modal is open, then the back-button navigation is ignored\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:152\n                \n            \n\n\n            \n                \n                    Angular lifecycle method; gets triggered after view initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            performAction\n                        \n                        \n                    \n                \n            \n            \n                \nperformAction(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains the value of the next application state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentToast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToast()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:171\n                \n            \n\n\n            \n                \n                    Presents a toast that will be automatically dismessed after 3 seconds\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appPages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      title: 'Despre Aplicație',\n      url: '/about'\n    },\n    {\n      title: 'Validează un voluntar',\n      url: '/volunteer/validate'\n    },\n    {\n      title: 'Adaugă voluntar nou',\n      url: '/volunteer/add'\n    },\n    {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    },\n    {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    },\n    {\n      title: 'Delogare',\n      url: '/auth/logout'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n                \n                    \n                        Side menu navigation pages (page name and page url)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authenticationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:78\n                            \n                        \n\n                \n                    \n                        Provider for authentication related operations\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDoubleTap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:60\n                            \n                        \n\n                \n                    \n                        Stores the current state of back-button tapping: tapped once or twice (for exiting app)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routerOutlet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IonRouterOutlet\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(IonRouterOutlet)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n                \n                    \n                        Router outlet reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSideMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n                \n                    \n                        Boolean value that shows/hides the side menu depending on user's state\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, AfterViewInit } from '@angular/core';\n\nimport { IonRouterOutlet, Platform, ToastController } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { AuthenticationService, LocalStorageService, DatabaseSyncService } from './core';\nimport { Router } from '@angular/router';\nimport { Deeplinks } from '@ionic-native/deeplinks';\nimport { ResetPasswordComponent } from './pages/authentication/reset-password/reset-password.component';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent implements AfterViewInit {\n  /**\n   * Router outlet reference\n   */\n  @ViewChild(IonRouterOutlet) routerOutlet: IonRouterOutlet;\n\n  /**\n   * Boolean value that shows/hides the side menu depending on user's state\n   */\n  showSideMenu = true;\n\n  /**\n   * Side menu navigation pages (page name and page url)\n   */\n  public appPages = [\n    {\n      title: 'Despre Aplicație',\n      url: '/about'\n    },\n    {\n      title: 'Validează un voluntar',\n      url: '/volunteer/validate'\n    },\n    {\n      title: 'Adaugă voluntar nou',\n      url: '/volunteer/add'\n    },\n    {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    },\n    {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    },\n    {\n      title: 'Delogare',\n      url: '/auth/logout'\n    }\n  ];\n\n  /**\n   * Stores the current state of back-button tapping: tapped once or twice (for exiting app)\n   */\n  private isDoubleTap = false;\n\n  /**\n   *\n   * @param platform Provider for cordova platforms\n   * @param splashScreen Provider for splash screen\n   * @param statusBar Provider for status bar\n   * @param authenticationService Provider for authentication related operations\n   * @param router Provider for route navigation\n   * @param localStorageService Provider for localStorage related operations\n   * @param location Provider for route location change\n   * @param databaseSyncService Provider for database synchronization\n   * @param toastCtrl Controller for toast management\n   */\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar,\n    public authenticationService: AuthenticationService,\n    private router: Router,\n    private localStorageService: LocalStorageService,\n    private location: Location,\n    private databaseSyncService: DatabaseSyncService,\n    private toastCtrl: ToastController) {\n    this.initializeApp();\n  }\n\n  /**\n   * Application initialisation\n   * If cordova is available then the splash screen is hidden and status bar style is set\n   * The back-button subscription is set (if the current route is login/home\n   * then it closes the app completely on double tap within 3 seconds)\n   * If a modal is open, then the back-button navigation is ignored\n   */\n  initializeApp() {\n    this.platform.ready().then(() => {\n      if (this.platform.is('cordova')) {\n        this.statusBar.backgroundColorByHexString('#264998');\n        this.statusBar.styleDefault();\n\n        document.addEventListener('backbutton', (event) => {\n          const currentPath = this.router.url;\n\n          if (this.localStorageService.getItem('prevent_back')) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            return;\n          }\n\n          if (currentPath.indexOf('login') >= 0 || currentPath.indexOf('home') >= 0) {\n            if (!this.isDoubleTap) {\n              this.isDoubleTap = true;\n              this.presentToast();\n\n              setTimeout(() => {\n                this.isDoubleTap = false;\n               }, 3000);\n            } else {\n              navigator['app'].exitApp();\n            }\n          } else {\n            this.location.back();\n          }\n        }, false);\n\n        if (!this.localStorageService.getItem('firstLaunch')) {\n          this.databaseSyncService.sync().then(() => {\n            this.splashScreen.hide();\n            this.localStorageService.setItem('firstLaunch', false);\n           });\n        } else {\n          this.splashScreen.hide();\n        }\n      }\n    });\n  }\n\n  /**\n   *\n   * @param url Contains the value of the next application state\n   */\n  performAction(url: string) {\n    if (url.includes('tel')) {\n      window.open(url);\n    } else {\n      this.router.navigate([url]);\n    }\n  }\n\n  /**\n   * Angular lifecycle method; gets triggered after view initialisation\n   */\n  ngAfterViewInit() {\n    this.platform.ready().then(() => {\n      if (this.platform.is('cordova')) {\n        Deeplinks.route({\n          '/auth/reset/:token': ResetPasswordComponent\n        }).subscribe((match) => {\n          setTimeout(() => {\n            this.router.navigate(['/auth/reset/', match.$args.token]);\n          }, 1000);\n        }, (nomatch) => {\n          console.warn('Unmatched Route', nomatch);\n        });\n      }\n    });\n  }\n\n  /**\n   * Presents a toast that will be automatically dismessed after 3 seconds\n   */\n  async presentToast() {\n    const toast = await this.toastCtrl.create({\n      message: 'Apăsați din nou pentru a părăsi aplicația.',\n      position: 'bottom',\n      duration: 3000\n    });\n\n    toast.present();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n          \n            RVM\n          \n        \n      \n      \n        \n          \n            \n              \n                \n                  {{p.title}}\n                \n              \n            \n          \n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          RVM                                                                                                            {{p.title}}                                                                            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CoreModule } from './core';\nimport { DatePicker } from '@ionic-native/date-picker/ngx';\nimport { SMS } from '@ionic-native/sms/ngx';\nimport { InAppBrowser } from '@ionic-native/in-app-browser/ngx';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  entryComponents: [],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n    CoreModule\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    DatePicker,\n    SMS,\n    InAppBrowser\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPageOneTitleText\n                            \n                            \n                                getTitle\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPageOneTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetPageOneTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo(destination)\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    destination\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(destination) {\n    return browser.get(destination);\n  }\n\n  getTitle() {\n    return browser.getTitle();\n  }\n\n  getPageOneTitleText() {\n    return element(by.tagName('app-home')).element(by.deepCss('ion-title')).getText();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthenticationGuard } from './core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    loadChildren: './pages/home/home.module#HomePageModule',\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'about',\n    loadChildren: './pages/about/about.module#AboutPageModule',\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'volunteer',\n    loadChildren: './pages/volunteer/volunteer.module#VolunteerPageModule',\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'auth',\n    loadChildren: './pages/authentication/authentication.module#AuthenticationPageModule'\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/authentication/authentication.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Provides a guard for protecting authenticated routes (such as home, validate-volunteer)\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.guard.ts:10\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular value which handles routing operations\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service which handles the authentication operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.guard.ts:26\n                \n            \n\n\n            \n                \n                    Determines if a user can access a route, depending on its state\nIf the route isn't allowed, it automatically redirects to login page\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        a boolean value, current user's status: authenticated or not\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { AuthenticationService } from './authentication.service';\n\n/**\n * Provides a guard for protecting authenticated routes (such as home, validate-volunteer)\n */\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  /**\n   * Class constructor\n   * @param router Angular value which handles routing operations\n   * @param authenticationService The service which handles the authentication operations\n   */\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  /**\n   * Determines if a user can access a route, depending on its state\n   * If the route isn't allowed, it automatically redirects to login page\n   * @returns a boolean value, current user's status: authenticated or not\n   */\n  canActivate(): boolean {\n    if (this.authenticationService.isAuthenticated()) {\n      return true;\n    }\n\n    this.router.navigate(['/auth/login'], {\n      replaceUrl: true\n    });\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthenticationPage.html":{"url":"components/AuthenticationPage.html","title":"component - AuthenticationPage","body":"\n                   \n\n\n\n\n\n  Components\n  AuthenticationPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/authentication.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-authentication\n            \n\n            \n                styleUrls\n                ./authentication.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./authentication.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/authentication.page.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-authentication',\n  templateUrl: './authentication.page.html',\n  styleUrls: ['./authentication.page.scss'],\n})\n\nexport class AuthenticationPage {\n\n  constructor() { }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./authentication.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthenticationPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationPageModule.html":{"url":"modules/AuthenticationPageModule.html","title":"module - AuthenticationPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthenticationPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationPageModule\n\n\n\ncluster_AuthenticationPageModule_declarations\n\n\n\n\nAuthenticationPage\n\nAuthenticationPage\n\n\n\nAuthenticationPageModule\n\nAuthenticationPageModule\n\nAuthenticationPageModule -->\n\nAuthenticationPage->AuthenticationPageModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthenticationPageModule -->\n\nLoginComponent->AuthenticationPageModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAuthenticationPageModule -->\n\nLogoutComponent->AuthenticationPageModule\n\n\n\n\n\nRecoverPasswordComponent\n\nRecoverPasswordComponent\n\nAuthenticationPageModule -->\n\nRecoverPasswordComponent->AuthenticationPageModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationPageModule -->\n\nResetPasswordComponent->AuthenticationPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/authentication/authentication.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthenticationPage\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            LogoutComponent\n                        \n                        \n                            RecoverPasswordComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthenticationPage } from './authentication.page';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { RecoverPasswordComponent } from './recover-password/recover-password.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { UnauthenticatedGuard } from 'src/app/core/authentication/unauthenticated.guard';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthenticationPage,\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n    canActivate: [UnauthenticatedGuard]\n  },\n  {\n    path: 'logout',\n    component: LogoutComponent\n  },\n  {\n    path: 'reset/:token',\n    component: ResetPasswordComponent,\n  },\n  {\n    path: 'recover',\n    component: RecoverPasswordComponent,\n    canActivate: [UnauthenticatedGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [\n    AuthenticationPage,\n    ResetPasswordComponent,\n    RecoverPasswordComponent,\n    LoginComponent,\n    LogoutComponent\n  ]\n})\nexport class AuthenticationPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides the basic authentication operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _credentials\n                            \n                            \n                                    Public\n                                credentials$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuthenticated\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Public\n                                recoverPassword\n                            \n                            \n                                    Public\n                                resetPassword\n                            \n                            \n                                    Private\n                                setCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    credentials\n                                \n                                \n                                    accessToken\n                                \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.service.ts:26\n                            \n                        \n\n                \n                    \n                            Class constructor, initializes current credentials value if some credentials are found in local storage\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Class reference injection, handles http requests sent from this service\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service reference injection, handles operations on local storage\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:81\n                \n            \n\n\n            \n                \n                    Determines if the current user is authenticated\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        A boolean value with the authenticated status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(payload: Authentication.LoginPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:48\n                \n            \n\n\n            \n                \n                    Sends a login request to the backend server\nIf it's successful stores the credentials and returns the response body\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Authentication.LoginPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Login credentials\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable that contains the authentication credentials\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:66\n                \n            \n\n\n            \n                \n                    Sends a logout rewuest to the backend server\nIf it's successful clears the credentials information from local storage\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable with a boolean value for success (true)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            recoverPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    recoverPassword(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:132\n                \n            \n\n\n            \n                \n                    Sends a request to the backend server for password recovery\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's email, it's the one that will receive the password reset link\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable that contains a truth value: successful or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(password: string, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:142\n                \n            \n\n\n            \n                \n                    Sends a request to the backend server for password reset\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's new password\n\n                                    \n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The token from the email send by password recovery to prove that it's the same user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable that contains a truth value: successful or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setCredentials\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCredentials(credentials?: Authentication.Credentials)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:106\n                \n            \n\n\n            \n                \n                    Saves current user's credentials in local storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                Authentication.Credentials\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An object that contains the authentication token and data from server if user performed a login,\nor nothing if user just performed a log out\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _credentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Authentication.Credentials | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:21\n                            \n                        \n\n                \n                    \n                        Value that stores user's credentials after authentication\nIt's null if the user never authenticates\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            credentials$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:26\n                            \n                        \n\n                \n                    \n                        Value which emits events when credentials' values change (on login/logout)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        credentials\n                    \n                \n\n                \n                    \n                        getcredentials()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:89\n                                \n                            \n                    \n                        \n                                Getter method for the credentials object\n\n\n                                \n                                \n                                \n                                    Returns :         Authentication.Credentials | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:97\n                                \n                            \n                    \n                        \n                                Getter method for the authentication token\n\n\n                                \n                                \n                                \n                                    Returns :     string | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:123\n                                \n                            \n                    \n                        \n                                Getter method for current user's profile\n\n\n                                \n                                \n                                \n                                    Returns :         Authentication.User | null\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LocalStorageService } from '../local-storage.service';\n\n/**\n * Stores the value of credentials' key\n */\nconst credentialsKey = 'credentials';\n\n/**\n * Provides the basic authentication operations.\n */\n@Injectable()\nexport class AuthenticationService {\n  /**\n   * Value that stores user's credentials after authentication\n   * It's null if the user never authenticates\n   */\n  private _credentials: Authentication.Credentials | null;\n\n  /**\n   * Value which emits events when credentials' values change (on login/logout)\n   */\n  public credentials$ = new EventEmitter();\n\n  /**\n   * Class constructor, initializes current credentials value if some credentials are found in local storage\n   * @param httpClient Class reference injection, handles http requests sent from this service\n   * @param localStorageService Service reference injection, handles operations on local storage\n   */\n  constructor(\n    private httpClient: HttpClient,\n    private localStorageService: LocalStorageService) {\n      const savedCredentials = this.localStorageService.getItem(credentialsKey);\n      if (savedCredentials) {\n        this._credentials = JSON.parse(savedCredentials);\n      }\n  }\n\n  /**\n   * Sends a login request to the backend server\n   * If it's successful stores the credentials and returns the response body\n   * @param payload Login credentials\n   * @returns An observable that contains the authentication credentials\n   */\n  login(\n    payload: Authentication.LoginPayload\n  ): Observable {\n    const loginInfo: any = payload;\n    loginInfo.device = 'mobile';\n    return this.httpClient.post('/login', loginInfo).pipe(\n      map((body: any) => {\n        this.setCredentials(body);\n        return body;\n      })\n    );\n  }\n\n  /**\n   * Sends a logout rewuest to the backend server\n   * If it's successful clears the credentials information from local storage\n   * @returns An observable with a boolean value for success (true)\n   */\n  logout(): Observable {\n    return this.httpClient\n      .get('/logout')\n      .pipe(\n        map(() => {\n          this.setCredentials();\n          return true;\n        })\n      );\n  }\n\n  /**\n   * Determines if the current user is authenticated\n   * @returns A boolean value with the authenticated status\n   */\n  isAuthenticated(): boolean {\n    return !!this.credentials;\n  }\n\n  /**\n   * Getter method for the credentials object\n   * @returns The current credentials\n   */\n  get credentials(): Authentication.Credentials | null {\n    return this._credentials;\n  }\n\n  /**\n   * Getter method for the authentication token\n   * @returns The current token\n   */\n  get accessToken(): string | null {\n    return this.credentials ? this.credentials.token : null;\n  }\n\n  /**\n   * Saves current user's credentials in local storage\n   * @param credentials An object that contains the authentication token and data from server if user performed a login,\n   * or nothing if user just performed a log out\n   */\n  private setCredentials(credentials?: Authentication.Credentials) {\n    this._credentials = credentials || null;\n    if (credentials) {\n      this.localStorageService.setItem(\n        credentialsKey,\n        JSON.stringify(credentials)\n      );\n      this.credentials$.emit(this._credentials);\n    } else {\n      this.localStorageService.clearItem(credentialsKey);\n    }\n  }\n\n   /**\n    * Getter method for current user's profile\n    * @returns The current user\n    */\n  get user(): Authentication.User | null {\n    return this.credentials ? this.credentials.user : null;\n  }\n\n  /**\n   * Sends a request to the backend server for password recovery\n   * @param email User's email, it's the one that will receive the password reset link\n   * @returns an observable that contains a truth value: successful or not\n   */\n  public recoverPassword(email: string) {\n    return this.httpClient.post('/recoverpassword', {email, device: 'mobile'});\n  }\n\n   /**\n    * Sends a request to the backend server for password reset\n    * @param password User's new password\n    * @param token The token from the email send by password recovery to prove that it's the same user\n    * @returns an observable that contains a truth value: successful or not\n    */\n  public resetPassword(password: string, token: string) {\n    return this.httpClient.post('/resetpassword', {password, password_confirmation: password, token, device: 'mobile'});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nCustomSelectorComponent\n\nCustomSelectorComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nCustomSelectorComponent->CoreModule\n\n\n\n\n\nAllocationService\n\nAllocationService\n\nCoreModule -->\n\nAllocationService->CoreModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nCoreModule -->\n\nAuthenticationService->CoreModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nCoreModule -->\n\nCourseService->CoreModule\n\n\n\n\n\nErrorHandlerInterceptor\n\nErrorHandlerInterceptor\n\nCoreModule -->\n\nErrorHandlerInterceptor->CoreModule\n\n\n\n\n\nErrorMessageService\n\nErrorMessageService\n\nCoreModule -->\n\nErrorMessageService->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\nOrganisationService\n\nOrganisationService\n\nCoreModule -->\n\nOrganisationService->CoreModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\n\n\nStaticsService\n\nStaticsService\n\nCoreModule -->\n\nStaticsService->CoreModule\n\n\n\n\n\nVolunteerService\n\nVolunteerService\n\nCoreModule -->\n\nVolunteerService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CustomSelectorComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            CustomSelectorComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AllocationService\n                        \n                        \n                            AuthenticationService\n                        \n                        \n                            CourseService\n                        \n                        \n                            ErrorHandlerInterceptor\n                        \n                        \n                            ErrorMessageService\n                        \n                        \n                            LocalStorageService\n                        \n                        \n                            OrganisationService\n                        \n                        \n                            RequestInterceptor\n                        \n                        \n                            RequestInterceptor\n                        \n                        \n                            StaticsService\n                        \n                        \n                            VolunteerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  HTTP_INTERCEPTORS,\n  HttpClientModule\n} from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\nimport {\n  AuthenticationGuard,\n  AuthenticationService,\n} from './authentication';\nimport {\n  RequestInterceptor,\n  ErrorHandlerInterceptor\n} from './http';\nimport { LocalStorageService } from './local-storage.service';\nimport { RouteReusableStrategy } from './route-reusable-strategy';\nimport {\n  ErrorMessageService,\n  CourseService,\n  VolunteerService,\n  OrganisationService,\n  DatabaseSyncService,\n  AllocationService\n} from './service';\nimport { StaticsService } from './service/statics.service';\nimport { UnauthenticatedGuard } from './authentication/unauthenticated.guard';\nimport { CustomSelectorComponent } from './components/custom-selector/custom-selector.component';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule,\n    IonicModule,\n    FormsModule\n  ],\n  declarations: [\n    CustomSelectorComponent\n  ],\n  providers: [\n    LocalStorageService,\n    AuthenticationService,\n    AuthenticationGuard,\n    UnauthenticatedGuard,\n    RequestInterceptor,\n    ErrorHandlerInterceptor,\n    VolunteerService,\n    ErrorMessageService,\n    StaticsService,\n    CourseService,\n    OrganisationService,\n    DatabaseSyncService,\n    AllocationService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: RequestInterceptor,\n      multi: true\n    },\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy\n    }\n  ],\n  entryComponents: [\n    CustomSelectorComponent\n  ]\n})\n\n/**\n * Module for all core related services, interceptors and models\n */\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/course.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for course object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                _rev\n                            \n                            \n                                acredited\n                            \n                            \n                                added_by\n                            \n                            \n                                course_name\n                            \n                            \n                                created_at\n                            \n                            \n                                obtained\n                            \n                            \n                                type\n                            \n                            \n                                updated_at\n                            \n                            \n                                volunteer_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/model/course.model.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _rev\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acredited\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            added_by\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            obtained\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volunteer_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Course {\n    _id: string;\n    _rev: string;\n    volunteer_id: string;\n    course_name: {\n        _id: string;\n        name: string;\n    };\n    acredited: {\n        _id: string;\n        name: string;\n    };\n    obtained: Date;\n    created_at: any;\n    updated_at: any;\n    added_by: string;\n    type: string;\n\n    constructor() {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseService.html":{"url":"injectables/CourseService.html","title":"injectable - CourseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/course.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for course related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCourse\n                            \n                            \n                                deleteCourseById\n                            \n                            \n                                getCourseById\n                            \n                            \n                                getCourseByName\n                            \n                            \n                                getCourseByVolunteerId\n                            \n                            \n                                getCourseNames\n                            \n                            \n                                getCourses\n                            \n                            \n                                updateCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/course.service.ts:34\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Courses Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createCourse\n                        \n                        \n                    \n                \n            \n            \n                \ncreateCourse(courseName: any, volunteer_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:116\n                \n            \n\n\n            \n                \n                    Creates a course entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    courseName\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Entry from statics courses database\n\n                                    \n                                \n                                \n                                    volunteer_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the volunteer that is acredited for this course\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteCourseById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteCourseById(courseId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:146\n                \n            \n\n\n            \n                \n                    Deletes an entry by its id from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The course id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourseById\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourseById(courseId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:88\n                \n            \n\n\n            \n                \n                    Finds a course by its id in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course's id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the course with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourseByName\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourseByName(courseNameId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:73\n                \n            \n\n\n            \n                \n                    Finds a course by its name in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    courseNameId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course name id from statics database\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all courses with that name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourseByVolunteerId\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourseByVolunteerId(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:102\n                \n            \n\n\n            \n                \n                    Retrives the list of courses that belong to a volunteer\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A volunteer's id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable containing the list of courses that belong to the given volunteer\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourseNames\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourseNames()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:155\n                \n            \n\n\n            \n                \n                    Returns all course names for selection\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourses\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourses()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:58\n                \n            \n\n\n            \n                \n                    Getter method for all courses from the local database\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all courses\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateCourse\n                        \n                        \n                    \n                \n            \n            \n                \nupdateCourse(course: Course)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:132\n                \n            \n\n\n            \n                \n                    Updates a course entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new course entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'courses'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/course.service.ts:34\n                            \n                        \n\n                \n                    \n                        Courses' table type (if the course is not a static value)\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { from, Observable } from 'rxjs';\nimport { Course } from '../model/course.model';\nimport { AuthenticationService } from '../authentication';\nimport * as moment from 'moment';\n\n/**\n * Reference for local PouchDB Courses Database\n */\nconst localDB = new PouchDB('courses');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Courses Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/courses');\n\n/**\n * Provider for course related operations\n */\n@Injectable()\nexport class CourseService {\n\n  /**\n   * Courses' table type (if the course is not a static value)\n   */\n  private type = 'courses';\n\n  /**\n   * Class constructor, sets the synchronization options for CouchDB and PouchDB Courses Database\n   * @param authService Provider for authentication related operations\n   */\n  constructor(private authService: AuthenticationService) {\n    const options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);\n\n    localDB.createIndex({\n      index: {fields: ['course_name.id', 'volunteer_id', 'acredited.id']}\n    });\n   }\n\n  /**\n   * Getter method for all courses from the local database\n   * @returns An Observable with all courses\n   */\n  getCourses(): Observable {\n    return from(localDB.find({\n      selector: {\n          type: this.type\n      },\n      include_docs: true,\n      attachments: true\n    }));\n  }\n\n  /**\n   * Finds a course by its name in the local database\n   * @param courseNameId Course name id from statics database\n   * @returns An Observable with all courses with that name\n   */\n  getCourseByName(courseNameId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        'course_name.id': {$eq: courseNameId},\n        type: this.type\n      },\n      sort: ['course_name.id'],\n    }));\n  }\n\n  /**\n   * Finds a course by its id in the local database\n   * @param courseId Course's id\n   * @returns An Observable containing the course with that id\n   */\n  getCourseById(courseId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        _id: {$eq: courseId},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   * Retrives the list of courses that belong to a volunteer\n   * @param volunteerId A volunteer's id\n   * @returns An observable containing the list of courses that belong to the given volunteer\n   */\n  getCourseByVolunteerId(volunteerId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        volunteer_id: {$eq: volunteerId},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   * Creates a course entry in the local database\n   * @param courseName Entry from statics courses database\n   * @param volunteer_id The id of the volunteer that is acredited for this course\n   */\n  createCourse(courseName: any, volunteer_id: string): Observable {\n    const course = new Course();\n    course.volunteer_id = volunteer_id;\n    course.course_name = courseName;\n    course.created_at = moment().format('Y-MM-DD H:mm:ss');\n    course.updated_at = moment().format('Y-MM-DD H:mm:ss');\n    course.added_by = this.authService.user._id;\n    course.type = this.type;\n\n    return from(localDB.post(course));\n  }\n\n  /**\n   * Updates a course entry in the local database\n   * @param course The new course entry\n   */\n  updateCourse(course: Course): void {\n    localDB.get(course._id).then((doc: Course) => {\n      doc.course_name = course.course_name ? course.course_name : doc.course_name;\n      doc.acredited = course.acredited ? course.acredited : doc.acredited;\n      doc.obtained = course.obtained ? course.obtained : doc.obtained;\n      doc.updated_at = new Date();\n      localDB.put(doc);\n    });\n  }\n\n  /**\n   * Deletes an entry by its id from the local database\n   * @param courseId The course id\n   */\n  deleteCourseById(courseId: string): void {\n    localDB.get(courseId).then(doc => {\n      return localDB.remove(doc);\n    });\n  }\n\n  /**\n   * Returns all course names for selection\n   */\n  getCourseNames() {\n    return from(localDB.find({\n      selector: {\n          type: 'course_names'\n      },\n      include_docs: true,\n      attachments: true\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Credentials.html":{"url":"interfaces/Credentials.html","title":"interface - Credentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Credentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for credentials object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        session\n                                \n                                \n                                        token\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        session\n                                    \n                                \n                                \n                                    \n                                        session:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  /**\n   * Interface for login payload\n   */\n  export interface LoginPayload {\n    username: string;\n    password: string;\n  }\n\n  /**\n   * Interface for user object\n   */\n  export interface User {\n    _id: string;\n    name: string;\n    phone?: any;\n    email: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n\n  /**\n   * Interface for credentials object\n   */\n  export interface Credentials {\n    user: User;\n    token: string;\n    session: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CustomSelectorComponent.html":{"url":"components/CustomSelectorComponent.html","title":"component - CustomSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CustomSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/components/custom-selector/custom-selector.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-custom-selector\n            \n\n            \n                styleUrls\n                ./custom-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./custom-selector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSelectedEntry\n                            \n                            \n                                dismiss\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/components/custom-selector/custom-selector.component.ts:22\n                            \n                        \n\n                \n                    \n                            Page constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Modal Controller reference for modal view related operations\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                LocalStorage service reference for store/clear on local storage\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:16\n                            \n                        \n                \n                    \n                        Data sent to the modal to reprezent the selections\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeSelectedEntry\n                        \n                        \n                    \n                \n            \n            \n                \nchangeSelectedEntry(entry: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:37\n                \n            \n\n\n            \n                \n                    Triggered when a user selects an entry; it closes the modal and returns to the calling page\nthe selected value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User selected entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dismiss\n                        \n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:68\n                \n            \n\n\n            \n                \n                    Closes the modal view\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:60\n                \n            \n\n\n            \n                \n                    Unsubscribes from the back-button listener and clears the local storage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:45\n                \n            \n\n\n            \n                \n                    Page initialisation, sets the subscription for the back-button event and\nsets a value in the local storage in order to know when the pop-up is open\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/components/custom-selector/custom-selector.component.ts:22\n                            \n                        \n\n                \n                    \n                        Stores a subscription to the back button event; it will be subscribed on page initialisation\nand unsubscribed on page destroy\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { LocalStorageService } from '../../local-storage.service';\nimport { fromEvent } from 'rxjs';\n\n@Component({\n  selector: 'app-custom-selector',\n  templateUrl: './custom-selector.component.html',\n  styleUrls: ['./custom-selector.component.scss'],\n})\n\nexport class CustomSelectorComponent implements OnInit, OnDestroy {\n  /**\n   * Data sent to the modal to reprezent the selections\n   */\n  @Input() items: any[];\n\n  /**\n   * Stores a subscription to the back button event; it will be subscribed on page initialisation\n   * and unsubscribed on page destroy\n   */\n  subscription: any;\n\n  /**\n   * Page constructor\n   * @param modalCtrl Modal Controller reference for modal view related operations\n   * @param localStorageService LocalStorage service reference for store/clear on local storage\n   */\n  constructor(private modalCtrl: ModalController,\n              private localStorageService: LocalStorageService) { }\n\n  /**\n   * Triggered when a user selects an entry; it closes the modal and returns to the calling page\n   * the selected value\n   * @param entry User selected entry\n   */\n  changeSelectedEntry(entry: any) {\n    this.modalCtrl.dismiss(entry);\n  }\n\n  /**\n   * Page initialisation, sets the subscription for the back-button event and\n   * sets a value in the local storage in order to know when the pop-up is open\n   */\n  ngOnInit() {\n    this.localStorageService.setItem('prevent_back', true);\n\n    const event = fromEvent(document, 'backbutton');\n    this.subscription = event.subscribe(async () => {\n        const modal = await this.modalCtrl.getTop();\n        if (modal) {\n            modal.dismiss();\n        }\n    });\n  }\n\n  /**\n   * Unsubscribes from the back-button listener and clears the local storage\n   */\n  ngOnDestroy() {\n    this.localStorageService.clearItem('prevent_back');\n    this.subscription.unsubscribe();\n  }\n\n  /**\n   * Closes the modal view\n   */\n  dismiss() {\n    this.modalCtrl.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n        \n          {{ item.name }}\n        \n      \n    \n    \n      Cancel\n    \n\n    \n\n    \n                \n                    ./custom-selector.component.scss\n                \n                .close-button {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    padding: 20px 15px;\n    background: #fff;\n    width: 100%;\n    box-shadow: 0px 0px 10px rgba(0,0,0,0.05);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ item.name }}                            Cancel    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CustomSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseSyncService.html":{"url":"classes/DatabaseSyncService.html","title":"class - DatabaseSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/database-sync.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for database synchronization (local and remote)\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                localAllocationsDB\n                            \n                            \n                                localCoursesDB\n                            \n                            \n                                localOrganisationsDB\n                            \n                            \n                                localStaticsDB\n                            \n                            \n                                localVolunteersDB\n                            \n                            \n                                remoteAllocationsDB\n                            \n                            \n                                remoteCoursesDB\n                            \n                            \n                                remoteOrganisationsDB\n                            \n                            \n                                remoteStaticsDB\n                            \n                            \n                                remoteVolunteersDB\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localAllocationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:42\n                            \n                        \n\n                \n                    \n                        Reference for local PouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localCoursesDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:24\n                            \n                        \n\n                \n                    \n                        Reference for local PouchDB Courses Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localOrganisationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:33\n                            \n                        \n\n                \n                    \n                        Reference for local PouchDB Organisations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localStaticsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:51\n                            \n                        \n\n                \n                    \n                        Reference for local PouchDB Statics Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localVolunteersDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:15\n                            \n                        \n\n                \n                    \n                        Reference for local PouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteAllocationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:46\n                            \n                        \n\n                \n                    \n                        Reference for server CouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteCoursesDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:28\n                            \n                        \n\n                \n                    \n                        Reference for server CouchDB Courses Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteOrganisationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:37\n                            \n                        \n\n                \n                    \n                        Reference for server CouchDB Organisations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteStaticsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:55\n                            \n                        \n\n                \n                    \n                        Reference for server CouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteVolunteersDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/database-sync.service.ts:19\n                            \n                        \n\n                \n                    \n                        Reference for server CouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sync\n                        \n                        \n                    \n                \n            \n            \n                \nsync()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/database-sync.service.ts:80\n                \n            \n\n\n            \n                \n                    Starts database synchronization\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as PouchDB from 'pouchdb/dist/pouchdb';\nimport { environment } from '../../../environments/environment';\nimport * as moment from 'moment';\nimport { from } from 'rxjs/internal/observable/from';\n\ndeclare const emit;\n\n/**\n * Service for database synchronization (local and remote)\n */\nexport class DatabaseSyncService {\n  /**\n   * Reference for local PouchDB Volunteers Database\n   */\n  localVolunteersDB: any;\n  /**\n   * Reference for server CouchDB Volunteers Database\n   */\n  remoteVolunteersDB: any;\n\n  /**\n   * Reference for local PouchDB Courses Database\n   */\n  localCoursesDB: any;\n  /**\n   * Reference for server CouchDB Courses Database\n   */\n  remoteCoursesDB: any;\n\n  /**\n   * Reference for local PouchDB Organisations Database\n   */\n  localOrganisationsDB: any;\n  /**\n   * Reference for server CouchDB Organisations Database\n   */\n  remoteOrganisationsDB: any;\n\n  /**\n   * Reference for local PouchDB Allocations Database\n   */\n  localAllocationsDB: any;\n  /**\n   * Reference for server CouchDB Allocations Database\n   */\n  remoteAllocationsDB: any;\n\n  /**\n   * Reference for local PouchDB Statics Database\n   */\n  localStaticsDB: any;\n  /**\n   * Reference for server CouchDB Allocations Database\n   */\n  remoteStaticsDB: any;\n\n    /**\n     * @ignore\n     */\n    constructor() {\n      this.localVolunteersDB = new PouchDB('volunteers');\n      this.remoteVolunteersDB = new PouchDB(environment.databaseURL + '/volunteers');\n\n      this.localCoursesDB = new PouchDB('courses');\n      this.remoteCoursesDB = new PouchDB(environment.databaseURL + '/courses');\n\n      this.localOrganisationsDB = new PouchDB('organisations');\n      this.remoteOrganisationsDB = new PouchDB(environment.databaseURL + '/organisations');\n\n      this.localAllocationsDB = new PouchDB('allocations');\n      this.remoteAllocationsDB = new PouchDB(environment.databaseURL + '/allocations');\n\n      this.localStaticsDB = new PouchDB('statics');\n      this.remoteStaticsDB = new PouchDB(environment.databaseURL + '/statics');\n     }\n\n    /**\n     * Starts database synchronization\n     */\n    sync(): Promise {\n      return Promise.all(\n          [\n            this.localStaticsDB.replicate.from(this.remoteStaticsDB),\n            this.localVolunteersDB.replicate.from(this.remoteVolunteersDB),\n            this.localCoursesDB.replicate.from(this.remoteCoursesDB),\n            this.localOrganisationsDB.replicate.from(this.remoteOrganisationsDB),\n            this.localAllocationsDB.replicate.from(this.remoteAllocationsDB)\n          ]).then(() => {\n            return this.localStaticsDB.query('cities/slug', { limit: 0 });\n           }).catch(error => console.log(`Error in promises ${error}`));\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailValidation.html":{"url":"classes/EmailValidation.html","title":"class - EmailValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/email-validation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                emailValidation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            emailValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emailValidation(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/email-validation.ts:11\n                \n            \n\n\n            \n                \n                    Email validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the value from the input\nthat is being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the string respects the pattern, an error message otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\n\nexport class EmailValidation {\n\n    /**\n     * Email validator\n     * @param abstractControl An abstract control reference, to automatically take the value from the input\n     * that is being validated\n     * @returns null if the string respects the pattern, an error message otherwise\n     */\n    static emailValidation(abstractControl: AbstractControl): any {\n        const email = abstractControl.value;\n        const reg = new RegExp('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$');\n\n        if (reg.test(email)) {\n            return null;\n        }\n\n        return { 'email': 'Adresa de email introdusă nu este validă (ex: email@email.com).' };\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorHandlerInterceptor.html":{"url":"interceptors/ErrorHandlerInterceptor.html","title":"interceptor - ErrorHandlerInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorHandlerInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/error-handler.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Adds a default error handler to all requests.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, localStorageService: LocalStorageService, errorMessageService: ErrorMessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/error-handler.interceptor.ts:25\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular value which handles routing operations\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected service referes the LocalStorageService for handling operations related to storage\n\n                                                        \n                                                \n                                                \n                                                        errorMessageService\n                                                  \n                                                        \n                                                                        ErrorMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected service referes the ErrorMessageService for handling operations related to error messagging\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            errorHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    errorHandler(response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/error-handler.interceptor.ts:59\n                \n            \n\n\n            \n                \n                    Handles the request errors depending on its code\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request response\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable with the http event\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/error-handler.interceptor.ts:45\n                \n            \n\n\n            \n                \n                    Intercepts all requests that are sent and adds an error handling function to them\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current request that is being sent\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Handles the next state of the request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable with the new request, with the additional information\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from '../local-storage.service';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ErrorMessageService } from '../service/error-message.service';\nimport { environment } from '../../../environments/environment';\n\n/**\n * Key that identifies the credentials\n */\nconst credentialsKey = 'credentials';\n\n/**\n * Adds a default error handler to all requests.\n */\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n\n  /**\n   * Class constructor\n   * @param router Angular value which handles routing operations\n   * @param localStorageService Injected service referes the LocalStorageService for handling operations related to storage\n   * @param errorMessageService Injected service referes the ErrorMessageService for handling operations related to error messagging\n   */\n  constructor(\n    private router: Router,\n    private localStorageService: LocalStorageService,\n    private errorMessageService: ErrorMessageService\n  ) {}\n\n   /**\n    * Intercepts all requests that are sent and adds an error handling function to them\n    * @param request The current request that is being sent\n    * @param next Handles the next state of the request\n    * @returns An observable with the new request, with the additional information\n    */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return next\n      .handle(request)\n      .pipe(catchError(error => this.errorHandler(error)));\n  }\n\n  /**\n   * Handles the request errors depending on its code\n   * @param response Request response\n   * @returns An observable with the http event\n   */\n  private errorHandler(\n    response: HttpResponse\n  ): Observable> {\n    if (response.status === 401) {\n      this.localStorageService.clearItem(credentialsKey);\n      this.router.navigate(['/auth/login'], {\n        replaceUrl: true\n      });\n    } else if (response.status === 400) {\n      const errorResponse: any = response;\n      if (errorResponse.error) {\n        if (errorResponse.error.validation) {\n          errorResponse.error.validation.keys.forEach((key: string) => {\n            this.errorMessageService.set(\n              errorResponse.error.validation.errors[key],\n              key,\n              response.url\n            );\n          });\n        } else {\n          this.errorMessageService.set(\n            errorResponse.error.error,\n            '_GLOBAL_',\n            response.url\n          );\n        }\n      }\n    }\n\n    if (!environment.production) {\n      console.error('Request error', response);\n    }\n    throw response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorMessageObject.html":{"url":"interfaces/ErrorMessageObject.html","title":"interface - ErrorMessageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorMessageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/error.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for error message\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        id\n                                \n                                \n                                        serviceUrl\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceUrl\n                                    \n                                \n                                \n                                    \n                                        serviceUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace ErrorModel {\n  /**\n   * Interface for error object\n   */\n  export interface RootObject {\n    statusCode: number;\n    error: string;\n    message: string;\n    attributes?: any;\n  }\n\n  /**\n   * Interface for error message\n   */\n  export interface ErrorMessageObject {\n    id: number;\n    error: string;\n    type: string;\n    serviceUrl: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorMessageService.html":{"url":"injectables/ErrorMessageService.html","title":"injectable - ErrorMessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorMessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/error-message.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for error messages\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _errors\n                            \n                            \n                                    Public\n                                errors$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errors\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/error-message.service.ts:51\n                \n            \n\n\n            \n                \n                    Clears the error messages and emits an event\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            set\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    set(error: string, type: string, serviceUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/error-message.service.ts:37\n                \n            \n\n\n            \n                \n                    Sets the error messages and emits an event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error message\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error type\n\n                                    \n                                \n                                \n                                    serviceUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Service Url that generated the error\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorModel.ErrorMessageObject[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/error-message.service.ts:11\n                            \n                        \n\n                \n                    \n                        Value that stores the error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errors$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/error-message.service.ts:16\n                            \n                        \n\n                \n                    \n                        Value that emitts events when error messages are changed\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errors\n                    \n                \n\n                \n                    \n                        geterrors()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/service/error-message.service.ts:27\n                                \n                            \n                    \n                        \n                                Getter for current error messages\n\n\n                                \n                                \n                                \n                                    Returns :         ErrorModel.ErrorMessageObject[]\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\n\n/**\n * Provider for error messages\n */\n@Injectable()\nexport class ErrorMessageService {\n  /**\n   * Value that stores the error messages\n   */\n  private _errors: ErrorModel.ErrorMessageObject[] = [];\n\n  /**\n   * Value that emitts events when error messages are changed\n   */\n  public errors$ = new EventEmitter();\n\n  /**\n   * @ignore\n   */\n  constructor() {}\n\n  /**\n   * Getter for current error messages\n   * @returns current error messages\n   */\n  get errors(): ErrorModel.ErrorMessageObject[] {\n    return this._errors;\n  }\n\n  /**\n   * Sets the error messages and emits an event\n   * @param error Error message\n   * @param type Error type\n   * @param serviceUrl Service Url that generated the error\n   */\n  public set(error: string, type: string, serviceUrl: string) {\n    this._errors.push({\n      id: Date.now(),\n      error: error,\n      type: type,\n      serviceUrl: serviceUrl\n    });\n    console.log(this._errors);\n    this.errors$.emit(this._errors);\n  }\n\n  /**\n   * Clears the error messages and emits an event\n   */\n  public clear() {\n    this._errors = [];\n    this.errors$.emit(this._errors);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                performAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.page.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            performAction\n                        \n                        \n                    \n                \n            \n            \n                \nperformAction(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/home.page.ts:41\n                \n            \n\n\n            \n                \n                    Performes the action selected by the user from the side-menu list;\nIt can either mean navigation to a new page or opening the phone's call screen\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String containing the url for the route that will be displayed on user click\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      title: 'Validează voluntar',\n      url: '/volunteer/validate'\n    }, {\n      title: 'Adaugă voluntar',\n      url: '/volunteer/add'\n    }, {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    }, {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/home/home.page.ts:14\n                            \n                        \n\n                \n                    \n                        Actions that can be performed from the side-menu\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n\n  /**\n   * Actions that can be performed from the side-menu\n   */\n  actions = [\n    {\n      title: 'Validează voluntar',\n      url: '/volunteer/validate'\n    }, {\n      title: 'Adaugă voluntar',\n      url: '/volunteer/add'\n    }, {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    }, {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    }\n  ];\n\n  /**\n   *\n   * @param router Provider for route navigation\n   */\n  constructor(private router: Router) { }\n\n  /**\n   * Performes the action selected by the user from the side-menu list;\n   * It can either mean navigation to a new page or opening the phone's call screen\n   * @param url String containing the url for the route that will be displayed on user click\n   */\n  performAction(url: string) {\n    if (url.includes('tel')) {\n      window.open(url);\n    } else {\n      this.router.navigate([url]);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n    \n      \n    \n    \n  \n\n\n\n  \n    \n      \n          \n            {{action.title}}\n          \n      \n    \n  \n\n    \n\n    \n                \n                    home.page.scss\n                \n                .menu-column {\n  -webkit-box-shadow: 0px 0px 0px 5px rgba(240,237,240,1);\n  -moz-box-shadow: 0px 0px 0px 5px rgba(240,237,240,1);\n  box-shadow: 0px 0px 5px 2px rgba(240,237,240,1);\n  color: black;\n  font-size: 12px;\n  padding: 80px 10px;\n  text-align: center;\n  text-decoration: underline;\n\n  a {\n    color: black;\n  }\n}\n\n.home-columns {\n  align-items: center;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  \n  ion-row {\n    justify-content: center;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{action.title}}                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { HomePage } from './home.page';\nimport { AuthenticationGuard } from '../../core/authentication/authentication.guard';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage,\n        canActivate: [AuthenticationGuard]\n      }\n    ])\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/local-storage.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for storing information in local storage\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                localStorage\n                            \n                            \n                                sessionStorage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearAll\n                            \n                            \n                                    Public\n                                clearItem\n                            \n                            \n                                    Public\n                                getItem\n                            \n                            \n                                    Public\n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/local-storage.service.ts:114\n                            \n                        \n\n                \n                    \n                            Checks if localStorage can be used for basic storing operations\nIf not, then a custom storage is created to handle this operations\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clearAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:244\n                \n            \n\n\n            \n                \n                    Clears the existing storage\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clearItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:237\n                \n            \n\n\n            \n                \n                    Removes an item from storage by its key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:229\n                \n            \n\n\n            \n                \n                    Retrieves an item by its key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setItem(key: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:221\n                \n            \n\n\n            \n                \n                    Adds an item to storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item's key\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item itself\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localStorage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:109\n                            \n                        \n\n                \n                    \n                        Handles storing inside local storage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionStorage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:114\n                            \n                        \n\n                \n                    \n                        Handles storing inside session storage\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Creates a cookie entry\n * @param name Cookie name\n * @param value Cookie value\n * @param days Cookie expiration number of days\n */\nfunction createCookie(name: any, value: any, days: any) {\n  let date: any, expires;\n\n  if (days) {\n    date = new Date();\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    expires = '; expires=' + date.toGMTString();\n  } else {\n    expires = '';\n  }\n  document.cookie = name + '=' + value + expires + '; path=/';\n}\n\n/**\n * Getter for a cookie document by its name\n * @param name Cookie's name\n * @returns cookie document \n */\nfunction readCookie(name: any) {\n  const nameEQ = name + '=',\n    ca = document.cookie.split(';');\n  let i, c;\n\n  for (i = 0; i  localStorage\n      });\n      this.localStorage = localStorage;\n      this.sessionStorage = sessionStorage;\n    }\n  }\n\n  /**\n   * Adds an item to storage\n   * @param key Item's key\n   * @param value Item itself\n   */\n  public setItem(key: string, value: any) {\n    return this.localStorage.setItem(key, value);\n  }\n\n   /**\n    * Retrieves an item by its key\n    * @param key Item key\n    */\n  public getItem(key: string) {\n    return this.localStorage.getItem(key);\n  }\n\n  /**\n   * Removes an item from storage by its key\n   * @param key Item key\n   */\n  public clearItem(key: string) {\n    return this.localStorage.removeItem(key);\n  }\n\n  /**\n   * Clears the existing storage\n   */\n  public clearAll() {\n    return this.localStorage.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loading\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, formBuilder: FormBuilder, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/login/login.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route navigation\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for reactive form creation\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/login/login.component.ts:50\n                \n            \n\n\n            \n                \n                    Form initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/login/login.component.ts:43\n                \n            \n\n\n            \n                \n                    Page initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/login/login.component.ts:61\n                \n            \n\n\n            \n                \n                    Authentication credentials from the form are sent to the authentication service for validation\nIf they are validated, the user will be redirected to the home page, if not, a toast will display an error message\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                        The error message that will be displayed when something didn't go as planned\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/login/login.component.ts:28\n                            \n                        \n\n                \n                    \n                        True if page is in loading state false if not; used in design\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/login/login.component.ts:18\n                            \n                        \n\n                \n                    \n                        Form with user's login credentials\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { AuthenticationService } from 'src/app/core';\nimport { EmailValidation } from 'src/app/core/validators/email-validation';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Form with user's login credentials\n   */\n  loginForm: FormGroup;\n\n  /**\n   * The error message that will be displayed when something didn't go as planned\n   */\n  errorMessage: string;\n\n  /**\n   * True if page is in loading state false if not; used in design\n   */\n  loading = false;\n\n  /**\n   *\n   * @param router Provider for route navigation\n   * @param formBuilder Provider for reactive form creation\n   * @param authenticationService Provider for authentication related operation\n   */\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private authenticationService: AuthenticationService) { }\n\n  /**\n   * Page initialisation\n   */\n  ngOnInit() {\n    this.createForm();\n  }\n\n  /**\n   * Form initialisation\n   */\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, EmailValidation.emailValidation]],\n      password: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Authentication credentials from the form are sent to the authentication service for validation\n   * If they are validated, the user will be redirected to the home page, if not, a toast will display an error message\n   */\n  submit() {\n    this.loading = true;\n    this.authenticationService\n      .login(this.loginForm.value)\n      .pipe(\n        finalize(() => {\n          this.loginForm.markAsPristine();\n        })\n      )\n      .subscribe(\n        (credentials) => {\n            this.loading = false;\n            this.router.navigate(['../home'], {\n              replaceUrl: true\n            });\n        },\n        (error: any) => {\n          this.loading = false;\n          this.errorMessage = 'Informații incorecte';\n          setTimeout(() => {\n            this.errorMessage = null;\n          }, 3000);\n        }\n      );\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      Adresă de email\n      \n    \n    \n      Parolă\n      \n    \n\n    \n       {{ loginForm.controls.email.errors?.email || errorMessage }}\n      \n    \n\n    Am uitat parola\n    Login\n  \n\n  \n    \n  \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Adresă de email                    Parolă                     {{ loginForm.controls.email.errors?.email || errorMessage }}              Am uitat parola    Login          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginPayload.html":{"url":"interfaces/LoginPayload.html","title":"interface - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for login payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  /**\n   * Interface for login payload\n   */\n  export interface LoginPayload {\n    username: string;\n    password: string;\n  }\n\n  /**\n   * Interface for user object\n   */\n  export interface User {\n    _id: string;\n    name: string;\n    phone?: any;\n    email: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n\n  /**\n   * Interface for credentials object\n   */\n  export interface Credentials {\n    user: User;\n    token: string;\n    session: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutComponent.html":{"url":"components/LogoutComponent.html","title":"component - LogoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LogoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/logout/logout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout\n            \n\n            \n                styleUrls\n                ./logout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/logout/logout.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operations\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/logout/logout.component.ts:24\n                \n            \n\n\n            \n                \n                    A request through the authentication service is sent for logout;\nIf its successful the user will be redirected to the login screen\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss'],\n})\nexport class LogoutComponent implements OnInit {\n\n  /**\n   *\n   * @param authenticationService Provider for authentication related operations\n   * @param router Provider for router navigation\n   */\n  constructor(private authenticationService: AuthenticationService,\n              private router: Router) { }\n\n  /**\n   * A request through the authentication service is sent for logout;\n   * If its successful the user will be redirected to the login screen\n   */\n  ngOnInit() {\n    this.authenticationService.logout().subscribe(() => {\n      this.router.navigate(['../auth/login'], {\n        replaceUrl: true\n      });\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n  \n\n    \n\n    \n                \n                    ./logout.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Organisation.html":{"url":"classes/Organisation.html","title":"class - Organisation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Organisation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/organisation.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for organisation object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                _rev\n                            \n                            \n                                added_by\n                            \n                            \n                                address\n                            \n                            \n                                city\n                            \n                            \n                                comments\n                            \n                            \n                                contact_person\n                            \n                            \n                                county\n                            \n                            \n                                cover\n                            \n                            \n                                created_at\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                slug\n                            \n                            \n                                status\n                            \n                            \n                                type\n                            \n                            \n                                updated_at\n                            \n                            \n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/model/organisation.model.ts:28\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _rev\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            added_by\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contact_person\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            website\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Organisation {\n    _id: string;\n    _rev: string;\n    name: string;\n    slug: string;\n    website: string;\n    contact_person: string;\n    phone: string;\n    address: string;\n    email: string;\n    county: {\n        _id: string;\n        name: string;\n    };\n    city: {\n        _id: string;\n        name: string;\n    };\n    comments: string;\n    created_at: any;\n    updated_at: any;\n    added_by: string;\n    type: string;\n    status: string;\n    cover: string;\n\n    constructor() {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganisationService.html":{"url":"injectables/OrganisationService.html","title":"injectable - OrganisationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OrganisationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/organisation.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for organisation related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createOrganisation\n                            \n                            \n                                deleteOrganisationById\n                            \n                            \n                                getOrganisationById\n                            \n                            \n                                getOrganisationByName\n                            \n                            \n                                getOrganisations\n                            \n                            \n                                    Private\n                                removeSpecialChars\n                            \n                            \n                                updateOrganisation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/organisation.service.ts:33\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Organisations Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected reference for AuthenticationService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createOrganisation\n                        \n                        \n                    \n                \n            \n            \n                \ncreateOrganisation(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:100\n                \n            \n\n\n            \n                \n                    Creates an organisation entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new organisation's name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with the created object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteOrganisationById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteOrganisationById(organisationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:130\n                \n            \n\n\n            \n                \n                    Deletes an entry by its id from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The organisation id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrganisationById\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrganisationById(organisationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:72\n                \n            \n\n\n            \n                \n                    Finds an organisation by its id in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Organisation's id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the organisation with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrganisationByName\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrganisationByName(organisationName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:86\n                \n            \n\n\n            \n                \n                    Finds an organisation by its name in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisationName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the organisation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all organisation with that name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrganisations\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrganisations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:57\n                \n            \n\n\n            \n                \n                    Getter method for all organisations from the local database\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all organisations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            removeSpecialChars\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeSpecialChars(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:141\n                \n            \n\n\n            \n                \n                    Removes diacritics from a string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A string with diacritics\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the new string, without diacritics\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOrganisation\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOrganisation(organisation: Organisation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:118\n                \n            \n\n\n            \n                \n                    Updates an organisation entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisation\n                                    \n                                                Organisation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new organisation entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'organisations'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/organisation.service.ts:33\n                            \n                        \n\n                \n                    \n                        Table type\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { from, Observable } from 'rxjs';\nimport { AuthenticationService } from '../authentication';\nimport { Organisation } from '../model/organisation.model';\nimport * as moment from 'moment';\n\n/**\n * Reference for local PouchDB Organisations Database\n */\nconst localDB = new PouchDB('organisations');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Organisations Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/organisations');\n\n/**\n * Provider for organisation related operations\n */\n@Injectable()\nexport class OrganisationService {\n  /**\n   * Table type\n   */\n  private type = 'organisations';\n\n  /**\n   * Class constructor, sets the synchronization options for CouchDB and PouchDB Organisations Database\n   * @param authenticationService Injected reference for AuthenticationService\n   */\n  constructor(private authenticationService: AuthenticationService) {\n    const options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);\n\n    localDB.createIndex({\n      index: {fields: ['name', 'slug']}\n    });\n   }\n\n  /**\n   * Getter method for all organisations from the local database\n   * @returns An Observable with all organisations\n   */\n  getOrganisations(): Observable {\n    return from(localDB.find({\n      selector: {\n          type: this.type\n      },\n      include_docs: true,\n      attachments: true\n    }));\n  }\n\n  /**\n   * Finds an organisation by its id in the local database\n   * @param organisationId Organisation's id\n   * @returns An Observable containing the organisation with that id\n   */\n  getOrganisationById(organisationId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        _id: {$eq: organisationId},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   * Finds an organisation by its name in the local database\n   * @param organisationName The name of the organisation\n   * @returns An Observable with all organisation with that name\n   */\n  getOrganisationByName(organisationName: string): Observable {\n    return from(localDB.find({\n      selector: {\n        name: {$eq: organisationName},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   * Creates an organisation entry in the local database\n   * @param name String value containing the new organisation's name\n   * @returns An Observable with the created object\n   */\n  createOrganisation(name: string): Observable {\n    const currentUser = this.authenticationService.user;\n    const organisation = new Organisation();\n    organisation.name = name;\n    organisation.slug = this.removeSpecialChars(name);\n    organisation.added_by = currentUser._id;\n    organisation.created_at = moment().format('Y-MM-DD H:mm:ss');\n    organisation.updated_at = moment().format('Y-MM-DD H:mm:ss');\n    organisation.type = this.type;\n    organisation.status = 'inactiv';\n\n    return from(localDB.post(organisation));\n  }\n\n  /**\n   * Updates an organisation entry in the local database\n   * @param organisation The new organisation entry\n   */\n  updateOrganisation(organisation: Organisation) {\n    localDB.get(organisation._id).then((doc) => {\n      doc.name = organisation.name ? organisation.name : doc.name;\n      doc.slug = organisation.name ? this.removeSpecialChars(organisation.name) : doc.slug;\n      localDB.put(doc);\n    });\n  }\n\n  /**\n   * Deletes an entry by its id from the local database\n   * @param organisationId The organisation id\n   */\n  deleteOrganisationById(organisationId: string) {\n    localDB.get(organisationId).then((doc) => {\n      return localDB.remove(doc);\n    });\n  }\n\n   /**\n    * Removes diacritics from a string\n    * @param text A string with diacritics\n    * @returns the new string, without diacritics\n    */\n  private removeSpecialChars(text: string): string {\n    const input   = 'ăâîșț';\n    const output  = 'aaist';\n    const regex = new RegExp('[' + input + ']', 'g');\n    const transl = {};\n\n    const lookup = (m) => transl[m] || m;\n\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordValidation.html":{"url":"classes/PasswordValidation.html","title":"class - PasswordValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/password-validation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                MatchPassword\n                            \n                            \n                                    Static\n                                passwordValidation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            MatchPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    MatchPassword(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/password-validation.ts:11\n                \n            \n\n\n            \n                \n                    Matching passwords validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the values from the inputs\nthat are being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the strings match, an error message otherwise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            passwordValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    passwordValidation(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/password-validation.ts:30\n                \n            \n\n\n            \n                \n                    Password validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the value from the input\nthat is being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the string respects the pattern, an error message otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AbstractControl} from '@angular/forms';\n\nexport class PasswordValidation {\n\n    /**\n     * Matching passwords validator\n     * @param abstractControl An abstract control reference, to automatically take the values from the inputs\n     * that are being validated\n     * @returns null if the strings match, an error message otherwise\n     */\n    static MatchPassword(abstractControl: AbstractControl): any {\n        const password = abstractControl.get('password').value;\n        const confirmPassword = abstractControl.get('confirmPassword').value;\n\n        if (password !== confirmPassword) {\n            abstractControl.get('confirmPassword').setErrors({\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            });\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Password validator\n     * @param abstractControl An abstract control reference, to automatically take the value from the input\n     * that is being validated\n     * @returns null if the string respects the pattern, an error message otherwise\n     */\n    static passwordValidation(abstractControl: AbstractControl): any {\n        const number = new RegExp('\\\\d');\n        const password = abstractControl.value;\n        const uppercase = new RegExp('[A-Z]');\n        const lowercase = new RegExp('[a-z]');\n        const special = new RegExp(/[!#$%&\\‘\\(\\)\\*?@\\[\\]^_\\+\\.`\\{\\|\\}~]/);\n\n        if (!number.test(password)) {\n            return {\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            };\n        }\n\n        if (!uppercase.test(password)) {\n            return {\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            };\n        }\n\n        if (!lowercase.test(password)) {\n            return {\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            };\n        }\n\n        if (!special.test(password)) {\n            return {\n                password: 'Parolele trebuie să corespundă și să conțină minim 8 caractere, o literă mare, un număr și un caracter special.'\n            };\n        }\n\n        if (password.length \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PhoneValidation.html":{"url":"classes/PhoneValidation.html","title":"class - PhoneValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PhoneValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/phone-validation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                phoneValidation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            phoneValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    phoneValidation(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/phone-validation.ts:11\n                \n            \n\n\n            \n                \n                    Phone validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the value from the input\nthat is being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the string respects the pattern, an error message otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\n\nexport class PhoneValidation {\n\n    /**\n     * Phone validator\n     * @param abstractControl An abstract control reference, to automatically take the value from the input\n     * that is being validated\n     * @returns null if the string respects the pattern, an error message otherwise\n     */\n    static phoneValidation(abstractControl: AbstractControl): any {\n        const phone = abstractControl.value;\n        const reg = new RegExp('^[+]{0,1}[0-9]+$');\n\n        if ((reg.test(phone) && phone.length >= 10)) {\n            if (phone.length === 12 && phone.indexOf('+') >= 0) {\n                return null;\n            }\n\n            if (phone.length === 10 && phone.indexOf('+') \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecoverPasswordComponent.html":{"url":"components/RecoverPasswordComponent.html","title":"component - RecoverPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecoverPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/recover-password/recover-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recover-password\n            \n\n            \n                styleUrls\n                ./recover-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./recover-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loading\n                            \n                            \n                                resetPasswordForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentToast\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:28\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected reference for AuthenticationService\n\n                                                        \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller for toast messages display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:44\n                \n            \n\n\n            \n                \n                    Page initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentToast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToast(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:72\n                \n            \n\n\n            \n                \n                    Presents a toast that will be automatically dismessed after 3 seconds\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        toast message\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:53\n                \n            \n\n\n            \n                \n                    Sends the recover password request\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:23\n                            \n                        \n\n                \n                    \n                        Error message that will be displayed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:28\n                            \n                        \n\n                \n                    \n                        Page is loading or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPasswordForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/recover-password/recover-password.component.ts:18\n                            \n                        \n\n                \n                    \n                        Form reference\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core';\nimport { EmailValidation } from 'src/app/core/validators/email-validation';\nimport { ToastController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-recover-password',\n  templateUrl: './recover-password.component.html',\n  styleUrls: ['./recover-password.component.scss'],\n})\nexport class RecoverPasswordComponent implements OnInit {\n    /**\n     * Form reference\n     */\n    resetPasswordForm: FormGroup;\n\n    /**\n     * Error message that will be displayed\n     */\n    errorMessage: string = null;\n\n    /**\n     * Page is loading or not\n     */\n    loading = false;\n\n    /**\n     * Class constructor\n     *\n     * @param router Provider for router navigation\n     * @param authenticationService Injected reference for AuthenticationService\n     * @param toastController Controller for toast messages display\n     */\n    constructor(private router: Router,\n                private authenticationService: AuthenticationService,\n                private toastController: ToastController) { }\n\n    /**\n     * Page initialisation\n     */\n    ngOnInit() {\n        this.resetPasswordForm = new FormGroup({\n        email: new FormControl('', [Validators.required, EmailValidation.emailValidation])\n        });\n    }\n\n    /**\n     * Sends the recover password request\n     */\n    resetPassword() {\n        this.loading = true;\n        this.authenticationService.recoverPassword(this.resetPasswordForm.value.email).subscribe(response => {\n            this.loading = false;\n            this.presentToast('Cererea a fost înregistrată. Vă rugăm verificați atât în inbox cât și în spam.');\n            this.router.navigate(['/auth/login']);\n        }, error => {\n            this.loading = false;\n            this.errorMessage = 'Adresa de email specificată nu există. Te rugăm să verifici și să încerci din nou.';\n            setTimeout(() => {\n                this.errorMessage = null;\n            }, 3000);\n        });\n    }\n\n     /**\n      * Presents a toast that will be automatically dismessed after 3 seconds\n      * @param message toast message\n      */\n    async presentToast(message: string) {\n        const toast = await this.toastController.create({\n          message,\n          position: 'bottom',\n          duration: 3000\n        });\n        toast.present();\n    }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      Adresă de email\n      \n    \n\n    \n       {{ resetPasswordForm.controls.email.errors?.email || errorMessage }} \n     \n\n    Autentificare\n    Trimite\n  \n\n  \n      \n  \n\n\n    \n\n    \n                \n                    ./recover-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Adresă de email                     {{ resetPasswordForm.controls.email.errors?.email || errorMessage }}          Autentificare    Trimite            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecoverPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RequestInterceptor.html":{"url":"interceptors/RequestInterceptor.html","title":"interceptor - RequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  RequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/request.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Prefixes all requests with environment.serverUrl and adds the authentication token to requests\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/request.interceptor.ts:17\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected service referes the AuthenticationService for handling authentication related operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/request.interceptor.ts:31\n                \n            \n\n\n            \n                \n                    Intercepts all requests that are sent and adds extra information to them\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current request that is being sent\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Handles the next state of the request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The new request, with the additional information\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { environment } from '../../../environments/environment';\n\n/**\n * Prefixes all requests with `environment.serverUrl` and adds the authentication token to requests\n */\n@Injectable()\nexport class RequestInterceptor implements HttpInterceptor {\n\n  /**\n   * Class constructor\n   * @param authenticationService Injected service referes the AuthenticationService for handling authentication related operations\n   */\n  constructor(private authenticationService: AuthenticationService) {}\n\n  /**\n   * Intercepts all requests that are sent and adds extra information to them\n   * @param request The current request that is being sent\n   * @param next Handles the next state of the request\n   * @returns The new request, with the additional information\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    request = request.clone({\n      setHeaders: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json; charset=utf-8',\n      Authorization: `Bearer ${this.authenticationService.accessToken}`,\n      },\n      url: environment.serverUrl + request.url\n    });\n\n    return next.handle(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/authentication/reset-password/reset-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                ./reset-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loading\n                            \n                            \n                                resetPasswordForm\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialiseView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentToast\n                            \n                            \n                                resetPassword\n                            \n                            \n                                setErrorMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService, formBuilder: FormBuilder, route: ActivatedRoute, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected reference for AuthenticationService\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder reference, used in creating rective forms\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for current route\n\n                                                        \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller for toast messages display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialiseView\n                        \n                        \n                    \n                \n            \n            \n                \ninitialiseView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:76\n                \n            \n\n\n            \n                \n                    Page initialisation after user was logged out (if neccessary)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:52\n                \n            \n\n\n            \n                \n                    Page initialisation\nIf user is already logged in when page is accessed, then a logout is performed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentToast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToast(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:114\n                \n            \n\n\n            \n                \n                    Presents a toast that will be automatically dismessed after 3 seconds\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        toast message\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:87\n                \n            \n\n\n            \n                \n                    Sends the reset password request\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setErrorMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsetErrorMessage(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:103\n                \n            \n\n\n            \n                \n                    Changes the value of the error message and clears it after 3 seconds\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        error message that will be displayed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:27\n                            \n                        \n\n                \n                    \n                        Error message that will be displayed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:32\n                            \n                        \n\n                \n                    \n                        Page is loading or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPasswordForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:17\n                            \n                        \n\n                \n                    \n                        Form reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:42\n                            \n                        \n\n                \n                    \n                        Provider for router navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/authentication/reset-password/reset-password.component.ts:22\n                            \n                        \n\n                \n                    \n                        Token for password reset\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from 'src/app/core';\nimport { PasswordValidation } from 'src/app/core/validators/password-validation';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss'],\n})\nexport class ResetPasswordComponent implements OnInit {\n    /**\n     * Form reference\n     */\n     resetPasswordForm: FormGroup;\n\n     /**\n      * Token for password reset\n      */\n    token: string;\n\n    /**\n     * Error message that will be displayed\n     */\n    errorMessage: string;\n\n    /**\n     * Page is loading or not\n     */\n    loading = false;\n\n\n    /**\n     * @param router Provider for router navigation\n     * @param authenticationService Injected reference for AuthenticationService\n     * @param formBuilder FormBuilder reference, used in creating rective forms\n     * @param route Provider for current route\n     * @param toastController Controller for toast messages display\n     */\n    constructor(public router: Router,\n                private authenticationService: AuthenticationService,\n                private formBuilder: FormBuilder,\n                private route: ActivatedRoute,\n                private toastController: ToastController) { }\n\n    /**\n     * Page initialisation\n     * If user is already logged in when page is accessed, then a logout is performed\n     */\n    ngOnInit() {\n        if (this.authenticationService.isAuthenticated() ) {\n            this.authenticationService.logout().subscribe(response => {\n                this.initialiseView();\n            });\n        } else {\n            this.initialiseView();\n        }\n\n        this.resetPasswordForm = this.formBuilder.group({\n            password: ['', [Validators.required,\n                PasswordValidation.passwordValidation\n            ]],\n            confirmPassword: ['', [Validators.required,\n                PasswordValidation.passwordValidation\n            ]],\n            }, {\n                validator: PasswordValidation.MatchPassword\n            });\n    }\n\n    /**\n     * Page initialisation after user was logged out (if neccessary)\n     */\n    initialiseView() {\n        this.route.params.subscribe(\n            (params) => {\n                this.token = params['token'];\n            }\n        );\n    }\n\n    /**\n     * Sends the reset password request\n     */\n    resetPassword() {\n        this.loading = true;\n        this.authenticationService.resetPassword(this.resetPasswordForm.value.password, this.token).subscribe(response => {\n                this.presentToast('Parolă resetată cu succes.');\n                this.loading = false;\n                this.router.navigate(['/auth/login']);\n            }, error => {\n                this.loading = false;\n                this.setErrorMessage('A apărut o eroare. Vă rugăm reîncercați.');\n            });\n    }\n\n    /**\n     * Changes the value of the error message and clears it after 3 seconds\n     * @param message error message that will be displayed\n     */\n    setErrorMessage(message: string) {\n        this.errorMessage = message;\n        setTimeout(() => {\n            this.errorMessage = null;\n        }, 3000);\n    }\n\n    /**\n     * Presents a toast that will be automatically dismessed after 3 seconds\n     * @param message toast message\n     */\n    async presentToast(message: string) {\n        const toast = await this.toastController.create({\n          message,\n          position: 'bottom',\n          duration: 3000\n        });\n        toast.present();\n    }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      Parolă\n      \n    \n\n    \n      Confirmă Parola\n      \n    \n    \n    \n       {{ resetPassword.errors?.password || resetPasswordForm.controls.confirmPassword.errors?.password || resetPasswordForm.controls.password.errors?.password }} \n    \n\n    Autentificare\n    Trimite\n  \n\n  \n      \n  \n\n\n    \n\n    \n                \n                    ./reset-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Parolă                    Confirmă Parola                         {{ resetPassword.errors?.password || resetPasswordForm.controls.confirmPassword.errors?.password || resetPasswordForm.controls.password.errors?.password }}         Autentificare    Trimite            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RootObject.html":{"url":"interfaces/RootObject.html","title":"interface - RootObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RootObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/error.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for error object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attributes\n                                \n                                \n                                        error\n                                \n                                \n                                        message\n                                \n                                \n                                        statusCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                    \n                                \n                                \n                                    \n                                        attributes:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace ErrorModel {\n  /**\n   * Interface for error object\n   */\n  export interface RootObject {\n    statusCode: number;\n    error: string;\n    message: string;\n    attributes?: any;\n  }\n\n  /**\n   * Interface for error message\n   */\n  export interface ErrorMessageObject {\n    id: number;\n    error: string;\n    type: string;\n    serviceUrl: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteReusableStrategy.html":{"url":"classes/RouteReusableStrategy.html","title":"class - RouteReusableStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteReusableStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/route-reusable-strategy.ts\n        \n\n            \n                Description\n            \n            \n                A route strategy allowing for explicit route reuse.\nUsed as a workaround for https://github.com/angular/angular/issues/18374\nTo reuse a given route, add data: { reuse: true } to the route definition.\n\n            \n\n            \n                Extends\n            \n            \n                        RouteReuseStrategy\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                retrieve\n                            \n                            \n                                    Public\n                                shouldAttach\n                            \n                            \n                                    Public\n                                shouldDetach\n                            \n                            \n                                    Public\n                                shouldReuseRoute\n                            \n                            \n                                    Public\n                                store\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            retrieve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    retrieve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:47\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DetachedRouteHandle | null\n\n                    \n                    \n                        null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldAttach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldAttach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:38\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        false\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldDetach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldDetach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:19\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        false\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldReuseRoute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:56\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    future\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Future activated route\n\n                                    \n                                \n                                \n                                    curr\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            store\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:28\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                                \n                                    detachedTree\n                                    \n                                            DetachedRouteHandle | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The detached tree\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ActivatedRouteSnapshot,\n  DetachedRouteHandle,\n  RouteReuseStrategy\n} from '@angular/router';\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @returns false\n   */\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @param detachedTree The detached tree\n   */\n  public store(\n    route: ActivatedRouteSnapshot,\n    detachedTree: DetachedRouteHandle | null\n  ): void {}\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @returns false\n   */\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @returns null\n   */\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param future Future activated route\n   * @param curr Current activated route\n   */\n  public shouldReuseRoute(\n    future: ActivatedRouteSnapshot,\n    curr: ActivatedRouteSnapshot\n  ): boolean {\n    return future.routeConfig === curr.routeConfig || future.data.reuse;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SendMessageComponent.html":{"url":"components/SendMessageComponent.html","title":"component - SendMessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SendMessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/volunteer/send-message/send-message.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-send-message\n            \n\n            \n                styleUrls\n                ./send-message.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./send-message.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                base64Image\n                            \n                            \n                                messageForm\n                            \n                            \n                                    Private\n                                phoneNumbers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addImage\n                            \n                            \n                                checkPemission\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sms: SMS, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/volunteer/send-message/send-message.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sms\n                                                  \n                                                        \n                                                                    SMS\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for sending SMS messages\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addImage\n                        \n                        \n                    \n                \n            \n            \n                \naddImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:58\n                \n            \n\n\n            \n                \n                    Adds an image from camera to the app and uses base64 codification to convert it into a string\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkPemission\n                        \n                        \n                    \n                \n            \n            \n                \ncheckPemission()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:85\n                \n            \n\n\n            \n                \n                    Checks for SMS permission, if granted sends the SMS\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:41\n                \n            \n\n\n            \n                \n                    Page initialisation: the volunteer id needs to be retrieved from the url\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:72\n                \n            \n\n\n            \n                \n                    Sends the message and image to the selected volunteer/s\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            base64Image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:29\n                            \n                        \n\n                \n                    \n                        Codification of the image that will be sent\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messageForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:24\n                            \n                        \n\n                \n                    \n                        The form that contains the message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            phoneNumbers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:19\n                            \n                        \n\n                \n                    \n                        A list of selected volunteers' phone numbers\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Camera } from '@ionic-native/camera';\nimport { SMS } from '@ionic-native/sms/ngx';\nimport { Volunteer } from 'src/app/core/model/volunteer.model';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-send-message',\n  templateUrl: './send-message.component.html',\n  styleUrls: ['./send-message.component.scss']\n})\n\nexport class SendMessageComponent implements OnInit {\n\n  /**\n   * A list of selected volunteers' phone numbers\n   */\n  private phoneNumbers: string[] = [];\n\n  /**\n   * The form that contains the message\n   */\n  messageForm: FormGroup;\n\n  /**\n   * Codification of the image that will be sent\n   */\n  public base64Image: string;\n\n  /**\n   * @param sms Provider for sending SMS messages\n   * @param router Provider for router navigation\n   */\n  constructor(private sms: SMS,\n              private router: Router) { }\n\n  /**\n   * Page initialisation: the volunteer id needs to be retrieved from the url\n   */\n  ngOnInit() {\n      const navigation = this.router.getCurrentNavigation();\n\n      if (navigation && navigation.extras && navigation.extras.state) {\n        const volunteers = navigation.extras.state.volunteers;\n\n        volunteers.forEach((volunteer: Volunteer) => this.phoneNumbers.push(volunteer.phone));\n      }\n\n      this.messageForm = new FormGroup({\n        message: new FormControl('', [Validators.required])\n        });\n  }\n\n  /**\n   * Adds an image from camera to the app and uses base64 codification to convert it into a string\n   */\n  addImage() {\n    Camera.getPicture({\n      destinationType: Camera.DestinationType.DATA_URL,\n      targetWidth: 1000,\n      targetHeight: 1000\n    }).then((imageData) => {\n      this.base64Image = 'data:image/jpeg;base64,' + imageData;\n    }, (err) => {\n    });\n  }\n\n  /**\n   * Sends the message and image to the selected volunteer/s\n   */\n  sendMessage() {\n    const options = {\n        replaceLineBreaks: false,\n        android: {\n            intent: 'INTENT'\n        }\n    };\n    this.sms.send(this.phoneNumbers, this.messageForm.value.message, options);\n  }\n\n  /**\n   * Checks for SMS permission, if granted sends the SMS\n   */\n  checkPemission() {\n    this.sms.hasPermission();\n    if (this.sms.hasPermission()) {\n      this.sendMessage();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n  \n\n\n\n  \n    \n      \n      Trimite mesaj\n    \n\n    \n      \n        \n          Mesajul tău\n        \n      \n      \n        \n      \n      \n        \n          \n          \n              Adaugă o fotografie\n          \n        \n        \n          \n            \n          \n        \n       -->\n    \n\n    Trimite mesaj\n  \n\n    \n\n    \n                \n                    ./send-message.component.scss\n                \n                .sc-ion-textarea-md-h {\n    margin-top: 0;\n}\n\nion-button ion-icon {\n    font-size: 24px;\n}\n\n.full-button-bottom {\n  margin: 0;\n  height: 50px;\n}\n\n.header {\n    background-color: #f9f9f9; \n    min-height: 100px; \n    text-align: center;\n    padding: 30px 10px;\n\n    ion-icon {\n        font-size: 35px;\n    }\n\n    ion-label {\n        display: block;\n        font-size: 25px;\n    }\n}\n\n.message-textarea {\n    height: 300px;\n}\n\nion-textarea textarea {\n    height: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      Trimite mesaj                                Mesajul tău                                                                                  Adaugă o fotografie                                                                         -->        Trimite mesaj  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SendMessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SsnValidation.html":{"url":"classes/SsnValidation.html","title":"class - SsnValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SsnValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/ssn-validation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                ssnValidation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            ssnValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ssnValidation(abstractControl: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/validators/ssn-validation.ts:11\n                \n            \n\n\n            \n                \n                    Ssn validator\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    abstractControl\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An abstract control reference, to automatically take the value from the input\nthat is being validated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        null if the string respects the pattern, an error message otherwise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\n\nexport class SsnValidation {\n\n    /**\n     * Ssn validator\n     * @param abstractControl An abstract control reference, to automatically take the value from the input\n     * that is being validated\n     * @returns null if the string respects the pattern, an error message otherwise\n     */\n    static ssnValidation(abstractControl: AbstractControl): any {\n        const ssn = parseInt(abstractControl.value, 10) || 0;\n\n        if (ssn.toString().length === 13) {\n            const cnp = Array.from(String(ssn), Number);\n            const coefs = [2, 7, 9, 1, 4, 6, 3, 5, 8, 2, 7, 9];\n            const idx = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n            const s = idx.map((x) => coefs[x] * cnp[x]);\n            const res = s.reduce((a, b) => a + b, 0) % 11;\n\n            if ((res \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StaticsService.html":{"url":"injectables/StaticsService.html","title":"injectable - StaticsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StaticsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/statics.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for locations: counties and cities\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city_type\n                            \n                            \n                                county_type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCityList\n                            \n                            \n                                    Public\n                                getCountyList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/statics.service.ts:35\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Statics Database\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCityList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCityList(countyId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/statics.service.ts:69\n                \n            \n\n\n            \n                \n                    Getter for the list of cities\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    countyId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the county from which the cities will be selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that contains the list of cities from resource files\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCountyList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCountyList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/statics.service.ts:54\n                \n            \n\n\n            \n                \n                    Getter for the list of counties\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that contains the list of counties from resource files\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city_type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'cities'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/statics.service.ts:30\n                            \n                        \n\n                \n                    \n                        Type for city entries\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county_type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'counties'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/statics.service.ts:35\n                            \n                        \n\n                \n                    \n                        Type for county entries\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\n\n/**\n * Reference for local PouchDB Statics Database\n */\nconst localDB = new PouchDB('statics');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Statics Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/statics');\n\n/**\n * Provider for locations: counties and cities\n */\n@Injectable()\nexport class StaticsService {\n    /**\n     * Type for city entries\n     */\n    city_type = 'cities';\n\n    /**\n     * Type for county entries\n     */\n    county_type = 'counties';\n\n    /**\n     * Class constructor, sets the synchronization options for CouchDB and PouchDB Statics Database\n     */\n    constructor() {\n        const options = {\n            live: true,\n            retry: true,\n            continuous: true\n        };\n\n        localDB.replicate.from(remoteDB, options);\n    }\n\n    /**\n     * Getter for the list of counties\n     * @returns An observable that contains the list of counties from resource files\n     */\n    public getCountyList(): Observable {\n        return from(localDB.allDocs(\n            {\n                include_docs: true,\n                startkey: 'county_romania_',\n                endkey: 'county_romania_\\ufff0'\n            }\n        ));\n    }\n\n    /**\n     * Getter for the list of cities\n     * @param countyId The id of the county from which the cities will be selected\n     * @returns An observable that contains the list of cities from resource files\n     */\n    public getCityList(countyId: string): Observable {\n        return from(localDB.query('cities/slug',\n            {\n                startkey: [countyId, null],\n                endkey: [countyId, {}]\n            }\n        ));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UnauthenticatedGuard.html":{"url":"guards/UnauthenticatedGuard.html","title":"guard - UnauthenticatedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    UnauthenticatedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/authentication/unauthenticated.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Provides a guard for protecting unauthenticated routes (such as login)\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/unauthenticated.guard.ts:10\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular value which handles routing operations\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service which handles the authentication operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/unauthenticated.guard.ts:27\n                \n            \n\n\n            \n                \n                    Determines if a user can access a route, depending on its state\nIf the route isn't allowed, it automatically redirects to home page\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        a boolean value, current user's status: unauthenticated or authenticated\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { AuthenticationService } from './authentication.service';\n\n/**\n * Provides a guard for protecting unauthenticated routes (such as login)\n */\n@Injectable()\nexport class UnauthenticatedGuard implements CanActivate {\n\n   /**\n    * Class constructor\n    * @param router Angular value which handles routing operations\n    * @param authenticationService The service which handles the authentication operations\n    */\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n   /**\n    * Determines if a user can access a route, depending on its state\n    * If the route isn't allowed, it automatically redirects to home page\n    * @returns a boolean value, current user's status: unauthenticated or authenticated\n    */\n  canActivate(): boolean {\n    if (!this.authenticationService.isAuthenticated()) {\n      return true;\n    }\n\n    this.router.navigate(['/home'], {\n      replaceUrl: true\n    });\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for user object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        phone\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  /**\n   * Interface for login payload\n   */\n  export interface LoginPayload {\n    username: string;\n    password: string;\n  }\n\n  /**\n   * Interface for user object\n   */\n  export interface User {\n    _id: string;\n    name: string;\n    phone?: any;\n    email: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n\n  /**\n   * Interface for credentials object\n   */\n  export interface Credentials {\n    user: User;\n    token: string;\n    session: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Volunteer.html":{"url":"classes/Volunteer.html","title":"class - Volunteer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Volunteer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/volunteer.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for volunteer object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                _rev\n                            \n                            \n                                added_by\n                            \n                            \n                                allocation\n                            \n                            \n                                city\n                            \n                            \n                                comments\n                            \n                            \n                                county\n                            \n                            \n                                courses\n                            \n                            \n                                created_at\n                            \n                            \n                                email\n                            \n                            \n                                job\n                            \n                            \n                                name\n                            \n                            \n                                organisation\n                            \n                            \n                                phone\n                            \n                            \n                                slug\n                            \n                            \n                                ssn\n                            \n                            \n                                type\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/model/volunteer.model.ts:39\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _rev\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            added_by\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            job\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organisation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ssn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Volunteer {\n    _id: string;\n    _rev: string;\n    name: string;\n    slug: string;\n    ssn: string;\n    email: string;\n    phone: string;\n    county: {\n        _id: string;\n        name: string;\n    };\n    city: {\n        _id: string;\n        name: string;\n    };\n    organisation: {\n       _id: string,\n       name: string,\n       slug: string,\n       website: string\n    };\n    courses: {\n        _id: string;\n        course_name_id: string;\n        name: string;\n        obtained: string;\n        acredited: string;\n    }[];\n    allocation: string;\n    comments: string;\n    job: string;\n    created_at: any;\n    updated_at: any;\n    added_by: number;\n    type: string;\n\n    constructor() {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VolunteerPage.html":{"url":"components/VolunteerPage.html","title":"component - VolunteerPage","body":"\n                   \n\n\n\n\n\n  Components\n  VolunteerPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/volunteer/volunteer.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-volunteer\n            \n\n            \n                styleUrls\n                ./volunteer.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./volunteer.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-volunteer',\n  templateUrl: './volunteer.page.html',\n  styleUrls: ['./volunteer.page.scss'],\n})\nexport class VolunteerPage {\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./volunteer.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationPage', 'selector': 'app-authentication'},{'name': 'CustomSelectorComponent', 'selector': 'app-custom-selector'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VolunteerPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VolunteerPageModule.html":{"url":"modules/VolunteerPageModule.html","title":"module - VolunteerPageModule","body":"\n                   \n\n\n\n\n    Modules\n    VolunteerPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VolunteerPageModule\n\n\n\ncluster_VolunteerPageModule_declarations\n\n\n\n\nAddVolunteerComponent\n\nAddVolunteerComponent\n\n\n\nVolunteerPageModule\n\nVolunteerPageModule\n\nVolunteerPageModule -->\n\nAddVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nListVolunteerComponent\n\nListVolunteerComponent\n\nVolunteerPageModule -->\n\nListVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nSendMessageComponent\n\nSendMessageComponent\n\nVolunteerPageModule -->\n\nSendMessageComponent->VolunteerPageModule\n\n\n\n\n\nValidateVolunteerComponent\n\nValidateVolunteerComponent\n\nVolunteerPageModule -->\n\nValidateVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nVolunteerPage\n\nVolunteerPage\n\nVolunteerPageModule -->\n\nVolunteerPage->VolunteerPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/volunteer/volunteer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddVolunteerComponent\n                        \n                        \n                            ListVolunteerComponent\n                        \n                        \n                            SendMessageComponent\n                        \n                        \n                            ValidateVolunteerComponent\n                        \n                        \n                            VolunteerPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { VolunteerPage } from './volunteer.page';\nimport { AddVolunteerComponent } from './add-volunteer/add-volunteer.component';\nimport { ListVolunteerComponent } from './list-volunteer/list-volunteer.component';\nimport { ValidateVolunteerComponent } from './validate-volunteer/validate-volunteer.component';\nimport { AuthenticationGuard } from '../../core/authentication/authentication.guard';\nimport { SendMessageComponent } from './send-message/send-message.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VolunteerPage,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'add',\n    component: AddVolunteerComponent,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'list',\n    component: ListVolunteerComponent,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'validate',\n    component: ValidateVolunteerComponent,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'send',\n    component: SendMessageComponent,\n    canActivate: [AuthenticationGuard]\n  }\n\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n  ],\n  declarations: [\n    VolunteerPage,\n    AddVolunteerComponent,\n    ListVolunteerComponent,\n    ValidateVolunteerComponent,\n    SendMessageComponent\n  ]\n})\nexport class VolunteerPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VolunteerService.html":{"url":"injectables/VolunteerService.html","title":"injectable - VolunteerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  VolunteerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/volunteer.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for volunteer related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allocateVolunteer\n                            \n                            \n                                createVolunteer\n                            \n                            \n                                deleteVolunteerById\n                            \n                            \n                                filter\n                            \n                            \n                                getVolunteerById\n                            \n                            \n                                getVolunteerBySsn\n                            \n                            \n                                getVolunteers\n                            \n                            \n                                    Private\n                                removeSpecialChars\n                            \n                            \n                                search\n                            \n                            \n                                updateVolunteer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/volunteer.service.ts:36\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Volunteers Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                        CourseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for course related operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allocateVolunteer\n                        \n                        \n                    \n                \n            \n            \n                \nallocateVolunteer(allocationId: string, volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:299\n                \n            \n\n\n            \n                \n                    Searches for a volunteer with the given volunteer id and allocates it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    allocationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Last allocation id\n\n                                    \n                                \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createVolunteer\n                        \n                        \n                    \n                \n            \n            \n                \ncreateVolunteer(name: string, ssn: string, phone: string, county: any, city: any, organisation: any, course: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:164\n                \n            \n\n\n            \n                \n                    Creates a volunteer entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's name\n\n                                    \n                                \n                                \n                                    ssn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's ssn (Social Security Number)\n\n                                    \n                                \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's phone number\n\n                                    \n                                \n                                \n                                    county\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's county\n\n                                    \n                                \n                                \n                                    city\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's city\n\n                                    \n                                \n                                \n                                    organisation\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object value containing the new volunteer's organisation\nEither contains an object with the following properties {id, name, website}, or it's null\n\n                                    \n                                \n                                \n                                    course\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer's course with properties: {id, name, acredited, obtained}\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with the created object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteVolunteerById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteVolunteerById(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:243\n                \n            \n\n\n            \n                \n                    Deletes an entry by its id from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The volunteer id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter(countyId: string, organisationId: string, courseId: string, page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:258\n                \n            \n\n\n            \n                \n                    Filters local Volunteers database by the given parameters' values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    countyId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        County id\n\n                                    \n                                \n                                \n                                    organisationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Organisation id\n\n                                    \n                                \n                                \n                                    courseId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course name id\n\n                                    \n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A number defining the current page of volunteers from the total list (used to paginate the response)\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of volunteers per page\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all volunteers matching the filters\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolunteerById\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolunteerById(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:129\n                \n            \n\n\n            \n                \n                    Finds a volunteer by its id in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer's id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the volunteer with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolunteerBySsn\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolunteerBySsn(ssn: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:143\n                \n            \n\n\n            \n                \n                    Finds a volunteer by its ssn in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ssn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A ssn code\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the volunteer with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolunteers\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolunteers(page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:74\n                \n            \n\n\n            \n                \n                    Getter method for all volunteers from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A number defining the current page of volunteers from the total list (used to paginate the response)\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of volunteers per page\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all volunteers\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            removeSpecialChars\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeSpecialChars(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:312\n                \n            \n\n\n            \n                \n                    Removes diacritics from a string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A string with diacritics\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the new string, without diacritics\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(keyword: string, page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:94\n                \n            \n\n\n            \n                \n                    Searches for all volunteers from the local database whose name,ssn or organisation name matches the keyword\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    keyword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The string used for search\n\n                                    \n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A number defining the current page of volunteers from the total list (used to paginate the response)\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of volunteers per page\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all volunteers\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateVolunteer\n                        \n                        \n                    \n                \n            \n            \n                \nupdateVolunteer(volunteer: Volunteer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:220\n                \n            \n\n\n            \n                \n                    Updates a volunteer entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteer\n                                    \n                                                Volunteer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new volunteer entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'volunteers'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/volunteer.service.ts:36\n                            \n                        \n\n                \n                    \n                        Table type\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { Volunteer } from '../model/volunteer.model';\nimport { from, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CourseService } from './course.service';\nimport * as moment from 'moment';\n\ndeclare const emit: any;\n/**\n * Reference for local PouchDB Volunteers Database\n */\nconst localDB = new PouchDB('volunteers');\n\n/**\n * PouchDB find plugin added\n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Volunteers Database\n */\nconst remoteDB = new PouchDB(environment.databaseURL + '/volunteers');\n\n/**\n * Provider for volunteer related operations\n */\n@Injectable()\nexport class VolunteerService {\n\n  /**\n   * Table type\n   */\n  private type = 'volunteers';\n\n   /**\n    * Class constructor, sets the synchronization options for CouchDB and PouchDB Volunteers Database\n    * @param courseService Provider for course related operations\n    */\n  constructor(private courseService: CourseService) {\n    const options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);\n\n    localDB.createIndex({\n      index: {\n        fields: [\n          'name',\n          'slug',\n          'ssn',\n          'organisation.slug',\n          'course.[].course_name_id',\n          'organisation._id',\n          'county.id',\n          'city.id',\n          'job',\n          'comments'\n      ]}\n    });\n   }\n\n  /**\n   * Getter method for all volunteers from the local database\n   * @param page A number defining the current page of volunteers from the total list (used to paginate the response)\n   * @param limit The number of volunteers per page\n   * @returns An Observable with all volunteers\n   */\n  getVolunteers(page: number, limit: number): Observable {\n    const skip = page * limit;\n\n    return from(localDB.find({\n      selector: {\n          type: this.type\n      },\n      limit,\n      include_docs: true,\n      skip,\n    }));\n  }\n\n  /**\n   * Searches for all volunteers from the local database whose name,ssn or organisation name matches the keyword\n   * @param keyword The string used for search\n   * @param page A number defining the current page of volunteers from the total list (used to paginate the response)\n   * @param limit The number of volunteers per page\n   * @returns An Observable with all volunteers\n   */\n  search(keyword: string, page: number, limit: number): Observable {\n    const skip = page * limit;\n    const pattern = new RegExp('.*' + keyword + '.*', 'ig');\n    return from(localDB.find({\n      selector: {\n        $and: [\n          {\n            $or: [\n              {\n                slug: {$regex: pattern},\n              },\n              {\n                ssn: {$regex: pattern},\n              },\n              {\n                'organisation.slug': {$regex: pattern},\n              },\n            ]\n          },\n          {\n            type: this.type\n          }\n        ]\n      },\n      limit,\n      include_docs: true,\n      skip,\n    }));\n  }\n\n   /**\n    * Finds a volunteer by its id in the local database\n    * @param volunteerId Volunteer's id\n    * @returns An Observable containing the volunteer with that id\n    */\n  getVolunteerById(volunteerId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        _id: {$eq: volunteerId},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   * Finds a volunteer by its ssn in the local database\n   * @param ssn A ssn code\n   * @returns An Observable containing the volunteer with that id\n   */\n  getVolunteerBySsn(ssn: string): Observable {\n    return from(localDB.find({\n      selector: {\n        ssn: {$eq: ssn},\n        type: this.type\n      }\n    }));\n  }\n\n  /**\n   *  Creates a volunteer entry in the local database\n   * @param name String value containing the new volunteer's name\n   * @param ssn String value containing the new volunteer's ssn (Social Security Number)\n   * @param phone String value containing the new volunteer's phone number\n   * @param county String value containing the new volunteer's county\n   * @param city String value containing the new volunteer's city\n   * @param organisation Object value containing the new volunteer's organisation\n   * Either contains an object with the following properties {id, name, website}, or it's null\n   * @param course Volunteer's course with properties: {id, name, acredited, obtained}\n   * @returns An Observable with the created object\n   */\n  createVolunteer(name: string, ssn: string, phone: string, county: any, city: any, organisation: any, course: any): Observable {\n    const volunteer = new Volunteer();\n    volunteer.name = name;\n    volunteer.ssn = ssn;\n    volunteer.county = {\n      _id: county._id.toString(),\n      name: county.name\n    };\n    volunteer.city = {\n      _id: city._id.toString(),\n      name: city.name\n    };\n    volunteer.created_at = moment().format('Y-MM-DD H:mm:ss');\n    volunteer.updated_at = moment().format('Y-MM-DD H:mm:ss');\n    volunteer.allocation = '';\n    volunteer.phone = phone;\n    volunteer.slug = this.removeSpecialChars(name);\n    volunteer.type = this.type;\n\n    if (organisation) {\n      volunteer.organisation = {\n        _id: organisation._id,\n        name: organisation.name,\n        website: organisation.website,\n        slug: this.removeSpecialChars(organisation.name)\n      };\n    } else {\n      volunteer.organisation = null;\n    }\n\n    volunteer.courses = [];\n\n    return from(localDB.post(volunteer))\n    .pipe(\n        map((response) => {\n          if (course) {\n            this.courseService.createCourse(course, volunteer._id).subscribe((data) => {\n              volunteer.courses.push({\n                _id: data.id,\n                course_name_id: course._id,\n                name: course.name,\n                obtained: null,\n                acredited: null\n              });\n              this.updateVolunteer(volunteer);\n            });\n          }\n          return response;\n        })\n      );\n  }\n\n   /**\n    * Updates a volunteer entry in the local database\n    * @param volunteer The new volunteer entry\n    */\n  updateVolunteer(volunteer: Volunteer) {\n    localDB.get(volunteer._id).then((doc: Volunteer) => {\n      doc.name = volunteer.name ? volunteer.name : doc.name;\n      doc.slug = volunteer.name ? this.removeSpecialChars(volunteer.name) : doc.slug;\n      doc.ssn = volunteer.ssn ? volunteer.ssn : doc.ssn;\n      doc.email = volunteer.email ? volunteer.email : doc.email;\n      doc.phone = volunteer.phone ? volunteer.phone : doc.phone;\n      doc.county = volunteer.county ? volunteer.county : doc.county;\n      doc.city = volunteer.city ? volunteer.city : doc.city;\n      doc.organisation = volunteer.organisation ? volunteer.organisation : doc.organisation;\n      doc.courses = volunteer.courses ? volunteer.courses : doc.courses;\n      doc.comments = volunteer.comments ? volunteer.comments : doc.comments;\n      doc.job = volunteer.job ? volunteer.job : doc.job;\n      doc.allocation = volunteer.allocation ? volunteer.allocation : doc.allocation;\n      doc.updated_at = new Date();\n      localDB.put(doc);\n    });\n  }\n\n   /**\n    * Deletes an entry by its id from the local database\n    * @param volunteerId The volunteer id\n    */\n  deleteVolunteerById(volunteerId: string) {\n    localDB.get(volunteerId).then((doc) => {\n      localDB.remove(doc);\n    });\n  }\n\n  /**\n   * Filters local Volunteers database by the given parameters' values\n   * @param countyId County id\n   * @param organisationId Organisation id\n   * @param courseId Course name id\n   * @param page A number defining the current page of volunteers from the total list (used to paginate the response)\n   * @param limit The number of volunteers per page\n   * @returns An Observable with all volunteers matching the filters\n   */\n  filter(countyId: string, organisationId: string, courseId: string, page: number, limit: number): Observable {\n    const skip = page * limit;\n    const selector: any = {$and : []};\n\n    selector['$and'].push( {\n      type: this.type,\n    });\n\n    if (countyId) {\n      selector['$and'].push( {\n        'county.id': {$eq: countyId},\n      });\n    }\n\n    if (organisationId) {\n      selector['$and'].push(  {\n        'organisation._id': {$eq: organisationId},\n      });\n    }\n\n    if (courseId) {\n      selector['$and'].push( {courses: {\n        $elemMatch : {\n          course_name_id: {$eq: courseId},\n          }\n        }\n      });\n    }\n\n    return from(localDB.find({\n      selector,\n      limit,\n      skip\n    }));\n  }\n\n  /**\n   * Searches for a volunteer with the given volunteer id and allocates it\n   * @param allocationId Last allocation id\n   * @param volunteerId Volunteer id\n   */\n  allocateVolunteer(allocationId: string, volunteerId: string) {\n    return localDB.get(volunteerId).then((doc) => {\n      doc.allocation = allocationId;\n      doc.updated_at = new Date();\n      localDB.put(doc);\n    });\n  }\n\n  /**\n   * Removes diacritics from a string\n   * @param text A string with diacritics\n   * @returns the new string, without diacritics\n   */\n  private removeSpecialChars(text: string): string {\n      const input   = 'ăâîșț';\n      const output  = 'aaist';\n      const regex = new RegExp('[' + input + ']', 'g');\n      const transl = {};\n\n      const lookup = (m) => transl[m] || m;\n\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.service.ts\n            \n            variable\n            credentialsKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/authentication/unauthenticated.guard.ts\n            \n            guard\n            UnauthenticatedGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/components/custom-selector/custom-selector.component.ts\n            \n            component\n            CustomSelectorComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/core/http/error-handler.interceptor.ts\n            \n            interceptor\n            ErrorHandlerInterceptor\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/http/error-handler.interceptor.ts\n            \n            variable\n            credentialsKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/http/request.interceptor.ts\n            \n            interceptor\n            RequestInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            clearData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            createCookie\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            getData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            getSessionName\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            readCookie\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            setData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/model/allocation.model.ts\n            \n            class\n            Allocation\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            interface\n            Credentials\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            interface\n            LoginPayload\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            interface\n            User\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/core/model/course.model.ts\n            \n            class\n            Course\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/app/core/model/error.model.ts\n            \n            interface\n            ErrorMessageObject\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/core/model/error.model.ts\n            \n            interface\n            RootObject\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/core/model/organisation.model.ts\n            \n            class\n            Organisation\n            \n                5 %\n                (1/20)\n            \n        \n        \n            \n                \n                src/app/core/model/volunteer.model.ts\n            \n            class\n            Volunteer\n            \n                5 %\n                (1/20)\n            \n        \n        \n            \n                \n                src/app/core/route-reusable-strategy.ts\n            \n            class\n            RouteReusableStrategy\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/service/allocation.service.ts\n            \n            injectable\n            AllocationService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/service/allocation.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/allocation.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/course.service.ts\n            \n            injectable\n            CourseService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/core/service/course.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/course.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            class\n            DatabaseSyncService\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            emit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/service/error-message.service.ts\n            \n            injectable\n            ErrorMessageService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/service/organisation.service.ts\n            \n            injectable\n            OrganisationService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/service/organisation.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/organisation.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/statics.service.ts\n            \n            injectable\n            StaticsService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/service/statics.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/statics.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/volunteer.service.ts\n            \n            injectable\n            VolunteerService\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/core/service/volunteer.service.ts\n            \n            variable\n            emit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/service/volunteer.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/volunteer.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/email-validation.ts\n            \n            class\n            EmailValidation\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/validators/password-validation.ts\n            \n            class\n            PasswordValidation\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/validators/phone-validation.ts\n            \n            class\n            PhoneValidation\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/validators/ssn-validation.ts\n            \n            class\n            SsnValidation\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/pages/about/about.page.ts\n            \n            component\n            AboutPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/authentication.page.ts\n            \n            component\n            AuthenticationPage\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/logout/logout.component.ts\n            \n            component\n            LogoutComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/recover-password/recover-password.component.ts\n            \n            component\n            RecoverPasswordComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/pages/authentication/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            component\n            HomePage\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/add-volunteer/add-volunteer.component.ts\n            \n            component\n            AddVolunteerComponent\n            \n                85 %\n                (24/28)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/list-volunteer/list-volunteer.component.ts\n            \n            component\n            ListVolunteerComponent\n            \n                94 %\n                (32/34)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/send-message/send-message.component.ts\n            \n            component\n            SendMessageComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts\n            \n            component\n            ValidateVolunteerComponent\n            \n                92 %\n                (23/25)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/volunteer.page.ts\n            \n            component\n            VolunteerPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.local.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^7.2.2\n        \n            @angular/core : ^7.2.2\n        \n            @angular/forms : ^7.2.2\n        \n            @angular/http : ^7.2.2\n        \n            @angular/platform-browser : ^7.2.2\n        \n            @angular/platform-browser-dynamic : ^7.2.2\n        \n            @angular/router : ^7.2.2\n        \n            @ionic-native/camera : ^5.9.0\n        \n            @ionic-native/core : ^5.11.0\n        \n            @ionic-native/date-picker : ^5.11.0\n        \n            @ionic-native/deeplinks : ^5.11.0\n        \n            @ionic-native/in-app-browser : ^5.12.0\n        \n            @ionic-native/sms : ^5.11.0\n        \n            @ionic-native/splash-screen : ^5.0.0\n        \n            @ionic-native/status-bar : ^5.9.0\n        \n            @ionic/angular : ^4.6.2\n        \n            @ionic/lab : ^2.0.6\n        \n            @types/pouchdb : ^6.4.0\n        \n            cordova-android : ^8.0.0\n        \n            cordova-ios : ^5.0.1\n        \n            cordova-plugin-camera : ^4.0.3\n        \n            cordova-plugin-datepicker : ^0.9.3\n        \n            cordova-plugin-inappbrowser : ^3.1.0\n        \n            cordova-sms-plugin : ^1.0.0\n        \n            core-js : ^2.5.4\n        \n            ionic-plugin-deeplinks : ^1.0.20\n        \n            moment : ^2.24.0\n        \n            pouchdb : ^7.1.1\n        \n            pouchdb-find : ^7.1.1\n        \n            rxjs : ~6.5.1\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            clearData   (src/.../local-storage.service.ts)\n                        \n                        \n                            createCookie   (src/.../local-storage.service.ts)\n                        \n                        \n                            getData   (src/.../local-storage.service.ts)\n                        \n                        \n                            getSessionName   (src/.../local-storage.service.ts)\n                        \n                        \n                            readCookie   (src/.../local-storage.service.ts)\n                        \n                        \n                            setData   (src/.../local-storage.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/local-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            clearData\n                        \n                        \n                    \n                \n            \n            \n                \nclearData(type: any)\n                \n            \n\n\n\n\n            \n                \n                    Clears data from storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Storage type (local or session)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createCookie\n                        \n                        \n                    \n                \n            \n            \n                \ncreateCookie(name: any, value: any, days: any)\n                \n            \n\n\n\n\n            \n                \n                    Creates a cookie entry\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie name\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie value\n\n                                    \n                                \n                                \n                                    days\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie expiration number of days\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData(type: any)\n                \n            \n\n\n\n\n            \n                \n                    Retrieves all data from storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Storage type (local or session)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSessionName\n                        \n                        \n                    \n                \n            \n            \n                \ngetSessionName()\n                \n            \n\n\n\n\n            \n                \n                    Getter for session name\n\n\n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readCookie\n                        \n                        \n                    \n                \n            \n            \n                \nreadCookie(name: any)\n                \n            \n\n\n\n\n            \n                \n                    Getter for a cookie document by its name\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie's name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setData\n                        \n                        \n                    \n                \n            \n            \n                \nsetData(type: any, data: any)\n                \n            \n\n\n\n\n            \n                \n                    Sets data into storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Storage type (local or session)\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Information that needs to be stored\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthenticationPageModule\n\n\n\ncluster_AuthenticationPageModule_declarations\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_VolunteerPageModule\n\n\n\ncluster_VolunteerPageModule_declarations\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nAuthenticationPage\n\nAuthenticationPage\n\n\n\nAuthenticationPageModule\n\nAuthenticationPageModule\n\nAuthenticationPageModule -->\n\nAuthenticationPage->AuthenticationPageModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthenticationPageModule -->\n\nLoginComponent->AuthenticationPageModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAuthenticationPageModule -->\n\nLogoutComponent->AuthenticationPageModule\n\n\n\n\n\nRecoverPasswordComponent\n\nRecoverPasswordComponent\n\nAuthenticationPageModule -->\n\nRecoverPasswordComponent->AuthenticationPageModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationPageModule -->\n\nResetPasswordComponent->AuthenticationPageModule\n\n\n\n\n\nCustomSelectorComponent\n\nCustomSelectorComponent\n\nCoreModule -->\n\nCustomSelectorComponent->CoreModule\n\n\n\n\n\nAllocationService\n\nAllocationService\n\nCoreModule -->\n\nAllocationService->CoreModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nCoreModule -->\n\nAuthenticationService->CoreModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nCoreModule -->\n\nCourseService->CoreModule\n\n\n\n\n\nErrorHandlerInterceptor\n\nErrorHandlerInterceptor\n\nCoreModule -->\n\nErrorHandlerInterceptor->CoreModule\n\n\n\n\n\nErrorMessageService\n\nErrorMessageService\n\nCoreModule -->\n\nErrorMessageService->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\nOrganisationService\n\nOrganisationService\n\nCoreModule -->\n\nOrganisationService->CoreModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\n\n\nStaticsService\n\nStaticsService\n\nCoreModule -->\n\nStaticsService->CoreModule\n\n\n\n\n\nVolunteerService\n\nVolunteerService\n\nCoreModule -->\n\nVolunteerService->CoreModule\n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nAddVolunteerComponent\n\nAddVolunteerComponent\n\n\n\nVolunteerPageModule\n\nVolunteerPageModule\n\nVolunteerPageModule -->\n\nAddVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nListVolunteerComponent\n\nListVolunteerComponent\n\nVolunteerPageModule -->\n\nListVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nSendMessageComponent\n\nSendMessageComponent\n\nVolunteerPageModule -->\n\nSendMessageComponent->VolunteerPageModule\n\n\n\n\n\nValidateVolunteerComponent\n\nValidateVolunteerComponent\n\nVolunteerPageModule -->\n\nValidateVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nVolunteerPage\n\nVolunteerPage\n\nVolunteerPageModule -->\n\nVolunteerPage->VolunteerPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        27 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AboutPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VolunteerPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            credentialsKey   (src/.../authentication.service.ts)\n                        \n                        \n                            credentialsKey   (src/.../error-handler.interceptor.ts)\n                        \n                        \n                            emit   (src/.../database-sync.service.ts)\n                        \n                        \n                            emit   (src/.../volunteer.service.ts)\n                        \n                        \n                            environment   (src/.../environment.local.ts)\n                        \n                        \n                            environment   (src/.../environment.dev.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            localDB   (src/.../allocation.service.ts)\n                        \n                        \n                            localDB   (src/.../course.service.ts)\n                        \n                        \n                            localDB   (src/.../organisation.service.ts)\n                        \n                        \n                            localDB   (src/.../volunteer.service.ts)\n                        \n                        \n                            localDB   (src/.../statics.service.ts)\n                        \n                        \n                            remoteDB   (src/.../allocation.service.ts)\n                        \n                        \n                            remoteDB   (src/.../course.service.ts)\n                        \n                        \n                            remoteDB   (src/.../organisation.service.ts)\n                        \n                        \n                            remoteDB   (src/.../volunteer.service.ts)\n                        \n                        \n                            remoteDB   (src/.../statics.service.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/core/authentication/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            credentialsKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'credentials'\n                        \n                    \n\n                \n                    \n                        Stores the value of credentials' key\n\n                    \n                \n\n            \n        \n\n    src/app/core/http/error-handler.interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            credentialsKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'credentials'\n                        \n                    \n\n                \n                    \n                        Key that identifies the credentials\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/database-sync.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emit\n                            \n                        \n                    \n                \n\n\n            \n        \n\n    src/app/core/service/volunteer.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('volunteers')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/volunteers')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.local.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'LOCAL',\n  production: false\n}\n                        \n                    \n\n                \n                    \n                        Local environment values\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.dev.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'DEV',\n  production: false,\n  serverBaseUrl: 'https://rvm-api.lxhost.ro',\n  serverUrl: 'https://rvm-api.lxhost.ro/api',\n  databaseURL: 'http://rvm.lxhost.ro:5984'\n}\n                        \n                    \n\n                \n                    \n                        Developement environment values\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'PROD',\n  production: true,\n  serverBaseUrl: 'https://rvm-api.lxhost.ro',\n  serverUrl: 'https://rvm-api.lxhost.ro/api',\n  databaseURL: 'http://admin:admin@rvm.lxhost.ro:5984'\n}\n                        \n                    \n\n                \n                    \n                        Production environment values\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'DEFAULT',\n  production: false,\n  serverBaseUrl: 'https://rvm-api.lxhost.ro',\n  serverUrl: 'https://rvm-api.lxhost.ro/api',\n  databaseURL: 'http://admin:admin@rvm.lxhost.ro:5984'\n}\n                        \n                    \n\n                \n                    \n                        Default environment values\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/allocation.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('allocations')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/allocations')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Allocations Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/course.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('courses')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Courses Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/courses')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Courses Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/organisation.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('organisations')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Organisations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/organisations')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Organisations Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/statics.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('statics')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Statics Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/statics')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Statics Database\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
