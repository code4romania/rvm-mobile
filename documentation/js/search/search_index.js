var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AboutPage.html",[0,0.767,1,1.363]],["body/components/AboutPage.html",[0,0.884,1,1.778,2,1.53,3,0.102,4,0.102,5,1.041,6,1.117,7,1.041,8,0.974,9,0.088,10,1.777,11,1.436,12,2.332,13,1.041,14,2.574,15,2.918,16,1.754,17,4.043,18,1.635,19,3.274,20,0.253,21,0.021,22,0.293,23,0.117,24,0.073,25,2.236,26,0.405,27,1.203,28,2.792,29,2.792,30,3.274,31,4.581,32,5.723,33,5.723,34,4.581,35,4.581,36,3.274,37,3.274,38,5.723,39,3.274,40,3.274,41,3.274,42,6.644,43,4.581,44,6.865,45,5.284,46,3.274,47,3.274,48,5.284,49,4.581,50,3.274,51,4.581,52,5.284,53,3.274,54,3.274,55,3.274,56,3.274,57,4.581,58,3.274,59,4.581,60,5.284,61,3.274,62,3.274,63,3.274,64,3.274,65,3.274,66,4.581,67,4.581,68,5.284,69,4.581,70,3.274,71,3.274,72,4.581,73,4.581,74,4.581,75,3.274,76,5.284,77,3.274,78,3.274,79,5.723,80,3.274,81,5.284,82,4.581,83,6.408,84,4.581,85,4.581,86,3.274,87,3.274,88,2.051,89,6.242,90,4.581,91,3.274,92,3.274,93,5.284,94,3.274,95,3.274,96,1.889,97,5.723,98,3.274,99,3.274,100,3.274,101,3.274,102,3.274,103,3.274,104,3.274,105,3.274,106,3.274,107,3.274,108,3.274,109,3.274,110,3.274,111,3.274,112,3.274,113,3.274,114,3.274,115,3.274,116,3.274,117,3.274,118,3.274,119,5.723,120,5.284,121,3.274,122,6.242,123,3.274,124,3.274,125,3.274,126,3.274,127,4.581,128,4.581,129,3.274,130,3.274,131,3.274,132,3.274,133,3.274,134,3.274,135,4.581,136,3.274,137,3.274,138,3.274,139,3.274,140,3.274,141,3.274,142,3.274,143,3.274,144,3.274,145,3.274,146,3.274,147,3.274,148,3.274,149,3.274,150,3.274,151,3.274,152,3.274,153,3.274,154,5.284,155,4.581,156,4.581,157,4.581,158,3.274,159,3.274,160,4.581,161,4.581,162,3.274,163,4.581,164,3.274,165,3.274,166,3.274,167,3.274,168,3.274,169,3.274,170,3.274,171,3.274,172,3.274,173,3.274,174,3.274,175,3.274,176,3.274,177,3.274,178,3.274,179,3.274,180,3.274,181,3.274,182,3.274,183,3.274,184,3.274,185,3.274,186,3.274,187,3.274,188,3.274,189,3.274,190,5.284,191,3.274,192,3.274,193,3.274,194,3.274,195,3.274,196,3.274,197,3.274,198,3.274,199,3.274,200,3.274,201,3.274,202,3.274,203,3.274,204,3.274,205,3.274,206,3.274,207,3.274,208,3.274,209,3.274,210,3.274,211,3.274,212,3.274,213,3.274,214,3.274,215,3.274,216,3.274,217,3.274,218,3.274,219,3.274,220,3.274,221,3.274,222,3.274,223,3.274,224,3.274,225,3.274,226,3.274,227,3.274,228,3.274,229,3.274,230,3.274,231,3.274,232,3.274,233,3.274,234,3.274,235,3.274,236,0.642,237,1.635,238,1.53,239,1.041,240,1.677,241,1.041,242,0.428,243,1.041,244,0.859,245,0.914,246,2.02,247,0.809,248,1.041,249,0.809,250,1.041,251,0.859,252,0.859,253,0.809,254,1.041,255,0.809,256,1.041,257,0.809,258,0.974,259,1.041,260,0.809,261,0.914,262,0.809,263,0.642,264,1.041,265,1.041,266,0.006,267,0.01,268,0.006]],["title/modules/AboutPageModule.html",[269,1.082,270,2.397]],["body/modules/AboutPageModule.html",[0,1.034,1,2.722,3,0.232,4,0.232,9,0.199,20,0.852,21,0.023,22,0.664,23,0.266,24,0.166,236,1.457,266,0.014,267,0.018,268,0.014,269,1.457,270,4.725,271,1.949,272,2.073,273,3.163,274,2.362,275,2.362,276,2.21,277,4.031,278,4.031,279,2.915,280,2.21,281,2.21,282,4.728,283,2.915,284,3.367,285,2.362,286,3.649,287,2.532,288,2.777,289,2.532,290,1.301,291,3.367,292,2.21,293,4.728,294,2.915,295,3.572,296,1.542,297,2.532,298,2.728,299,2.362,300,3.229]],["title/classes/Allocation.html",[24,0.123,301,1.88]],["body/classes/Allocation.html",[3,0.229,4,0.229,9,0.196,21,0.022,23,0.262,24,0.164,88,2.443,242,0.823,263,1.939,266,0.014,267,0.017,268,0.014,301,3.371,302,2.33,303,3.977,304,0.61,305,3.186,306,1.521,307,0.484,308,1.504,309,2.76,310,3.934,311,3.934,312,6.293,313,3.144,314,5.366,315,0.871,316,1.589,317,1.276,318,4.665,319,4.665,320,4.665,321,2.247,322,4.665,323,5.366,324,4.665,325,4.665,326,4.665,327,2.916]],["title/injectables/AllocationService.html",[328,0.813,329,2.025]],["body/injectables/AllocationService.html",[3,0.151,4,0.151,9,0.13,20,0.808,21,0.023,22,0.434,23,0.174,24,0.18,26,0.993,88,2.288,240,1.609,242,0.825,263,2.093,266,0.009,267,0.013,268,0.009,296,1.434,301,3.375,304,0.575,306,2.101,307,0.456,308,1.142,310,3.684,311,4.097,313,3.059,314,2.633,315,0.534,316,1.453,317,0.802,321,1.199,327,3.199,328,1.019,329,2.536,330,1.443,331,2.333,332,1.609,333,4.761,334,1.812,335,1.609,336,1.019,337,4.395,338,2.109,339,2.242,340,3.148,341,3.088,342,2.536,343,2.536,344,3.217,345,2.953,346,3.28,347,3.28,348,1.019,349,0.906,350,4.395,351,3.088,352,2.536,353,2.536,354,2.11,355,3.002,356,4.213,357,2.748,358,1.887,359,3.533,360,6.125,361,2.536,362,3.748,363,3.002,364,2.748,365,1.019,366,2.196,367,2.536,368,1.93,369,2.109,370,2.109,371,1.443,372,1.654,373,1.354,374,2.333,375,1.93,376,1.13,377,3.088,378,3.088,379,2.633,380,2.054,381,1.781,382,2.041,383,2.333,384,1.93,385,1.93,386,2.109,387,2.109,388,1.654,389,1.781,390,1.781,391,1.354,392,1.273,393,1.93,394,1.577,395,1.93,396,1.93,397,2.109,398,2.109,399,2.109,400,3.088,401,3.088,402,1.449,403,2.633,404,3.088,405,3.321,406,2.333,407,3.088,408,3.088,409,3.088,410,3.088,411,3.088,412,3.088,413,2.633,414,3.088,415,2.633,416,2.333,417,2.633,418,1.518,419,3.088,420,2.109,421,2.333,422,3.088,423,1.93]],["title/components/AppComponent.html",[0,0.767,247,1.363]],["body/components/AppComponent.html",[0,1.013,1,1.007,2,1.81,3,0.127,4,0.127,5,1.296,7,1.296,8,1.213,9,0.109,13,1.296,14,2.706,15,3.068,18,1.934,20,0.7,21,0.023,22,0.364,23,0.146,24,0.091,26,0.751,28,3.301,29,3.301,236,0.8,237,1.934,238,1.81,239,1.296,240,1.88,241,1.296,242,0.754,243,1.296,244,1.07,245,1.138,246,2.314,247,1.994,248,1.296,249,1.007,250,1.296,251,1.07,252,1.07,253,1.007,254,1.296,255,1.007,256,1.296,257,1.007,258,1.213,259,1.296,260,1.007,261,1.138,262,1.007,263,0.8,264,1.296,265,1.296,266,0.008,267,0.012,268,0.008,290,0.714,292,1.213,304,0.507,307,0.269,308,1.006,315,0.668,316,1.013,317,1.09,332,2.373,334,1.91,335,1.695,336,0.897,339,2.373,348,0.897,349,0.798,357,3.21,358,1.776,361,2.234,365,0.897,376,1.695,380,1.81,392,2.117,394,1.193,402,1.498,424,2.212,425,3.872,426,3.872,427,3.087,428,4.632,429,4.632,430,4.632,431,5.136,432,3.301,433,2.595,434,5.971,435,5.233,436,5.233,437,3.421,438,2.595,439,4.379,440,3.872,441,5.136,442,3.508,443,4.379,444,1.934,445,3.508,446,2.595,447,5.136,448,2.645,449,3.301,450,3.872,451,3.872,452,3.301,453,1.417,454,3.301,455,2.595,456,4.251,457,2.925,458,3.21,459,1.81,460,5.597,461,3.301,462,3.872,463,3.88,464,2.42,465,2.925,466,3.301,467,2.645,468,3.301,469,3.301,470,3.301,471,2.645,472,3.301,473,3.301,474,3.301,475,3.872,476,2.645,477,2.595,478,3.88,479,3.88,480,3.872,481,2.565,482,2.595,483,4.632,484,2.595,485,3.872,486,2.595,487,3.872,488,2.595,489,2.42,490,3.872,491,2.645,492,2.42,493,2.595,494,2.234,495,1.96,496,2.212,497,1.96,498,2.212,499,1.622,500,2.595,501,2.595,502,2.595,503,2.595,504,2.595,505,2.595,506,2.212,507,2.212,508,2.212,509,3.872,510,3.872]],["title/modules/AppModule.html",[269,1.082,511,2.397]],["body/modules/AppModule.html",[3,0.208,4,0.208,9,0.178,15,1.983,20,0.864,21,0.023,22,0.596,23,0.239,24,0.149,236,1.307,247,2.776,266,0.013,267,0.016,268,0.013,269,1.307,271,1.749,272,1.861,273,3.009,274,3.009,275,2.723,276,1.983,279,2.723,280,1.983,281,1.983,283,2.723,290,1.167,291,2.448,292,1.983,299,2.723,435,4.648,436,4.648,494,3.668,495,3.205,496,3.617,497,3.205,498,3.617,499,2.652,511,4.856,512,3.617,513,3.617,514,3.617,515,3.617,516,4.207,517,4.207,518,4.243,519,5.452,520,3.617,521,2.898,522,4.119,523,5.452,524,4.243,525,4.243,526,4.648,527,3.617,528,4.243,529,4.119,530,3.617,531,4.243,532,4.243,533,3.617,534,3.617]],["title/classes/AppPage.html",[24,0.123,535,2.652]],["body/classes/AppPage.html",[3,0.247,4,0.247,9,0.211,20,0.611,21,0.022,23,0.283,24,0.177,238,2.351,242,0.658,266,0.015,267,0.018,268,0.015,302,2.513,307,0.522,317,1.187,336,1.405,348,1.166,349,1.037,365,1.508,418,2.247,521,3.436,535,4.58,536,4.289,537,6.754,538,6.754,539,6.062,540,5.03,541,5.03,542,6.062,543,5.03,544,5.03,545,5.03,546,5.03,547,5.03,548,5.03,549,5.03,550,5.03]],["title/modules/AppRoutingModule.html",[269,1.082,516,2.194]],["body/modules/AppRoutingModule.html",[3,0.23,4,0.23,9,0.197,20,0.801,21,0.023,22,0.659,23,0.264,24,0.165,263,1.446,266,0.014,267,0.018,268,0.014,271,1.934,276,2.193,283,2.902,288,2.767,289,3.111,290,1.291,294,3.385,296,1.53,297,3.698,298,3.91,299,2.343,476,3.204,499,2.933,516,3.631,551,4.692,552,4.692,553,5.809,554,3.631,555,4.692,556,4.692,557,3.631,558,4.692,559,3.545,560,6.777,561,4.692,562,2.193,563,4.692,564,4.692,565,4.692,566,4.692,567,4.692,568,4.692]],["title/guards/AuthenticationGuard.html",[294,1.753,569,2.194]],["body/guards/AuthenticationGuard.html",[3,0.198,4,0.198,9,0.17,11,1.771,20,0.715,21,0.022,22,0.567,23,0.227,24,0.207,26,1.211,242,0.528,261,2.316,263,1.627,266,0.012,267,0.016,268,0.012,288,2.316,290,1.111,294,2.638,298,3.832,304,0.691,307,0.419,315,0.491,317,0.964,328,1.224,335,2.284,336,1.224,339,2.512,348,0.936,349,0.832,357,3.301,358,1.923,365,1.224,376,1.933,392,2.177,394,1.627,402,1.372,418,1.824,437,3.624,444,3.117,458,3.301,481,2.638,489,3.9,491,3.607,492,3.301,557,3.301,562,2.468,569,3.301,570,3.051,571,3.444,572,3.99,573,4.502,574,4.714,575,4.502,576,2.525,577,4.039,578,3.607,579,3.6,580,3.99,581,2.05,582,4.039,583,3.99,584,2.05,585,4.502,586,3.99,587,4.502,588,4.502,589,4.502,590,2.468,591,3.444,592,3.444,593,3.444,594,2.525,595,2.017]],["title/injectables/AuthenticationService.html",[328,0.813,339,1.285]],["body/injectables/AuthenticationService.html",[3,0.109,4,0.109,9,0.094,20,0.624,21,0.023,22,0.313,23,0.125,24,0.18,26,0.921,242,0.552,266,0.007,267,0.01,268,0.007,281,1.611,296,1.124,304,0.552,306,1.549,307,0.231,308,0.896,315,0.577,316,0.754,317,1.14,328,0.799,330,1.041,335,1.738,336,0.799,339,1.262,348,0.977,349,0.869,354,2.477,357,2.155,358,1.955,361,3.133,363,3.71,364,4.017,365,1.547,366,3.21,373,0.977,374,2.605,375,1.392,376,2.246,380,2.219,382,1.262,388,3.135,392,2.576,394,1.3,402,1.234,418,2.12,420,2.355,421,1.683,423,2.968,427,2.259,453,0.815,459,1.041,476,3.71,489,3.395,492,3.837,562,2.647,572,2.605,574,3.587,579,2.739,581,1.843,583,2.605,584,2.463,590,3.068,596,1.683,597,2.94,598,4.218,599,3.305,600,4.748,601,4.748,602,3.448,603,2.94,604,4.218,605,2.227,606,4.279,607,3.135,608,3.448,609,3.448,610,3.448,611,3.997,612,4.748,613,2.355,614,2.355,615,1.989,616,2.227,617,4.103,618,3.243,619,5.431,620,5.431,621,2.227,622,2.227,623,4.218,624,2.227,625,4.048,626,3.88,627,4.218,628,2.881,629,2.227,630,3.448,631,2.355,632,2.155,633,3.448,634,3.448,635,4.99,636,2.227,637,3.448,638,2.227,639,3.21,640,2.355,641,4.048,642,3.448,643,3.448,644,2.227,645,3.448,646,3.448,647,3.596,648,2.94,649,2.94,650,2.605,651,2.94,652,3.448,653,2.227,654,2.227,655,2.713,656,2.909,657,2.227,658,2.227,659,2.227,660,2.227,661,4.218,662,1.392,663,1.683,664,1.521,665,2.355,666,3.448,667,2.227,668,4.218,669,2.227,670,2.227,671,2.227,672,2.227,673,3.448,674,2.227,675,2.227,676,3.448,677,2.227,678,2.227,679,4.218,680,2.227,681,2.227,682,2.227,683,2.227,684,1.899,685,2.227,686,2.227]],["title/modules/CoreModule.html",[269,1.082,517,2.194]],["body/modules/CoreModule.html",[3,0.187,4,0.187,9,0.161,20,0.85,21,0.023,22,0.537,23,0.215,24,0.134,236,1.178,266,0.012,267,0.015,268,0.012,269,1.569,271,1.576,272,1.677,273,2.544,274,1.91,275,2.861,276,1.787,279,2.544,280,1.787,281,1.787,283,2.544,284,2.938,285,1.91,289,2.728,290,1.052,294,2.544,299,1.91,329,3.773,334,1.576,339,2.394,340,3.267,354,1.576,376,1.399,394,1.178,444,1.91,499,2.39,517,4.591,522,3.848,533,4.342,534,4.342,554,3.184,581,1.484,606,2.889,607,3.503,613,2.612,662,2.39,663,2.889,687,3.26,688,3.26,689,3.503,690,4.089,691,3.773,692,3.773,693,4.089,694,4.292,695,3.824,696,5.093,697,5.093,698,3.479,699,2.889,700,3.26,701,3.184,702,3.824,703,3.824,704,3.824,705,3.824,706,2.889,707,3.824]],["title/classes/Course.html",[24,0.123,708,2.025]],["body/classes/Course.html",[3,0.244,4,0.244,9,0.209,21,0.022,23,0.279,24,0.174,26,1.256,242,0.847,266,0.015,267,0.018,268,0.015,302,2.482,304,0.65,305,3.394,306,1.621,307,0.516,308,1.564,309,2.838,315,0.837,316,1.563,317,1.278,321,2.336,708,3.733,709,4.236,710,4.889,711,4.42,712,5.518,713,6.017,714,4.969,715,4.969,716,4.969,717,4.969]],["title/injectables/CourseService.html",[328,0.813,689,1.88]],["body/injectables/CourseService.html",[3,0.121,4,0.121,9,0.104,14,1.856,20,0.688,21,0.023,22,0.347,23,0.139,24,0.158,26,1.045,88,2.522,240,1.367,242,0.904,266,0.007,267,0.011,268,0.007,296,0.807,304,0.741,306,1.218,307,0.388,309,1.085,315,0.688,316,1.539,317,1.104,321,2.09,328,0.866,330,1.156,332,1.367,334,1.54,335,1.367,336,0.866,342,2.155,343,2.155,344,2.893,345,2.597,346,3.032,347,3.614,348,1.312,349,1.166,352,2.155,353,3.49,354,2.71,355,2.551,356,2.822,358,1.744,359,3.265,365,1.486,366,3.432,367,2.155,368,1.546,369,1.69,370,1.69,371,1.156,372,1.325,373,1.085,380,1.746,381,1.427,382,2.151,384,1.546,385,1.546,386,1.69,387,1.69,388,1.325,389,1.427,390,1.427,393,1.546,394,1.545,395,1.546,396,1.546,397,1.69,398,1.69,399,1.69,402,1.527,418,1.955,453,1.835,655,1.866,656,2.001,689,2.001,708,4.094,710,4.067,711,4.014,712,5.01,718,1.869,719,3.736,720,3.736,721,3.736,722,3.736,723,3.736,724,5.014,725,3.736,726,2.474,727,4.008,728,3.736,729,2.474,730,5.014,731,3.736,732,2.474,733,2.822,734,5.383,735,3.736,736,2.474,737,3.788,738,3.736,739,2.474,740,3.837,741,3.736,742,2.474,743,2.551,744,2.474,745,3.736,746,2.474,747,2.474,748,1.869,749,1.869,750,1.869,751,3.4,752,3.4,753,2.474,754,2.474,755,3.837,756,4.501,757,3.837,758,2.474,759,2.474,760,1.869,761,2.822,762,3.736,763,3.736,764,1.869,765,2.474,766,1.869]],["title/interfaces/Credentials.html",[599,1.641,767,1.447]],["body/interfaces/Credentials.html",[3,0.232,4,0.232,9,0.199,21,0.022,23,0.356,242,0.62,266,0.014,267,0.018,268,0.014,304,0.62,306,2.067,307,0.492,308,1.519,309,2.077,315,0.77,316,1.579,321,2.269,376,1.734,562,2.214,584,2.772,599,3.093,628,3.236,639,4.136,767,2.892,768,2.733,769,3.236,770,4.136,771,2.961,772,2.961,773,2.961,774,3.579,775,3.236,776,2.961,777,2.961,778,3.579,779,3.579]],["title/classes/DatabaseSyncService.html",[24,0.123,701,2.194]],["body/classes/DatabaseSyncService.html",[3,0.194,4,0.194,9,0.166,20,0.632,21,0.023,23,0.222,24,0.139,25,2.696,26,0.766,240,2.5,266,0.012,267,0.016,268,0.012,302,1.972,304,0.516,307,0.41,317,0.72,333,4.396,336,1.205,343,3.568,344,3.708,345,3.568,346,3.442,347,3.79,354,2.721,365,0.915,368,2.468,371,1.845,372,2.114,380,3.192,382,2.5,383,2.982,388,3.312,390,3.568,393,2.468,394,1.793,395,2.468,396,2.468,453,1.445,581,2.019,701,3.252,727,3.637,748,2.982,780,3.93,781,2.982,782,5.202,783,6.184,784,3.947,785,5.202,786,3.974,787,2.982,788,2.982,789,2.982,790,2.982,791,2.982,792,4.396,793,2.982,794,2.982,795,2.982,796,2.982,797,2.982,798,3.947,799,3.947,800,3.947,801,3.947]],["title/interceptors/ErrorHandlerInterceptor.html",[690,2.194,802,2.652]],["body/interceptors/ErrorHandlerInterceptor.html",[3,0.15,4,0.15,9,0.128,11,1.339,20,0.781,21,0.023,22,0.429,23,0.172,24,0.179,26,1.077,96,3.624,242,0.665,266,0.009,267,0.013,268,0.009,290,0.84,296,1.422,304,0.726,307,0.317,315,0.618,316,0.667,317,0.928,328,1.01,334,2.287,335,2.233,336,1.01,348,1.179,349,1.048,354,1.259,358,1.343,365,1.286,366,3.265,371,1.427,372,1.635,373,1.339,375,1.908,382,1.596,392,2.516,394,0.941,402,1.586,418,1.054,423,4.015,437,3.364,457,4.745,458,2.725,459,2.038,491,2.978,576,1.908,578,2.978,579,3.52,580,3.294,581,2.154,590,2.038,593,2.603,594,1.908,599,2.038,607,3.552,611,2.978,613,2.978,614,3.789,615,3.2,618,4.67,632,2.725,662,1.908,663,2.307,664,2.978,665,2.085,684,2.603,690,2.725,691,3.826,706,2.307,803,4.191,804,2.307,805,3.789,806,3.717,807,5.086,808,4.336,809,3.053,810,3.789,811,4.73,812,5.202,813,4.36,814,3.053,815,5.548,816,3.053,817,3.717,818,3.717,819,3.294,820,2.603,821,4.73,822,4.73,823,3.053,824,3.717,825,2.978,826,3.717,827,3.717,828,2.603,829,3.717,830,3.053,831,3.053,832,3.053,833,2.603,834,3.053,835,3.053,836,3.053,837,4.36,838,3.053,839,3.053,840,3.053,841,3.053,842,3.053,843,3.053,844,4.36,845,3.053,846,4.36,847,3.053,848,3.053,849,3.053,850,3.053,851,3.053]],["title/interfaces/ErrorMessageObject.html",[767,1.447,852,2.397]],["body/interfaces/ErrorMessageObject.html",[3,0.237,4,0.237,9,0.203,21,0.022,23,0.333,88,2.586,96,4.102,266,0.015,267,0.018,268,0.015,304,0.632,306,1.576,307,0.501,308,1.537,315,0.864,316,1.584,767,2.818,768,2.787,771,3.02,772,3.02,852,4.04,853,3.65,854,3.996,855,5.033,856,3.568,857,4.119,858,3.3,859,4.119,860,4.119]],["title/injectables/ErrorMessageService.html",[328,0.813,691,2.025]],["body/injectables/ErrorMessageService.html",[3,0.177,4,0.177,9,0.152,20,0.439,21,0.023,22,0.507,23,0.203,24,0.127,25,2.465,26,0.7,88,1.401,96,4.196,242,0.472,266,0.011,267,0.015,268,0.011,304,0.641,307,0.374,308,1.273,315,0.834,316,1.483,317,1.138,328,1.135,330,1.687,332,1.793,336,1.135,342,2.826,348,0.836,349,0.744,358,1.982,365,1.382,382,1.793,392,2.293,402,1.445,418,1.246,427,3.634,452,4.177,453,1.793,456,3.062,459,2.29,581,1.902,590,2.599,603,4.177,626,3.701,631,3.346,647,4.742,648,5.086,649,4.177,655,2.447,691,2.826,817,5.484,819,4.507,854,3.062,855,4.859,861,5.484,862,3.077,863,5.306,864,5.561,865,5.965,866,3.609,867,4.899,868,3.609,869,4.899,870,5.965,871,3.609,872,3.609,873,4.899,874,4.899,875,3.609,876,3.609,877,4.899,878,3.609,879,3.609,880,3.609,881,4.899]],["title/components/HomePage.html",[0,0.767,249,1.363]],["body/components/HomePage.html",[0,1.089,1,1.142,2,1.985,3,0.144,4,0.144,5,1.47,6,1.576,7,1.47,8,1.375,9,0.124,13,1.47,14,2.775,15,3.147,16,2.274,18,2.121,20,0.516,21,0.023,22,0.413,23,0.165,24,0.103,26,0.571,236,0.907,237,2.121,238,1.985,239,1.47,240,1.996,241,1.47,242,0.714,243,1.47,244,1.213,245,1.29,246,2.489,247,1.142,248,1.47,249,2.118,250,1.47,251,1.213,252,2.054,253,1.142,254,1.47,255,1.142,256,1.47,257,1.142,258,1.375,259,1.47,260,1.142,261,1.29,262,1.142,263,0.907,264,1.47,265,1.47,266,0.009,267,0.013,268,0.009,290,0.809,304,0.556,307,0.305,308,1.104,315,0.605,316,1.264,317,0.996,332,1.554,336,0.984,348,0.984,349,0.875,358,0.907,359,2.45,365,0.984,382,1.554,391,1.29,402,1.104,432,3.62,437,3.327,442,2.9,444,2.725,445,4.116,453,1.554,454,3.62,456,4.208,459,2.329,460,5.422,461,3.62,463,4.121,464,2.654,465,3.208,466,3.62,467,2.9,468,3.62,469,3.62,470,3.62,471,2.9,472,3.62,473,3.62,474,3.62,478,4.121,479,4.553,481,2.121,494,2.45,506,2.509,507,2.509,508,2.509,557,3.114,576,1.839,584,2.118,595,1.47,641,3.62,656,2.274,882,2.509,883,4.982,884,4.246,885,5.784,886,4.651,887,2.942,888,2.942,889,3.208,890,3.62,891,3.62,892,3.62,893,2.9,894,2.942,895,4.246,896,4.246,897,3.208,898,4.246,899,4.246,900,4.246,901,4.246,902,4.246,903,4.246,904,2.942,905,2.509,906,4.246,907,3.62,908,2.509,909,2.942,910,2.942,911,3.208,912,2.509,913,3.62,914,2.942,915,2.942,916,2.942,917,4.248,918,4.982,919,6.36,920,4.248,921,4.982,922,2.942,923,2.509,924,2.509,925,2.509,926,2.942,927,3.208,928,4.246,929,2.942,930,2.01,931,2.942,932,2.509,933,2.223]],["title/modules/HomePageModule.html",[269,1.082,934,2.397]],["body/modules/HomePageModule.html",[0,1.046,3,0.235,4,0.235,9,0.201,20,0.854,21,0.023,22,0.672,23,0.269,24,0.168,236,1.474,249,2.729,266,0.014,267,0.018,268,0.014,269,1.474,271,1.972,272,2.098,273,3.179,274,2.389,275,2.389,276,2.236,279,2.937,280,2.236,281,2.236,283,2.937,284,3.392,285,2.389,286,3.675,287,2.562,289,2.562,290,1.316,291,3.392,292,2.236,294,2.937,295,3.614,297,2.562,298,2.76,299,2.389,934,4.739,935,4.079,936,4.079,937,4.784,938,4.784,939,4.784]],["title/injectables/LocalStorageService.html",[328,0.813,607,1.88]],["body/injectables/LocalStorageService.html",[3,0.157,4,0.157,9,0.134,20,0.389,21,0.023,22,0.449,26,0.874,242,0.876,266,0.01,267,0.014,268,0.01,296,1.043,297,1.712,304,0.741,307,0.332,308,1.171,315,0.726,316,1.445,317,1.162,321,2.025,328,0.741,330,1.494,332,1.17,335,1.649,336,1.044,348,1.209,349,1.075,352,1.844,353,1.844,354,1.857,358,2.036,365,1.384,367,1.844,382,1.17,402,1.689,418,1.956,427,3.661,579,2.599,597,2.726,607,1.712,611,4.574,631,3.077,632,1.998,655,1.597,664,4.793,770,1.998,805,3.077,825,3.077,856,1.712,940,4.91,941,2.415,942,5.664,943,5.971,944,5.216,945,5.664,946,4.505,947,4.505,948,4.505,949,4.505,950,2.726,951,2.184,952,3.197,953,3.197,954,3.197,955,4.505,956,4.505,957,3.197,958,4.505,959,5.828,960,4.505,961,3.197,962,3.404,963,4.505,964,3.197,965,4.505,966,4.505,967,3.197,968,4.505,969,5.282,970,5.091,971,2.726,972,2.726,973,5.971,974,3.197,975,3.197,976,3.841,977,2.415,978,3.197,979,3.197,980,3.841,981,2.726,982,2.726,983,3.197,984,3.197,985,3.197,986,3.197,987,1.998,988,3.197,989,3.197,990,3.197,991,3.197,992,3.197,993,3.197]],["title/injectables/LocationsService.html",[328,0.813,692,2.025]],["body/injectables/LocationsService.html",[3,0.204,4,0.204,9,0.174,20,0.725,21,0.022,22,0.584,23,0.234,24,0.209,26,1.158,242,0.544,252,2.846,266,0.013,267,0.016,268,0.013,304,0.704,307,0.431,315,0.505,317,1.089,328,1.247,330,1.942,332,1.969,336,1.247,348,0.963,349,0.856,361,3.639,365,1.462,366,3.485,373,1.822,380,2.514,391,1.822,402,1.08,418,1.858,427,3.585,578,3.674,581,2.088,606,4.766,613,4.653,614,3.674,655,3.151,662,2.598,692,3.104,810,3.674,994,3.543,995,4.587,996,5.707,997,5.707,998,5.379,999,5.379,1000,4.156,1001,4.156,1002,4.587,1003,4.156,1004,6.308,1005,6.308,1006,4.156,1007,4.156,1008,4.156]],["title/components/LoginPage.html",[0,0.767,253,1.363]],["body/components/LoginPage.html",[0,0.986,1,0.964,2,1.751,3,0.122,4,0.122,5,1.241,6,1.33,7,1.241,8,1.161,9,0.104,11,1.643,12,2.603,13,1.241,14,2.681,15,3.04,16,2.007,18,1.872,20,0.736,21,0.023,22,0.349,23,0.14,24,0.087,26,0.482,27,2.899,96,3.111,236,0.765,237,1.872,238,1.751,239,1.241,240,1.839,241,1.241,242,0.59,243,1.241,244,1.024,245,1.089,246,2.254,247,0.964,248,1.241,249,0.964,250,1.241,251,1.024,252,1.024,253,1.951,254,1.241,255,0.964,256,1.241,257,0.964,258,1.161,259,1.241,260,0.964,261,1.089,262,0.964,263,0.765,264,1.241,265,1.241,266,0.008,267,0.011,268,0.008,285,1.241,287,1.33,290,0.683,292,1.161,296,0.81,304,0.325,307,0.258,308,0.974,315,0.455,317,1.074,332,2.312,334,1.545,336,0.868,339,2.217,343,2.162,347,2.007,348,0.576,349,0.512,365,1.25,375,1.553,376,2.075,391,1.089,392,2.497,394,0.765,402,1.473,420,1.696,437,3.152,444,1.872,445,3.432,448,3.432,453,1.839,459,1.751,478,1.877,481,2.51,494,2.162,557,2.342,559,1.877,562,2.65,576,1.553,581,1.455,584,1.455,594,1.553,595,1.241,599,2.52,615,2.162,635,2.118,656,2.007,701,3.787,775,1.696,777,2.82,806,2.118,854,3.371,863,2.831,886,4.284,889,2.831,890,3.195,891,3.195,892,3.195,893,2.559,905,2.118,911,2.831,927,1.877,959,2.118,987,2.82,1009,2.118,1010,4.512,1011,3.747,1012,4.512,1013,5.025,1014,4.512,1015,5.025,1016,5.025,1017,6.057,1018,5.386,1019,6.057,1020,3.747,1021,3.747,1022,5.885,1023,3.747,1024,3.747,1025,3.195,1026,3.747,1027,5.885,1028,4.598,1029,2.484,1030,2.484,1031,2.484,1032,2.484,1033,3.747,1034,3.747,1035,2.484,1036,3.747,1037,3.747,1038,3.195,1039,4.512,1040,2.484,1041,2.484,1042,3.747,1043,1.696,1044,2.484,1045,2.484,1046,2.484,1047,3.747,1048,2.484,1049,2.484,1050,2.484,1051,2.484,1052,2.484,1053,2.484,1054,2.484,1055,2.484,1056,2.484,1057,2.484,1058,2.484,1059,2.484,1060,2.484,1061,2.484,1062,3.195,1063,3.409,1064,2.484,1065,2.484,1066,2.118,1067,2.484,1068,2.484,1069,2.484,1070,2.484,1071,3.747,1072,5.025,1073,3.747,1074,3.747,1075,3.747,1076,2.484,1077,3.195,1078,3.195,1079,2.118,1080,2.484,1081,2.559,1082,3.747,1083,2.118,1084,2.484,1085,2.484,1086,1.877,1087,2.118,1088,2.118,1089,2.484,1090,2.484,1091,2.484,1092,2.118,1093,2.118,1094,2.118]],["title/modules/LoginPageModule.html",[269,1.082,1095,2.397]],["body/modules/LoginPageModule.html",[0,1.042,3,0.234,4,0.234,9,0.2,20,0.842,21,0.023,22,0.669,23,0.268,24,0.167,236,1.468,253,2.726,266,0.014,267,0.018,268,0.014,269,1.468,271,1.964,272,2.09,273,3.174,274,2.38,275,2.38,276,2.227,279,2.929,280,2.227,281,2.227,283,2.929,284,3.383,285,2.38,286,3.666,287,2.552,288,2.786,289,2.552,290,1.311,291,3.383,292,2.227,296,1.554,297,2.552,299,2.38,300,3.254,1095,4.734,1096,4.063,1097,4.063,1098,4.765,1099,5,1100,4.765]],["title/interfaces/LoginPayload.html",[767,1.447,773,2.194]],["body/interfaces/LoginPayload.html",[3,0.235,4,0.235,9,0.202,21,0.022,23,0.359,242,0.628,266,0.015,267,0.018,268,0.015,304,0.628,306,1.922,307,0.498,308,1.532,309,2.106,315,0.716,316,1.582,321,2.288,376,1.758,562,2.754,584,2.581,599,2.754,628,4.025,639,3.002,767,2.9,768,2.771,769,3.28,770,3.002,771,3.002,772,3.002,773,3.684,774,5.023,775,4.541,776,3.002,777,3.002,778,3.628,779,3.628]],["title/components/LogoutPage.html",[0,0.767,255,1.363]],["body/components/LogoutPage.html",[0,1.223,1,1.418,2,2.308,3,0.179,4,0.179,5,1.824,6,1.956,7,1.824,8,1.707,9,0.153,11,2.166,12,3.228,13,1.824,14,2.882,15,3.268,16,2.645,18,2.467,20,0.68,21,0.022,22,0.513,23,0.205,24,0.128,26,0.709,27,3.458,236,1.125,237,2.467,238,2.308,239,1.824,240,2.194,241,1.824,242,0.732,243,1.824,244,1.506,245,1.601,246,2.795,247,1.418,248,1.824,249,1.418,250,1.824,251,1.506,252,1.506,253,1.418,254,1.824,255,2.327,256,1.824,257,1.418,258,1.707,259,1.824,260,1.418,261,1.601,262,1.418,263,1.125,264,1.824,265,1.824,266,0.011,267,0.015,268,0.011,290,1.005,304,0.478,307,0.379,315,0.444,317,0.901,332,2.194,334,2.036,335,1.808,336,1.144,338,2.494,339,2.415,348,0.846,349,0.753,365,0.846,376,2.194,391,1.601,392,1.506,394,1.125,402,1.284,437,3.683,442,3.373,445,3.373,453,1.337,476,4.094,562,2.308,581,1.917,584,1.917,594,2.283,615,2.849,618,3.373,625,4.21,907,3.114,912,3.114,913,4.771,927,2.759,930,2.494,932,3.114,933,2.759,1028,3.114,1038,4.21,1043,2.494,1077,3.114,1081,3.373,1083,3.114,1101,3.114,1102,5.595,1103,4.938,1104,3.652,1105,3.652,1106,4.938,1107,3.652,1108,3.652,1109,4.938,1110,4.938,1111,4.938,1112,3.652,1113,3.652,1114,3.114]],["title/modules/LogoutPageModule.html",[269,1.082,1115,2.397]],["body/modules/LogoutPageModule.html",[0,1.048,3,0.235,4,0.235,9,0.201,20,0.844,21,0.023,22,0.673,23,0.27,24,0.168,236,1.477,255,2.73,266,0.014,267,0.018,268,0.014,269,1.477,271,1.976,272,2.102,273,3.182,274,2.394,275,2.394,276,2.24,279,2.94,280,2.24,281,2.24,283,2.94,284,3.396,285,2.394,286,3.679,287,2.567,288,2.794,289,2.567,290,1.319,291,3.396,292,2.24,296,1.563,297,2.567,299,2.394,300,3.274,1115,4.741,1116,4.087,1117,4.087,1118,4.793,1119,4.793]],["title/classes/Organisation.html",[24,0.123,313,1.753]],["body/classes/Organisation.html",[3,0.244,4,0.244,9,0.209,21,0.022,23,0.279,24,0.174,26,1.256,242,0.847,266,0.015,267,0.018,268,0.015,302,2.482,304,0.65,305,3.394,306,1.621,307,0.516,308,1.564,309,2.838,313,3.233,315,0.837,316,1.563,317,1.278,321,2.336,327,4.045,711,4.42,1120,4.236,1121,5.518,1122,6.017,1123,4.969,1124,4.969,1125,4.969,1126,4.969]],["title/injectables/OrganisationService.html",[328,0.813,693,2.194]],["body/injectables/OrganisationService.html",[3,0.13,4,0.13,9,0.111,14,1.623,20,0.731,21,0.023,22,0.373,23,0.149,24,0.165,26,0.911,88,2.493,240,1.441,242,0.908,266,0.008,267,0.012,268,0.008,296,0.866,304,0.787,306,1.284,307,0.409,309,1.164,313,3.57,315,0.706,316,1.47,317,1.098,328,0.913,330,1.241,332,1.441,334,1.623,335,1.441,336,0.913,338,1.813,339,2.31,342,2.272,343,2.272,344,2.996,345,2.708,346,3.112,347,3.656,348,1.347,349,1.197,352,2.272,353,3.564,354,2.748,355,2.689,358,1.213,359,2.996,365,1.488,366,3.431,367,2.272,368,1.659,369,1.813,370,1.813,371,1.241,372,1.422,373,1.164,376,0.971,380,2.427,381,1.531,382,2.202,384,1.659,385,1.659,386,1.813,387,1.813,388,1.422,389,1.531,390,1.531,391,1.164,393,1.659,394,1.709,395,1.659,396,1.659,397,1.813,398,1.813,399,1.813,402,1.51,403,2.263,416,3.547,418,1.916,453,1.441,655,1.967,656,2.109,693,2.461,733,2.975,737,3.924,749,2.005,750,2.005,751,2.975,752,2.975,760,2.975,761,2.975,764,2.005,766,2.005,792,4.768,794,2.005,810,2.689,1127,2.005,1128,3.938,1129,3.938,1130,3.938,1131,3.938,1132,5.193,1133,3.938,1134,2.654,1135,3.938,1136,2.654,1137,5.193,1138,3.938,1139,2.654,1140,4.729,1141,3.938,1142,2.654,1143,3.938,1144,2.654,1145,4.694,1146,2.654,1147,3.938,1148,2.654,1149,2.654,1150,2.654,1151,2.654,1152,2.654,1153,2.654,1154,2.654,1155,2.654,1156,2.654]],["title/interceptors/RequestInterceptor.html",[694,2.194,802,2.652]],["body/interceptors/RequestInterceptor.html",[3,0.188,4,0.188,9,0.161,11,1.685,20,0.774,21,0.023,22,0.54,23,0.216,24,0.202,26,1.114,242,0.668,266,0.012,267,0.015,268,0.012,304,0.751,307,0.399,315,0.698,317,0.932,328,1.184,334,2.106,335,1.87,336,1.184,338,2.624,339,2.515,348,1.184,349,1.053,365,1.184,366,2.867,371,1.796,372,2.058,373,1.685,376,2.239,382,1.87,391,1.685,402,1.492,418,1.327,456,2.401,457,4.948,458,3.194,579,2.947,581,1.983,590,2.388,614,4.473,615,3.53,618,4.78,632,3.825,639,3.194,662,2.401,694,3.194,706,2.902,805,4.179,808,4.894,810,3.49,811,4.356,812,4.356,820,3.275,821,5.217,822,5.217,824,4.356,826,4.356,827,4.356,828,3.275,829,4.356,933,2.902,1157,3.275,1158,5.109,1159,5.74,1160,3.842,1161,3.842,1162,5.109,1163,3.842,1164,5.109,1165,3.842,1166,3.842,1167,5.109,1168,3.842,1169,3.275,1170,3.842,1171,3.842,1172,3.842,1173,3.842,1174,3.842,1175,3.842]],["title/interfaces/RootObject.html",[767,1.447,858,2.397]],["body/interfaces/RootObject.html",[3,0.237,4,0.237,9,0.203,21,0.022,23,0.333,88,1.875,96,4.102,266,0.015,267,0.018,268,0.015,304,0.632,306,1.929,307,0.501,308,1.537,315,0.831,316,1.566,349,1.219,767,2.818,768,2.787,771,3.02,772,3.02,852,3.3,853,3.65,854,4.272,855,3.65,856,3.568,857,4.119,858,4.04,859,5.68,860,5.68]],["title/classes/RouteReusableStrategy.html",[24,0.123,698,2.397]],["body/classes/RouteReusableStrategy.html",[3,0.149,4,0.149,8,2.027,9,0.127,20,0.368,21,0.023,23,0.17,24,0.106,242,0.766,245,1.902,266,0.009,267,0.013,268,0.009,290,0.834,302,1.514,304,0.796,307,0.314,315,0.711,317,1.068,336,1.005,348,1.356,349,1.206,364,4.007,365,1.485,394,1.336,402,1.629,418,1.91,427,3.709,444,3.666,453,1.587,489,3.805,522,3.827,590,3.095,595,3.04,640,2.962,656,3.546,698,2.962,699,4.598,700,5.772,889,5.002,951,2.962,1176,5.189,1177,2.584,1178,4.337,1179,4.337,1180,6.965,1181,4.337,1182,4.337,1183,3.698,1184,4.337,1185,4.337,1186,4.337,1187,4.337,1188,4.337,1189,5.065,1190,5.065,1191,4.337,1192,7.061,1193,3.03,1194,6.769,1195,6.087,1196,4.337,1197,3.03,1198,4.337,1199,3.03,1200,3.03,1201,5.529,1202,3.03,1203,5.85,1204,3.03,1205,5.529,1206,3.03,1207,4.337,1208,3.03,1209,3.03,1210,3.03]],["title/components/SendMessageComponent.html",[0,0.767,257,1.363]],["body/components/SendMessageComponent.html",[0,0.967,1,0.934,2,1.709,3,0.118,4,0.118,5,1.202,6,1.288,7,1.202,8,1.124,9,0.101,11,1.604,12,2.553,13,1.202,14,2.662,15,3.086,16,1.959,18,1.827,20,0.707,21,0.023,22,0.338,23,0.135,24,0.084,26,0.467,27,2.852,88,1.919,236,0.741,237,1.827,238,1.709,239,1.202,240,1.809,241,1.202,242,0.579,243,1.202,244,0.992,245,1.055,246,2.21,247,0.934,248,1.202,249,0.934,250,1.202,251,0.992,252,0.992,253,0.934,254,1.202,255,0.934,256,1.202,257,1.919,258,2.803,259,1.202,260,0.934,261,1.055,262,0.934,263,2.013,264,1.202,265,1.202,266,0.007,267,0.011,268,0.007,290,0.662,296,0.785,304,0.315,307,0.25,308,0.951,315,0.681,316,1.272,317,1.162,332,1.809,336,0.848,340,2.907,344,2.11,348,1.025,349,0.496,358,0.741,365,1.232,373,1.055,391,1.055,392,2.626,402,0.951,427,2.999,444,3.181,448,2.498,453,1.946,456,3.09,459,1.124,465,2.763,481,2.469,494,2.11,529,4.988,530,2.051,559,1.817,590,1.709,595,1.202,615,2.852,617,3.735,743,3.022,805,2.498,854,3.981,863,2.763,893,1.643,897,2.763,924,2.051,925,2.051,930,3.022,950,3.118,951,2.498,977,2.763,987,3.324,1002,3.118,1025,3.118,1043,1.643,1062,2.051,1063,2.763,1081,1.643,1086,2.763,1092,2.051,1093,2.051,1094,2.051,1211,5.505,1212,4.878,1213,2.051,1214,4.425,1215,4.425,1216,3.657,1217,4.425,1218,4.425,1219,4.943,1220,4.943,1221,4.943,1222,4.943,1223,2.405,1224,4.943,1225,3.657,1226,2.405,1227,5.6,1228,3.772,1229,3.657,1230,3.657,1231,4.943,1232,3.657,1233,2.405,1234,3.657,1235,3.657,1236,2.405,1237,3.118,1238,3.657,1239,3.657,1240,2.405,1241,2.763,1242,3.657,1243,2.405,1244,2.405,1245,3.118,1246,5.317,1247,2.405,1248,3.118,1249,3.118,1250,2.405,1251,2.405,1252,3.657,1253,2.051,1254,2.405,1255,2.405,1256,2.405,1257,2.405,1258,2.405,1259,2.405,1260,2.405,1261,2.051,1262,2.405,1263,2.405,1264,2.405,1265,2.405,1266,2.405,1267,2.405,1268,2.405,1269,2.405,1270,2.405,1271,2.405,1272,2.405,1273,2.405,1274,3.657,1275,2.405,1276,2.405,1277,2.405,1278,2.405,1279,2.405,1280,3.657,1281,3.657,1282,3.657,1283,3.657,1284,3.118,1285,3.118,1286,2.051,1287,2.405,1288,2.051,1289,2.051,1290,3.118,1291,2.051,1292,2.405,1293,2.405,1294,2.405]],["title/guards/UnauthenticatedGuard.html",[554,2.194,569,2.194]],["body/guards/UnauthenticatedGuard.html",[3,0.199,4,0.199,9,0.17,11,1.777,20,0.716,21,0.022,22,0.569,23,0.228,24,0.207,26,1.212,242,0.53,266,0.012,267,0.016,268,0.012,288,2.321,290,1.115,298,3.835,304,0.692,307,0.421,315,0.493,317,0.966,328,1.226,335,2.287,336,1.226,339,2.514,348,0.939,349,0.835,357,3.308,358,1.925,365,1.226,376,1.937,392,2.182,394,1.631,402,1.375,418,1.828,437,3.627,444,3.121,458,3.308,481,2.643,489,3.905,491,3.614,492,3.308,554,3.308,557,3.308,562,2.474,569,3.308,570,3.062,572,3.998,573,4.512,574,3.998,575,4.512,576,2.533,578,3.614,579,3.604,580,3.998,581,2.054,583,3.998,584,2.054,585,4.512,586,3.998,587,4.512,588,4.512,589,4.512,590,2.474,591,3.455,592,3.455,594,2.533,595,2.024,1295,3.455,1296,6.248,1297,4.052,1298,4.052,1299,4.052]],["title/interfaces/User.html",[584,1.363,767,1.447]],["body/interfaces/User.html",[3,0.223,4,0.223,9,0.191,21,0.022,23,0.35,242,0.854,266,0.014,267,0.017,268,0.014,304,0.596,306,2.03,307,0.472,308,1.482,309,2.861,315,0.833,316,1.585,321,2.661,349,1.175,376,1.666,562,2.127,584,2.661,599,2.664,628,3.109,639,2.845,767,2.867,768,2.626,769,3.109,770,2.845,771,2.845,772,2.845,773,2.845,774,3.439,775,3.109,776,4.078,777,4.078,778,4.929,779,4.929]],["title/components/ValidateVolunteerComponent.html",[0,0.767,260,1.363]],["body/components/ValidateVolunteerComponent.html",[0,0.695,1,0.569,2,1.15,3,0.072,4,0.072,5,0.733,6,0.786,7,0.733,8,0.685,9,0.062,11,1.079,12,1.833,13,0.733,14,2.329,15,2.694,16,1.318,18,1.229,20,0.504,21,0.023,22,0.206,23,0.082,24,0.051,26,0.285,27,2.146,88,1.941,236,0.452,237,1.229,238,1.739,239,0.733,240,1.362,241,0.733,242,0.722,243,0.733,244,0.605,245,0.643,246,1.587,247,0.569,248,0.733,249,0.569,250,0.733,251,0.605,252,2.143,253,0.569,254,0.733,255,0.569,256,0.733,257,0.569,258,0.685,259,0.733,260,1.444,261,2.193,262,0.569,263,1.958,264,0.733,265,0.733,266,0.004,267,0.007,268,0.004,280,1.15,296,0.802,301,2.876,304,0.68,307,0.43,308,0.639,310,1.986,311,3.531,315,0.734,316,1.427,317,1.169,321,0.955,329,2.885,332,1.83,334,1.849,335,1.642,336,0.57,340,2.381,348,1.205,349,1.071,358,1.884,359,2.588,361,1.419,363,1.68,364,1.986,365,1.279,391,0.643,392,1.31,394,0.758,402,1.468,405,1.859,406,1.859,423,2.591,448,1.68,453,2.02,459,2.43,463,2.81,464,4.03,479,2.81,481,2.597,492,2.325,581,1.741,584,0.955,586,1.859,595,0.733,617,1.859,640,3.255,651,3.172,689,2.678,692,2.885,708,1.419,727,1.986,743,3.668,755,2.097,786,3.255,819,4.563,825,1.68,856,1.318,897,4.563,908,3.533,911,1.108,917,3.533,920,1.25,923,2.097,930,2.831,962,2.81,977,1.108,987,3.603,995,2.097,996,3.533,997,4.063,998,2.097,999,3.172,1018,3.172,1043,1.002,1063,1.108,1066,1.25,1078,1.25,1079,1.25,1081,1.002,1086,1.108,1087,1.25,1088,1.25,1237,3.172,1241,1.859,1245,2.097,1248,2.097,1249,3.172,1261,1.25,1284,2.097,1285,2.097,1286,1.25,1288,2.097,1289,1.25,1290,2.097,1291,2.097,1300,5.497,1301,1.25,1302,3.177,1303,2.46,1304,2.709,1305,3.533,1306,3.177,1307,2.46,1308,2.46,1309,2.46,1310,2.46,1311,2.81,1312,2.46,1313,2.46,1314,2.46,1315,1.467,1316,2.46,1317,2.46,1318,2.46,1319,1.467,1320,3.72,1321,2.46,1322,1.467,1323,2.46,1324,2.46,1325,2.46,1326,1.467,1327,2.46,1328,2.097,1329,2.46,1330,2.46,1331,2.46,1332,2.46,1333,1.467,1334,2.46,1335,4.766,1336,2.46,1337,2.46,1338,1.467,1339,1.467,1340,2.46,1341,1.467,1342,2.46,1343,2.46,1344,2.46,1345,1.467,1346,2.46,1347,3.72,1348,2.46,1349,2.46,1350,2.46,1351,2.46,1352,3.177,1353,1.467,1354,2.46,1355,1.467,1356,3.72,1357,2.46,1358,2.46,1359,2.46,1360,2.46,1361,2.46,1362,1.467,1363,3.172,1364,2.46,1365,2.097,1366,3.72,1367,2.46,1368,2.46,1369,1.467,1370,1.467,1371,1.467,1372,1.467,1373,1.467,1374,1.467,1375,2.709,1376,2.097,1377,1.467,1378,2.46,1379,1.467,1380,2.46,1381,2.46,1382,1.467,1383,1.467,1384,1.467,1385,1.467,1386,4.144,1387,1.467,1388,1.467,1389,2.46,1390,1.467,1391,1.467,1392,1.467,1393,1.467,1394,2.46,1395,1.467,1396,2.46,1397,1.467,1398,1.467,1399,2.46,1400,2.46,1401,1.467,1402,1.467,1403,1.467,1404,1.467,1405,2.46,1406,1.467,1407,1.467,1408,1.467,1409,1.467,1410,1.467,1411,2.46,1412,1.467,1413,1.467,1414,1.467,1415,4.486,1416,1.467,1417,1.467,1418,1.467,1419,2.46,1420,2.46,1421,1.467,1422,1.467,1423,1.467,1424,1.467,1425,1.467,1426,1.25,1427,1.467,1428,1.467,1429,1.467,1430,1.467,1431,1.467,1432,1.467,1433,1.467,1434,1.467,1435,1.467,1436,3.72,1437,2.46,1438,2.46,1439,2.46,1440,2.46,1441,2.46,1442,2.46,1443,2.46,1444,2.46,1445,2.46,1446,2.097,1447,2.46,1448,2.46,1449,2.097,1450,2.46,1451,2.46,1452,2.46,1453,2.46,1454,2.46,1455,2.46,1456,2.46,1457,2.46,1458,2.46,1459,1.467,1460,1.467,1461,2.46,1462,1.467,1463,2.46,1464,3.72,1465,1.467,1466,1.467]],["title/classes/Volunteer.html",[24,0.123,263,1.082]],["body/classes/Volunteer.html",[3,0.203,4,0.203,9,0.174,21,0.022,23,0.233,24,0.145,26,1.156,88,1.608,242,0.824,263,1.835,266,0.013,267,0.016,268,0.013,301,3.19,302,2.069,304,0.542,305,2.829,306,1.351,307,0.43,308,1.395,309,2.612,310,3.723,311,3.723,313,2.975,315,0.88,316,1.613,317,1.322,321,2.446,323,3.531,327,2.589,367,3.436,776,3.723,777,3.723,856,2.875,1121,5.078,1328,5.078,1467,3.531,1468,5.955,1469,5.078,1470,5.078,1471,5.078,1472,5.368,1473,4.142,1474,4.142,1475,4.142,1476,4.142,1477,4.142,1478,4.142,1479,4.142,1480,4.142,1481,4.142,1482,4.142,1483,4.142,1484,4.142,1485,4.142,1486,4.142]],["title/components/VolunteerPage.html",[0,0.767,262,1.363]],["body/components/VolunteerPage.html",[0,1.348,1,1.731,2,2.631,3,0.219,4,0.219,5,2.228,6,2.389,7,2.228,8,2.085,9,0.187,11,2.468,12,3.557,13,2.228,14,2.968,15,3.365,16,3.014,18,2.811,20,0.542,21,0.022,22,0.626,23,0.251,24,0.157,25,3.844,26,0.865,27,2.573,236,1.374,237,2.811,238,2.631,239,2.228,240,2.37,241,2.228,242,0.736,243,2.228,244,1.839,245,1.956,246,3.08,247,1.731,248,2.228,249,1.731,250,2.228,251,1.839,252,1.839,253,1.731,254,2.228,255,1.731,256,2.228,257,1.731,258,2.085,259,2.228,260,1.731,261,1.956,262,2.514,263,1.9,264,2.228,265,2.228,266,0.013,267,0.017,268,0.013,1487,3.803,1488,6.166,1489,5.628]],["title/modules/VolunteerPageModule.html",[269,1.082,1490,2.397]],["body/modules/VolunteerPageModule.html",[0,1.41,3,0.195,4,0.195,9,0.167,20,0.856,21,0.023,22,0.56,23,0.224,24,0.14,236,1.228,244,2.781,245,2.296,251,2.781,252,2.158,257,2.619,258,1.863,260,2.619,261,2.296,262,2.619,266,0.012,267,0.016,268,0.012,269,1.228,271,1.643,272,1.748,273,2.92,274,1.991,275,1.991,276,1.863,279,2.615,280,1.863,281,1.863,283,2.615,284,3.02,285,1.991,286,3.273,287,2.135,288,2.564,289,2.135,290,1.097,291,3.02,292,1.863,294,3.306,295,3.012,296,1.3,297,3.453,298,3.72,299,1.991,300,2.723,464,2.492,467,2.723,471,2.723,1099,4.464,1212,3.012,1490,4.889,1491,3.399,1492,3.399,1493,3.986,1494,3.986,1495,5.846,1496,3.986,1497,3.986]],["title/injectables/VolunteerService.html",[328,0.813,340,1.753]],["body/injectables/VolunteerService.html",[3,0.073,4,0.073,9,0.063,14,1.726,20,0.612,21,0.023,22,0.21,23,0.084,24,0.113,26,0.625,88,2.543,240,0.914,242,0.874,252,1.726,263,2.082,266,0.005,267,0.011,268,0.005,296,1.227,301,1.338,304,0.707,306,1.477,307,0.259,308,0.978,309,0.655,310,3.15,311,3.686,313,2.7,315,0.657,316,1.549,317,0.987,321,1.461,327,2.012,328,0.579,330,0.698,332,1.377,334,1.551,335,1.377,336,0.579,340,1.248,342,1.441,343,1.441,344,2.171,345,1.857,346,2.425,347,3.388,348,1.317,349,1.114,352,1.441,353,2.907,354,2.532,355,1.706,356,4.584,358,1.75,359,3.501,361,1.441,362,2.13,363,1.706,364,2.012,365,1.387,366,3.271,367,1.441,368,0.934,369,1.02,370,1.02,371,0.698,372,0.8,373,0.655,374,1.128,375,0.934,379,1.273,380,1.167,381,0.862,382,2.352,384,0.934,385,0.934,386,1.02,387,1.02,388,0.8,389,0.862,390,0.862,391,0.655,393,0.934,394,1.29,395,0.934,396,0.934,397,1.02,398,1.02,399,1.02,402,1.67,405,1.128,406,2.432,413,1.273,415,2.13,416,1.887,417,1.273,418,1.74,420,1.02,421,1.128,423,2.83,453,0.914,481,3.21,590,1.957,650,1.887,655,1.248,656,1.338,689,2.574,708,3.119,710,1.887,711,1.706,727,0.934,733,1.887,737,2.843,740,3.57,743,3.576,749,1.128,750,1.887,751,2.843,752,3.163,757,1.273,760,2.432,761,1.887,764,1.887,766,1.128,776,3.004,786,4.52,788,1.128,818,2.13,856,3.606,951,3.283,1140,3.57,1183,3.208,1304,3.57,1305,5.438,1363,3.208,1365,2.13,1376,3.57,1446,2.13,1449,1.273,1469,1.273,1470,1.273,1471,5.236,1498,1.128,1499,2.498,1500,2.498,1501,2.498,1502,2.498,1503,2.498,1504,2.498,1505,2.498,1506,2.498,1507,1.494,1508,1.494,1509,2.498,1510,1.494,1511,3.763,1512,2.498,1513,3.219,1514,2.498,1515,2.498,1516,1.494,1517,2.498,1518,2.498,1519,2.498,1520,1.494,1521,2.498,1522,1.494,1523,3.763,1524,4.187,1525,4.187,1526,4.187,1527,2.498,1528,1.494,1529,2.498,1530,1.494,1531,2.498,1532,1.494,1533,2.498,1534,1.494,1535,2.498,1536,2.498,1537,2.498,1538,1.494,1539,1.494,1540,1.494,1541,2.498,1542,5.236,1543,2.498,1544,2.498,1545,3.763,1546,1.494,1547,1.494,1548,3.219,1549,3.219,1550,3.219,1551,3.219,1552,1.494,1553,1.494,1554,3.219,1555,3.763,1556,1.494,1557,1.494,1558,1.494,1559,1.494,1560,1.494,1561,1.494,1562,2.498,1563,2.498,1564,2.498,1565,2.498,1566,2.498,1567,2.498,1568,2.498,1569,2.498,1570,2.498,1571,2.498,1572,1.494,1573,1.494,1574,1.494,1575,3.219,1576,1.494,1577,1.494,1578,1.494,1579,1.494]],["title/coverage.html",[1580,4.099]],["body/coverage.html",[0,1.432,1,1.122,9,0.121,10,2.464,21,0.022,24,0.217,244,1.192,247,1.122,249,1.122,251,1.192,253,1.122,255,1.122,257,1.122,260,1.122,262,1.122,263,0.89,266,0.009,267,0.013,268,0.009,294,1.444,301,1.548,303,2.464,313,1.444,315,0.351,328,1.467,329,1.667,331,3.726,339,1.058,340,1.444,371,2.528,381,3.121,382,1.058,389,3.121,424,2.464,464,1.807,467,1.974,471,1.974,535,2.184,536,2.464,554,1.807,569,2.62,571,2.464,584,1.122,596,3.167,599,1.351,607,1.548,665,2.863,689,1.548,690,1.807,691,1.667,692,1.667,693,1.807,694,1.807,698,1.974,699,2.184,701,1.807,708,1.667,709,2.464,718,3.726,767,2.368,769,3.368,773,1.807,780,4.873,781,4.873,787,2.184,789,2.184,790,2.184,791,2.184,793,2.184,795,2.184,796,2.184,797,2.184,802,3.167,803,3.167,804,3.167,825,4.091,852,1.974,853,3.167,858,1.974,861,2.464,862,2.464,882,2.464,940,4.668,941,4.668,976,2.464,987,3.59,994,2.464,1009,2.464,1101,2.464,1114,6.251,1120,2.464,1127,3.726,1157,2.464,1176,2.464,1177,2.464,1211,2.464,1212,2.184,1213,2.464,1295,2.464,1300,2.464,1301,4.205,1311,2.184,1426,3.574,1467,2.464,1487,2.464,1498,3.726,1580,2.464,1581,2.89,1582,2.89,1583,2.89,1584,2.89,1585,4.191,1586,4.191,1587,5.409,1588,2.89,1589,7.137,1590,7.203,1591,4.191,1592,4.191,1593,2.464,1594,2.464,1595,2.464,1596,2.464,1597,2.464,1598,2.89,1599,2.89,1600,2.89,1601,2.89,1602,4.191,1603,4.191,1604,4.932,1605,4.932,1606,4.191,1607,2.464,1608,2.89,1609,2.89,1610,2.89,1611,2.89,1612,2.89,1613,2.89,1614,2.89,1615,5.409,1616,2.89,1617,2.89,1618,2.89,1619,2.89,1620,2.89,1621,2.89,1622,2.89,1623,2.89,1624,2.89,1625,2.89,1626,2.89,1627,2.464,1628,2.464,1629,2.464,1630,2.464,1631,3.574,1632,2.464,1633,2.464,1634,2.89,1635,2.89]],["title/dependencies.html",[272,1.853,1636,2.923]],["body/dependencies.html",[21,0.023,22,0.651,266,0.014,267,0.017,268,0.014,272,2.034,285,2.317,287,2.484,290,1.276,292,2.168,346,3.089,373,2.034,384,2.899,385,3.924,439,5.759,442,3.168,443,3.954,494,3.972,495,3.504,497,3.504,499,2.899,520,4.918,521,3.939,526,3.954,527,3.954,529,3.504,893,3.168,1228,3.954,1253,3.954,1637,6.982,1638,4.638,1639,4.638,1640,5.768,1641,4.638,1642,6.277,1643,4.638,1644,4.638,1645,4.638,1646,4.638,1647,4.638,1648,4.638,1649,4.638,1650,4.638,1651,4.638,1652,4.638,1653,4.638,1654,4.638,1655,4.638,1656,4.638,1657,4.638,1658,4.638,1659,5.768,1660,4.638,1661,4.638,1662,4.638,1663,4.638,1664,4.638]],["title/miscellaneous/functions.html",[1665,1.997,1666,3.603]],["body/miscellaneous/functions.html",[21,0.021,242,0.938,266,0.014,267,0.017,268,0.014,304,0.876,307,0.467,315,0.872,342,2.597,348,1.552,349,1.38,352,2.597,353,2.597,354,2.553,358,1.908,611,4.668,631,3.074,632,2.814,640,4.573,655,2.827,770,4.062,856,2.411,940,3.401,941,5.241,962,3.401,969,5.709,970,5.28,971,3.838,972,3.838,980,3.838,981,3.838,982,3.838,1241,3.401,1311,4.277,1593,4.826,1594,4.826,1595,5.28,1596,4.826,1597,4.826,1665,3.074,1666,3.838,1667,6.834,1668,4.501,1669,4.501,1670,4.501,1671,4.501]],["title/index.html",[307,0.364,1672,2.993]],["body/index.html",[1,2.259,2,1.845,21,0.022,236,1.216,244,2.399,247,2.612,249,2.259,251,2.399,253,2.259,255,2.259,257,2.259,260,2.259,262,2.259,266,0.012,267,0.016,268,0.012,269,1.216,270,4.224,271,1.627,272,1.731,273,1.972,274,1.972,275,1.972,276,1.845,277,3.366,278,3.366,279,2.598,280,1.845,281,1.845,288,1.731,302,1.972,329,3.356,330,1.845,339,2.129,340,2.906,511,4.719,512,3.366,513,3.366,514,3.366,515,3.366,516,3.637,517,4.595,570,2.982,607,3.116,687,3.366,688,3.366,689,3.116,690,3.637,691,3.356,692,3.356,693,3.637,694,3.866,768,2.277,934,4.224,935,3.366,936,3.366,1095,4.224,1096,3.366,1097,3.366,1115,4.224,1116,3.366,1117,3.366,1169,4.435,1375,3.366,1490,4.833,1491,3.366,1492,3.366,1607,3.366,1672,3.366,1673,3.947,1674,3.947,1675,3.947]],["title/modules.html",[271,1.982]],["body/modules.html",[21,0.019,266,0.016,267,0.019,268,0.016,270,3.607,271,2.177,449,4.502,511,3.607,516,3.301,517,3.301,521,4.897,934,3.607,1095,3.607,1115,3.607,1490,3.607,1676,7.17,1677,7.17,1678,7.224,1679,5.281]],["title/routes.html",[288,2.108]],["body/routes.html",[21,0.02,266,0.017,267,0.02,268,0.017,288,2.529]],["title/miscellaneous/variables.html",[1665,1.997,1680,3.603]],["body/miscellaneous/variables.html",[21,0.022,266,0.009,267,0.013,268,0.009,306,1.807,307,0.316,315,0.763,316,0.952,331,2.301,333,4.606,345,3.703,346,3.438,347,3.733,354,2.733,358,2.211,371,3.167,380,3.258,381,3.703,382,2.551,383,3.288,388,3.438,389,3.703,390,3.703,394,1.341,459,3.362,595,2.537,596,2.301,599,2.59,626,2.301,650,4.187,664,2.973,665,3.785,718,2.301,727,3.811,748,3.288,780,2.301,781,4.936,786,4.164,787,3.288,788,3.288,789,3.288,790,3.288,791,3.288,792,4.606,793,3.288,794,3.288,795,3.288,796,3.288,797,3.288,803,2.301,804,3.288,833,2.596,1127,2.301,1498,2.301,1627,2.596,1628,2.596,1629,2.596,1630,2.596,1631,2.596,1632,3.711,1633,3.711,1665,2.08,1680,2.596,1681,4.352,1682,3.045,1683,3.045,1684,3.045,1685,3.045,1686,3.045,1687,3.045,1688,6.418,1689,4.352,1690,4.352,1691,4.352,1692,4.352,1693,3.045,1694,3.045,1695,5.541,1696,3.045,1697,5.862,1698,4.352,1699,5.541,1700,4.352,1701,4.352,1702,4.352,1703,4.352,1704,4.352,1705,3.045,1706,3.045]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"interfaces/LoginPayload.html":{},"components/LogoutPage.html":{},"modules/LogoutPageModule.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":987,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/LoginPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"coverage.html":{}}}],["0.8.29",{"_index":1664,"title":{},"body":{"dependencies.html":{}}}],["0.9.3",{"_index":1655,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1615,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1584,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":919,"title":{},"body":{"components/HomePage.html":{}}}],["1.0.0",{"_index":1656,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1662,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1590,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":1608,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1603,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1601,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1606,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1605,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1599,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1375,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"index.html":{}}}],["10).subscribe((data",{"_index":1416,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["100",{"_index":1114,"title":{},"body":{"components/LogoutPage.html":{},"coverage.html":{}}}],["1000",{"_index":977,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["100px",{"_index":1110,"title":{},"body":{"components/LogoutPage.html":{}}}],["10px",{"_index":910,"title":{},"body":{"components/HomePage.html":{}}}],["11/11",{"_index":1614,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1598,"title":{},"body":{"coverage.html":{}}}],["12px",{"_index":926,"title":{},"body":{"components/HomePage.html":{}}}],["13/23",{"_index":1626,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1604,"title":{},"body":{"coverage.html":{}}}],["15px",{"_index":1464,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["180px",{"_index":1082,"title":{},"body":{"components/LoginPage.html":{}}}],["19/31",{"_index":1622,"title":{},"body":{"coverage.html":{}}}],["1px",{"_index":1090,"title":{},"body":{"components/LoginPage.html":{}}}],["2",{"_index":1674,"title":{},"body":{"index.html":{}}}],["2.0.6",{"_index":1648,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1658,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1612,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1426,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"coverage.html":{}}}],["22",{"_index":1675,"title":{},"body":{"index.html":{}}}],["22/31",{"_index":1619,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":975,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["24px",{"_index":1293,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["25",{"_index":1600,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":923,"title":{},"body":{"components/HomePage.html":{},"components/ValidateVolunteerComponent.html":{}}}],["3/3",{"_index":1587,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1616,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1602,"title":{},"body":{"coverage.html":{}}}],["35px",{"_index":1465,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["4.0.3",{"_index":1654,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":1646,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1591,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":839,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["401",{"_index":838,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["40px",{"_index":1294,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["5",{"_index":1607,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["5.0.0",{"_index":1645,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":1653,"title":{},"body":{"dependencies.html":{}}}],["5.11.0",{"_index":1642,"title":{},"body":{"dependencies.html":{}}}],["5.9.0",{"_index":1640,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1613,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1586,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1080,"title":{},"body":{"components/LoginPage.html":{}}}],["500",{"_index":1428,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["50px",{"_index":1089,"title":{},"body":{"components/LoginPage.html":{}}}],["56",{"_index":1625,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":920,"title":{},"body":{"components/HomePage.html":{},"components/ValidateVolunteerComponent.html":{}}}],["6.4.0",{"_index":1650,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":1660,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1609,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":976,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["61",{"_index":1621,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1585,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1673,"title":{},"body":{"index.html":{}}}],["7.1.1",{"_index":1659,"title":{},"body":{"dependencies.html":{}}}],["7.2.2",{"_index":1637,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":1618,"title":{},"body":{"coverage.html":{}}}],["70px",{"_index":909,"title":{},"body":{"components/HomePage.html":{}}}],["75",{"_index":1623,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1169,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"index.html":{}}}],["8.0.0",{"_index":1651,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1592,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":1611,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1610,"title":{},"body":{"coverage.html":{}}}],["9/12",{"_index":1624,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1588,"title":{},"body":{"coverage.html":{}}}],["_credentials",{"_index":598,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["_design",{"_index":1544,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["_errors",{"_index":864,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["_global_",{"_index":848,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["_id",{"_index":309,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["ab",{"_index":107,"title":{},"body":{"components/AboutPage.html":{}}}],["about'},{'name",{"_index":243,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["about.page",{"_index":293,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["about.page.html",{"_index":19,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page.scss",{"_index":17,"title":{},"body":{"components/AboutPage.html":{}}}],["aboutpage",{"_index":1,"title":{"components/AboutPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["aboutpagemodule",{"_index":270,"title":{"modules/AboutPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"index.html":{},"modules.html":{}}}],["absolute",{"_index":1092,"title":{},"body":{"components/LoginPage.html":{},"components/SendMessageComponent.html":{}}}],["accept",{"_index":1166,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["access",{"_index":585,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["accessors",{"_index":603,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["accesstoken",{"_index":604,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["accusamus",{"_index":165,"title":{},"body":{"components/AboutPage.html":{}}}],["accusantium",{"_index":98,"title":{},"body":{"components/AboutPage.html":{}}}],["acreditat",{"_index":1444,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["acredited",{"_index":710,"title":{},"body":{"classes/Course.html":{},"injectables/CourseService.html":{},"injectables/VolunteerService.html":{}}}],["action",{"_index":896,"title":{},"body":{"components/HomePage.html":{}}}],["action.title",{"_index":906,"title":{},"body":{"components/HomePage.html":{}}}],["actions",{"_index":885,"title":{},"body":{"components/HomePage.html":{}}}],["activated",{"_index":1194,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["activatedroute",{"_index":1224,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["activatedroutesnapshot",{"_index":1192,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["actual_component",{"_index":265,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["ad",{"_index":49,"title":{},"body":{"components/AboutPage.html":{}}}],["adaug",{"_index":465,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["add",{"_index":245,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{}}}],["added",{"_index":386,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["added_by",{"_index":1121,"title":{},"body":{"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["addimage",{"_index":1219,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["additional",{"_index":827,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["address",{"_index":1468,"title":{},"body":{"classes/Volunteer.html":{}}}],["adds",{"_index":805,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{}}}],["addvolunteercomponent",{"_index":244,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["adipisci",{"_index":136,"title":{},"body":{"components/AboutPage.html":{}}}],["adipiscing",{"_index":36,"title":{},"body":{"components/AboutPage.html":{}}}],["adres",{"_index":1071,"title":{},"body":{"components/LoginPage.html":{}}}],["alias",{"_index":231,"title":{},"body":{"components/AboutPage.html":{}}}],["align",{"_index":912,"title":{},"body":{"components/HomePage.html":{},"components/LogoutPage.html":{}}}],["aliqua",{"_index":47,"title":{},"body":{"components/AboutPage.html":{}}}],["aliquam",{"_index":143,"title":{},"body":{"components/AboutPage.html":{}}}],["aliquid",{"_index":152,"title":{},"body":{"components/AboutPage.html":{}}}],["aliquip",{"_index":58,"title":{},"body":{"components/AboutPage.html":{}}}],["allocate",{"_index":1323,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["allocated",{"_index":360,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocates",{"_index":1512,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocateuser",{"_index":1307,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["allocateuser(volunteerid",{"_index":1318,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["allocatevolunteer",{"_index":1499,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocatevolunteer(allocationid",{"_index":1509,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocation",{"_index":301,"title":{"classes/Allocation.html":{}},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["allocation.city",{"_index":411,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.county",{"_index":410,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.created_at",{"_index":412,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.organisation",{"_index":414,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.rescue_officer",{"_index":407,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocation.volunteer",{"_index":404,"title":{},"body":{"injectables/AllocationService.html":{}}}],["allocationid",{"_index":1513,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["allocations",{"_index":333,"title":{},"body":{"injectables/AllocationService.html":{},"classes/DatabaseSyncService.html":{},"miscellaneous/variables.html":{}}}],["allocationservice",{"_index":329,"title":{"injectables/AllocationService.html":{}},"body":{"injectables/AllocationService.html":{},"modules/CoreModule.html":{},"components/ValidateVolunteerComponent.html":{},"coverage.html":{},"index.html":{}}}],["allowed",{"_index":587,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["allowing",{"_index":1178,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["aloc",{"_index":1451,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["alocat",{"_index":1453,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["already",{"_index":1358,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["amet",{"_index":34,"title":{},"body":{"components/AboutPage.html":{}}}],["android",{"_index":893,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{},"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["angular",{"_index":578,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocationsService.html":{},"guards/UnauthenticatedGuard.html":{}}}],["angular/common",{"_index":285,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":662,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocationsService.html":{},"interceptors/RequestInterceptor.html":{}}}],["angular/core",{"_index":22,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/LogoutPage.html":{},"modules/LogoutPageModule.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":287,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1638,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":520,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":290,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/LogoutPage.html":{},"modules/LogoutPageModule.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["anim",{"_index":87,"title":{},"body":{"components/AboutPage.html":{}}}],["animi",{"_index":185,"title":{},"body":{"components/AboutPage.html":{}}}],["apeleaz",{"_index":472,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["aperiam",{"_index":103,"title":{},"body":{"components/AboutPage.html":{}}}],["api.lxhost.ro",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api.lxhost.ro/api",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aplicație",{"_index":29,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["app.component",{"_index":524,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":426,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":247,"title":{"components/AppComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["application",{"_index":447,"title":{},"body":{"components/AppComponent.html":{}}}],["application/json",{"_index":1167,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["appmodule",{"_index":511,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["apppage",{"_index":535,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["apppages",{"_index":428,"title":{},"body":{"components/AppComponent.html":{}}}],["approutingmodule",{"_index":516,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["architecto",{"_index":112,"title":{},"body":{"components/AboutPage.html":{}}}],["asperiores",{"_index":234,"title":{},"body":{"components/AboutPage.html":{}}}],["aspernatur",{"_index":121,"title":{},"body":{"components/AboutPage.html":{}}}],["assumenda",{"_index":210,"title":{},"body":{"components/AboutPage.html":{}}}],["async",{"_index":1014,"title":{},"body":{"components/LoginPage.html":{}}}],["atque",{"_index":174,"title":{},"body":{"components/AboutPage.html":{}}}],["attachments",{"_index":1150,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["attributes",{"_index":860,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["aut",{"_index":122,"title":{},"body":{"components/AboutPage.html":{}}}],["aute",{"_index":64,"title":{},"body":{"components/AboutPage.html":{}}}],["autem",{"_index":155,"title":{},"body":{"components/AboutPage.html":{}}}],["authenticated",{"_index":574,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/UnauthenticatedGuard.html":{}}}],["authenticates",{"_index":646,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication",{"_index":376,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"components/LoginPage.html":{},"interfaces/LoginPayload.html":{},"components/LogoutPage.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{}}}],["authentication.credentials",{"_index":635,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginPage.html":{}}}],["authentication.loginpayload",{"_index":623,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication.service",{"_index":591,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["authentication.user",{"_index":661,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authentication/authentication.service",{"_index":1163,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["authentication/unauthenticated.guard",{"_index":703,"title":{},"body":{"modules/CoreModule.html":{}}}],["authenticationguard",{"_index":294,"title":{"guards/AuthenticationGuard.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["authenticationservice",{"_index":339,"title":{"injectables/AuthenticationService.html":{}},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{},"coverage.html":{},"index.html":{}}}],["authorization",{"_index":1170,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["automatically",{"_index":588,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["available",{"_index":449,"title":{},"body":{"components/AppComponent.html":{},"modules.html":{}}}],["await",{"_index":1058,"title":{},"body":{"components/LoginPage.html":{}}}],["back",{"_index":891,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{}}}],["backend",{"_index":619,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["background",{"_index":1076,"title":{},"body":{"components/LoginPage.html":{}}}],["bar",{"_index":443,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["bar/ngx",{"_index":498,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["base64",{"_index":1230,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["base64image",{"_index":1217,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["basic",{"_index":597,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/LocalStorageService.html":{}}}],["bearer",{"_index":1171,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["beatae",{"_index":113,"title":{},"body":{"components/AboutPage.html":{}}}],["being",{"_index":826,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["black",{"_index":928,"title":{},"body":{"components/HomePage.html":{}}}],["blanditiis",{"_index":170,"title":{},"body":{"components/AboutPage.html":{}}}],["block",{"_index":1085,"title":{},"body":{"components/LoginPage.html":{}}}],["blocked",{"_index":892,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{}}}],["body",{"_index":627,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["body.user",{"_index":675,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["boolean",{"_index":489,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/RouteReusableStrategy.html":{},"guards/UnauthenticatedGuard.html":{}}}],["bootstrap",{"_index":274,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["border",{"_index":1078,"title":{},"body":{"components/LoginPage.html":{},"components/ValidateVolunteerComponent.html":{}}}],["bottom",{"_index":1063,"title":{},"body":{"components/LoginPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["box",{"_index":917,"title":{},"body":{"components/HomePage.html":{},"components/ValidateVolunteerComponent.html":{}}}],["browse",{"_index":1678,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":521,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(destination",{"_index":546,"title":{},"body":{"classes/AppPage.html":{}}}],["browser.gettitle",{"_index":547,"title":{},"body":{"classes/AppPage.html":{}}}],["browsermodule",{"_index":519,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":1086,"title":{},"body":{"components/LoginPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["buttons",{"_index":1064,"title":{},"body":{"components/LoginPage.html":{}}}],["c",{"_index":986,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["ca",{"_index":984,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["call",{"_index":901,"title":{},"body":{"components/HomePage.html":{}}}],["camera",{"_index":1228,"title":{},"body":{"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["camera.destinationtype.data_url",{"_index":1265,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["camera.getpicture",{"_index":1263,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["canactivate",{"_index":298,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/HomePageModule.html":{},"guards/UnauthenticatedGuard.html":{},"modules/VolunteerPageModule.html":{}}}],["cancel",{"_index":1068,"title":{},"body":{"components/LoginPage.html":{}}}],["capitalize",{"_index":1088,"title":{},"body":{"components/LoginPage.html":{},"components/ValidateVolunteerComponent.html":{}}}],["case",{"_index":890,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{}}}],["catcherror",{"_index":830,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["caut",{"_index":1436,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["center",{"_index":913,"title":{},"body":{"components/HomePage.html":{},"components/LogoutPage.html":{}}}],["change",{"_index":651,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ValidateVolunteerComponent.html":{}}}],["changed",{"_index":874,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["changes",{"_index":1025,"title":{},"body":{"components/LoginPage.html":{},"components/SendMessageComponent.html":{}}}],["changing",{"_index":1330,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["charset=utf",{"_index":1168,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["checkpemission",{"_index":1220,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["checks",{"_index":950,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/SendMessageComponent.html":{}}}],["cillum",{"_index":70,"title":{},"body":{"components/AboutPage.html":{}}}],["cities",{"_index":997,"title":{},"body":{"injectables/LocationsService.html":{},"components/ValidateVolunteerComponent.html":{}}}],["city",{"_index":310,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["city.county",{"_index":1434,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["city.name",{"_index":1457,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["class",{"_index":24,"title":{"classes/Allocation.html":{},"classes/AppPage.html":{},"classes/Course.html":{},"classes/DatabaseSyncService.html":{},"classes/Organisation.html":{},"classes/RouteReusableStrategy.html":{},"classes/Volunteer.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/LogoutPage.html":{},"modules/LogoutPageModule.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["classes",{"_index":302,"title":{},"body":{"classes/Allocation.html":{},"classes/AppPage.html":{},"classes/Course.html":{},"classes/DatabaseSyncService.html":{},"classes/Organisation.html":{},"classes/RouteReusableStrategy.html":{},"classes/Volunteer.html":{},"index.html":{}}}],["clear",{"_index":865,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["clearall",{"_index":945,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["cleardata",{"_index":1593,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cleardata(type",{"_index":1668,"title":{},"body":{"miscellaneous/functions.html":{}}}],["clearitem",{"_index":946,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["clearitem(key",{"_index":956,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["clears",{"_index":631,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["click",{"_index":903,"title":{},"body":{"components/HomePage.html":{}}}],["closes",{"_index":1357,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["cluster_aboutpagemodule",{"_index":277,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_aboutpagemodule_declarations",{"_index":278,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":512,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":515,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":513,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":514,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_coremodule",{"_index":687,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_coremodule_providers",{"_index":688,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_homepagemodule",{"_index":935,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_declarations",{"_index":936,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_loginpagemodule",{"_index":1096,"title":{},"body":{"modules/LoginPageModule.html":{},"index.html":{}}}],["cluster_loginpagemodule_declarations",{"_index":1097,"title":{},"body":{"modules/LoginPageModule.html":{},"index.html":{}}}],["cluster_logoutpagemodule",{"_index":1116,"title":{},"body":{"modules/LogoutPageModule.html":{},"index.html":{}}}],["cluster_logoutpagemodule_declarations",{"_index":1117,"title":{},"body":{"modules/LogoutPageModule.html":{},"index.html":{}}}],["cluster_volunteerpagemodule",{"_index":1491,"title":{},"body":{"modules/VolunteerPageModule.html":{},"index.html":{}}}],["cluster_volunteerpagemodule_declarations",{"_index":1492,"title":{},"body":{"modules/VolunteerPageModule.html":{},"index.html":{}}}],["cnp",{"_index":1439,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["cod",{"_index":1073,"title":{},"body":{"components/LoginPage.html":{}}}],["code",{"_index":818,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/VolunteerService.html":{}}}],["codification",{"_index":1231,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["color",{"_index":927,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{}}}],["column",{"_index":907,"title":{},"body":{"components/HomePage.html":{},"components/LogoutPage.html":{}}}],["columns",{"_index":929,"title":{},"body":{"components/HomePage.html":{}}}],["comments",{"_index":1469,"title":{},"body":{"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["commodi",{"_index":153,"title":{},"body":{"components/AboutPage.html":{}}}],["commodo",{"_index":61,"title":{},"body":{"components/AboutPage.html":{}}}],["commonmodule",{"_index":284,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["component",{"_index":0,"title":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/LogoutPage.html":{},"modules/LogoutPageModule.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["component_template",{"_index":241,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"index.html":{}}}],["confirm",{"_index":1458,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["confirmallocation",{"_index":1308,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["confirmallocation(volunteerid",{"_index":1321,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["consectetur",{"_index":35,"title":{},"body":{"components/AboutPage.html":{}}}],["consequat",{"_index":62,"title":{},"body":{"components/AboutPage.html":{}}}],["consequatur",{"_index":154,"title":{},"body":{"components/AboutPage.html":{}}}],["consequuntur",{"_index":125,"title":{},"body":{"components/AboutPage.html":{}}}],["console.error('request",{"_index":850,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["console.log(this._errors",{"_index":880,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["const",{"_index":296,"title":{},"body":{"modules/AboutPageModule.html":{},"injectables/AllocationService.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"injectables/OrganisationService.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"components/AboutPage.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{}}}],["constructor(authenticationservice",{"_index":338,"title":{},"body":{"injectables/AllocationService.html":{},"components/LogoutPage.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{}}}],["constructor(courseservice",{"_index":1507,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["constructor(http",{"_index":1000,"title":{},"body":{"injectables/LocationsService.html":{}}}],["constructor(httpclient",{"_index":605,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(platform",{"_index":433,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":391,"title":{},"body":{"injectables/AllocationService.html":{},"components/HomePage.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["constructor(route",{"_index":1223,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["constructor(router",{"_index":576,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"guards/UnauthenticatedGuard.html":{}}}],["constructor(volunteerservice",{"_index":1315,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["containing",{"_index":359,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"components/HomePage.html":{},"injectables/OrganisationService.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["contains",{"_index":361,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/LocationsService.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["content",{"_index":933,"title":{},"body":{"components/HomePage.html":{},"components/LogoutPage.html":{},"interceptors/RequestInterceptor.html":{}}}],["context",{"_index":1632,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continuous",{"_index":396,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["controller",{"_index":1026,"title":{},"body":{"components/LoginPage.html":{}}}],["convert",{"_index":1232,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["cookie",{"_index":969,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["cookie's",{"_index":981,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["cordova",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["core",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"dependencies.html":{}}}],["core/authentication",{"_index":1040,"title":{},"body":{"components/LoginPage.html":{}}}],["core/authentication/authentication.guard",{"_index":295,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/HomePageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["core/authentication/unauthenticated.guard",{"_index":555,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["coremodule",{"_index":517,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"index.html":{},"modules.html":{}}}],["corporis",{"_index":149,"title":{},"body":{"components/AboutPage.html":{}}}],["corrupti",{"_index":175,"title":{},"body":{"components/AboutPage.html":{}}}],["couchdb",{"_index":345,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["counties",{"_index":996,"title":{},"body":{"injectables/LocationsService.html":{},"components/ValidateVolunteerComponent.html":{}}}],["county",{"_index":311,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["county.name",{"_index":1455,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["countyselectionchanged",{"_index":1309,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["countyselectionchanged(event",{"_index":1325,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["course",{"_index":708,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"injectables/CourseService.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["course's",{"_index":730,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.acredited",{"_index":757,"title":{},"body":{"injectables/CourseService.html":{},"injectables/VolunteerService.html":{}}}],["course.name",{"_index":755,"title":{},"body":{"injectables/CourseService.html":{},"components/ValidateVolunteerComponent.html":{}}}],["course.obtained",{"_index":756,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.obtained).subscribe",{"_index":1560,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course.service",{"_index":1539,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["course.volunteer_id",{"_index":754,"title":{},"body":{"injectables/CourseService.html":{}}}],["courseid",{"_index":734,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursename",{"_index":740,"title":{},"body":{"injectables/CourseService.html":{},"injectables/VolunteerService.html":{}}}],["courses",{"_index":727,"title":{},"body":{"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["courseservice",{"_index":689,"title":{"injectables/CourseService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/CourseService.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"index.html":{}}}],["coverage",{"_index":1580,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createallocation",{"_index":337,"title":{},"body":{"injectables/AllocationService.html":{}}}],["createallocation(volunteer",{"_index":350,"title":{},"body":{"injectables/AllocationService.html":{}}}],["createcookie",{"_index":1594,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createcookie(name",{"_index":972,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["createcourse",{"_index":719,"title":{},"body":{"injectables/CourseService.html":{}}}],["createcourse(name",{"_index":728,"title":{},"body":{"injectables/CourseService.html":{}}}],["created",{"_index":367,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["created_at",{"_index":312,"title":{},"body":{"classes/Allocation.html":{}}}],["createdat",{"_index":778,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["createform",{"_index":1013,"title":{},"body":{"components/LoginPage.html":{}}}],["createorganisation",{"_index":1128,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["createorganisation(name",{"_index":1135,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["creates",{"_index":352,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["createvolunteer",{"_index":1500,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["createvolunteer(name",{"_index":1515,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["creation",{"_index":1023,"title":{},"body":{"components/LoginPage.html":{}}}],["credentials",{"_index":599,"title":{"interfaces/Credentials.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginPage.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["credentialskey",{"_index":665,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["culpa",{"_index":82,"title":{},"body":{"components/AboutPage.html":{}}}],["cum",{"_index":197,"title":{},"body":{"components/AboutPage.html":{}}}],["cumque",{"_index":202,"title":{},"body":{"components/AboutPage.html":{}}}],["cupidatat",{"_index":78,"title":{},"body":{"components/AboutPage.html":{}}}],["cupiditate",{"_index":181,"title":{},"body":{"components/AboutPage.html":{}}}],["curr",{"_index":1201,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["curr.routeconfig",{"_index":1209,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["current",{"_index":590,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"interceptors/RequestInterceptor.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["currently",{"_index":1380,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["currentuser",{"_index":1151,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["currentuser._id",{"_index":1153,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["custom",{"_index":952,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["data",{"_index":640,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/RouteReusableStrategy.html":{},"components/ValidateVolunteerComponent.html":{},"miscellaneous/functions.html":{}}}],["data.docs",{"_index":1417,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["data:image/jpeg;base64",{"_index":1270,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["database",{"_index":347,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"components/LoginPage.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["databasesyncservice",{"_index":701,"title":{"classes/DatabaseSyncService.html":{}},"body":{"modules/CoreModule.html":{},"classes/DatabaseSyncService.html":{},"components/LoginPage.html":{},"coverage.html":{}}}],["databaseurl",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":321,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["date.now",{"_index":879,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["date.settime(date.gettime",{"_index":974,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["date.togmtstring",{"_index":978,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["datepicker",{"_index":526,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["days",{"_index":970,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["dd.mm.yyyy",{"_index":1450,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["de",{"_index":1072,"title":{},"body":{"components/LoginPage.html":{}}}],["debitis",{"_index":215,"title":{},"body":{"components/AboutPage.html":{}}}],["declarations",{"_index":273,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["declare",{"_index":771,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{}}}],["decoration",{"_index":914,"title":{},"body":{"components/HomePage.html":{}}}],["decorators",{"_index":484,"title":{},"body":{"components/AppComponent.html":{}}}],["default",{"_index":459,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":317,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["defining",{"_index":1524,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["definition",{"_index":1184,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["delectus",{"_index":227,"title":{},"body":{"components/AboutPage.html":{}}}],["deleniti",{"_index":173,"title":{},"body":{"components/AboutPage.html":{}}}],["deletecoursebyid",{"_index":720,"title":{},"body":{"injectables/CourseService.html":{}}}],["deletecoursebyid(courseid",{"_index":731,"title":{},"body":{"injectables/CourseService.html":{}}}],["deleteorganisationbyid",{"_index":1129,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["deleteorganisationbyid(organisationid",{"_index":1138,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["deletes",{"_index":733,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["deletevolunteerbyid",{"_index":1501,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["deletevolunteerbyid(volunteerid",{"_index":1519,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["delogare",{"_index":475,"title":{},"body":{"components/AppComponent.html":{}}}],["dependencies",{"_index":272,"title":{"dependencies.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{},"index.html":{}}}],["depending",{"_index":491,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["description",{"_index":304,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"interfaces/LoginPayload.html":{},"components/LogoutPage.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["deserunt",{"_index":85,"title":{},"body":{"components/AboutPage.html":{}}}],["despre",{"_index":28,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["destination",{"_index":544,"title":{},"body":{"classes/AppPage.html":{}}}],["destinationtype",{"_index":1264,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["detached",{"_index":1207,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["detachedroutehandle",{"_index":1195,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["detachedtree",{"_index":1205,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["details",{"_index":1356,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["detected",{"_index":1331,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["determine",{"_index":1422,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["determines",{"_index":583,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/UnauthenticatedGuard.html":{}}}],["dev",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["developement",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dicta",{"_index":115,"title":{},"body":{"components/AboutPage.html":{}}}],["dignissimos",{"_index":168,"title":{},"body":{"components/AboutPage.html":{}}}],["direction",{"_index":1112,"title":{},"body":{"components/LogoutPage.html":{}}}],["directive",{"_index":239,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["directives",{"_index":264,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["disable",{"_index":1423,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["display",{"_index":1028,"title":{},"body":{"components/LoginPage.html":{},"components/LogoutPage.html":{}}}],["displayed",{"_index":902,"title":{},"body":{"components/HomePage.html":{}}}],["distinctio",{"_index":193,"title":{},"body":{"components/AboutPage.html":{}}}],["doc",{"_index":760,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["doc.acredited",{"_index":762,"title":{},"body":{"injectables/CourseService.html":{}}}],["doc.allocation",{"_index":1579,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.city",{"_index":1565,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.comments",{"_index":1567,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.county",{"_index":1564,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.job",{"_index":1569,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.name",{"_index":761,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["doc.obtained",{"_index":763,"title":{},"body":{"injectables/CourseService.html":{}}}],["doc.organisation",{"_index":1566,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.phone",{"_index":1563,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.ssn",{"_index":1562,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["doc.updated",{"_index":1570,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["document",{"_index":980,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["document.addeventlistener(\"backbutton\",function(e",{"_index":905,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{}}}],["document.cookie",{"_index":979,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["document.cookie.split",{"_index":985,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["documentation",{"_index":1581,"title":{},"body":{"coverage.html":{}}}],["dolor",{"_index":32,"title":{},"body":{"components/AboutPage.html":{}}}],["dolore",{"_index":45,"title":{},"body":{"components/AboutPage.html":{}}}],["dolorem",{"_index":135,"title":{},"body":{"components/AboutPage.html":{}}}],["doloremque",{"_index":99,"title":{},"body":{"components/AboutPage.html":{}}}],["dolores",{"_index":127,"title":{},"body":{"components/AboutPage.html":{}}}],["doloribus",{"_index":233,"title":{},"body":{"components/AboutPage.html":{}}}],["dolorum",{"_index":186,"title":{},"body":{"components/AboutPage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["dorefresh",{"_index":1310,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["dorefresh(event",{"_index":1332,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["down",{"_index":1350,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["ducimus",{"_index":169,"title":{},"body":{"components/AboutPage.html":{}}}],["duis",{"_index":63,"title":{},"body":{"components/AboutPage.html":{}}}],["dup",{"_index":1437,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["dynamic",{"_index":1639,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/app.po.ts",{"_index":536,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:12",{"_index":540,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":543,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":541,"title":{},"body":{"classes/AppPage.html":{}}}],["ea",{"_index":60,"title":{},"body":{"components/AboutPage.html":{}}}],["eaque",{"_index":104,"title":{},"body":{"components/AboutPage.html":{}}}],["earum",{"_index":223,"title":{},"body":{"components/AboutPage.html":{}}}],["eius",{"_index":138,"title":{},"body":{"components/AboutPage.html":{}}}],["eiusmod",{"_index":39,"title":{},"body":{"components/AboutPage.html":{}}}],["element",{"_index":238,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["element(by.tagname('app",{"_index":548,"title":{},"body":{"classes/AppPage.html":{}}}],["elemmatch",{"_index":1578,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["eligendi",{"_index":200,"title":{},"body":{"components/AboutPage.html":{}}}],["elit",{"_index":37,"title":{},"body":{"components/AboutPage.html":{}}}],["email",{"_index":777,"title":{},"body":{"interfaces/Credentials.html":{},"components/LoginPage.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{}}}],["emits",{"_index":648,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["emitts",{"_index":873,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["empty",{"_index":1364,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["end",{"_index":1066,"title":{},"body":{"components/LoginPage.html":{},"components/ValidateVolunteerComponent.html":{}}}],["endkey",{"_index":1543,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["enim",{"_index":48,"title":{},"body":{"components/AboutPage.html":{}}}],["entry",{"_index":353,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["entrycomponents",{"_index":531,"title":{},"body":{"modules/AppModule.html":{}}}],["env",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":371,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":849,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["environment.serverurl",{"_index":1159,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["environments/environment",{"_index":372,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/VolunteerService.html":{}}}],["eos",{"_index":128,"title":{},"body":{"components/AboutPage.html":{}}}],["eq",{"_index":752,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["err",{"_index":1272,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["error",{"_index":96,"title":{},"body":{"components/AboutPage.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/LoginPage.html":{},"interfaces/RootObject.html":{}}}],["errorhandler",{"_index":807,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorhandler(response",{"_index":814,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorhandlerinterceptor",{"_index":690,"title":{"interceptors/ErrorHandlerInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["errormessageobject",{"_index":852,"title":{"interfaces/ErrorMessageObject.html":{}},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["errormessageservice",{"_index":691,"title":{"injectables/ErrorMessageService.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"coverage.html":{},"index.html":{}}}],["errormodel",{"_index":857,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["errormodel.errormessageobject",{"_index":870,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["errorresponse",{"_index":840,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error",{"_index":841,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.error",{"_index":847,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.validation",{"_index":842,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.validation.errors[key",{"_index":845,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorresponse.error.validation.keys.foreach((key",{"_index":843,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errors",{"_index":817,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{}}}],["esse",{"_index":69,"title":{},"body":{"components/AboutPage.html":{}}}],["est",{"_index":89,"title":{},"body":{"components/AboutPage.html":{}}}],["et",{"_index":44,"title":{},"body":{"components/AboutPage.html":{}}}],["eu",{"_index":71,"title":{},"body":{"components/AboutPage.html":{}}}],["eum",{"_index":157,"title":{},"body":{"components/AboutPage.html":{}}}],["eveniet",{"_index":218,"title":{},"body":{"components/AboutPage.html":{}}}],["event",{"_index":819,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/ValidateVolunteerComponent.html":{}}}],["event.target",{"_index":1410,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["event.target.complete",{"_index":1420,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["event.target.disabled",{"_index":1427,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["event.target.value",{"_index":1412,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["eventemitter",{"_index":647,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["events",{"_index":649,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{}}}],["ex",{"_index":59,"title":{},"body":{"components/AboutPage.html":{}}}],["excepteur",{"_index":75,"title":{},"body":{"components/AboutPage.html":{}}}],["excepturi",{"_index":179,"title":{},"body":{"components/AboutPage.html":{}}}],["exercitation",{"_index":54,"title":{},"body":{"components/AboutPage.html":{}}}],["exercitationem",{"_index":147,"title":{},"body":{"components/AboutPage.html":{}}}],["existing",{"_index":955,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["expedita",{"_index":192,"title":{},"body":{"components/AboutPage.html":{}}}],["expiration",{"_index":971,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["expires",{"_index":973,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["explicabo",{"_index":116,"title":{},"body":{"components/AboutPage.html":{}}}],["explicit",{"_index":1179,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["export",{"_index":23,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"interfaces/LoginPayload.html":{},"components/LogoutPage.html":{},"modules/LogoutPageModule.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["exports",{"_index":276,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["extends",{"_index":1185,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["extra",{"_index":1162,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["facere",{"_index":208,"title":{},"body":{"components/AboutPage.html":{}}}],["facilis",{"_index":191,"title":{},"body":{"components/AboutPage.html":{}}}],["false",{"_index":595,"title":{},"body":{"guards/AuthenticationGuard.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"miscellaneous/variables.html":{}}}],["fields",{"_index":399,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"interfaces/LoginPayload.html":{},"components/LogoutPage.html":{},"modules/LogoutPageModule.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["files",{"_index":1005,"title":{},"body":{"injectables/LocationsService.html":{}}}],["filter",{"_index":1502,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["filter(county",{"_index":1521,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["filtered",{"_index":1342,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["filters",{"_index":1523,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["finalize",{"_index":1042,"title":{},"body":{"components/LoginPage.html":{}}}],["find",{"_index":384,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["find/lib/index",{"_index":370,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["finds",{"_index":737,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["flex",{"_index":1111,"title":{},"body":{"components/LogoutPage.html":{}}}],["following",{"_index":362,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["font",{"_index":924,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["form",{"_index":1022,"title":{},"body":{"components/LoginPage.html":{}}}],["form's",{"_index":1327,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["formbuilder",{"_index":1017,"title":{},"body":{"components/LoginPage.html":{}}}],["formgroup",{"_index":1039,"title":{},"body":{"components/LoginPage.html":{}}}],["formsmodule",{"_index":286,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["fotografie",{"_index":1283,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["found",{"_index":610,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["from(localdb.alldocs",{"_index":749,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["from(localdb.find",{"_index":751,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["from(localdb.post(allocation",{"_index":419,"title":{},"body":{"injectables/AllocationService.html":{}}}],["from(localdb.post(course",{"_index":758,"title":{},"body":{"injectables/CourseService.html":{}}}],["from(localdb.post(organisation",{"_index":1154,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["from(localdb.post(volunteer",{"_index":1557,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["fuga",{"_index":187,"title":{},"body":{"components/AboutPage.html":{}}}],["fugiat",{"_index":72,"title":{},"body":{"components/AboutPage.html":{}}}],["fugit",{"_index":124,"title":{},"body":{"components/AboutPage.html":{}}}],["full",{"_index":559,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginPage.html":{},"components/SendMessageComponent.html":{}}}],["function",{"_index":825,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"components/ValidateVolunteerComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1666,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["future",{"_index":1203,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["future.data.reuse",{"_index":1210,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["future.routeconfig",{"_index":1208,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["generated",{"_index":869,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["get('/logout",{"_index":677,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["get('/profile",{"_index":686,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getaccesstoken",{"_index":657,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getcitylist",{"_index":998,"title":{},"body":{"injectables/LocationsService.html":{},"components/ValidateVolunteerComponent.html":{}}}],["getcitylist(county",{"_index":1337,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["getcountylist",{"_index":999,"title":{},"body":{"injectables/LocationsService.html":{},"components/ValidateVolunteerComponent.html":{}}}],["getcoursebyid",{"_index":721,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyid(courseid",{"_index":735,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyname",{"_index":722,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyname(coursename",{"_index":738,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyvolunteerid",{"_index":723,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcoursebyvolunteerid(volunteerid",{"_index":741,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcourses",{"_index":724,"title":{},"body":{"injectables/CourseService.html":{}}}],["getcredentials",{"_index":653,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getdata",{"_index":1311,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getdata(type",{"_index":1669,"title":{},"body":{"miscellaneous/functions.html":{}}}],["geterrors",{"_index":875,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["getitem",{"_index":947,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getitem(key",{"_index":960,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getorganisationbyid",{"_index":1130,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisationbyid(organisationid",{"_index":1141,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisationbyname",{"_index":1131,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisationbyname(organisationname",{"_index":1143,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getorganisations",{"_index":1132,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["getpageonetitletext",{"_index":537,"title":{},"body":{"classes/AppPage.html":{}}}],["gets",{"_index":1245,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["getsessionname",{"_index":1595,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getter",{"_index":655,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["gettitle",{"_index":538,"title":{},"body":{"classes/AppPage.html":{}}}],["getuser",{"_index":659,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getuserprofile",{"_index":600,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getvolunteerbyid",{"_index":1503,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteerbyid(volunteerid",{"_index":1527,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteerbyssn",{"_index":1504,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteerbyssn(ssn",{"_index":1529,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteers",{"_index":1505,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["getvolunteers(page",{"_index":1531,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["given",{"_index":1183,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"injectables/VolunteerService.html":{}}}],["granted",{"_index":1235,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["graph",{"_index":1679,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":569,"title":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{},"coverage.html":{}}}],["guards",{"_index":570,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{},"index.html":{}}}],["h",{"_index":1289,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["h:not(.item",{"_index":1460,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["handle",{"_index":953,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["handle(request",{"_index":834,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler",{"_index":806,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginPage.html":{}}}],["handler.interceptor.ts",{"_index":804,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["handler.interceptor.ts:25",{"_index":809,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler.interceptor.ts:45",{"_index":823,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler.interceptor.ts:59",{"_index":816,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handles",{"_index":579,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["handling",{"_index":812,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["harum",{"_index":188,"title":{},"body":{"components/AboutPage.html":{}}}],["height",{"_index":1081,"title":{},"body":{"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["hic",{"_index":224,"title":{},"body":{"components/AboutPage.html":{}}}],["hidden",{"_index":450,"title":{},"body":{"components/AppComponent.html":{}}}],["home",{"_index":557,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"guards/UnauthenticatedGuard.html":{}}}],["home')).element(by.deepcss('ion",{"_index":549,"title":{},"body":{"classes/AppPage.html":{}}}],["home'},{'name",{"_index":250,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["home.page",{"_index":938,"title":{},"body":{"modules/HomePageModule.html":{}}}],["home.page.html",{"_index":884,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":883,"title":{},"body":{"components/HomePage.html":{}}}],["homepage",{"_index":249,"title":{"components/HomePage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["homepagemodule",{"_index":934,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"index.html":{},"modules.html":{}}}],["html",{"_index":237,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["http",{"_index":613,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocationsService.html":{}}}],["http://rvm.lxhost.ro:5984",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":696,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpclient",{"_index":606,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/LocationsService.html":{}}}],["httpclientmodule",{"_index":697,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpevent",{"_index":828,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httphandler",{"_index":822,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httpinterceptor",{"_index":829,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httprequest",{"_index":821,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httpresponse",{"_index":815,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["https://github.com/angular/angular/issues/18374",{"_index":1182,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["https://rvm",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":1292,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["id",{"_index":88,"title":{},"body":{"components/AboutPage.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"injectables/OrganisationService.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["identifier",{"_index":1582,"title":{},"body":{"coverage.html":{}}}],["identifies",{"_index":833,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"miscellaneous/variables.html":{}}}],["if(!request.url.includes('assets",{"_index":1173,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["if(county",{"_index":1574,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["if(course",{"_index":1558,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["if(coursename",{"_index":1577,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["if(data.docs.length",{"_index":1418,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["if(event",{"_index":1409,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["if(organisation",{"_index":413,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["if(organisationid",{"_index":1576,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["if(response.docs",{"_index":1407,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["if(this.page",{"_index":1388,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["if(this.platform.is('cordova",{"_index":502,"title":{},"body":{"components/AppComponent.html":{}}}],["if(this.sms.haspermission",{"_index":1278,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["if(this.volunteeridwithdetails",{"_index":1395,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["if(url.includes('tel",{"_index":506,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["ig",{"_index":1547,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["ignore",{"_index":25,"title":{},"body":{"components/AboutPage.html":{},"classes/DatabaseSyncService.html":{},"injectables/ErrorMessageService.html":{},"components/VolunteerPage.html":{}}}],["illo",{"_index":108,"title":{},"body":{"components/AboutPage.html":{}}}],["illum",{"_index":162,"title":{},"body":{"components/AboutPage.html":{}}}],["image",{"_index":1227,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["imagedata",{"_index":1271,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["img",{"_index":1084,"title":{},"body":{"components/LoginPage.html":{}}}],["impedit",{"_index":203,"title":{},"body":{"components/AboutPage.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AboutPage.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["import",{"_index":20,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/LogoutPage.html":{},"modules/LogoutPageModule.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["imports",{"_index":299,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["incididunt",{"_index":41,"title":{},"body":{"components/AboutPage.html":{}}}],["incidunt",{"_index":141,"title":{},"body":{"components/AboutPage.html":{}}}],["include_docs",{"_index":750,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["incorecte",{"_index":1061,"title":{},"body":{"components/LoginPage.html":{}}}],["incorrect",{"_index":1034,"title":{},"body":{"components/LoginPage.html":{}}}],["index",{"_index":307,"title":{"index.html":{}},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"interfaces/LoginPayload.html":{},"components/LogoutPage.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":1424,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"interfaces/LoginPayload.html":{},"components/LogoutPage.html":{},"modules/LogoutPageModule.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["information",{"_index":632,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"interceptors/RequestInterceptor.html":{},"miscellaneous/functions.html":{}}}],["informations",{"_index":1351,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["informații",{"_index":1060,"title":{},"body":{"components/LoginPage.html":{}}}],["initialisation",{"_index":448,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["initializeapp",{"_index":431,"title":{},"body":{"components/AppComponent.html":{}}}],["initializes",{"_index":609,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["injectable",{"_index":328,"title":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}},"body":{"injectables/AllocationService.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["injectables",{"_index":330,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"index.html":{}}}],["injected",{"_index":810,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocationsService.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{}}}],["injection",{"_index":612,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["input",{"_index":1366,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["inserted",{"_index":1249,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["inside",{"_index":968,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["intent",{"_index":1274,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["intercept",{"_index":808,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["intercept(request",{"_index":820,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["interceptor",{"_index":802,"title":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":706,"title":{},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["intercepts",{"_index":824,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["interface",{"_index":767,"title":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{}},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":768,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{},"index.html":{}}}],["inventore",{"_index":109,"title":{},"body":{"components/AboutPage.html":{}}}],["ion",{"_index":930,"title":{},"body":{"components/HomePage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["ionic",{"_index":494,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["ionic/angular",{"_index":292,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"modules/VolunteerPageModule.html":{},"dependencies.html":{}}}],["ionic/lab",{"_index":1647,"title":{},"body":{"dependencies.html":{}}}],["ionicmodule",{"_index":291,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["ionicmodule.forroot",{"_index":532,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":523,"title":{},"body":{"modules/AppModule.html":{}}}],["ionrouteroutlet",{"_index":483,"title":{},"body":{"components/AppComponent.html":{}}}],["ionviewdidenter",{"_index":886,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{}}}],["ios",{"_index":1652,"title":{},"body":{"dependencies.html":{}}}],["ipsa",{"_index":105,"title":{},"body":{"components/AboutPage.html":{}}}],["ipsam",{"_index":118,"title":{},"body":{"components/AboutPage.html":{}}}],["ipsum",{"_index":31,"title":{},"body":{"components/AboutPage.html":{}}}],["irure",{"_index":65,"title":{},"body":{"components/AboutPage.html":{}}}],["isauthenticated",{"_index":601,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isn't",{"_index":586,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{}}}],["iste",{"_index":94,"title":{},"body":{"components/AboutPage.html":{}}}],["it's",{"_index":363,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["itaque",{"_index":222,"title":{},"body":{"components/AboutPage.html":{}}}],["item",{"_index":959,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/LoginPage.html":{}}}],["item's",{"_index":965,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["item.sc",{"_index":1459,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["item:not(.item",{"_index":1462,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["items",{"_index":1113,"title":{},"body":{"components/LogoutPage.html":{}}}],["itself",{"_index":966,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["iure",{"_index":158,"title":{},"body":{"components/AboutPage.html":{}}}],["iusto",{"_index":166,"title":{},"body":{"components/AboutPage.html":{}}}],["job",{"_index":1470,"title":{},"body":{"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["js",{"_index":1657,"title":{},"body":{"dependencies.html":{}}}],["json.parse(savedcredentials",{"_index":669,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(credentials",{"_index":682,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["jude",{"_index":1454,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["justify",{"_index":932,"title":{},"body":{"components/HomePage.html":{},"components/LogoutPage.html":{}}}],["key",{"_index":664,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["keyword",{"_index":1304,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["label",{"_index":1461,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["labore",{"_index":43,"title":{},"body":{"components/AboutPage.html":{}}}],["laboriosam",{"_index":151,"title":{},"body":{"components/AboutPage.html":{}}}],["laboris",{"_index":56,"title":{},"body":{"components/AboutPage.html":{}}}],["laborum",{"_index":90,"title":{},"body":{"components/AboutPage.html":{}}}],["last",{"_index":1514,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["laudantium",{"_index":100,"title":{},"body":{"components/AboutPage.html":{}}}],["left",{"_index":1093,"title":{},"body":{"components/LoginPage.html":{},"components/SendMessageComponent.html":{}}}],["legend",{"_index":236,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/LogoutPage.html":{},"modules/LogoutPageModule.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["libero",{"_index":195,"title":{},"body":{"components/AboutPage.html":{}}}],["lifecycle",{"_index":889,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{},"classes/RouteReusableStrategy.html":{}}}],["limit",{"_index":1305,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["list",{"_index":252,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["listvolunteercomponent",{"_index":251,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["literal",{"_index":323,"title":{},"body":{"classes/Allocation.html":{},"classes/Volunteer.html":{}}}],["live",{"_index":393,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["loadchildren",{"_index":560,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaddata",{"_index":1312,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["loaddata(event",{"_index":1344,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["loaded",{"_index":1352,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["loads",{"_index":1346,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["local",{"_index":354,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["localallocationsdb",{"_index":796,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localallocationsdb.sync(remoteallocationsdb",{"_index":801,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localcoursesdb",{"_index":790,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localcoursesdb.sync(remotecoursesdb",{"_index":799,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localdb",{"_index":381,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localdb.createindex",{"_index":398,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localdb.get(course._id).then(function",{"_index":759,"title":{},"body":{"injectables/CourseService.html":{}}}],["localdb.get(courseid).then(doc",{"_index":765,"title":{},"body":{"injectables/CourseService.html":{}}}],["localdb.get(organisation._id).then(function",{"_index":1155,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["localdb.get(organisationid).then(function",{"_index":1156,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["localdb.get(volunteer._id).then(function",{"_index":1561,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["localdb.get(volunteerid).then(function",{"_index":1571,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["localdb.put(doc",{"_index":764,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localdb.remove(doc",{"_index":766,"title":{},"body":{"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localdb.sync(remotedb",{"_index":397,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["localitate",{"_index":1456,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["localorganisationsdb",{"_index":793,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localorganisationsdb.sync(remoteorganisationsdb",{"_index":800,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["localstorage",{"_index":943,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":607,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{},"index.html":{}}}],["localvolunteersdb",{"_index":787,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localvolunteersdb.sync(remotevolunteersdb",{"_index":798,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["location",{"_index":1018,"title":{},"body":{"components/LoginPage.html":{},"components/ValidateVolunteerComponent.html":{}}}],["locations",{"_index":995,"title":{},"body":{"injectables/LocationsService.html":{},"components/ValidateVolunteerComponent.html":{}}}],["locationsservice",{"_index":692,"title":{"injectables/LocationsService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/LocationsService.html":{},"components/ValidateVolunteerComponent.html":{},"coverage.html":{},"index.html":{}}}],["log",{"_index":643,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logic",{"_index":1421,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["login",{"_index":562,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginPage.html":{},"interfaces/LoginPayload.html":{},"components/LogoutPage.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{}}}],["login'},{'name",{"_index":254,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["login(payload",{"_index":622,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login(this.loginform.value",{"_index":1051,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page",{"_index":1100,"title":{},"body":{"modules/LoginPageModule.html":{}}}],["login.page.html",{"_index":1011,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":1010,"title":{},"body":{"components/LoginPage.html":{}}}],["login/logout",{"_index":652,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginform",{"_index":1012,"title":{},"body":{"components/LoginPage.html":{}}}],["loginpage",{"_index":253,"title":{"components/LoginPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["loginpagemodule",{"_index":1095,"title":{"modules/LoginPageModule.html":{}},"body":{"modules/LoginPageModule.html":{},"index.html":{},"modules.html":{}}}],["loginpayload",{"_index":773,"title":{"interfaces/LoginPayload.html":{}},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["logo",{"_index":1075,"title":{},"body":{"components/LoginPage.html":{}}}],["logout",{"_index":476,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/LogoutPage.html":{}}}],["logout'},{'name",{"_index":256,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["logout.page",{"_index":1119,"title":{},"body":{"modules/LogoutPageModule.html":{}}}],["logout.page.html",{"_index":1103,"title":{},"body":{"components/LogoutPage.html":{}}}],["logout.page.scss",{"_index":1102,"title":{},"body":{"components/LogoutPage.html":{}}}],["logoutpage",{"_index":255,"title":{"components/LogoutPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"modules/LogoutPageModule.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"coverage.html":{},"index.html":{}}}],["logoutpagemodule",{"_index":1115,"title":{"modules/LogoutPageModule.html":{}},"body":{"modules/LogoutPageModule.html":{},"index.html":{},"modules.html":{}}}],["lorem",{"_index":30,"title":{},"body":{"components/AboutPage.html":{}}}],["magna",{"_index":46,"title":{},"body":{"components/AboutPage.html":{}}}],["magnam",{"_index":142,"title":{},"body":{"components/AboutPage.html":{}}}],["magni",{"_index":126,"title":{},"body":{"components/AboutPage.html":{}}}],["maiores",{"_index":230,"title":{},"body":{"components/AboutPage.html":{}}}],["map",{"_index":374,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/VolunteerService.html":{}}}],["map((body",{"_index":672,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["map((response",{"_index":421,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/VolunteerService.html":{}}}],["margin",{"_index":1290,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["matches",{"_index":1365,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["matching",{"_index":267,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"interfaces/LoginPayload.html":{},"components/LogoutPage.html":{},"modules/LogoutPageModule.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["maxime",{"_index":206,"title":{},"body":{"components/AboutPage.html":{}}}],["md",{"_index":1288,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["mean",{"_index":898,"title":{},"body":{"components/HomePage.html":{}}}],["menu",{"_index":479,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/ValidateVolunteerComponent.html":{}}}],["mesaj",{"_index":1285,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["mesajul",{"_index":1280,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message",{"_index":854,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/LoginPage.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{}}}],["message'},{'name",{"_index":259,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["message.component",{"_index":1496,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["message.component.html",{"_index":1216,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.scss",{"_index":1215,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts",{"_index":1213,"title":{},"body":{"components/SendMessageComponent.html":{},"coverage.html":{}}}],["message.component.ts:18",{"_index":1247,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:23",{"_index":1251,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:24",{"_index":1250,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:29",{"_index":1244,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:34",{"_index":1225,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:48",{"_index":1240,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:60",{"_index":1236,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:67",{"_index":1226,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:81",{"_index":1243,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.component.ts:94",{"_index":1233,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["message.service",{"_index":832,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["message.service.ts",{"_index":862,"title":{},"body":{"injectables/ErrorMessageService.html":{},"coverage.html":{}}}],["message.service.ts:11",{"_index":871,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:16",{"_index":872,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:27",{"_index":876,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:37",{"_index":868,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message.service.ts:51",{"_index":866,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["message/send",{"_index":1212,"title":{},"body":{"components/SendMessageComponent.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["messages",{"_index":863,"title":{},"body":{"injectables/ErrorMessageService.html":{},"components/LoginPage.html":{},"components/SendMessageComponent.html":{}}}],["messagging",{"_index":813,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["method",{"_index":656,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"injectables/OrganisationService.html":{},"classes/RouteReusableStrategy.html":{},"injectables/VolunteerService.html":{}}}],["methods",{"_index":336,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["minim",{"_index":50,"title":{},"body":{"components/AboutPage.html":{}}}],["minima",{"_index":145,"title":{},"body":{"components/AboutPage.html":{}}}],["minus",{"_index":204,"title":{},"body":{"components/AboutPage.html":{}}}],["miscellaneous",{"_index":1665,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":305,"title":{},"body":{"classes/Allocation.html":{},"classes/Course.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{}}}],["model/allocation.model",{"_index":378,"title":{},"body":{"injectables/AllocationService.html":{}}}],["model/course.model",{"_index":747,"title":{},"body":{"injectables/CourseService.html":{}}}],["model/organisation.model",{"_index":1149,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["model/volunteer.model",{"_index":379,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["models",{"_index":707,"title":{},"body":{"modules/CoreModule.html":{}}}],["modi",{"_index":139,"title":{},"body":{"components/AboutPage.html":{}}}],["module",{"_index":269,"title":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"modules/VolunteerPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["modules",{"_index":271,"title":{"modules.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{},"modules.html":{}}}],["molestiae",{"_index":161,"title":{},"body":{"components/AboutPage.html":{}}}],["molestias",{"_index":178,"title":{},"body":{"components/AboutPage.html":{}}}],["mollit",{"_index":86,"title":{},"body":{"components/AboutPage.html":{}}}],["mollitia",{"_index":184,"title":{},"body":{"components/AboutPage.html":{}}}],["more",{"_index":1347,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["moz",{"_index":922,"title":{},"body":{"components/HomePage.html":{}}}],["multi",{"_index":704,"title":{},"body":{"modules/CoreModule.html":{}}}],["n",{"_index":1448,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["nam",{"_index":194,"title":{},"body":{"components/AboutPage.html":{}}}],["name",{"_index":242,"title":{},"body":{"components/AboutPage.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"interfaces/LoginPayload.html":{},"components/LogoutPage.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["name,ssn",{"_index":1536,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["nameeq",{"_index":983,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["namespace",{"_index":772,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{}}}],["native/camera",{"_index":1253,"title":{},"body":{"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["native/core",{"_index":1641,"title":{},"body":{"dependencies.html":{}}}],["native/date",{"_index":527,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/sms",{"_index":1644,"title":{},"body":{"dependencies.html":{}}}],["native/sms/ngx",{"_index":530,"title":{},"body":{"modules/AppModule.html":{},"components/SendMessageComponent.html":{}}}],["native/splash",{"_index":495,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/status",{"_index":497,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["natus",{"_index":95,"title":{},"body":{"components/AboutPage.html":{}}}],["navigateto",{"_index":539,"title":{},"body":{"classes/AppPage.html":{}}}],["navigateto(destination",{"_index":542,"title":{},"body":{"classes/AppPage.html":{}}}],["navigation",{"_index":445,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{}}}],["neafiliat",{"_index":1443,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["necessitatibus",{"_index":216,"title":{},"body":{"components/AboutPage.html":{}}}],["needs",{"_index":1241,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"miscellaneous/functions.html":{}}}],["nemo",{"_index":117,"title":{},"body":{"components/AboutPage.html":{}}}],["neque",{"_index":132,"title":{},"body":{"components/AboutPage.html":{}}}],["nesciunt",{"_index":131,"title":{},"body":{"components/AboutPage.html":{}}}],["never",{"_index":645,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["new",{"_index":382,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":457,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["next.handle(request",{"_index":1175,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["ngmodule",{"_index":283,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["ngondestroy",{"_index":1221,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["ngoninit",{"_index":27,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["nihil",{"_index":160,"title":{},"body":{"components/AboutPage.html":{}}}],["nisi",{"_index":57,"title":{},"body":{"components/AboutPage.html":{}}}],["nobis",{"_index":199,"title":{},"body":{"components/AboutPage.html":{}}}],["non",{"_index":79,"title":{},"body":{"components/AboutPage.html":{}}}],["nostrud",{"_index":53,"title":{},"body":{"components/AboutPage.html":{}}}],["nostrum",{"_index":146,"title":{},"body":{"components/AboutPage.html":{}}}],["nothing",{"_index":642,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["nou",{"_index":466,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["nregistrat",{"_index":1447,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["null",{"_index":364,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"classes/RouteReusableStrategy.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["nulla",{"_index":73,"title":{},"body":{"components/AboutPage.html":{}}}],["number",{"_index":856,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"injectables/LocalStorageService.html":{},"interfaces/RootObject.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["nume",{"_index":1438,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["numquam",{"_index":137,"title":{},"body":{"components/AboutPage.html":{}}}],["o",{"_index":1282,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["object",{"_index":306,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interfaces/RootObject.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":366,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocationsService.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"injectables/VolunteerService.html":{}}}],["obtained",{"_index":711,"title":{},"body":{"classes/Course.html":{},"injectables/CourseService.html":{},"classes/Organisation.html":{},"injectables/VolunteerService.html":{}}}],["occaecat",{"_index":77,"title":{},"body":{"components/AboutPage.html":{}}}],["occaecati",{"_index":180,"title":{},"body":{"components/AboutPage.html":{}}}],["odio",{"_index":167,"title":{},"body":{"components/AboutPage.html":{}}}],["odit",{"_index":123,"title":{},"body":{"components/AboutPage.html":{}}}],["officia",{"_index":84,"title":{},"body":{"components/AboutPage.html":{}}}],["officiis",{"_index":214,"title":{},"body":{"components/AboutPage.html":{}}}],["omnis",{"_index":93,"title":{},"body":{"components/AboutPage.html":{}}}],["ondestroy",{"_index":1214,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["ones",{"_index":1360,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["open",{"_index":1381,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["opened",{"_index":1359,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["opening",{"_index":899,"title":{},"body":{"components/HomePage.html":{}}}],["openmenu",{"_index":1313,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["openmenu(volunteerid",{"_index":1354,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["opens",{"_index":1320,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["operation",{"_index":1024,"title":{},"body":{"components/LoginPage.html":{}}}],["operations",{"_index":335,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"components/LogoutPage.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["optio",{"_index":201,"title":{},"body":{"components/AboutPage.html":{}}}],["optional",{"_index":349,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":344,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"components/SendMessageComponent.html":{},"injectables/VolunteerService.html":{}}}],["organisation",{"_index":313,"title":{"classes/Organisation.html":{}},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["organisation's",{"_index":1137,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation._id",{"_index":1556,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["organisation.added_by",{"_index":1152,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisation.id",{"_index":415,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["organisation.name",{"_index":416,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["organisation.name','course.[].name",{"_index":1540,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["organisation.website",{"_index":417,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/VolunteerService.html":{}}}],["organisationid",{"_index":1140,"title":{},"body":{"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["organisationname",{"_index":1145,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["organisations",{"_index":792,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"miscellaneous/variables.html":{}}}],["organisationservice",{"_index":693,"title":{"injectables/OrganisationService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/OrganisationService.html":{},"coverage.html":{},"index.html":{}}}],["organizație",{"_index":1441,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["otherwise",{"_index":1367,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["out",{"_index":281,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["outlet",{"_index":487,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":1672,"title":{"index.html":{}},"body":{"index.html":{}}}],["p.title",{"_index":510,"title":{},"body":{"components/AppComponent.html":{}}}],["package",{"_index":1636,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":908,"title":{},"body":{"components/HomePage.html":{},"components/ValidateVolunteerComponent.html":{}}}],["page",{"_index":481,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["page:number",{"_index":1572,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["pages",{"_index":480,"title":{},"body":{"components/AppComponent.html":{}}}],["pages/about/about.module#aboutpagemodule",{"_index":564,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/home/home.module#homepagemodule",{"_index":561,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/login/login.module#loginpagemodule",{"_index":563,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/logout/logout.module#logoutpagemodule",{"_index":566,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/volunteer/volunteer.module#volunteerpagemodule",{"_index":565,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paginate",{"_index":1526,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["paginated",{"_index":1348,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["pagination",{"_index":1378,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["param",{"_index":402,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["parameters",{"_index":348,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1541,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["params['id",{"_index":1258,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["pariatur",{"_index":74,"title":{},"body":{"components/AboutPage.html":{}}}],["password",{"_index":775,"title":{},"body":{"interfaces/Credentials.html":{},"components/LoginPage.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["path",{"_index":297,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["pathmatch",{"_index":558,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":1545,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["payload",{"_index":628,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["payload).pipe",{"_index":671,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["pentru",{"_index":1445,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["per",{"_index":1376,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["perferendis",{"_index":232,"title":{},"body":{"components/AboutPage.html":{}}}],["performaction",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["performaction(url",{"_index":454,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["performed",{"_index":641,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomePage.html":{}}}],["performes",{"_index":895,"title":{},"body":{"components/HomePage.html":{}}}],["permission",{"_index":1234,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["perspiciatis",{"_index":91,"title":{},"body":{"components/AboutPage.html":{}}}],["phone",{"_index":776,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["phone's",{"_index":900,"title":{},"body":{"components/HomePage.html":{}}}],["picker",{"_index":1643,"title":{},"body":{"dependencies.html":{}}}],["picker/ngx",{"_index":528,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe",{"_index":420,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"components/LoginPage.html":{},"injectables/VolunteerService.html":{}}}],["pipe(catcherror(error",{"_index":835,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["placeat",{"_index":207,"title":{},"body":{"components/AboutPage.html":{}}}],["platform",{"_index":434,"title":{},"body":{"components/AppComponent.html":{}}}],["platforms",{"_index":440,"title":{},"body":{"components/AppComponent.html":{}}}],["plugin",{"_index":385,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["porro",{"_index":133,"title":{},"body":{"components/AboutPage.html":{}}}],["position",{"_index":1062,"title":{},"body":{"components/LoginPage.html":{},"components/SendMessageComponent.html":{}}}],["possimus",{"_index":209,"title":{},"body":{"components/AboutPage.html":{}}}],["pouchdb",{"_index":346,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('allocations",{"_index":383,"title":{},"body":{"injectables/AllocationService.html":{},"classes/DatabaseSyncService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('courses",{"_index":748,"title":{},"body":{"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('organisations",{"_index":794,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb('volunteers",{"_index":788,"title":{},"body":{"classes/DatabaseSyncService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb(environment.databaseurl",{"_index":390,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["pouchdb.plugin(pouchdbfind",{"_index":387,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["pouchdb/dist/pouchdb",{"_index":368,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["pouchdbfind",{"_index":369,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["praesentium",{"_index":171,"title":{},"body":{"components/AboutPage.html":{}}}],["prefixes",{"_index":1158,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["preloadallmodules",{"_index":553,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":568,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["presents",{"_index":1033,"title":{},"body":{"components/LoginPage.html":{}}}],["presenttoastwithoptions",{"_index":1015,"title":{},"body":{"components/LoginPage.html":{}}}],["private",{"_index":392,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{}}}],["prod",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":620,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["proident",{"_index":80,"title":{},"body":{"components/AboutPage.html":{}}}],["properties",{"_index":308,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"interfaces/Credentials.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"components/LoginPage.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["protecting",{"_index":573,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["protractor",{"_index":545,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":533,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["provident",{"_index":182,"title":{},"body":{"components/AboutPage.html":{}}}],["provider",{"_index":332,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"injectables/OrganisationService.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["providers",{"_index":275,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["provides",{"_index":572,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/UnauthenticatedGuard.html":{}}}],["public",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{}}}],["quae",{"_index":106,"title":{},"body":{"components/AboutPage.html":{}}}],["quaerat",{"_index":144,"title":{},"body":{"components/AboutPage.html":{}}}],["quam",{"_index":159,"title":{},"body":{"components/AboutPage.html":{}}}],["quas",{"_index":177,"title":{},"body":{"components/AboutPage.html":{}}}],["quasi",{"_index":111,"title":{},"body":{"components/AboutPage.html":{}}}],["qui",{"_index":83,"title":{},"body":{"components/AboutPage.html":{}}}],["quia",{"_index":119,"title":{},"body":{"components/AboutPage.html":{}}}],["quibusdam",{"_index":213,"title":{},"body":{"components/AboutPage.html":{}}}],["quidem",{"_index":189,"title":{},"body":{"components/AboutPage.html":{}}}],["quis",{"_index":52,"title":{},"body":{"components/AboutPage.html":{}}}],["quisquam",{"_index":134,"title":{},"body":{"components/AboutPage.html":{}}}],["quo",{"_index":163,"title":{},"body":{"components/AboutPage.html":{}}}],["quod",{"_index":205,"title":{},"body":{"components/AboutPage.html":{}}}],["quos",{"_index":176,"title":{},"body":{"components/AboutPage.html":{}}}],["radius",{"_index":1079,"title":{},"body":{"components/LoginPage.html":{},"components/ValidateVolunteerComponent.html":{}}}],["ratione",{"_index":129,"title":{},"body":{"components/AboutPage.html":{}}}],["reactive",{"_index":1021,"title":{},"body":{"components/LoginPage.html":{}}}],["reactiveformsmodule",{"_index":1099,"title":{},"body":{"modules/LoginPageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["readcookie",{"_index":1596,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readcookie(name",{"_index":982,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["receive",{"_index":1252,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["recusandae",{"_index":221,"title":{},"body":{"components/AboutPage.html":{}}}],["redirected",{"_index":1038,"title":{},"body":{"components/LoginPage.html":{},"components/LogoutPage.html":{}}}],["redirects",{"_index":589,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["redirectto",{"_index":556,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":380,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/LocationsService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["referes",{"_index":811,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["refreshes",{"_index":1334,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["regex",{"_index":1548,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["regexp",{"_index":1546,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["reiciendis",{"_index":228,"title":{},"body":{"components/AboutPage.html":{}}}],["related",{"_index":334,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["rem",{"_index":102,"title":{},"body":{"components/AboutPage.html":{}}}],["remote",{"_index":782,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["remoteallocationsdb",{"_index":797,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["remotecoursesdb",{"_index":791,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["remotedb",{"_index":389,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["remoteorganisationsdb",{"_index":795,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["remotevolunteersdb",{"_index":789,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["removed",{"_index":1238,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["removes",{"_index":958,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["repellat",{"_index":235,"title":{},"body":{"components/AboutPage.html":{}}}],["repellendus",{"_index":211,"title":{},"body":{"components/AboutPage.html":{}}}],["replacelinebreaks",{"_index":1273,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["replaceurl",{"_index":594,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"guards/UnauthenticatedGuard.html":{}}}],["reprehenderit",{"_index":66,"title":{},"body":{"components/AboutPage.html":{}}}],["repudiandae",{"_index":220,"title":{},"body":{"components/AboutPage.html":{}}}],["request",{"_index":618,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LogoutPage.html":{},"interceptors/RequestInterceptor.html":{}}}],["request.clone",{"_index":1164,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["request.url",{"_index":1174,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["requestinterceptor",{"_index":694,"title":{"interceptors/RequestInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["requests",{"_index":614,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocationsService.html":{},"interceptors/RequestInterceptor.html":{}}}],["require",{"_index":1633,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rerum",{"_index":190,"title":{},"body":{"components/AboutPage.html":{}}}],["rescue_officer",{"_index":314,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{}}}],["rescue_officer._id",{"_index":408,"title":{},"body":{"injectables/AllocationService.html":{}}}],["rescue_officer.id",{"_index":401,"title":{},"body":{"injectables/AllocationService.html":{}}}],["rescue_officer.name",{"_index":409,"title":{},"body":{"injectables/AllocationService.html":{}}}],["reset",{"_index":280,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"components/ValidateVolunteerComponent.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}],["resource",{"_index":1004,"title":{},"body":{"injectables/LocationsService.html":{}}}],["response",{"_index":423,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["response.docs",{"_index":1398,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["response.docs.length",{"_index":1408,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["response.docs[0",{"_index":1261,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["response.filter(city",{"_index":1433,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["response.rows.foreach(volunteer",{"_index":1392,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["response.status",{"_index":837,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["response.url",{"_index":846,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["result",{"_index":266,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"interfaces/LoginPayload.html":{},"components/LogoutPage.html":{},"modules/LogoutPageModule.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":268,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"interfaces/LoginPayload.html":{},"components/LogoutPage.html":{},"modules/LogoutPageModule.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1186,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["retrieve(route",{"_index":1191,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["retrieved",{"_index":1242,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["retrieves",{"_index":962,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/ValidateVolunteerComponent.html":{},"miscellaneous/functions.html":{}}}],["retrives",{"_index":1340,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["retriving",{"_index":1248,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["retry",{"_index":395,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["return",{"_index":418,"title":{},"body":{"injectables/AllocationService.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"classes/RouteReusableStrategy.html":{},"guards/UnauthenticatedGuard.html":{},"injectables/VolunteerService.html":{}}}],["returns",{"_index":365,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["reusable",{"_index":699,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["reuse",{"_index":1180,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["rewuest",{"_index":630,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["reîncearc",{"_index":1065,"title":{},"body":{"components/LoginPage.html":{}}}],["rgba(240,237,240,1",{"_index":921,"title":{},"body":{"components/HomePage.html":{}}}],["right",{"_index":1094,"title":{},"body":{"components/LoginPage.html":{},"components/SendMessageComponent.html":{}}}],["role",{"_index":1067,"title":{},"body":{"components/LoginPage.html":{}}}],["root",{"_index":425,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":248,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["rootobject",{"_index":858,"title":{"interfaces/RootObject.html":{}},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["route",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"modules/CoreModule.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{}}}],["router",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"guards/UnauthenticatedGuard.html":{}}}],["routereusablestrategy",{"_index":698,"title":{"classes/RouteReusableStrategy.html":{}},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["routereusestrategy",{"_index":522,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["routermodule",{"_index":289,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["routermodule.forchild",{"_index":939,"title":{},"body":{"modules/HomePageModule.html":{}}}],["routermodule.forchild(routes",{"_index":300,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"modules/VolunteerPageModule.html":{}}}],["routermodule.forroot(routes",{"_index":567,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":429,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":288,"title":{"routes.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"guards/UnauthenticatedGuard.html":{},"modules/VolunteerPageModule.html":{},"index.html":{},"routes.html":{}}}],["routesub",{"_index":1218,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["routing",{"_index":580,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["routing.module",{"_index":525,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":552,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":931,"title":{},"body":{"components/HomePage.html":{}}}],["rvm",{"_index":509,"title":{},"body":{"components/AppComponent.html":{}}}],["rxjs",{"_index":373,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocationsService.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{},"injectables/VolunteerService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":375,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginPage.html":{},"injectables/VolunteerService.html":{}}}],["saepe",{"_index":217,"title":{},"body":{"components/AboutPage.html":{}}}],["sapiente",{"_index":226,"title":{},"body":{"components/AboutPage.html":{}}}],["sau",{"_index":1440,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["savedcredentials",{"_index":666,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["saves",{"_index":637,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sc",{"_index":1286,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["scorll",{"_index":1349,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["screen",{"_index":442,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LogoutPage.html":{},"dependencies.html":{}}}],["screen/ngx",{"_index":496,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["scroll",{"_index":1335,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["search",{"_index":1363,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["search(keyword",{"_index":1533,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["searches",{"_index":1511,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["searchkeyword",{"_index":1314,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["searchkeyword(event",{"_index":1361,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["securitate",{"_index":1074,"title":{},"body":{"components/LoginPage.html":{}}}],["security",{"_index":1518,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["sed",{"_index":38,"title":{},"body":{"components/AboutPage.html":{}}}],["selected",{"_index":897,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["selection",{"_index":1317,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["selections",{"_index":1343,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/CourseService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"injectables/OrganisationService.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{}}}],["selector:any",{"_index":1573,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["selector['$and'].push",{"_index":1575,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["send",{"_index":258,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{}}}],["send/:id",{"_index":1497,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["sending",{"_index":1002,"title":{},"body":{"injectables/LocationsService.html":{},"components/SendMessageComponent.html":{}}}],["sendmessage",{"_index":1222,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["sendmessagecomponent",{"_index":257,"title":{"components/SendMessageComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["sends",{"_index":617,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["sent",{"_index":615,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{}}}],["sequi",{"_index":130,"title":{},"body":{"components/AboutPage.html":{}}}],["server",{"_index":388,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["serverbaseurl",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverurl",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":581,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{}}}],["service/error",{"_index":831,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["service/locations.service",{"_index":702,"title":{},"body":{"modules/CoreModule.html":{}}}],["services",{"_index":705,"title":{},"body":{"modules/CoreModule.html":{}}}],["serviceurl",{"_index":855,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"interfaces/RootObject.html":{}}}],["session",{"_index":770,"title":{},"body":{"interfaces/Credentials.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["sessionstorage",{"_index":944,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["set",{"_index":452,"title":{},"body":{"components/AppComponent.html":{},"injectables/ErrorMessageService.html":{}}}],["set(error",{"_index":867,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["setcredentials",{"_index":602,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setcredentials(credentials",{"_index":634,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setdata",{"_index":1597,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setdata(type",{"_index":1670,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setheaders",{"_index":1165,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["setitem",{"_index":948,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setitem(key",{"_index":963,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["sets",{"_index":342,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/ErrorMessageService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{}}}],["settimeout",{"_index":1419,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["shadow",{"_index":918,"title":{},"body":{"components/HomePage.html":{}}}],["shadow:none",{"_index":1466,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["shouldattach",{"_index":1187,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldattach(route",{"_index":1196,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shoulddetach",{"_index":1188,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shoulddetach(route",{"_index":1198,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldreuseroute",{"_index":1189,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldreuseroute(future",{"_index":1200,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shows/hides",{"_index":490,"title":{},"body":{"components/AppComponent.html":{}}}],["showsidemenu",{"_index":430,"title":{},"body":{"components/AppComponent.html":{}}}],["side",{"_index":478,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{}}}],["similique",{"_index":183,"title":{},"body":{"components/AboutPage.html":{}}}],["sint",{"_index":76,"title":{},"body":{"components/AboutPage.html":{}}}],["sit",{"_index":33,"title":{},"body":{"components/AboutPage.html":{}}}],["size",{"_index":925,"title":{},"body":{"components/HomePage.html":{},"components/SendMessageComponent.html":{}}}],["skip",{"_index":1542,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["sms",{"_index":529,"title":{},"body":{"modules/AppModule.html":{},"components/SendMessageComponent.html":{},"dependencies.html":{}}}],["social",{"_index":1517,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["solid",{"_index":1091,"title":{},"body":{"components/LoginPage.html":{}}}],["soluta",{"_index":198,"title":{},"body":{"components/AboutPage.html":{}}}],["sort",{"_index":753,"title":{},"body":{"injectables/CourseService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"interfaces/LoginPayload.html":{},"components/LogoutPage.html":{},"modules/LogoutPageModule.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"injectables/VolunteerService.html":{}}}],["spec\\.ts",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":1109,"title":{},"body":{"components/LogoutPage.html":{}}}],["splash",{"_index":441,"title":{},"body":{"components/AppComponent.html":{}}}],["splashscreen",{"_index":435,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["src/.../allocation.service.ts",{"_index":1689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authentication.service.ts",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../course.service.ts",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.dev.ts",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.local.ts",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":1667,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../organisation.service.ts",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../volunteer.service.ts",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":551,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":424,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:17",{"_index":486,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":488,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":477,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":438,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":482,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:75",{"_index":446,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:89",{"_index":455,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":518,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core",{"_index":1043,"title":{},"body":{"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["src/app/core/authentication/authentication.guard.ts",{"_index":571,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/app/core/authentication/authentication.guard.ts:10",{"_index":577,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/app/core/authentication/authentication.guard.ts:28",{"_index":582,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/app/core/authentication/authentication.service.ts",{"_index":596,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/authentication/authentication.service.ts:108",{"_index":636,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:125",{"_index":660,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:133",{"_index":616,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:21",{"_index":644,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:26",{"_index":608,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:48",{"_index":624,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:68",{"_index":629,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:83",{"_index":621,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:91",{"_index":654,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:99",{"_index":658,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/unauthenticated.guard.ts",{"_index":1295,"title":{},"body":{"guards/UnauthenticatedGuard.html":{},"coverage.html":{}}}],["src/app/core/authentication/unauthenticated.guard.ts:10",{"_index":1297,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["src/app/core/authentication/unauthenticated.guard.ts:29",{"_index":1298,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["src/app/core/core.module.ts",{"_index":695,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/http/error",{"_index":803,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/http/request.interceptor.ts",{"_index":1157,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["src/app/core/http/request.interceptor.ts:17",{"_index":1160,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/app/core/http/request.interceptor.ts:31",{"_index":1161,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/app/core/local",{"_index":940,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/model/allocation.model.ts",{"_index":303,"title":{},"body":{"classes/Allocation.html":{},"coverage.html":{}}}],["src/app/core/model/allocation.model.ts:10",{"_index":326,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:14",{"_index":320,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:15",{"_index":319,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:16",{"_index":324,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:21",{"_index":322,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:5",{"_index":318,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/allocation.model.ts:6",{"_index":325,"title":{},"body":{"classes/Allocation.html":{}}}],["src/app/core/model/authentication.model.ts",{"_index":769,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/model/course.model.ts",{"_index":709,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["src/app/core/model/course.model.ts:5",{"_index":714,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:6",{"_index":716,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:7",{"_index":715,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:8",{"_index":717,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/course.model.ts:9",{"_index":713,"title":{},"body":{"classes/Course.html":{}}}],["src/app/core/model/error.model.ts",{"_index":853,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{},"coverage.html":{}}}],["src/app/core/model/organisation.model.ts",{"_index":1120,"title":{},"body":{"classes/Organisation.html":{},"coverage.html":{}}}],["src/app/core/model/organisation.model.ts:5",{"_index":1123,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:6",{"_index":1124,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:7",{"_index":1126,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:8",{"_index":1125,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/organisation.model.ts:9",{"_index":1122,"title":{},"body":{"classes/Organisation.html":{}}}],["src/app/core/model/volunteer.model",{"_index":1254,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["src/app/core/model/volunteer.model.ts",{"_index":1467,"title":{},"body":{"classes/Volunteer.html":{},"coverage.html":{}}}],["src/app/core/model/volunteer.model.ts:11",{"_index":1482,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:12",{"_index":1485,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:13",{"_index":1484,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:14",{"_index":1480,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:15",{"_index":1478,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:16",{"_index":1476,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:17",{"_index":1475,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:18",{"_index":1477,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:19",{"_index":1481,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:20",{"_index":1474,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:21",{"_index":1479,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:22",{"_index":1486,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:23",{"_index":1472,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:5",{"_index":1473,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/model/volunteer.model.ts:6",{"_index":1483,"title":{},"body":{"classes/Volunteer.html":{}}}],["src/app/core/route",{"_index":1176,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["src/app/core/service/allocation.service",{"_index":1384,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["src/app/core/service/allocation.service.ts",{"_index":331,"title":{},"body":{"injectables/AllocationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/allocation.service.ts:31",{"_index":341,"title":{},"body":{"injectables/AllocationService.html":{}}}],["src/app/core/service/allocation.service.ts:60",{"_index":351,"title":{},"body":{"injectables/AllocationService.html":{}}}],["src/app/core/service/course.service.ts",{"_index":718,"title":{},"body":{"injectables/CourseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/course.service.ts:112",{"_index":746,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:125",{"_index":732,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:27",{"_index":726,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:50",{"_index":744,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:61",{"_index":739,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:75",{"_index":736,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:83",{"_index":742,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/course.service.ts:98",{"_index":729,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/core/service/database",{"_index":780,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/error",{"_index":861,"title":{},"body":{"injectables/ErrorMessageService.html":{},"coverage.html":{}}}],["src/app/core/service/locations.service",{"_index":1385,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["src/app/core/service/locations.service.ts",{"_index":994,"title":{},"body":{"injectables/LocationsService.html":{},"coverage.html":{}}}],["src/app/core/service/locations.service.ts:21",{"_index":1006,"title":{},"body":{"injectables/LocationsService.html":{}}}],["src/app/core/service/locations.service.ts:29",{"_index":1003,"title":{},"body":{"injectables/LocationsService.html":{}}}],["src/app/core/service/locations.service.ts:9",{"_index":1001,"title":{},"body":{"injectables/LocationsService.html":{}}}],["src/app/core/service/organisation.service.ts",{"_index":1127,"title":{},"body":{"injectables/OrganisationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/organisation.service.ts:103",{"_index":1148,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:114",{"_index":1139,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:28",{"_index":1134,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:52",{"_index":1146,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:64",{"_index":1142,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:77",{"_index":1144,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/organisation.service.ts:90",{"_index":1136,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["src/app/core/service/volunteer.service",{"_index":1383,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["src/app/core/service/volunteer.service.ts",{"_index":1498,"title":{},"body":{"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/service/volunteer.service.ts:101",{"_index":1528,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:114",{"_index":1530,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:134",{"_index":1516,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:170",{"_index":1538,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:189",{"_index":1520,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:204",{"_index":1522,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:242",{"_index":1510,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:29",{"_index":1508,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:55",{"_index":1532,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/core/service/volunteer.service.ts:72",{"_index":1534,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["src/app/pages/about/about.module.ts",{"_index":282,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["src/app/pages/about/about.page.ts",{"_index":10,"title":{},"body":{"components/AboutPage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":937,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":882,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:14",{"_index":904,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:28",{"_index":887,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:41",{"_index":894,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:52",{"_index":888,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/login/login.module.ts",{"_index":1098,"title":{},"body":{"modules/LoginPageModule.html":{}}}],["src/app/pages/login/login.page.ts",{"_index":1009,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/app/pages/login/login.page.ts:16",{"_index":1020,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:37",{"_index":1031,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:44",{"_index":1029,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:55",{"_index":1035,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:80",{"_index":1030,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:88",{"_index":1032,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/logout/logout.module.ts",{"_index":1118,"title":{},"body":{"modules/LogoutPageModule.html":{}}}],["src/app/pages/logout/logout.page.ts",{"_index":1101,"title":{},"body":{"components/LogoutPage.html":{},"coverage.html":{}}}],["src/app/pages/logout/logout.page.ts:10",{"_index":1104,"title":{},"body":{"components/LogoutPage.html":{}}}],["src/app/pages/logout/logout.page.ts:24",{"_index":1105,"title":{},"body":{"components/LogoutPage.html":{}}}],["src/app/pages/volunteer/add",{"_index":1617,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/volunteer/list",{"_index":1620,"title":{},"body":{"coverage.html":{}}}],["src/app/pages/volunteer/send",{"_index":1211,"title":{},"body":{"components/SendMessageComponent.html":{},"coverage.html":{}}}],["src/app/pages/volunteer/validate",{"_index":1300,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"coverage.html":{}}}],["src/app/pages/volunteer/volunteer.module.ts",{"_index":1493,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["src/app/pages/volunteer/volunteer.page.ts",{"_index":1487,"title":{},"body":{"components/VolunteerPage.html":{},"coverage.html":{}}}],["src/environments/environment.dev.ts",{"_index":1627,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.local.ts",{"_index":1628,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1629,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1630,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1631,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssn",{"_index":1471,"title":{},"body":{"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["start",{"_index":1463,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["starts",{"_index":1329,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["state",{"_index":458,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"guards/UnauthenticatedGuard.html":{}}}],["statements",{"_index":1583,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":357,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/UnauthenticatedGuard.html":{}}}],["statusbar",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["statuscode",{"_index":859,"title":{},"body":{"interfaces/ErrorMessageObject.html":{},"interfaces/RootObject.html":{}}}],["storage",{"_index":611,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["storage.service",{"_index":663,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["storage.service.ts",{"_index":941,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["storage.service.ts:109",{"_index":967,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:114",{"_index":949,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:221",{"_index":964,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:229",{"_index":961,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:237",{"_index":957,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:244",{"_index":954,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["store",{"_index":1190,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["store(route",{"_index":1204,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["stored",{"_index":1671,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stores",{"_index":626,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ErrorMessageService.html":{},"miscellaneous/variables.html":{}}}],["storing",{"_index":942,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["strategy",{"_index":700,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["strategy.ts",{"_index":1177,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["strategy.ts:19",{"_index":1199,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:28",{"_index":1206,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:38",{"_index":1197,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:47",{"_index":1193,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:56",{"_index":1202,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strats",{"_index":785,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["string",{"_index":316,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginPayload.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interfaces/RootObject.html":{},"components/SendMessageComponent.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":451,"title":{},"body":{"components/AppComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["submit",{"_index":1016,"title":{},"body":{"components/LoginPage.html":{}}}],["subscribe",{"_index":1053,"title":{},"body":{"components/LoginPage.html":{}}}],["subscription",{"_index":1246,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["success",{"_index":633,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["successful",{"_index":625,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LogoutPage.html":{}}}],["such",{"_index":575,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["sunt",{"_index":81,"title":{},"body":{"components/AboutPage.html":{}}}],["suport",{"_index":473,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["support",{"_index":1676,"title":{},"body":{"modules.html":{}}}],["suscipit",{"_index":150,"title":{},"body":{"components/AboutPage.html":{}}}],["svg",{"_index":1677,"title":{},"body":{"modules.html":{}}}],["sync",{"_index":783,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["sync.service.ts",{"_index":781,"title":{},"body":{"classes/DatabaseSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sync.service.ts:53",{"_index":784,"title":{},"body":{"classes/DatabaseSyncService.html":{}}}],["synchronization",{"_index":343,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"components/LoginPage.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["table",{"_index":1635,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1634,"title":{},"body":{"coverage.html":{}}}],["targetheight",{"_index":1267,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["targetwidth",{"_index":1266,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["tel:89992142265",{"_index":474,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["tempor",{"_index":40,"title":{},"body":{"components/AboutPage.html":{}}}],["tempora",{"_index":140,"title":{},"body":{"components/AboutPage.html":{}}}],["tempore",{"_index":196,"title":{},"body":{"components/AboutPage.html":{}}}],["temporibus",{"_index":212,"title":{},"body":{"components/AboutPage.html":{}}}],["tenetur",{"_index":225,"title":{},"body":{"components/AboutPage.html":{}}}],["text",{"_index":911,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{},"components/ValidateVolunteerComponent.html":{}}}],["textarea",{"_index":1287,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["then((imagedata",{"_index":1268,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this._credentials",{"_index":668,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._errors",{"_index":877,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this._errors.push",{"_index":878,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this.allocationservice.createallocation(this.volunteers[index",{"_index":1401,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.authenticationservice",{"_index":1050,"title":{},"body":{"components/LoginPage.html":{}}}],["this.authenticationservice.accesstoken",{"_index":1172,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.authenticationservice.isauthenticated",{"_index":592,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/UnauthenticatedGuard.html":{}}}],["this.authenticationservice.logout().subscribe",{"_index":1107,"title":{},"body":{"components/LogoutPage.html":{}}}],["this.authenticationservice.user",{"_index":403,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/OrganisationService.html":{}}}],["this.base64image",{"_index":1269,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.cities",{"_index":1432,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.city",{"_index":1403,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.counties",{"_index":1430,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.county",{"_index":1402,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.courses",{"_index":1394,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.courseservice.createcourse(course.name",{"_index":1559,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["this.courseservice.getcoursebyvolunteerid(volunteerid).subscribe(response",{"_index":1397,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.createform",{"_index":1044,"title":{},"body":{"components/LoginPage.html":{}}}],["this.credentials",{"_index":679,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials$.emit(this._credentials",{"_index":683,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials.token",{"_index":680,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.credentials.user",{"_index":685,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.databasesyncservice.sync",{"_index":1055,"title":{},"body":{"components/LoginPage.html":{}}}],["this.errorhandler(error",{"_index":836,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.errormessageservice.set",{"_index":844,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.errors$.emit(this._errors",{"_index":881,"title":{},"body":{"injectables/ErrorMessageService.html":{}}}],["this.formbuilder.group",{"_index":1046,"title":{},"body":{"components/LoginPage.html":{}}}],["this.getcitylist(event.detail.value",{"_index":1435,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.getcountylist",{"_index":1387,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.getdata",{"_index":1386,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.getuserprofile().subscribe((response",{"_index":674,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.http.get('/assets/files/cities.json",{"_index":1008,"title":{},"body":{"injectables/LocationsService.html":{}}}],["this.http.get('/assets/files/counties.json",{"_index":1007,"title":{},"body":{"injectables/LocationsService.html":{}}}],["this.httpclient",{"_index":676,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.httpclient.post('/login",{"_index":670,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.initializeapp",{"_index":500,"title":{},"body":{"components/AppComponent.html":{}}}],["this.keyword",{"_index":1411,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.keyword.trim",{"_index":1413,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.limit).subscribe((response",{"_index":1391,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.localstorage",{"_index":988,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.clear",{"_index":993,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.getitem(key",{"_index":991,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.removeitem(key",{"_index":992,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorage.setitem(key",{"_index":990,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.localstorageservice.clearitem(credentialskey",{"_index":684,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.localstorageservice.getitem(credentialskey",{"_index":667,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.localstorageservice.setitem",{"_index":681,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.location.replacestate(this.router.serializeurl(this.router.createurltree(['home",{"_index":1056,"title":{},"body":{"components/LoginPage.html":{}}}],["this.locationsservice.getcitylist().subscribe((response",{"_index":1431,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.locationsservice.getcountylist().subscribe((response",{"_index":1429,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.loginform",{"_index":1045,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginform.markaspristine",{"_index":1052,"title":{},"body":{"components/LoginPage.html":{}}}],["this.message",{"_index":1276,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.page",{"_index":1415,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.platform.ready().then",{"_index":501,"title":{},"body":{"components/AppComponent.html":{}}}],["this.presenttoastwithoptions",{"_index":1057,"title":{},"body":{"components/LoginPage.html":{}}}],["this.route.params.subscribe(params",{"_index":1256,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.router.navigate(['../home",{"_index":1054,"title":{},"body":{"components/LoginPage.html":{}}}],["this.router.navigate(['../login",{"_index":1108,"title":{},"body":{"components/LogoutPage.html":{}}}],["this.router.navigate(['/home",{"_index":1299,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["this.router.navigate(['/login",{"_index":593,"title":{},"body":{"guards/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.router.navigate([url",{"_index":508,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["this.routesub",{"_index":1255,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.routesub.unsubscribe",{"_index":1262,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.sendmessage",{"_index":1279,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.sessionstorage",{"_index":989,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.setcredentials",{"_index":678,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.setcredentials(body",{"_index":673,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.sms.haspermission",{"_index":1277,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.sms.send(this.volunteer.phone",{"_index":1275,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.splashscreen.hide",{"_index":505,"title":{},"body":{"components/AppComponent.html":{}}}],["this.statusbar.backgroundcolorbyhexstring('#264998",{"_index":503,"title":{},"body":{"components/AppComponent.html":{}}}],["this.statusbar.styledefault",{"_index":504,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toastcontroller.create",{"_index":1059,"title":{},"body":{"components/LoginPage.html":{}}}],["this.volunteer",{"_index":1260,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.volunteerid",{"_index":1257,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.volunteeridwithdetails",{"_index":1396,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.volunteers",{"_index":1389,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.volunteers.findindex(volunteer",{"_index":1399,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.volunteers.length",{"_index":1425,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.volunteers.push(volunteer.doc",{"_index":1393,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.volunteers[index",{"_index":1405,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.volunteers[index].isinallocation",{"_index":1400,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.volunteers[index].organisation).subscribe",{"_index":1404,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.volunteerservice.allocatevolunteer(response.id",{"_index":422,"title":{},"body":{"injectables/AllocationService.html":{}}}],["this.volunteerservice.getvolunteerbyid(this.volunteerid).subscribe((response",{"_index":1259,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["this.volunteerservice.getvolunteerbyid(volunteerid).subscribe((response",{"_index":1406,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.volunteerservice.getvolunteers(this.page",{"_index":1390,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["this.volunteerservice.search(this.keyword.tolowercase",{"_index":1414,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["through",{"_index":1106,"title":{},"body":{"components/LogoutPage.html":{}}}],["throw",{"_index":851,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["title",{"_index":460,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["title')).gettext",{"_index":550,"title":{},"body":{"classes/AppPage.html":{}}}],["toast",{"_index":1027,"title":{},"body":{"components/LoginPage.html":{}}}],["toast.dismiss",{"_index":1069,"title":{},"body":{"components/LoginPage.html":{}}}],["toast.present",{"_index":1070,"title":{},"body":{"components/LoginPage.html":{}}}],["toastcontroller",{"_index":1019,"title":{},"body":{"components/LoginPage.html":{}}}],["token",{"_index":639,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interceptors/RequestInterceptor.html":{},"interfaces/User.html":{}}}],["top",{"_index":1291,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["total",{"_index":1525,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["totam",{"_index":101,"title":{},"body":{"components/AboutPage.html":{}}}],["toți",{"_index":469,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["transform",{"_index":1087,"title":{},"body":{"components/LoginPage.html":{},"components/ValidateVolunteerComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["triggered",{"_index":1237,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["trimite",{"_index":1284,"title":{},"body":{"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{}}}],["true",{"_index":394,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"injectables/OrganisationService.html":{},"classes/RouteReusableStrategy.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1661,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":315,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"classes/Course.html":{},"injectables/CourseService.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/ErrorMessageObject.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/LocationsService.html":{},"components/LoginPage.html":{},"interfaces/LoginPayload.html":{},"components/LogoutPage.html":{},"classes/Organisation.html":{},"injectables/OrganisationService.html":{},"interceptors/RequestInterceptor.html":{},"interfaces/RootObject.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types/pouchdb",{"_index":1649,"title":{},"body":{"dependencies.html":{}}}],["tău",{"_index":1281,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["ullam",{"_index":148,"title":{},"body":{"components/AboutPage.html":{}}}],["ullamco",{"_index":55,"title":{},"body":{"components/AboutPage.html":{}}}],["un",{"_index":462,"title":{},"body":{"components/AppComponent.html":{}}}],["unauthenticated",{"_index":1296,"title":{},"body":{"guards/UnauthenticatedGuard.html":{}}}],["unauthenticatedguard",{"_index":554,"title":{"guards/UnauthenticatedGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"guards/UnauthenticatedGuard.html":{},"coverage.html":{}}}],["unde",{"_index":92,"title":{},"body":{"components/AboutPage.html":{}}}],["underline",{"_index":915,"title":{},"body":{"components/HomePage.html":{}}}],["unsubscribes",{"_index":1239,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["up",{"_index":1336,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["updatecourse",{"_index":725,"title":{},"body":{"injectables/CourseService.html":{}}}],["updatecourse(course",{"_index":745,"title":{},"body":{"injectables/CourseService.html":{}}}],["updated",{"_index":1328,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{}}}],["updatedat",{"_index":779,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["updateorganisation",{"_index":1133,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["updateorganisation(organisation",{"_index":1147,"title":{},"body":{"injectables/OrganisationService.html":{}}}],["updates",{"_index":355,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/OrganisationService.html":{},"injectables/VolunteerService.html":{}}}],["updatevolunteer",{"_index":1506,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["updatevolunteer(volunteer",{"_index":1537,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["url",{"_index":456,"title":{},"body":{"components/AppComponent.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"interceptors/RequestInterceptor.html":{},"components/SendMessageComponent.html":{}}}],["useclass",{"_index":534,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["used",{"_index":951,"title":{},"body":{"injectables/LocalStorageService.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"injectables/VolunteerService.html":{}}}],["user",{"_index":584,"title":{"interfaces/User.html":{}},"body":{"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"interfaces/LoginPayload.html":{},"components/LogoutPage.html":{},"guards/UnauthenticatedGuard.html":{},"interfaces/User.html":{},"components/ValidateVolunteerComponent.html":{},"coverage.html":{}}}],["user's",{"_index":492,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{}}}],["username",{"_index":774,"title":{},"body":{"interfaces/Credentials.html":{},"interfaces/LoginPayload.html":{},"interfaces/User.html":{}}}],["uses",{"_index":1229,"title":{},"body":{"components/SendMessageComponent.html":{}}}],["using",{"_index":1324,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["ut",{"_index":42,"title":{},"body":{"components/AboutPage.html":{}}}],["validate",{"_index":261,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{}}}],["validated",{"_index":1037,"title":{},"body":{"components/LoginPage.html":{}}}],["validatevolunteercomponent",{"_index":260,"title":{"components/ValidateVolunteerComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["validation",{"_index":1036,"title":{},"body":{"components/LoginPage.html":{}}}],["validators",{"_index":1041,"title":{},"body":{"components/LoginPage.html":{}}}],["validators.email",{"_index":1048,"title":{},"body":{"components/LoginPage.html":{}}}],["validators.minlength(6",{"_index":1049,"title":{},"body":{"components/LoginPage.html":{}}}],["validators.required",{"_index":1047,"title":{},"body":{"components/LoginPage.html":{}}}],["valideaz",{"_index":461,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["value",{"_index":358,"title":{},"body":{"injectables/AllocationService.html":{},"components/AppComponent.html":{},"guards/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"injectables/LocalStorageService.html":{},"injectables/OrganisationService.html":{},"components/SendMessageComponent.html":{},"guards/UnauthenticatedGuard.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":650,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":240,"title":{},"body":{"components/AboutPage.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"injectables/OrganisationService.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{}}}],["variable",{"_index":1589,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1680,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vel",{"_index":156,"title":{},"body":{"components/AboutPage.html":{}}}],["velit",{"_index":68,"title":{},"body":{"components/AboutPage.html":{}}}],["veniam",{"_index":51,"title":{},"body":{"components/AboutPage.html":{}}}],["veritatis",{"_index":110,"title":{},"body":{"components/AboutPage.html":{}}}],["vero",{"_index":164,"title":{},"body":{"components/AboutPage.html":{}}}],["vezi",{"_index":468,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["viewchild",{"_index":493,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(ionrouteroutlet",{"_index":485,"title":{},"body":{"components/AppComponent.html":{}}}],["vitae",{"_index":114,"title":{},"body":{"components/AboutPage.html":{}}}],["void",{"_index":453,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseService.html":{},"classes/DatabaseSyncService.html":{},"injectables/ErrorMessageService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"injectables/OrganisationService.html":{},"classes/RouteReusableStrategy.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["voluntar",{"_index":463,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/ValidateVolunteerComponent.html":{}}}],["voluntari",{"_index":1452,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["voluntarii",{"_index":470,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["volunteer",{"_index":263,"title":{"classes/Volunteer.html":{}},"body":{"components/AboutPage.html":{},"classes/Allocation.html":{},"injectables/AllocationService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthenticationGuard.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"classes/Volunteer.html":{},"components/VolunteerPage.html":{},"injectables/VolunteerService.html":{},"coverage.html":{}}}],["volunteer's",{"_index":356,"title":{},"body":{"injectables/AllocationService.html":{},"injectables/CourseService.html":{},"injectables/VolunteerService.html":{}}}],["volunteer'},{'name",{"_index":246,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{}}}],["volunteer._id",{"_index":405,"title":{},"body":{"injectables/AllocationService.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["volunteer.allocation",{"_index":1553,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.city",{"_index":1551,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.comments",{"_index":1568,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.component",{"_index":1495,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["volunteer.component.html",{"_index":1303,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.scss",{"_index":1302,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts",{"_index":1301,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"coverage.html":{}}}],["volunteer.component.ts:103",{"_index":1322,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:123",{"_index":1362,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:13",{"_index":1382,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:14",{"_index":1374,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:149",{"_index":1345,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:167",{"_index":1333,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:178",{"_index":1339,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:188",{"_index":1338,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:19",{"_index":1379,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:198",{"_index":1326,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:21",{"_index":1373,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:22",{"_index":1371,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:23",{"_index":1369,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:24",{"_index":1372,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:25",{"_index":1370,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:30",{"_index":1377,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:35",{"_index":1316,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:52",{"_index":1353,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:60",{"_index":1341,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:76",{"_index":1355,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.component.ts:92",{"_index":1319,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.county",{"_index":1550,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.created",{"_index":1449,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["volunteer.id",{"_index":400,"title":{},"body":{"injectables/AllocationService.html":{}}}],["volunteer.job",{"_index":1446,"title":{},"body":{"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["volunteer.name",{"_index":406,"title":{},"body":{"injectables/AllocationService.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["volunteer.organisation",{"_index":1555,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.organisation.name",{"_index":1442,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteer.page",{"_index":1494,"title":{},"body":{"modules/VolunteerPageModule.html":{}}}],["volunteer.page.html",{"_index":1489,"title":{},"body":{"components/VolunteerPage.html":{}}}],["volunteer.page.scss",{"_index":1488,"title":{},"body":{"components/VolunteerPage.html":{}}}],["volunteer.phone",{"_index":1554,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.service",{"_index":377,"title":{},"body":{"injectables/AllocationService.html":{}}}],["volunteer.ssn",{"_index":1549,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer.updated",{"_index":1552,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["volunteer/add",{"_index":467,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["volunteer/list",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["volunteer/validate",{"_index":464,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/ValidateVolunteerComponent.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{}}}],["volunteer_id",{"_index":712,"title":{},"body":{"classes/Course.html":{},"injectables/CourseService.html":{}}}],["volunteerid",{"_index":743,"title":{},"body":{"injectables/CourseService.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{}}}],["volunteeridwithdetails",{"_index":1306,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["volunteerpage",{"_index":262,"title":{"components/VolunteerPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/LogoutPage.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"components/VolunteerPage.html":{},"modules/VolunteerPageModule.html":{},"coverage.html":{},"index.html":{}}}],["volunteerpagemodule",{"_index":1490,"title":{"modules/VolunteerPageModule.html":{}},"body":{"modules/VolunteerPageModule.html":{},"index.html":{},"modules.html":{}}}],["volunteers",{"_index":786,"title":{},"body":{"classes/DatabaseSyncService.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{},"miscellaneous/variables.html":{}}}],["volunteerservice",{"_index":340,"title":{"injectables/VolunteerService.html":{}},"body":{"injectables/AllocationService.html":{},"modules/CoreModule.html":{},"components/SendMessageComponent.html":{},"components/ValidateVolunteerComponent.html":{},"injectables/VolunteerService.html":{},"coverage.html":{},"index.html":{}}}],["voluptas",{"_index":120,"title":{},"body":{"components/AboutPage.html":{}}}],["voluptate",{"_index":67,"title":{},"body":{"components/AboutPage.html":{}}}],["voluptatem",{"_index":97,"title":{},"body":{"components/AboutPage.html":{}}}],["voluptates",{"_index":219,"title":{},"body":{"components/AboutPage.html":{}}}],["voluptatibus",{"_index":229,"title":{},"body":{"components/AboutPage.html":{}}}],["voluptatum",{"_index":172,"title":{},"body":{"components/AboutPage.html":{}}}],["webkit",{"_index":916,"title":{},"body":{"components/HomePage.html":{}}}],["website",{"_index":327,"title":{},"body":{"classes/Allocation.html":{},"injectables/AllocationService.html":{},"classes/Organisation.html":{},"classes/Volunteer.html":{},"injectables/VolunteerService.html":{}}}],["white",{"_index":1077,"title":{},"body":{"components/LoginPage.html":{},"components/LogoutPage.html":{}}}],["whole",{"_index":1368,"title":{},"body":{"components/ValidateVolunteerComponent.html":{}}}],["whose",{"_index":1535,"title":{},"body":{"injectables/VolunteerService.html":{}}}],["width",{"_index":1083,"title":{},"body":{"components/LoginPage.html":{},"components/LogoutPage.html":{}}}],["window.open(url",{"_index":507,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["workaround",{"_index":1181,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["yes",{"_index":638,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["zone.js",{"_index":1663,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":279,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/LogoutPageModule.html":{},"modules/VolunteerPageModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutPage.html":{"url":"components/AboutPage.html","title":"component - AboutPage","body":"\n                   \n\n\n\n\n\n  Components\n  AboutPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/about/about.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                ./about.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.page.html',\n  styleUrls: ['./about.page.scss'],\n})\nexport class AboutPage implements OnInit {\n\n  /**\n  * @ignore\n  */\n  constructor() { }\n\n  /**\n  * @ignore\n  */\n ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n  \n\n\n  \n    \n      Despre Aplicație\n    \n  \n  \n    \n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n    \n  \n  \n    \n        Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\n    \n  \n  \n    \n        At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.\n    \n  \n\n    \n\n    \n                \n                    ./about.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Despre Aplicație                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.                    Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?                    At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'LogoutPage', 'selector': 'app-logout'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageModule.html":{"url":"modules/AboutPageModule.html","title":"module - AboutPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AboutPage } from './about.page';\nimport { AuthenticationGuard } from '../../core/authentication/authentication.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AboutPage,\n    canActivate: [AuthenticationGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AboutPage]\n})\nexport class AboutPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Allocation.html":{"url":"classes/Allocation.html","title":"class - Allocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Allocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/allocation.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for allocation object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                city\n                            \n                            \n                                county\n                            \n                            \n                                created_at\n                            \n                            \n                                organisation\n                            \n                            \n                                rescue_officer\n                            \n                            \n                                volunteer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organisation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rescue_officer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volunteer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/allocation.model.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Allocation {\n    _id: string;\n    rescue_officer: {\n        id: string;\n        name: string;\n    };\n    volunteer: {\n        id: string;\n        name: string;\n    };\n    county: string;\n    city: string;\n    organisation: {\n        id: string;\n        name: string;\n        website: string;\n    };\n    created_at: Date;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllocationService.html":{"url":"injectables/AllocationService.html","title":"injectable - AllocationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/allocation.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for allocations related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAllocation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, volunteerService: VolunteerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/allocation.service.ts:31\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Allocations Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        volunteerService\n                                                  \n                                                        \n                                                                        VolunteerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createAllocation\n                        \n                        \n                    \n                \n            \n            \n                \ncreateAllocation(volunteer: Volunteer, county: string, city: string, organisation: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/allocation.service.ts:60\n                \n            \n\n\n            \n                \n                    Creates an allocation entry in the local database and updates volunteer's allocation status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteer\n                                    \n                                                Volunteer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer object\n\n                                    \n                                \n                                \n                                    county\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the county in which the volunteer is allocated\n\n                                    \n                                \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the county in which the volunteer is allocated\n\n                                    \n                                \n                                \n                                    organisation\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object value containing the allocated volunteer's organisation \nEither contains an object with the following properties {id, name, website}, or it's null\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        An Observable with the created object\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { from } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthenticationService } from '../authentication';\nimport { VolunteerService } from './volunteer.service';\nimport { Allocation } from '../model/allocation.model';\nimport { Volunteer } from '../model/volunteer.model';\n\n/**\n * Reference for local PouchDB Allocations Database\n */\nvar localDB = new PouchDB('allocations');\n\n/**\n * PouchDB find plugin added \n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Allocations Database\n */\nvar remoteDB = new PouchDB(environment.databaseURL + '/allocations');\n\n/**\n * Provider for allocations related operations\n */\n@Injectable()\nexport class AllocationService {\n\n  /**\n  * Class constructor, sets the synchronization options for CouchDB and PouchDB Allocations Database\n  */\n  constructor(private authenticationService: AuthenticationService,\n    private volunteerService: VolunteerService) {\n    let options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);    \n\n    localDB.createIndex({\n      index: {fields: ['volunteer.id', 'rescue_officer.id']}\n    });\n   }\n\n    /**\n   *  Creates an allocation entry in the local database and updates volunteer's allocation status\n   * @param volunteer Volunteer object\n   * @param county String value containing the county in which the volunteer is allocated\n   * @param city String value containing the county in which the volunteer is allocated\n   * @param organisation Object value containing the allocated volunteer's organisation \n   * Either contains an object with the following properties {id, name, website}, or it's null\n   * @returns An Observable with the created object\n   */\n   createAllocation(volunteer: Volunteer, county: string, city: string, organisation: any) {\n    const rescue_officer = this.authenticationService.user;\n    const allocation= new Allocation();\n    allocation.volunteer = {\n      'id': volunteer._id,\n      'name': volunteer.name\n    };\n    allocation.rescue_officer = {\n      'id': rescue_officer._id,\n      'name': rescue_officer.name\n    };\n    allocation.county = county;\n    allocation.city = city;\n    allocation.created_at = new Date();\n\n    if(organisation) {\n        allocation.organisation = {\n          'id': organisation.id,\n          'name': organisation.name,\n          'website': organisation.website\n        };\n    }\n\n    return from(localDB.post(allocation))\n    .pipe(\n        map((response: any) => {\n          this.volunteerService.allocateVolunteer(response.id, volunteer._id);\n          return response;\n        })\n      );\n   }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appPages\n                            \n                            \n                                    Public\n                                authenticationService\n                            \n                            \n                                routerOutlet\n                            \n                            \n                                showSideMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                            \n                                performAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar, authenticationService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for cordova platforms\n\n                                                        \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for splash screen\n\n                                                        \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for status bar\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operations\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeApp\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:75\n                \n            \n\n\n            \n                \n                    Application initialisation\nIf cordova is available then the splash screen is hidden and status bar style is set\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            performAction\n                        \n                        \n                    \n                \n            \n            \n                \nperformAction(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains the value of the next application state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appPages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      title: 'Despre Aplicație',\n      url: '/about'\n    },\n    {\n      title: 'Validează un voluntar',\n      url: '/volunteer/validate'\n    },\n    {\n      title: 'Adaugă voluntar nou',\n      url: '/volunteer/add'\n    },\n    {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    },\n    {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    }, \n    {\n      title: 'Delogare',\n      url: '/logout'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n                \n                    \n                        Side menu navigation pages (page name and page url)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authenticationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:66\n                            \n                        \n\n                \n                    \n                        Provider for authentication related operations\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routerOutlet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IonRouterOutlet\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(IonRouterOutlet)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n                \n                    \n                        Router outlet reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSideMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n                \n                    \n                        Boolean value that shows/hides the side menu depending on user's state\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\n\nimport { IonRouterOutlet, Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { AuthenticationService } from './core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n  /**\n   * Router outlet reference\n   */\n  @ViewChild(IonRouterOutlet) routerOutlet: IonRouterOutlet;\n  \n  /**\n   * Boolean value that shows/hides the side menu depending on user's state\n   */\n  showSideMenu = true;\n\n  /**\n   * Side menu navigation pages (page name and page url)\n   */\n  public appPages = [\n    {\n      title: 'Despre Aplicație',\n      url: '/about'\n    },\n    {\n      title: 'Validează un voluntar',\n      url: '/volunteer/validate'\n    },\n    {\n      title: 'Adaugă voluntar nou',\n      url: '/volunteer/add'\n    },\n    {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    },\n    {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    }, \n    {\n      title: 'Delogare',\n      url: '/logout'\n    }\n  ];\n\n  /**\n   * \n   * @param platform Provider for cordova platforms\n   * @param splashScreen Provider for splash screen\n   * @param statusBar Provider for status bar\n   * @param authenticationService Provider for authentication related operations\n   * @param router Provider for route navigation\n   */\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar,\n    public authenticationService: AuthenticationService,\n    private router: Router) {\n    this.initializeApp();\n  }\n\n  /**\n   * Application initialisation\n   * If cordova is available then the splash screen is hidden and status bar style is set\n   */\n  initializeApp() {\n    this.platform.ready().then(() => {\n      if(this.platform.is('cordova')){\n        this.statusBar.backgroundColorByHexString('#264998');\n        this.statusBar.styleDefault();\n        this.splashScreen.hide();\n      }\n    });\n  }\n\n  /**\n   * \n   * @param url Contains the value of the next application state\n   */\n  performAction(url: string) {\n    if(url.includes('tel')) {\n      window.open(url);\n    } else {\n      this.router.navigate([url]);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n          \n            RVM\n          \n        \n      \n      \n        \n          \n            \n              \n                \n                  {{p.title}}\n                \n              \n            \n          \n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          RVM                                                                                                            {{p.title}}                                                                            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'LogoutPage', 'selector': 'app-logout'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CoreModule } from './core';\nimport { DatePicker } from '@ionic-native/date-picker/ngx';\nimport { SMS } from '@ionic-native/sms/ngx';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  entryComponents: [],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n    CoreModule\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    DatePicker,\n    SMS\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPageOneTitleText\n                            \n                            \n                                getTitle\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPageOneTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetPageOneTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo(destination)\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    destination\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(destination) {\n    return browser.get(destination);\n  }\n\n  getTitle() {\n    return browser.getTitle();\n  }\n\n  getPageOneTitleText() {\n    return element(by.tagName('app-home')).element(by.deepCss('ion-title')).getText();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthenticationGuard } from './core';\nimport { UnauthenticatedGuard } from './core/authentication/unauthenticated.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    loadChildren: './pages/home/home.module#HomePageModule',\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'login',\n    loadChildren: './pages/login/login.module#LoginPageModule',\n    canActivate: [UnauthenticatedGuard]\n  },\n  {\n    path: 'about',\n    loadChildren: './pages/about/about.module#AboutPageModule',\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'volunteer',\n    loadChildren: './pages/volunteer/volunteer.module#VolunteerPageModule',\n    canActivate: [AuthenticationGuard]\n  },\n  { \n    path: 'logout', \n    loadChildren: './pages/logout/logout.module#LogoutPageModule',\n    canActivate: [AuthenticationGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/authentication/authentication.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Provides a guard for protecting authenticated routes (such as home, validate-volunteer)\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.guard.ts:10\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular value which handles routing operations\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service which handles the authentication operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.guard.ts:28\n                \n            \n\n\n            \n                \n                    Determines if a user can access a route, depending on its state\nIf the route isn't allowed, it automatically redirects to login page\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        a boolean value, current user's status: authenticated or not\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { AuthenticationService } from './authentication.service';\n\n/**\n * Provides a guard for protecting authenticated routes (such as home, validate-volunteer)\n */\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  /**\n   * Class constructor\n   * \n   * @param router Angular value which handles routing operations\n   * @param authenticationService The service which handles the authentication operations\n   */\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  /**\n   * Determines if a user can access a route, depending on its state\n   * If the route isn't allowed, it automatically redirects to login page\n   * \n   * @returns a boolean value, current user's status: authenticated or not\n   */\n  canActivate(): boolean {\n    if (this.authenticationService.isAuthenticated()) {\n      return true;\n    }\n\n    this.router.navigate(['/login'], {\n      replaceUrl: true\n    });\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides the basic authentication operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _credentials\n                            \n                            \n                                    Public\n                                credentials$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getUserProfile\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                setCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    credentials\n                                \n                                \n                                    accessToken\n                                \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.service.ts:26\n                            \n                        \n\n                \n                    \n                            Class constructor, initializes current credentials value if some credentials are found in local storage\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Class reference injection, handles http requests sent from this service\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service reference injection, handles operations on local storage\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getUserProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:133\n                \n            \n\n\n            \n                \n                    Sends a request to the backend server for current user's profile\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable that contains the current user's profile\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:83\n                \n            \n\n\n            \n                \n                    Determines if the current user is authenticated\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        A boolean value with the authenticated status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(payload: Authentication.LoginPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:48\n                \n            \n\n\n            \n                \n                    Sends a login request to the backend server\nIf it's successful stores the credentials and returns the response body\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Authentication.LoginPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable that contains the authentication credentials\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:68\n                \n            \n\n\n            \n                \n                    Sends a logout rewuest to the backend server\nIf it's successful clears the credentials information from local storage\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable with a boolean value for success (true)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setCredentials\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCredentials(credentials?: Authentication.Credentials)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/authentication.service.ts:108\n                \n            \n\n\n            \n                \n                    Saves current user's credentials in local storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                Authentication.Credentials\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An object that contains the authentication token and data from server if user performed a login,\nor nothing if user just performed a log out\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _credentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Authentication.Credentials | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:21\n                            \n                        \n\n                \n                    \n                        Value that stores user's credentials after authentication\nIt's null if the user never authenticates\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            credentials$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:26\n                            \n                        \n\n                \n                    \n                        Value which emits events when credentials' values change (on login/logout)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        credentials\n                    \n                \n\n                \n                    \n                        getcredentials()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:91\n                                \n                            \n                    \n                        \n                                Getter method for the credentials object\n\n\n                                \n                                \n                                \n                                    Returns :         Authentication.Credentials | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:99\n                                \n                            \n                    \n                        \n                                Getter method for the authentication token\n\n\n                                \n                                \n                                \n                                    Returns :     string | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:125\n                                \n                            \n                    \n                        \n                                Getter method for current user's profile\n\n\n                                \n                                \n                                \n                                    Returns :         Authentication.User | null\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LocalStorageService } from '../local-storage.service';\n\n/**\n * Stores the value of credentials' key\n */\nconst credentialsKey = 'credentials';\n\n/**\n * Provides the basic authentication operations.\n */\n@Injectable()\nexport class AuthenticationService {\n  /**\n   * Value that stores user's credentials after authentication\n   * It's null if the user never authenticates\n   */\n  private _credentials: Authentication.Credentials | null;\n\n  /**\n   * Value which emits events when credentials' values change (on login/logout)\n   */\n  public credentials$ = new EventEmitter();\n\n  /**\n   * Class constructor, initializes current credentials value if some credentials are found in local storage\n   * @param httpClient Class reference injection, handles http requests sent from this service\n   * @param localStorageService Service reference injection, handles operations on local storage\n   */\n  constructor(\n    private httpClient: HttpClient,\n    private localStorageService: LocalStorageService) {\n    const savedCredentials = this.localStorageService.getItem(credentialsKey);\n    if (savedCredentials) {\n      this._credentials = JSON.parse(savedCredentials);\n    }\n  }\n\n  /**\n   * Sends a login request to the backend server\n   * If it's successful stores the credentials and returns the response body\n   * @param payload \n   * @returns An observable that contains the authentication credentials\n   */\n  login(\n    payload: Authentication.LoginPayload\n  ): Observable {\n    return this.httpClient.post('/login', payload).pipe(\n      map((body: Authentication.Credentials) => {\n        this.setCredentials(body);\n        this.getUserProfile().subscribe((response) => {\n          body.user = response;\n          this.setCredentials(body);\n        });\n        return body;\n      })\n    );\n  }\n\n  /**\n   * Sends a logout rewuest to the backend server\n   * If it's successful clears the credentials information from local storage\n   * @returns An observable with a boolean value for success (true)\n   */\n  logout(): Observable {\n    return this.httpClient\n      .get('/logout')\n      .pipe(\n        map(() => {\n          this.setCredentials();\n          return true;\n        })\n      );\n  }\n\n  /**\n   * Determines if the current user is authenticated\n   * @returns A boolean value with the authenticated status\n   */\n  isAuthenticated(): boolean {\n    return !!this.credentials;\n  }\n\n  /**\n   * Getter method for the credentials object\n   * @returns The current credentials\n   */\n  get credentials(): Authentication.Credentials | null {\n    return this._credentials;\n  }\n\n  /**\n   * Getter method for the authentication token\n   * @returns The current token\n   */\n  get accessToken(): string | null {\n    return this.credentials ? this.credentials.token : null;\n  }\n\n  /**\n   * Saves current user's credentials in local storage\n   * @param credentials An object that contains the authentication token and data from server if user performed a login,\n   * or nothing if user just performed a log out\n   */\n  private setCredentials(credentials?: Authentication.Credentials) {\n    this._credentials = credentials || null;\n    if (credentials) {\n      this.localStorageService.setItem(\n        credentialsKey,\n        JSON.stringify(credentials)\n      );\n      this.credentials$.emit(this._credentials);\n    } else {\n      this.localStorageService.clearItem(credentialsKey);\n    }\n  }\n\n   /**\n   * Getter method for current user's profile\n   * @returns The current user\n   */\n  get user(): Authentication.User | null {\n    return this.credentials ? this.credentials.user : null;\n  }\n\n  /**\n   * Sends a request to the backend server for current user's profile\n   * @returns An observable that contains the current user's profile\n   */\n  private getUserProfile(): Observable { \n    return this.httpClient\n    .get('/profile')\n    .pipe(\n      map((response: Authentication.User) => {\n        return response;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nAllocationService\n\nAllocationService\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAllocationService->CoreModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nCoreModule -->\n\nAuthenticationService->CoreModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nCoreModule -->\n\nCourseService->CoreModule\n\n\n\n\n\nErrorHandlerInterceptor\n\nErrorHandlerInterceptor\n\nCoreModule -->\n\nErrorHandlerInterceptor->CoreModule\n\n\n\n\n\nErrorMessageService\n\nErrorMessageService\n\nCoreModule -->\n\nErrorMessageService->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\nLocationsService\n\nLocationsService\n\nCoreModule -->\n\nLocationsService->CoreModule\n\n\n\n\n\nOrganisationService\n\nOrganisationService\n\nCoreModule -->\n\nOrganisationService->CoreModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\n\n\nVolunteerService\n\nVolunteerService\n\nCoreModule -->\n\nVolunteerService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AllocationService\n                        \n                        \n                            AuthenticationService\n                        \n                        \n                            CourseService\n                        \n                        \n                            ErrorHandlerInterceptor\n                        \n                        \n                            ErrorMessageService\n                        \n                        \n                            LocalStorageService\n                        \n                        \n                            LocationsService\n                        \n                        \n                            OrganisationService\n                        \n                        \n                            RequestInterceptor\n                        \n                        \n                            RequestInterceptor\n                        \n                        \n                            VolunteerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  HTTP_INTERCEPTORS,\n  HttpClient,\n  HttpClientModule\n} from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\nimport {\n  AuthenticationGuard,\n  AuthenticationService,\n} from './authentication';\nimport {\n  RequestInterceptor,\n  ErrorHandlerInterceptor\n} from './http';\nimport { LocalStorageService } from './local-storage.service';\nimport { RouteReusableStrategy } from './route-reusable-strategy';\nimport {\n  ErrorMessageService,\n  CourseService,\n  VolunteerService,\n  OrganisationService,\n  DatabaseSyncService,\n  AllocationService\n} from './service';\nimport { LocationsService } from './service/locations.service';\nimport { UnauthenticatedGuard } from './authentication/unauthenticated.guard';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule, RouterModule],\n  declarations: [],\n  providers: [\n    LocalStorageService,\n    AuthenticationService,\n    AuthenticationGuard,\n    UnauthenticatedGuard,\n    RequestInterceptor,\n    ErrorHandlerInterceptor,\n    VolunteerService,\n    ErrorMessageService,\n    LocationsService,\n    CourseService,\n    OrganisationService,\n    DatabaseSyncService,\n    AllocationService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: RequestInterceptor,\n      multi: true\n    },\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy\n    }\n  ]\n})\n\n/**\n * Module for all core related services, interceptors and models\n */\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/course.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for course object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                acredited\n                            \n                            \n                                name\n                            \n                            \n                                obtained\n                            \n                            \n                                volunteer_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/model/course.model.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acredited\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            obtained\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volunteer_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/course.model.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Course {\n    _id: string;\n    name: string;\n    acredited: string;\n    obtained: Date;\n    volunteer_id: string;\n\n    constructor() {}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseService.html":{"url":"injectables/CourseService.html","title":"injectable - CourseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/course.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for course related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCourse\n                            \n                            \n                                deleteCourseById\n                            \n                            \n                                getCourseById\n                            \n                            \n                                getCourseByName\n                            \n                            \n                                getCourseByVolunteerId\n                            \n                            \n                                getCourses\n                            \n                            \n                                updateCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/course.service.ts:27\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Courses Database\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createCourse\n                        \n                        \n                    \n                \n            \n            \n                \ncreateCourse(name: string, volunteer_id: string, acredited: string, obtained: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:98\n                \n            \n\n\n            \n                \n                    Creates a course entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new course's name\n\n                                    \n                                \n                                \n                                    volunteer_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the volunteer's id\n\n                                    \n                                \n                                \n                                    acredited\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    obtained\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Date value when a course was obtained\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with the created object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteCourseById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteCourseById(courseId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:125\n                \n            \n\n\n            \n                \n                    Deletes an entry by its id from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The course id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourseById\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourseById(courseId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:75\n                \n            \n\n\n            \n                \n                    Finds a course by its id in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course's id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the course with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourseByName\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourseByName(courseName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:61\n                \n            \n\n\n            \n                \n                    Finds a course by its name in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    courseName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the course\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all courses with that name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourseByVolunteerId\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourseByVolunteerId(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourses\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourses()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:50\n                \n            \n\n\n            \n                \n                    Getter method for all courses from the local database\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all courses\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateCourse\n                        \n                        \n                    \n                \n            \n            \n                \nupdateCourse(course: Course)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/course.service.ts:112\n                \n            \n\n\n            \n                \n                    Updates a course entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new course entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { from, Observable } from 'rxjs';\nimport { Course } from '../model/course.model';\n\n/**\n * Reference for local PouchDB Courses Database\n */\nvar localDB = new PouchDB('courses');\n\n/**\n * PouchDB find plugin added \n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Courses Database\n */\nvar remoteDB = new PouchDB(environment.databaseURL + '/courses');\n\n/**\n * Provider for course related operations\n */\n@Injectable()\nexport class CourseService {\n\n  /**\n   * Class constructor, sets the synchronization options for CouchDB and PouchDB Courses Database\n   */\n  constructor() {\n    let options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);    \n\n    localDB.createIndex({\n      index: {fields: ['name', 'volunteer_id', 'acredited']}\n    });\n   }\n\n  /**\n   * Getter method for all courses from the local database\n  * @returns An Observable with all courses\n  */\n  getCourses(): Observable {\n    return from(localDB.allDocs({\n      include_docs: true\n    }));\n  }\n  \n  /**\n  * Finds a course by its name in the local database\n  * @param courseName The name of the course\n  * @returns An Observable with all courses with that name\n  */\n  getCourseByName(courseName: string): Observable {\n    return from(localDB.find({\n      selector: {\n        name: {$eq: courseName},\n      },\n      sort: ['name'],\n    }));\n  }\n\n  /**\n  * Finds a course by its id in the local database\n  * @param courseId Course's id\n  * @returns An Observable containing the course with that id\n  */\n  getCourseById(courseId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        _id: {$eq: courseId},\n      }\n    }));\n  }\n\n  getCourseByVolunteerId(volunteerId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        'volunteer_id': {$eq: volunteerId}\n      }\n    }));\n  }\n\n  /**\n   * Creates a course entry in the local database\n   * @param name String value containing the new course's name\n   * @param volunteer_id String value containing the volunteer's id\n   * @param obtained Date value when a course was obtained\n   * @returns An Observable with the created object\n   */\n  createCourse(name: string, volunteer_id: string, acredited: string, obtained: Date): Observable {\n    const course = new Course();\n    course.volunteer_id = volunteer_id;\n    course.name = name;\n    course.obtained = obtained;\n    course.acredited = acredited;\n\n    return from(localDB.post(course));\n  }\n \n  /**\n  * Updates a course entry in the local database\n  * @param course The new course entry\n  */\n  updateCourse(course: Course): void {\n    localDB.get(course._id).then(function (doc) {\n      doc.name = course.name ? course.name : doc.name;\n      doc.acredited = course.acredited ? course.acredited : doc.acredited;\n      doc.obtained = course.obtained ? course.obtained : doc.obtained;\n      localDB.put(doc);\n    });\n  }\n\n  /**\n   * Deletes an entry by its id from the local database\n   * @param courseId The course id\n   */\n  deleteCourseById(courseId: string): void {\n    localDB.get(courseId).then(doc => {\n      return localDB.remove(doc);\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Credentials.html":{"url":"interfaces/Credentials.html","title":"interface - Credentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Credentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for credentials object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        session\n                                \n                                \n                                        token\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        session\n                                    \n                                \n                                \n                                    \n                                        session:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  /**\n * Interface for login payload\n */\n  export interface LoginPayload {\n    username: string;\n    password: string;\n  }\n\n  /**\n * Interface for user object\n */\n  export interface User {\n    _id: string;\n    name: string;\n    phone?: any;\n    email: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n\n  /**\n * Interface for credentials object\n */\n  export interface Credentials {\n    user: User;\n    token: string;\n    session: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseSyncService.html":{"url":"classes/DatabaseSyncService.html","title":"class - DatabaseSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/database-sync.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for database synchronization (local and remote)\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sync\n                        \n                        \n                    \n                \n            \n            \n                \nsync()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/database-sync.service.ts:53\n                \n            \n\n\n            \n                \n                    Strats database synchronization\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as PouchDB from 'pouchdb/dist/pouchdb';\nimport { environment } from '../../../environments/environment';\n\n/**\n * Reference for local PouchDB Volunteers Database\n */\nvar localVolunteersDB = new PouchDB('volunteers');\n/**\n * Reference for server CouchDB Volunteers Database\n */\nvar remoteVolunteersDB = new PouchDB(environment.databaseURL + '/volunteers');\n\n/**\n * Reference for local PouchDB Courses Database\n */\nvar localCoursesDB = new PouchDB('courses');\n/**\n * Reference for server CouchDB Courses Database\n */\nvar remoteCoursesDB = new PouchDB(environment.databaseURL + '/courses');\n\n/**\n * Reference for local PouchDB Organisations Database\n */\nvar localOrganisationsDB = new PouchDB('organisations');\n/**\n * Reference for server CouchDB Organisations Database\n */\nvar remoteOrganisationsDB = new PouchDB(environment.databaseURL + '/organisations');\n\n/**\n * Reference for local PouchDB Allocations Database\n */\nvar localAllocationsDB = new PouchDB('allocations');\n/**\n * Reference for server CouchDB Allocations Database\n */\nvar remoteAllocationsDB = new PouchDB(environment.databaseURL + '/allocations');\n\n/**\n * Service for database synchronization (local and remote)\n */\nexport class DatabaseSyncService { \n\n    /**\n     * @ignore\n     */\n    constructor() { }\n\n    /**\n     * Strats database synchronization\n     */\n    sync() {\n        let options = {\n            live: true,\n            retry: true,\n            continuous: true\n          };\n\n        localVolunteersDB.sync(remoteVolunteersDB, options);    \n        localCoursesDB.sync(remoteCoursesDB, options); \n        localOrganisationsDB.sync(remoteOrganisationsDB, options); \n        localAllocationsDB.sync(remoteAllocationsDB, options); \n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorHandlerInterceptor.html":{"url":"interceptors/ErrorHandlerInterceptor.html","title":"interceptor - ErrorHandlerInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorHandlerInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/error-handler.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Adds a default error handler to all requests.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, localStorageService: LocalStorageService, errorMessageService: ErrorMessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/error-handler.interceptor.ts:25\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular value which handles routing operations\n\n                                                        \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected service referes the LocalStorageService for handling operations related to storage\n\n                                                        \n                                                \n                                                \n                                                        errorMessageService\n                                                  \n                                                        \n                                                                        ErrorMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected service referes the ErrorMessageService for handling operations related to error messagging\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            errorHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    errorHandler(response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/error-handler.interceptor.ts:59\n                \n            \n\n\n            \n                \n                    Handles the request errors depending on its code\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request response\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable with the http event\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/error-handler.interceptor.ts:45\n                \n            \n\n\n            \n                \n                    Intercepts all requests that are sent and adds an error handling function to them\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current request that is being sent\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Handles the next state of the request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable with the new request, with the additional information\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from '../local-storage.service';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ErrorMessageService } from '../service/error-message.service';\nimport { environment } from '../../../environments/environment';\n\n/**\n * Key that identifies the credentials\n */\nconst credentialsKey = 'credentials';\n\n/**\n * Adds a default error handler to all requests.\n */\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n  \n  /**\n   * Class constructor\n   * @param router Angular value which handles routing operations\n   * @param localStorageService Injected service referes the LocalStorageService for handling operations related to storage\n   * @param errorMessageService Injected service referes the ErrorMessageService for handling operations related to error messagging\n   */\n  constructor(\n    private router: Router,\n    private localStorageService: LocalStorageService,\n    private errorMessageService: ErrorMessageService\n  ) {}\n\n   /**\n   * Intercepts all requests that are sent and adds an error handling function to them\n   * @param request The current request that is being sent\n   * @param next Handles the next state of the request\n   * @returns An observable with the new request, with the additional information\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return next\n      .handle(request)\n      .pipe(catchError(error => this.errorHandler(error)));\n  }\n\n  /**\n   * Handles the request errors depending on its code\n   * @param response Request response\n   * @returns An observable with the http event\n   */\n  private errorHandler(\n    response: HttpResponse\n  ): Observable> {\n    if (response.status === 401) {\n      this.localStorageService.clearItem(credentialsKey);\n      this.router.navigate(['/login'], {\n        replaceUrl: true\n      });\n    } else if (response.status === 400) {\n      const errorResponse: any = response;\n      if (errorResponse.error) {\n        if (errorResponse.error.validation) {\n          errorResponse.error.validation.keys.forEach((key: string) => {\n            this.errorMessageService.set(\n              errorResponse.error.validation.errors[key],\n              key,\n              response.url\n            );\n          });\n        } else {\n          this.errorMessageService.set(\n            errorResponse.error.error,\n            '_GLOBAL_',\n            response.url\n          );\n        }\n      }\n    }\n\n    if (!environment.production) {\n      console.error('Request error', response);\n    }\n    throw response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorMessageObject.html":{"url":"interfaces/ErrorMessageObject.html","title":"interface - ErrorMessageObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorMessageObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/error.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for error message\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        id\n                                \n                                \n                                        serviceUrl\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceUrl\n                                    \n                                \n                                \n                                    \n                                        serviceUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace ErrorModel {\n  /**\n   * Interface for error object\n   */\n  export interface RootObject {\n    statusCode: number;\n    error: string;\n    message: string;\n    attributes?: any;\n  }\n\n  /**\n   * Interface for error message\n   */\n  export interface ErrorMessageObject {\n    id: number;\n    error: string;\n    type: string;\n    serviceUrl: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorMessageService.html":{"url":"injectables/ErrorMessageService.html","title":"injectable - ErrorMessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorMessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/error-message.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for error messages\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _errors\n                            \n                            \n                                    Public\n                                errors$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errors\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/error-message.service.ts:51\n                \n            \n\n\n            \n                \n                    Clears the error messages and emits an event\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            set\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    set(error: string, type: string, serviceUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/error-message.service.ts:37\n                \n            \n\n\n            \n                \n                    Sets the error messages and emits an event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error message\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error type\n\n                                    \n                                \n                                \n                                    serviceUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Service Url that generated the error\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorModel.ErrorMessageObject[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/error-message.service.ts:11\n                            \n                        \n\n                \n                    \n                        Value that stores the error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errors$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/service/error-message.service.ts:16\n                            \n                        \n\n                \n                    \n                        Value that emitts events when error messages are changed\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errors\n                    \n                \n\n                \n                    \n                        geterrors()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/service/error-message.service.ts:27\n                                \n                            \n                    \n                        \n                                Getter for current error messages\n\n\n                                \n                                \n                                \n                                    Returns :         ErrorModel.ErrorMessageObject[]\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\n\n/**\n * Provider for error messages\n */\n@Injectable()\nexport class ErrorMessageService {\n  /**\n   * Value that stores the error messages\n   */\n  private _errors: ErrorModel.ErrorMessageObject[] = [];\n\n  /**\n   * Value that emitts events when error messages are changed\n   */\n  public errors$ = new EventEmitter();\n\n  /**\n   * @ignore\n   */\n  constructor() {}\n\n  /**\n   * Getter for current error messages\n   * @returns current error messages\n   */\n  get errors(): ErrorModel.ErrorMessageObject[] {\n    return this._errors;\n  }\n\n  /**\n   * Sets the error messages and emits an event\n   * @param error Error message\n   * @param type Error type\n   * @param serviceUrl Service Url that generated the error\n   */\n  public set(error: string, type: string, serviceUrl: string) {\n    this._errors.push({\n      id: Date.now(),\n      error: error,\n      type: type,\n      serviceUrl: serviceUrl\n    });\n    console.log(this._errors);\n    this.errors$.emit(this._errors);\n  }\n\n  /**\n   * Clears the error messages and emits an event\n   */\n  public clear() {\n    this._errors = [];\n    this.errors$.emit(this._errors);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewDidEnter\n                            \n                            \n                                performAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.page.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/home.page.ts:52\n                \n            \n\n\n            \n                \n                    Ionic lifecycle method, in this case the default back navigation is blocked (android)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            performAction\n                        \n                        \n                    \n                \n            \n            \n                \nperformAction(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/home.page.ts:41\n                \n            \n\n\n            \n                \n                    Performes the action selected by the user from the side-menu list;\nIt can either mean navigation to a new page or opening the phone's call screen\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String containing the url for the route that will be displayed on user click\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      title: 'Validează voluntar',\n      url: '/volunteer/validate'\n    }, {\n      title: 'Adaugă voluntar nou',\n      url: '/volunteer/add'\n    }, {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    }, {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/home/home.page.ts:14\n                            \n                        \n\n                \n                    \n                        Actions that can be performed from the side-menu\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component,   } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n  \n  /**\n   * Actions that can be performed from the side-menu\n   */\n  actions = [\n    {\n      title: 'Validează voluntar',\n      url: '/volunteer/validate'\n    }, {\n      title: 'Adaugă voluntar nou',\n      url: '/volunteer/add'\n    }, {\n      title: 'Vezi toți voluntarii',\n      url: '/volunteer/list'\n    }, {\n      title: 'Apelează suport',\n      url: 'tel:89992142265'\n    }\n  ];\n  \n  /**\n  * \n  * @param router Provider for route navigation\n  */\n  constructor(private router: Router) { }\n\n  /**\n   * Performes the action selected by the user from the side-menu list;\n   * It can either mean navigation to a new page or opening the phone's call screen\n   * @param url String containing the url for the route that will be displayed on user click\n   */\n  performAction(url: string) {\n    if(url.includes('tel')) {\n      window.open(url);\n    } else {\n      this.router.navigate([url]);\n    }\n  }\n  \n  /**\n   * Ionic lifecycle method, in this case the default back navigation is blocked (android)\n   */\n  ionViewDidEnter() {\n    document.addEventListener(\"backbutton\",function(e) {\n    }, false);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n  \n\n\n\n  \n    \n      \n          \n            {{action.title}}\n          \n      \n    \n  \n\n    \n\n    \n                \n                    home.page.scss\n                \n                .menu-column {\n  padding: 70px 10px;\n  text-align: center;\n  text-decoration: underline;\n  -webkit-box-shadow: 0px 0px 0px 5px rgba(240,237,240,1);\n  -moz-box-shadow: 0px 0px 0px 5px rgba(240,237,240,1);\n  box-shadow: 0px 0px 5px 2px rgba(240,237,240,1);\n  font-size: 12px;\n  color: black;\n}\n\n.menu-column a {\n  color: black;\n}\n\n.home-columns ion-row {\n  justify-content: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{action.title}}                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'LogoutPage', 'selector': 'app-logout'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { HomePage } from './home.page';\nimport { AuthenticationGuard } from '../../core/authentication/authentication.guard';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage,\n        canActivate: [AuthenticationGuard]\n      }\n    ])\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/local-storage.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for storing information in local storage\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                localStorage\n                            \n                            \n                                sessionStorage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearAll\n                            \n                            \n                                    Public\n                                clearItem\n                            \n                            \n                                    Public\n                                getItem\n                            \n                            \n                                    Public\n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/local-storage.service.ts:114\n                            \n                        \n\n                \n                    \n                            Checks if localStorage can be used for basic storing operations\nIf not, then a custom storage is created to handle this operations\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clearAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:244\n                \n            \n\n\n            \n                \n                    Clears the existing storage\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clearItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:237\n                \n            \n\n\n            \n                \n                    Removes an item from storage by its key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:229\n                \n            \n\n\n            \n                \n                    Retrieves an item by its key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setItem(key: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/local-storage.service.ts:221\n                \n            \n\n\n            \n                \n                    Adds an item to storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item's key\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item itself\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localStorage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:109\n                            \n                        \n\n                \n                    \n                        Handles storing inside local storage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionStorage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/local-storage.service.ts:114\n                            \n                        \n\n                \n                    \n                        Handles storing inside session storage\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Creates a cookie entry\n * @param name Cookie name\n * @param value Cookie value\n * @param days Cookie expiration number of days\n */\nfunction createCookie(name: any, value: any, days: any) {\n  let date: any, expires;\n\n  if (days) {\n    date = new Date();\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    expires = '; expires=' + date.toGMTString();\n  } else {\n    expires = '';\n  }\n  document.cookie = name + '=' + value + expires + '; path=/';\n}\n\n/**\n * Getter for a cookie document by its name\n * @param name Cookie's name\n * @returns cookie document \n */\nfunction readCookie(name: any) {\n  const nameEQ = name + '=',\n    ca = document.cookie.split(';');\n  let i, c;\n\n  for (i = 0; i  localStorage\n      });\n      this.localStorage = localStorage;\n      this.sessionStorage = sessionStorage;\n    }\n  }\n\n  /**\n   * Adds an item to storage\n   * @param key Item's key\n   * @param value Item itself\n  */\n  public setItem(key: string, value: any) {\n    return this.localStorage.setItem(key, value);\n  }\n\n   /**\n    * Retrieves an item by its key\n    * @param key Item key\n    */\n  public getItem(key: string) {\n    return this.localStorage.getItem(key);\n  }\n\n  /**\n  * Removes an item from storage by its key\n  * @param key Item key\n  */\n  public clearItem(key: string) {\n    return this.localStorage.removeItem(key);\n  }\n  \n  /**\n   * Clears the existing storage\n   */\n  public clearAll() {\n    return this.localStorage.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationsService.html":{"url":"injectables/LocationsService.html","title":"injectable - LocationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/locations.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for locations: counties and cities\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCityList\n                            \n                            \n                                    Public\n                                getCountyList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/locations.service.ts:9\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Http service injected reference for sending http requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCityList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCityList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/locations.service.ts:29\n                \n            \n\n\n            \n                \n                    Getter for the list of cities\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that contains the list of cities from resource files\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCountyList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCountyList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/locations.service.ts:21\n                \n            \n\n\n            \n                \n                    Getter for the list of counties\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable that contains the list of counties from resource files\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/**\n * Provider for locations: counties and cities\n */\n@Injectable()\nexport class LocationsService {\n\n    /**\n     * Class constructor\n     * @param http Angular Http service injected reference for sending http requests\n     */\n    constructor(private http: HttpClient) {}\n\n    /**\n     * Getter for the list of counties\n     * @returns An observable that contains the list of counties from resource files\n     */\n    public getCountyList(): Observable {\n        return this.http.get('/assets/files/counties.json');\n    }\n\n    /**\n     * Getter for the list of cities\n     * @returns An observable that contains the list of cities from resource files\n     */\n    public getCityList(): Observable {\n        return this.http.get('/assets/files/cities.json');\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/login/login.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                ionViewDidEnter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentToastWithOptions\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, formBuilder: FormBuilder, authenticationService: AuthenticationService, databaseSyncService: DatabaseSyncService, location: Location, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/login/login.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for route navigation\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for reactive form creation\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operation\n\n                                                        \n                                                \n                                                \n                                                        databaseSyncService\n                                                  \n                                                        \n                                                                        DatabaseSyncService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for database synchronization\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for location changes\n\n                                                        \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controller for toast messages display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/login/login.page.ts:44\n                \n            \n\n\n            \n                \n                    Form initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/login/login.page.ts:80\n                \n            \n\n\n            \n                \n                    Ionic lifecycle method, in this case the default back navigation is blocked (android)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/login/login.page.ts:37\n                \n            \n\n\n            \n                \n                    Page initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentToastWithOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToastWithOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/login/login.page.ts:88\n                \n            \n\n\n            \n                \n                    Presents a toast with an error message if the credentials are incorrect\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/login/login.page.ts:55\n                \n            \n\n\n            \n                \n                    Authentication credentials from the form are sent to the authentication service for validation\nIf they are validated, the user will be redirected to the home page, if not, a toast will display an error message\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/login/login.page.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../../core/authentication';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {finalize} from 'rxjs/operators';\nimport { Location } from '@angular/common';\nimport { ToastController } from '@ionic/angular';\nimport { DatabaseSyncService } from 'src/app/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  loginForm: FormGroup;\n\n  /**\n   * \n  * @param router Provider for route navigation\n   * @param formBuilder Provider for reactive form creation\n   * @param authenticationService Provider for authentication related operation\n   * @param databaseSyncService Provider for database synchronization\n   * @param location Provider for location changes\n   * @param toastController Controller for toast messages display\n   */\n  constructor(private router: Router,\n              private formBuilder: FormBuilder,\n              private authenticationService: AuthenticationService,\n              private databaseSyncService: DatabaseSyncService,\n              private location: Location,\n              private toastController: ToastController) { }\n   \n  /**\n   * Page initialisation\n   */\n  ngOnInit() {\n    this.createForm();\n  }\n\n  /**\n   * Form initialisation\n   */\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  /**\n   * Authentication credentials from the form are sent to the authentication service for validation\n   * If they are validated, the user will be redirected to the home page, if not, a toast will display an error message\n   */\n  submit() {\n    this.authenticationService\n      .login(this.loginForm.value)\n      .pipe(\n        finalize(() => {\n          this.loginForm.markAsPristine();\n        })\n      )\n      .subscribe(\n        (credentials: Authentication.Credentials) => {\n          this.router.navigate(['../home'], {\n            replaceUrl: true\n          });\n          this.databaseSyncService.sync();\n          this.location.replaceState(this.router.serializeUrl(this.router.createUrlTree(['home'])));\n        },\n        (error: any) => {\n          this.presentToastWithOptions();\n        }\n      );\n  }\n \n /**\n   * Ionic lifecycle method, in this case the default back navigation is blocked (android)\n   */\n  ionViewDidEnter() {\n    document.addEventListener(\"backbutton\",function(e) {\n    }, false);\n  }\n\n  /**\n   * Presents a toast with an error message if the credentials are incorrect\n   */\n  async presentToastWithOptions() {\n    const toast = await this.toastController.create({\n      message: 'Informații incorecte',\n      position: 'bottom',\n      buttons: [\n         {\n          text: 'Reîncearcă',\n          side: 'end',\n          role: 'cancel',\n          handler: () => {\n            toast.dismiss();\n          }\n        }\n      ]\n    });\n    toast.present();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      Adresă de email\n      \n    \n    \n      Cod de securitate\n      \n    \n    Login\n  \n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                .logo {\n    background-color: white;\n    border-radius: 50%;\n    height: 180px;\n    width: 180px;\n}\n\n.logo img {\n    display: block;\n}\n\n.full-button {\n    text-transform: capitalize;\n    height: 50px;\n}\n\n.login-item {\n    border-bottom: 1px solid white;\n}\n\n.login-form {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Adresă de email                    Cod de securitate              Login  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'LogoutPage', 'selector': 'app-logout'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageModule.html":{"url":"modules/LoginPageModule.html","title":"module - LoginPageModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/login/login.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\nimport { LoginPage } from './login.page';\n\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginPayload.html":{"url":"interfaces/LoginPayload.html","title":"interface - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for login payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  /**\n * Interface for login payload\n */\n  export interface LoginPayload {\n    username: string;\n    password: string;\n  }\n\n  /**\n * Interface for user object\n */\n  export interface User {\n    _id: string;\n    name: string;\n    phone?: any;\n    email: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n\n  /**\n * Interface for credentials object\n */\n  export interface Credentials {\n    user: User;\n    token: string;\n    session: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutPage.html":{"url":"components/LogoutPage.html","title":"component - LogoutPage","body":"\n                   \n\n\n\n\n\n  Components\n  LogoutPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/logout/logout.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout\n            \n\n            \n                styleUrls\n                ./logout.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./logout.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/logout/logout.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for authentication related operations\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for router navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/logout/logout.page.ts:24\n                \n            \n\n\n            \n                \n                    A request through the authentication service is sent for logout;\nIf its successful the user will be redirected to the login screen\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.page.html',\n  styleUrls: ['./logout.page.scss'],\n})\nexport class LogoutPage implements OnInit {\n\n  /**\n   * \n   * @param authenticationService Provider for authentication related operations\n   * @param router Provider for router navigation\n   */\n  constructor(private authenticationService: AuthenticationService, \n              private router: Router) { }\n\n  /**\n   * A request through the authentication service is sent for logout;\n   * If its successful the user will be redirected to the login screen\n   */              \n  ngOnInit() {\n      this.authenticationService.logout().subscribe(() => {\n      this.router.navigate(['../login'], {\n        replaceUrl: true\n      });\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n\n    \n\n    \n                \n                    ./logout.page.scss\n                \n                ion-spinner {\n    color: white;\n    height: 100px;\n    width: 100px;\n}\n\n.center-spinner {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'LogoutPage', 'selector': 'app-logout'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LogoutPageModule.html":{"url":"modules/LogoutPageModule.html","title":"module - LogoutPageModule","body":"\n                   \n\n\n\n\n    Modules\n    LogoutPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LogoutPageModule\n\n\n\ncluster_LogoutPageModule_declarations\n\n\n\n\nLogoutPage\n\nLogoutPage\n\n\n\nLogoutPageModule\n\nLogoutPageModule\n\nLogoutPageModule -->\n\nLogoutPage->LogoutPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/logout/logout.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LogoutPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LogoutPage } from './logout.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LogoutPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LogoutPage]\n})\nexport class LogoutPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Organisation.html":{"url":"classes/Organisation.html","title":"class - Organisation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Organisation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/organisation.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for organisation object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                added_by\n                            \n                            \n                                name\n                            \n                            \n                                obtained\n                            \n                            \n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/model/organisation.model.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            added_by\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            obtained\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            website\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/organisation.model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Organisation {\n    _id: string;\n    name: string;\n    website: string;\n    obtained: Date;\n    added_by: string;\n\n    constructor() {}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganisationService.html":{"url":"injectables/OrganisationService.html","title":"injectable - OrganisationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OrganisationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/organisation.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for organisation related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createOrganisation\n                            \n                            \n                                deleteOrganisationById\n                            \n                            \n                                getOrganisationById\n                            \n                            \n                                getOrganisationByName\n                            \n                            \n                                getOrganisations\n                            \n                            \n                                updateOrganisation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/organisation.service.ts:28\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Organisations Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected reference for AuthenticationService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createOrganisation\n                        \n                        \n                    \n                \n            \n            \n                \ncreateOrganisation(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:90\n                \n            \n\n\n            \n                \n                    Creates an organisation entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new organisation's name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with the created object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteOrganisationById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteOrganisationById(organisationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:114\n                \n            \n\n\n            \n                \n                    Deletes an entry by its id from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The organisation id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrganisationById\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrganisationById(organisationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:64\n                \n            \n\n\n            \n                \n                    Finds an organisation by its id in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Organisation's id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the organisation with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrganisationByName\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrganisationByName(organisationName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:77\n                \n            \n\n\n            \n                \n                    Finds an organisation by its name in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisationName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the organisation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all organisation with that name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrganisations\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrganisations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:52\n                \n            \n\n\n            \n                \n                    Getter method for all organisations from the local database\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all organisations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOrganisation\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOrganisation(organisation: Organisation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/organisation.service.ts:103\n                \n            \n\n\n            \n                \n                    Updates an organisation entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organisation\n                                    \n                                                Organisation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new organisation entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { from, Observable } from 'rxjs';\nimport { AuthenticationService } from '../authentication';\nimport { Organisation } from '../model/organisation.model';\n\n/**\n * Reference for local PouchDB Organisations Database\n */\nvar localDB = new PouchDB('organisations');\n\n/**\n * PouchDB find plugin added \n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Organisations Database\n */\nvar remoteDB = new PouchDB(environment.databaseURL + '/organisations');\n\n/**\n * Provider for organisation related operations\n */\n@Injectable()\nexport class OrganisationService {\n  \n  /**\n  * Class constructor, sets the synchronization options for CouchDB and PouchDB Organisations Database\n  * @param authenticationService Injected reference for AuthenticationService\n  */\n  constructor(private authenticationService: AuthenticationService) {\n    let options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n   localDB.sync(remoteDB, options);    \n\n    localDB.createIndex({\n      index: {fields: ['name']}\n    });\n   }\n\n  /**\n   * Getter method for all organisations from the local database\n  * @returns An Observable with all organisations\n  */\n  getOrganisations(): Observable {\n    return from(localDB.allDocs({\n      include_docs: true,\n      attachments: true\n    }));\n  }\n\n  /**\n  * Finds an organisation by its id in the local database\n  * @param organisationId Organisation's id\n  * @returns An Observable containing the organisation with that id\n  */\n  getOrganisationById(organisationId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        _id: {$eq: organisationId},\n      }\n    }));    \n  }\n\n  /**\n  * Finds an organisation by its name in the local database\n  * @param organisationName The name of the organisation\n  * @returns An Observable with all organisation with that name\n  */\n  getOrganisationByName(organisationName: string): Observable {\n    return from(localDB.find({\n      selector: {\n        name: {$eq: organisationName},\n      }\n    }));\n  }\n\n  /**\n   * Creates an organisation entry in the local database\n   * @param name String value containing the new organisation's name\n   * @returns An Observable with the created object\n   */\n  createOrganisation(name: string) : Observable {\n    const currentUser = this.authenticationService.user;\n    let organisation = new Organisation();\n    organisation.name = name;\n    organisation.added_by = currentUser._id;\n \n    return from(localDB.post(organisation));\n  }\n\n   /**\n  * Updates an organisation entry in the local database\n  * @param organisation The new organisation entry\n  */\n  updateOrganisation(organisation: Organisation) {\n    localDB.get(organisation._id).then(function (doc) {\n      doc.name = organisation.name ? organisation.name : doc.name;\n      localDB.put(doc);\n    });\n  }\n\n  /**\n  * Deletes an entry by its id from the local database\n  * @param organisationId The organisation id\n  */\n  deleteOrganisationById(organisationId: string) {\n    localDB.get(organisationId).then(function (doc) {\n      return localDB.remove(doc);\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RequestInterceptor.html":{"url":"interceptors/RequestInterceptor.html","title":"interceptor - RequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  RequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/request.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Prefixes all requests with environment.serverUrl and adds the authentication token to requests\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/request.interceptor.ts:17\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected service referes the AuthenticationService for handling authentication related operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/request.interceptor.ts:31\n                \n            \n\n\n            \n                \n                    Intercepts all requests that are sent and adds extra information to them\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current request that is being sent\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Handles the next state of the request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The new request, with the additional information\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { Observable } from 'rxjs';\n\nimport { AuthenticationService } from '../authentication/authentication.service';\n\n/**\n * Prefixes all requests with `environment.serverUrl` and adds the authentication token to requests\n */\n@Injectable()\nexport class RequestInterceptor implements HttpInterceptor {\n  \n  /**\n   * Class constructor\n   * @param authenticationService Injected service referes the AuthenticationService for handling authentication related operations\n   */\n  constructor(private authenticationService: AuthenticationService) {}\n\n  /**\n   * Intercepts all requests that are sent and adds extra information to them\n   * @param request The current request that is being sent\n   * @param next Handles the next state of the request\n   * @returns The new request, with the additional information\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    request = request.clone({\n      setHeaders: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json; charset=utf-8',\n      'Authorization': `Bearer ${this.authenticationService.accessToken}`,\n      }\n    });\n\n    if(!request.url.includes('assets')) {\n      request = request.clone({\n        url: environment.serverUrl + request.url\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RootObject.html":{"url":"interfaces/RootObject.html","title":"interface - RootObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RootObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/error.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for error object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attributes\n                                \n                                \n                                        error\n                                \n                                \n                                        message\n                                \n                                \n                                        statusCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                    \n                                \n                                \n                                    \n                                        attributes:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace ErrorModel {\n  /**\n   * Interface for error object\n   */\n  export interface RootObject {\n    statusCode: number;\n    error: string;\n    message: string;\n    attributes?: any;\n  }\n\n  /**\n   * Interface for error message\n   */\n  export interface ErrorMessageObject {\n    id: number;\n    error: string;\n    type: string;\n    serviceUrl: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteReusableStrategy.html":{"url":"classes/RouteReusableStrategy.html","title":"class - RouteReusableStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteReusableStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/route-reusable-strategy.ts\n        \n\n            \n                Description\n            \n            \n                A route strategy allowing for explicit route reuse.\nUsed as a workaround for https://github.com/angular/angular/issues/18374\nTo reuse a given route, add data: { reuse: true } to the route definition.\n\n            \n\n            \n                Extends\n            \n            \n                        RouteReuseStrategy\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                retrieve\n                            \n                            \n                                    Public\n                                shouldAttach\n                            \n                            \n                                    Public\n                                shouldDetach\n                            \n                            \n                                    Public\n                                shouldReuseRoute\n                            \n                            \n                                    Public\n                                store\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            retrieve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    retrieve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:47\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DetachedRouteHandle | null\n\n                    \n                    \n                        null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldAttach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldAttach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:38\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        false\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldDetach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldDetach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:19\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        false\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shouldReuseRoute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:56\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    future\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Future activated route\n\n                                    \n                                \n                                \n                                    curr\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            store\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/route-reusable-strategy.ts:28\n                \n            \n\n\n            \n                \n                    Route Reuse Strategy lifecycle method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current activated route\n\n                                    \n                                \n                                \n                                    detachedTree\n                                    \n                                            DetachedRouteHandle | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The detached tree\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ActivatedRouteSnapshot,\n  DetachedRouteHandle,\n  RouteReuseStrategy\n} from '@angular/router';\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n  \n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @returns false\n   */\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @param detachedTree The detached tree\n   */\n  public store(\n    route: ActivatedRouteSnapshot,\n    detachedTree: DetachedRouteHandle | null\n  ): void {}\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @returns false\n   */\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param route Current activated route\n   * @returns null\n   */\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  /**\n   * Route Reuse Strategy lifecycle method\n   * @param future Future activated route\n   * @param curr Current activated route\n   */\n  public shouldReuseRoute(\n    future: ActivatedRouteSnapshot,\n    curr: ActivatedRouteSnapshot\n  ): boolean {\n    return future.routeConfig === curr.routeConfig || future.data.reuse;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SendMessageComponent.html":{"url":"components/SendMessageComponent.html","title":"component - SendMessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SendMessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/volunteer/send-message/send-message.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-send-message\n            \n\n            \n                styleUrls\n                ./send-message.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./send-message.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                base64Image\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Private\n                                routeSub\n                            \n                            \n                                    Private\n                                volunteer\n                            \n                            \n                                    Private\n                                volunteerId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addImage\n                            \n                            \n                                checkPemission\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, sms: SMS, volunteerService: VolunteerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/volunteer/send-message/send-message.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for current route\n\n                                                        \n                                                \n                                                \n                                                        sms\n                                                  \n                                                        \n                                                                    SMS\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for sending SMS messages\n\n                                                        \n                                                \n                                                \n                                                        volunteerService\n                                                  \n                                                        \n                                                                        VolunteerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addImage\n                        \n                        \n                    \n                \n            \n            \n                \naddImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:67\n                \n            \n\n\n            \n                \n                    Adds an image from camera to the app and uses base64 codification to convert it into a string\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkPemission\n                        \n                        \n                    \n                \n            \n            \n                \ncheckPemission()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:94\n                \n            \n\n\n            \n                \n                    Checks for SMS permission, if granted sends the SMS\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:60\n                \n            \n\n\n            \n                \n                    Triggered when page is removed, unsubscribes from the route changes\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:48\n                \n            \n\n\n            \n                \n                    Page initialisation: the volunteer id needs to be retrieved from the url\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:81\n                \n            \n\n\n            \n                \n                    Sends the message and image to the selected volunteer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            base64Image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:34\n                            \n                        \n\n                \n                    \n                        Codification of the image that will be sent\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:29\n                            \n                        \n\n                \n                    \n                        The message that gets sent\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            routeSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:18\n                            \n                        \n\n                \n                    \n                        Route subscription, used for retriving parameters inserted in url route\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            volunteer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Volunteer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            volunteerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/send-message/send-message.component.ts:23\n                            \n                        \n\n                \n                    \n                        The id of the volunteer that will receive the message\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Camera } from '@ionic-native/camera';\nimport { SMS } from '@ionic-native/sms/ngx';\nimport { VolunteerService } from 'src/app/core';\nimport { Volunteer } from 'src/app/core/model/volunteer.model';\n\n@Component({\n  selector: 'app-send-message',\n  templateUrl: './send-message.component.html',\n  styleUrls: ['./send-message.component.scss']\n})\nexport class SendMessageComponent implements OnInit, OnDestroy {\n  /**\n   * Route subscription, used for retriving parameters inserted in url route\n   */\n  private routeSub: Subscription;\n\n  /**\n   * The id of the volunteer that will receive the message\n   */\n  private volunteerId: string;\n  private volunteer: Volunteer;\n\n  /**\n   * The message that gets sent\n   */\n  public message = '';\n\n  /**\n   * Codification of the image that will be sent\n   */\n  public base64Image: string;\n\n  /**\n   * \n   * @param route Provider for current route\n   * @param sms Provider for sending SMS messages\n   */\n  constructor(private route: ActivatedRoute,\n    private sms: SMS,\n    private volunteerService: VolunteerService) { }\n\n  /**\n   * Page initialisation: the volunteer id needs to be retrieved from the url\n   */\n  ngOnInit() {\n    this.routeSub = this.route.params.subscribe(params => {\n      this.volunteerId = params['id'];\n      this.volunteerService.getVolunteerById(this.volunteerId).subscribe((response) => {\n        this.volunteer = response.docs[0]\n      });\n    });\n  }\n\n  /**\n   * Triggered when page is removed, unsubscribes from the route changes\n   */\n  ngOnDestroy() {\n    this.routeSub.unsubscribe();\n  }\n\n  /**\n   * Adds an image from camera to the app and uses base64 codification to convert it into a string\n   */\n  addImage() {\n    Camera.getPicture({\n      destinationType: Camera.DestinationType.DATA_URL,\n      targetWidth: 1000,\n      targetHeight: 1000\n    }).then((imageData) => {\n      this.base64Image = \"data:image/jpeg;base64,\" + imageData;\n    }, (err) => {\n    });\n  }\n\n  /**\n   * Sends the message and image to the selected volunteer\n   */\n  sendMessage() {\n    const options = {\n        replaceLineBreaks: false,\n        android: {\n            intent: 'INTENT'\n        }\n    };\n    this.sms.send(this.volunteer.phone, this.message, options);\n  }\n\n  /**\n   * Checks for SMS permission, if granted sends the SMS\n   */\n  checkPemission(){\n    this.sms.hasPermission();\n    if(this.sms.hasPermission()) {\n      this.sendMessage();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n  \n\n\n\n  \n\n  \n    \n      \n        Mesajul tău\n      \n    \n    \n      \n    \n    \n      \n        \n        \n            Adaugă o fotografie\n        \n      \n      \n        \n          \n        \n      \n    \n  \n\n  Trimite mesaj\n\n    \n\n    \n                \n                    ./send-message.component.scss\n                \n                .sc-ion-textarea-md-h {\n    margin-top: 0;\n}\n\nion-button ion-icon {\n    font-size: 24px;\n}\n\n.full-button-bottom {\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    height: 40px;\n    margin: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          Mesajul tău                                                              Adaugă o fotografie                                                            Trimite mesaj'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'LogoutPage', 'selector': 'app-logout'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SendMessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UnauthenticatedGuard.html":{"url":"guards/UnauthenticatedGuard.html","title":"guard - UnauthenticatedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    UnauthenticatedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/authentication/unauthenticated.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Provides a guard for protecting unauthenticated routes (such as login)\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/unauthenticated.guard.ts:10\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular value which handles routing operations\n\n                                                        \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service which handles the authentication operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/authentication/unauthenticated.guard.ts:29\n                \n            \n\n\n            \n                \n                    Determines if a user can access a route, depending on its state\nIf the route isn't allowed, it automatically redirects to home page\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        a boolean value, current user's status: unauthenticated or authenticated\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { AuthenticationService } from './authentication.service';\n\n/**\n * Provides a guard for protecting unauthenticated routes (such as login)\n */\n@Injectable()\nexport class UnauthenticatedGuard implements CanActivate {\n\n   /**\n   * Class constructor\n   * \n   * @param router Angular value which handles routing operations\n   * @param authenticationService The service which handles the authentication operations\n   */\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n   /**\n   * Determines if a user can access a route, depending on its state\n   * If the route isn't allowed, it automatically redirects to home page\n   * \n   * @returns a boolean value, current user's status: unauthenticated or authenticated\n   */\n  canActivate(): boolean {\n    if (!this.authenticationService.isAuthenticated()) {\n      return true;\n    }\n\n    this.router.navigate(['/home'], {\n      replaceUrl: true\n    });\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/authentication.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for user object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        phone\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        declare namespace Authentication {\n  /**\n * Interface for login payload\n */\n  export interface LoginPayload {\n    username: string;\n    password: string;\n  }\n\n  /**\n * Interface for user object\n */\n  export interface User {\n    _id: string;\n    name: string;\n    phone?: any;\n    email: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n\n  /**\n * Interface for credentials object\n */\n  export interface Credentials {\n    user: User;\n    token: string;\n    session: string;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ValidateVolunteerComponent.html":{"url":"components/ValidateVolunteerComponent.html","title":"component - ValidateVolunteerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ValidateVolunteerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-validate-volunteer\n            \n\n            \n                styleUrls\n                ./validate-volunteer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./validate-volunteer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cities\n                            \n                            \n                                city\n                            \n                            \n                                counties\n                            \n                            \n                                county\n                            \n                            \n                                courses\n                            \n                            \n                                keyword\n                            \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                            \n                                volunteerIdWithDetails\n                            \n                            \n                                volunteers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allocateUser\n                            \n                            \n                                confirmAllocation\n                            \n                            \n                                countySelectionChanged\n                            \n                            \n                                doRefresh\n                            \n                            \n                                getCityList\n                            \n                            \n                                getCountyList\n                            \n                            \n                                getData\n                            \n                            \n                                loadData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openMenu\n                            \n                            \n                                searchKeyword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(volunteerService: VolunteerService, allocationService: AllocationService, locationsService: LocationsService, courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        volunteerService\n                                                  \n                                                        \n                                                                        VolunteerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for volunteer related operations\n\n                                                        \n                                                \n                                                \n                                                        allocationService\n                                                  \n                                                        \n                                                                        AllocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for volunteer allocation related operations\n\n                                                        \n                                                \n                                                \n                                                        locationsService\n                                                  \n                                                        \n                                                                        LocationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for location selection\n\n                                                        \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                        CourseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for course related operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allocateUser\n                        \n                        \n                    \n                \n            \n            \n                \nallocateUser(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:92\n                \n            \n\n\n            \n                \n                    Opens the allocation menu for the selected user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String containing the id of the volunteer that was selected for allocation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmAllocation\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmAllocation(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:103\n                \n            \n\n\n            \n                \n                    Allocate the selected volunteer for a location using the allocation service\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String containing the id of the volunteer that was selected for allocation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            countySelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncountySelectionChanged(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:198\n                \n            \n\n\n            \n                \n                    When a county is selected, the form's value is updated and starts retriving the list of cities from that county\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changing event, triggered when a change is detected on an element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doRefresh\n                        \n                        \n                    \n                \n            \n            \n                \ndoRefresh(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:167\n                \n            \n\n\n            \n                \n                    Refreshes the data, on scroll up the page is reset\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Scroll event \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCityList\n                        \n                        \n                    \n                \n            \n            \n                \ngetCityList(county: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    county\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Retrieves the list of cities from the selected county\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCountyList\n                        \n                        \n                    \n                \n            \n            \n                \ngetCountyList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:178\n                \n            \n\n\n            \n                \n                    Retrives the list of counties from the locations service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:60\n                \n            \n\n\n            \n                \n                    Retrieves data, filtered by user's selections\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadData\n                        \n                        \n                    \n                \n            \n            \n                \nloadData(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:149\n                \n            \n\n\n            \n                \n                    Loads more data, the response is paginated so on scorll down more informations needs to be loaded \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Scroll event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:52\n                \n            \n\n\n            \n                \n                    Page initialisation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openMenu\n                        \n                        \n                    \n                \n            \n            \n                \nopenMenu(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:76\n                \n            \n\n\n            \n                \n                    Opens a details menu for the selected volunteer and closes all already opened ones\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String containing the id of the volunteer that was selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchKeyword\n                        \n                        \n                    \n                \n            \n            \n                \nsearchKeyword(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:123\n                \n            \n\n\n            \n                \n                    When a value is inserted in the search box, the function gets triggered and sends the inserted value to the volunteer service\nif the value isn't null or empty, the response matches the user's input\notherwise it's the whole list of volunteers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Change event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:35\n                            \n                        \n\n                \n                    \n                        Limit of volunteers per page\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:30\n                            \n                        \n\n                \n                    \n                        Pagination\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volunteerIdWithDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:19\n                            \n                        \n\n                \n                    \n                        String that contains the id of the volunteer that currently has the open details\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volunteers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { VolunteerService } from 'src/app/core/service/volunteer.service';\nimport { AllocationService } from 'src/app/core/service/allocation.service';\nimport { LocationsService } from 'src/app/core/service/locations.service';\nimport { CourseService } from 'src/app/core';\n\n@Component({\n  selector: 'app-validate-volunteer',\n  templateUrl: './validate-volunteer.component.html',\n  styleUrls: ['./validate-volunteer.component.scss'],\n})\nexport class ValidateVolunteerComponent implements OnInit {\n  volunteers = [];\n  keyword = '';\n\n  /**\n   * String that contains the id of the volunteer that currently has the open details\n   */\n  volunteerIdWithDetails: string;\n  \n  courses = [];\n  counties = [];\n  cities = [];\n  county = '';\n  city = '';\n\n  /**\n   * Pagination\n   */\n  page = 0;\n  \n  /**\n   * Limit of volunteers per page\n   */\n  limit = 10;\n\n  /**\n   * \n   * @param volunteerService Provider for volunteer related operations\n   * @param allocationService Provider for volunteer allocation related operations\n   * @param locationsService Provider for location selection\n   * @param courseService Provider for course related operations\n   */\n  constructor(private volunteerService: VolunteerService,\n    private allocationService: AllocationService,\n    private locationsService: LocationsService,\n    private courseService: CourseService) { }\n\n  /**\n  * Page initialisation\n  */\n  ngOnInit() {\n   this.getData();\n   this.getCountyList();\n  }\n\n    /**\n   * Retrieves data, filtered by user's selections\n   */\n  getData() {\n    if(this.page === 0) {\n      this.volunteers = [];\n    }\n\n    this.volunteerService.getVolunteers(this.page, this.limit).subscribe((response: any) => {\n      response.rows.forEach(volunteer => {\n        this.volunteers.push(volunteer.doc);\n      });\n    });\n  }\n\n  /**\n   * Opens a details menu for the selected volunteer and closes all already opened ones\n   * @param volunteerId String containing the id of the volunteer that was selected\n   */\n  openMenu(volunteerId: string) {\n    this.courses = [];\n    if(this.volunteerIdWithDetails === volunteerId){\n      this.volunteerIdWithDetails = null;\n    } else{\n      this.volunteerIdWithDetails = volunteerId;\n      this.courseService.getCourseByVolunteerId(volunteerId).subscribe(response => {\n        this.courses = response.docs;\n      });\n    }\n  }\n\n    /**\n   * Opens the allocation menu for the selected user\n   * @param volunteerId String containing the id of the volunteer that was selected for allocation\n   */\n  allocateUser(volunteerId: string) {\n    const index = this.volunteers.findIndex(volunteer => volunteer._id === volunteerId);\n    if (index >= 0) {\n      this.volunteers[index].isInAllocation = true;\n    }\n  }\n\n   /**\n   * Allocate the selected volunteer for a location using the allocation service\n   * @param volunteerId String containing the id of the volunteer that was selected for allocation\n   */\n  confirmAllocation(volunteerId: string) {\n    const index = this.volunteers.findIndex(volunteer => volunteer._id === volunteerId);\n    if (index >= 0) {\n      this.allocationService.createAllocation(this.volunteers[index], this.county, this.city, this.volunteers[index].organisation).subscribe(() => {   \n        this.volunteers[index] = this.volunteerService.getVolunteerById(volunteerId).subscribe((response) => {\n          if(response.docs && response.docs.length > 0) {\n            this.volunteers[index] = response.docs[0];\n          }\n          this.volunteers[index].isInAllocation = false;\n        });\n      });\n    }\n  }\n\n  /**\n   * When a value is inserted in the search box, the function gets triggered and sends the inserted value to the volunteer service\n   * if the value isn't null or empty, the response matches the user's input\n   * otherwise it's the whole list of volunteers\n   * @param event Change event\n   */\n  searchKeyword(event: any) {\n    if(event && event.target){\n      this.keyword = event.target.value;\n\n      if (this.keyword && this.keyword.trim() != '') {\n        this.volunteerService.search(this.keyword.toLowerCase(), this.page, 10).subscribe((data: any) => {\n          this.volunteers = data.docs;\n          if(data.docs.length >= 10) {\n            this.page++;\n          }\n        });\n      } else {\n        this.page = 0;\n        this.getData();\n      }\n      \n    } else {\n      this.page = 0;\n      this.getData();\n    }\n  }\n\n   /**\n   * Loads more data, the response is paginated so on scorll down more informations needs to be loaded \n   * @param event Scroll event\n   */\n  loadData(event) {\n    setTimeout(() => {\n      this.page++;\n      this.getData();\n      event.target.complete();\n\n      // App logic to determine if all data is loaded\n      // and disable the infinite scroll\n      if (this.volunteers.length == 20) {\n        event.target.disabled = true;\n      }\n    }, 500);\n  }\n\n  /**\n   * Refreshes the data, on scroll up the page is reset\n   * @param event Scroll event \n   */\n  doRefresh(event) {\n    setTimeout(() => {\n      this.page = 0;\n      this.getData();\n      event.target.complete();\n    }, 1000);\n  }\n\n  /**\n   * Retrives the list of counties from the locations service\n   */\n  getCountyList() {\n    this.locationsService.getCountyList().subscribe((response) => {\n      this.counties = response;\n    });\n  }\n\n  /**\n   * \n   * @param county Retrieves the list of cities from the selected county\n   */\n  getCityList(county: string) {\n    this.locationsService.getCityList().subscribe((response) => {\n      this.cities = response.filter(city => city.county === county);\n    });\n  }\n\n  /**\n   * When a county is selected, the form's value is updated and starts retriving the list of cities from that county\n   * @param event Changing event, triggered when a change is detected on an element\n   */\n  countySelectionChanged(event) {\n    this.getCityList(event.detail.value);\n  }\n}\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n  \n\n\n  \n    \n  \n\n  \n    Caută după nume, CNP sau organizație\n  \n\n  \n    \n    \n      Caută\n    \n  \n\n  \n    \n      \n        \n          {{volunteer.name}}\n        \n        \n          \n            {{(volunteer.organisation.name)}}\n          \n          \n            Neafiliat\n          \n        \n        \n        \n        \n        \n      \n\n      \n        \n          \n            Voluntar acreditat pentru {{course.name}}.\n          \n        \n\n        \n          \n            {{volunteer.job}}.\n          \n        \n\n        \n          \n            Înregistrat în {{volunteer.created | date: 'dd.MM.yyyy'}}.\n          \n        \n\n        \n          \n            \n              Trimite mesaj\n            \n          \n          \n            \n              Alocă voluntari\n            \n          \n          \n            \n              Voluntar alocat\n            \n          \n        \n\n        \n          \n            \n              Județ\n              \n                {{county.name}}\n              \n            \n            \n              Localitate\n              \n                {{city.name}}\n              \n            \n          \n          \n            \n            \n              \n                Confirmă\n              \n            \n          \n        \n      \n    \n  \n\n  \n    \n    \n  \n\n    \n\n    \n                \n                    ./validate-volunteer.component.scss\n                \n                .search-box ion-item.sc-ion-input-md-h:not(.item-label), ion-item:not(.item-label) .sc-ion-input-md-h {\n    --padding-start: 5px;\n}\n\n.search-box ion-button {\n    text-transform: capitalize;\n    margin: 0;\n    --padding-bottom: 15px;\n    --padding-top: 15px;\n    --padding-end: 15px;\n    --padding-start: 15px;\n    margin-top: 0;\n    --border-radius: 0 2px 2px 0;\n    height: 35px;\n    --box-shadow:none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  Caută după nume, CNP sau organizație                  Caută                                    {{volunteer.name}}                                      {{(volunteer.organisation.name)}}                                Neafiliat                                                                                            Voluntar acreditat pentru {{course.name}}.                                                {{volunteer.job}}.                                                Înregistrat în {{volunteer.created | date: \\'dd.MM.yyyy\\'}}.                                                              Trimite mesaj                                                          Alocă voluntari                                                          Voluntar alocat                                                                          Județ                              {{county.name}}                                                    Localitate                              {{city.name}}                                                                                                    Confirmă                                                                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'LogoutPage', 'selector': 'app-logout'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ValidateVolunteerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Volunteer.html":{"url":"classes/Volunteer.html","title":"class - Volunteer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Volunteer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/volunteer.model.ts\n        \n\n            \n                Description\n            \n            \n                Model for volunteer object\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                added_by\n                            \n                            \n                                address\n                            \n                            \n                                allocation\n                            \n                            \n                                city\n                            \n                            \n                                comments\n                            \n                            \n                                county\n                            \n                            \n                                created\n                            \n                            \n                                email\n                            \n                            \n                                job\n                            \n                            \n                                name\n                            \n                            \n                                organisation\n                            \n                            \n                                phone\n                            \n                            \n                                ssn\n                            \n                            \n                                updated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/model/volunteer.model.ts:23\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            added_by\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            job\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organisation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ssn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/model/volunteer.model.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Volunteer {\n    _id: string;\n    organisation: {\n       id: string,\n       name: string,\n       website: string\n    };\n    name: string;\n    ssn: string;\n    phone: string;\n    email: string;\n    county: string;\n    city: string;\n    address: string;\n    comments: string;\n    job: string;\n    added_by: number;\n    created: Date;\n    updated: Date;\n    allocation: string;\n    \n    constructor() {}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VolunteerPage.html":{"url":"components/VolunteerPage.html","title":"component - VolunteerPage","body":"\n                   \n\n\n\n\n\n  Components\n  VolunteerPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/volunteer/volunteer.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-volunteer\n            \n\n            \n                styleUrls\n                ./volunteer.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./volunteer.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-volunteer',\n  templateUrl: './volunteer.page.html',\n  styleUrls: ['./volunteer.page.scss'],\n})\nexport class VolunteerPage implements OnInit {\n\n  /**\n  * @ignore\n  */\n  constructor() { }\n\n  /**\n  * @ignore\n  */\n ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n    \n\n    \n                \n                    ./volunteer.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AddVolunteerComponent', 'selector': 'app-add-volunteer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'ListVolunteerComponent', 'selector': 'app-list-volunteer'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'LogoutPage', 'selector': 'app-logout'},{'name': 'SendMessageComponent', 'selector': 'app-send-message'},{'name': 'ValidateVolunteerComponent', 'selector': 'app-validate-volunteer'},{'name': 'VolunteerPage', 'selector': 'app-volunteer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VolunteerPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VolunteerPageModule.html":{"url":"modules/VolunteerPageModule.html","title":"module - VolunteerPageModule","body":"\n                   \n\n\n\n\n    Modules\n    VolunteerPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VolunteerPageModule\n\n\n\ncluster_VolunteerPageModule_declarations\n\n\n\n\nAddVolunteerComponent\n\nAddVolunteerComponent\n\n\n\nVolunteerPageModule\n\nVolunteerPageModule\n\nVolunteerPageModule -->\n\nAddVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nListVolunteerComponent\n\nListVolunteerComponent\n\nVolunteerPageModule -->\n\nListVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nSendMessageComponent\n\nSendMessageComponent\n\nVolunteerPageModule -->\n\nSendMessageComponent->VolunteerPageModule\n\n\n\n\n\nValidateVolunteerComponent\n\nValidateVolunteerComponent\n\nVolunteerPageModule -->\n\nValidateVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nVolunteerPage\n\nVolunteerPage\n\nVolunteerPageModule -->\n\nVolunteerPage->VolunteerPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/volunteer/volunteer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddVolunteerComponent\n                        \n                        \n                            ListVolunteerComponent\n                        \n                        \n                            SendMessageComponent\n                        \n                        \n                            ValidateVolunteerComponent\n                        \n                        \n                            VolunteerPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { VolunteerPage } from './volunteer.page';\nimport { AddVolunteerComponent } from './add-volunteer/add-volunteer.component';\nimport { ListVolunteerComponent } from './list-volunteer/list-volunteer.component';\nimport { ValidateVolunteerComponent } from './validate-volunteer/validate-volunteer.component';\nimport { AuthenticationGuard } from '../../core/authentication/authentication.guard';\nimport { SendMessageComponent } from './send-message/send-message.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VolunteerPage,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'add',\n    component: AddVolunteerComponent,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'list',\n    component: ListVolunteerComponent,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'validate',\n    component: ValidateVolunteerComponent,\n    canActivate: [AuthenticationGuard]\n  },\n  {\n    path: 'send/:id',\n    component: SendMessageComponent,\n    canActivate: [AuthenticationGuard]\n  }\n\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n  ],\n  declarations: [\n    VolunteerPage,\n    AddVolunteerComponent,\n    ListVolunteerComponent,\n    ValidateVolunteerComponent,\n    SendMessageComponent\n  ]\n})\nexport class VolunteerPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VolunteerService.html":{"url":"injectables/VolunteerService.html","title":"injectable - VolunteerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  VolunteerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/service/volunteer.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for volunteer related operations\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allocateVolunteer\n                            \n                            \n                                createVolunteer\n                            \n                            \n                                deleteVolunteerById\n                            \n                            \n                                filter\n                            \n                            \n                                getVolunteerById\n                            \n                            \n                                getVolunteerBySsn\n                            \n                            \n                                getVolunteers\n                            \n                            \n                                search\n                            \n                            \n                                updateVolunteer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CourseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/service/volunteer.service.ts:29\n                            \n                        \n\n                \n                    \n                            Class constructor, sets the synchronization options for CouchDB and PouchDB Volunteers Database\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                        CourseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider for course related operations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allocateVolunteer\n                        \n                        \n                    \n                \n            \n            \n                \nallocateVolunteer(allocationId: string, volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:242\n                \n            \n\n\n            \n                \n                    Searches for a volunteer with the given volunteer id and allocates it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    allocationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Last allocation id\n\n                                    \n                                \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createVolunteer\n                        \n                        \n                    \n                \n            \n            \n                \ncreateVolunteer(name: string, ssn: string, phone: string, county: string, city: string, organisation: any, course: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:134\n                \n            \n\n\n            \n                \n                    Creates a volunteer entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's name\n\n                                    \n                                \n                                \n                                    ssn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's ssn (Social Security Number)\n\n                                    \n                                \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's phone number\n\n                                    \n                                \n                                \n                                    county\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's county\n\n                                    \n                                \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String value containing the new volunteer's city\n\n                                    \n                                \n                                \n                                    organisation\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object value containing the new volunteer's organisation \nEither contains an object with the following properties {id, name, website}, or it's null\n\n                                    \n                                \n                                \n                                    course\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer's course with properties: {id, name, acredited, obtained}\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with the created object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteVolunteerById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteVolunteerById(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:189\n                \n            \n\n\n            \n                \n                    Deletes an entry by its id from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The volunteer id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter(county: string, organisationId: string, courseName: string, page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:204\n                \n            \n\n\n            \n                \n                    Filters local Volunteers database by the given parameters' values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    county\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        County name\n\n                                    \n                                \n                                \n                                    organisationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Organisation id\n\n                                    \n                                \n                                \n                                    courseName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Course Name\n\n                                    \n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A number defining the current page of volunteers from the total list (used to paginate the response)\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of volunteers per page\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all volunteers matching the filters\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolunteerById\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolunteerById(volunteerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:101\n                \n            \n\n\n            \n                \n                    Finds a volunteer by its id in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Volunteer's id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the volunteer with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolunteerBySsn\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolunteerBySsn(ssn: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:114\n                \n            \n\n\n            \n                \n                    Finds a volunteer by its ssn in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ssn\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A ssn code\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable containing the volunteer with that id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVolunteers\n                        \n                        \n                    \n                \n            \n            \n                \ngetVolunteers(page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:55\n                \n            \n\n\n            \n                \n                    Getter method for all volunteers from the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all volunteers\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(keyword: string, page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:72\n                \n            \n\n\n            \n                \n                    Searches for all volunteers from the local database whose name,ssn or organisation name matches the keyword\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    keyword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The string used for search\n\n                                    \n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A number defining the current page of volunteers from the total list (used to paginate the response)\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of volunteers per page\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable with all volunteers\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateVolunteer\n                        \n                        \n                    \n                \n            \n            \n                \nupdateVolunteer(volunteer: Volunteer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/service/volunteer.service.ts:170\n                \n            \n\n\n            \n                \n                    Updates a volunteer entry in the local database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volunteer\n                                    \n                                                Volunteer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new volunteer entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as PouchDB from 'pouchdb/dist/pouchdb';\nimport * as PouchDBFind from 'pouchdb-find/lib/index';\nimport { environment } from '../../../environments/environment';\nimport { Volunteer } from '../model/volunteer.model';\nimport { from, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CourseService } from './course.service';\n\n/**\n * Reference for local PouchDB Volunteers Database\n */\nvar localDB = new PouchDB('volunteers');\n\n/**\n * PouchDB find plugin added \n */\nPouchDB.plugin(PouchDBFind);\n\n/**\n * Reference for server CouchDB Volunteers Database\n */\nvar remoteDB = new PouchDB(environment.databaseURL + '/volunteers');\n\n/**\n * Provider for volunteer related operations\n */\n@Injectable()\nexport class VolunteerService {\n\n   /**\n   * Class constructor, sets the synchronization options for CouchDB and PouchDB Volunteers Database\n   * @param courseService Provider for course related operations\n   */\n  constructor(private courseService: CourseService) {\n    let options = {\n      live: true,\n      retry: true,\n      continuous: true\n    };\n\n    localDB.sync(remoteDB, options);    \n\n    localDB.createIndex({\n      index: {fields: ['name', 'ssn', 'organisation.name','course.[].name', 'organisation.id', 'county', 'city', 'job', 'comments']}\n    });\n   }\n\n  /**\n  * Getter method for all volunteers from the local database\n  * @params page A number defining the current page of volunteers from the total list (used to paginate the response)\n  * @params limit The number of volunteers per page\n  * @returns An Observable with all volunteers\n  */\n  getVolunteers(page: number, limit: number): Observable {\n    const skip = page * limit;\n    return from(localDB.allDocs({\n        limit: limit,\n        include_docs: true,\n        skip: skip,\n        endkey: \"_design\"\n    }));\n  }\n \n  /**\n  * Searches for all volunteers from the local database whose name,ssn or organisation name matches the keyword\n  * @param keyword The string used for search\n  * @param page A number defining the current page of volunteers from the total list (used to paginate the response)\n  * @param limit The number of volunteers per page\n  * @returns An Observable with all volunteers\n  */\n  search(keyword: string, page: number, limit: number): Observable {\n    const skip = page * limit;\n    const pattern = new RegExp('.*' + keyword + '.*','ig');\n    return from(localDB.find({\n      selector: {\n        \"$or\": [\n          {\n          \"name\": {$regex: pattern},\n          },\n           {\n             \"ssn\": {$regex: pattern},\n           },\n           {\n             \"organisation.name\": {$regex: pattern},\n           },\n        ]        \n      },\n      limit: limit,\n      include_docs: true,\n      skip: skip,\n      endkey: \"_design\"\n    }));\n  }\n\n   /**\n  * Finds a volunteer by its id in the local database\n  * @param volunteerId Volunteer's id\n  * @returns An Observable containing the volunteer with that id\n  */\n  getVolunteerById(volunteerId: string): Observable {\n    return from(localDB.find({\n      selector: {\n        _id: {$eq: volunteerId},\n      }\n    }));\n  }\n\n  /**\n  * Finds a volunteer by its ssn in the local database\n  * @param ssn A ssn code\n  * @returns An Observable containing the volunteer with that id\n  */\n  getVolunteerBySsn(ssn: string): Observable {\n    return from(localDB.find({\n      selector: {\n        ssn: {$eq: ssn},\n      }\n    }));\n  }\n\n  /**\n   *  Creates a volunteer entry in the local database\n   * @param name String value containing the new volunteer's name\n   * @param ssn String value containing the new volunteer's ssn (Social Security Number)\n   * @param phone String value containing the new volunteer's phone number\n   * @param county String value containing the new volunteer's county\n   * @param city String value containing the new volunteer's city\n   * @param organisation Object value containing the new volunteer's organisation \n   * Either contains an object with the following properties {id, name, website}, or it's null\n   * @param course Volunteer's course with properties: {id, name, acredited, obtained}\n   * @returns An Observable with the created object\n   */\n  createVolunteer(name: string, ssn: string, phone: string, county: string, city: string, organisation: any, course: any): Observable {\n    let volunteer = new Volunteer;\n    volunteer.name = name;\n    volunteer.ssn = ssn;\n    volunteer.county = county;\n    volunteer.city = city;\n    volunteer.created = new Date();\n    volunteer.updated = new Date();\n    volunteer.allocation = '';\n    volunteer.phone = phone;\n\n    if(organisation) {\n      volunteer.organisation = {\n        \"id\": organisation._id,\n        \"name\": organisation.name,\n        \"website\": organisation.website\n      };\n    } else {\n      volunteer.organisation = null;\n    }\n\n    return from(localDB.post(volunteer))\n    .pipe(\n        map((response) => {\n          if(course) {\n            this.courseService.createCourse(course.name, volunteer._id, course.acredited, course.obtained).subscribe(() => {});\n          }\n          return response;\n        })\n      );\n  }\n\n   /**\n  * Updates a volunteer entry in the local database\n  * @param volunteer The new volunteer entry\n  */\n  updateVolunteer(volunteer: Volunteer) {\n    localDB.get(volunteer._id).then(function (doc) {\n      doc.name = volunteer.name ? volunteer.name : doc.name;\n      doc.ssn = volunteer.ssn ? volunteer.ssn : doc.ssn;\n      doc.phone = volunteer.phone ? volunteer.phone : doc.phone;\n      doc.county = volunteer.county ? volunteer.county : doc.county;\n      doc.city = volunteer.city ? volunteer.city : doc.city;\n      doc.organisation = volunteer.organisation ? volunteer.organisation : doc.organisation;\n      doc.comments = volunteer.comments ? volunteer.comments : doc.comments;\n      doc.job = volunteer.job ? volunteer.job : doc.job;\n      doc.updated = new Date();\n      localDB.put(doc);\n    });\n  }\n\n   /**\n   * Deletes an entry by its id from the local database\n   * @param volunteerId The volunteer id\n   */\n  deleteVolunteerById(volunteerId: string) {\n    localDB.get(volunteerId).then(function (doc) {\n      localDB.remove(doc);\n    });\n  }\n\n  /**\n   * Filters local Volunteers database by the given parameters' values\n   * @param county County name\n   * @param organisationId Organisation id\n   * @param courseName Course Name\n   * @param page A number defining the current page of volunteers from the total list (used to paginate the response)\n   * @param limit The number of volunteers per page\n   * @returns An Observable with all volunteers matching the filters\n   */\n  filter(county: string, organisationId: string, courseName: string, page:number, limit: number): Observable {\n    const skip = page * limit;\n    let selector:any = {\"$and\" : []};\n\n      \n    if(county !== 'all') {\n      selector['$and'].push( {\n        \"county\": {$eq: county},\n      });\n    }\n\n    if(organisationId) {\n      selector['$and'].push(  {\n        \"organisation.id\": {$eq: organisationId},\n      });\n    }\n\n    if(courseName) {\n      selector['$and'].push( {\"courses\": {\n        \"$elemMatch\" : {\n          \"name\": {$eq: courseName},\n          }\n        }\n      });\n    }\n\n    return from(localDB.find({\n      selector: selector,\n      limit: limit,\n      skip: skip\n    }));\n  }\n\n  /**\n   * Searches for a volunteer with the given volunteer id and allocates it\n   * @param allocationId Last allocation id\n   * @param volunteerId Volunteer id\n   */\n  allocateVolunteer(allocationId: string, volunteerId: string) {\n    return localDB.get(volunteerId).then(function (doc) {\n      doc.allocation = allocationId;\n      doc.updated = new Date();\n      localDB.put(doc);\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/core/authentication/authentication.service.ts\n            \n            variable\n            credentialsKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/authentication/unauthenticated.guard.ts\n            \n            guard\n            UnauthenticatedGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/http/error-handler.interceptor.ts\n            \n            interceptor\n            ErrorHandlerInterceptor\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/http/error-handler.interceptor.ts\n            \n            variable\n            credentialsKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/http/request.interceptor.ts\n            \n            interceptor\n            RequestInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            clearData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            createCookie\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            getData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            getSessionName\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            readCookie\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/local-storage.service.ts\n            \n            function\n            setData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/model/allocation.model.ts\n            \n            class\n            Allocation\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            interface\n            Credentials\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            interface\n            LoginPayload\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/model/authentication.model.ts\n            \n            interface\n            User\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/core/model/course.model.ts\n            \n            class\n            Course\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/core/model/error.model.ts\n            \n            interface\n            ErrorMessageObject\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/core/model/error.model.ts\n            \n            interface\n            RootObject\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/core/model/organisation.model.ts\n            \n            class\n            Organisation\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/core/model/volunteer.model.ts\n            \n            class\n            Volunteer\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                src/app/core/route-reusable-strategy.ts\n            \n            class\n            RouteReusableStrategy\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/service/allocation.service.ts\n            \n            injectable\n            AllocationService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/service/allocation.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/allocation.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/course.service.ts\n            \n            injectable\n            CourseService\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/core/service/course.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/course.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            class\n            DatabaseSyncService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            localAllocationsDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            localCoursesDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            localOrganisationsDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            localVolunteersDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            remoteAllocationsDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            remoteCoursesDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            remoteOrganisationsDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/database-sync.service.ts\n            \n            variable\n            remoteVolunteersDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/error-message.service.ts\n            \n            injectable\n            ErrorMessageService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/service/locations.service.ts\n            \n            injectable\n            LocationsService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/service/organisation.service.ts\n            \n            injectable\n            OrganisationService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/service/organisation.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/organisation.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/volunteer.service.ts\n            \n            injectable\n            VolunteerService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/core/service/volunteer.service.ts\n            \n            variable\n            localDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/service/volunteer.service.ts\n            \n            variable\n            remoteDB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pages/about/about.page.ts\n            \n            component\n            AboutPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            component\n            HomePage\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/pages/login/login.page.ts\n            \n            component\n            LoginPage\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/pages/logout/logout.page.ts\n            \n            component\n            LogoutPage\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/add-volunteer/add-volunteer.component.ts\n            \n            component\n            AddVolunteerComponent\n            \n                70 %\n                (22/31)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/list-volunteer/list-volunteer.component.ts\n            \n            component\n            ListVolunteerComponent\n            \n                61 %\n                (19/31)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/send-message/send-message.component.ts\n            \n            component\n            SendMessageComponent\n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/validate-volunteer/validate-volunteer.component.ts\n            \n            component\n            ValidateVolunteerComponent\n            \n                56 %\n                (13/23)\n            \n        \n        \n            \n                \n                src/app/pages/volunteer/volunteer.page.ts\n            \n            component\n            VolunteerPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.local.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^7.2.2\n        \n            @angular/core : ^7.2.2\n        \n            @angular/forms : ^7.2.2\n        \n            @angular/http : ^7.2.2\n        \n            @angular/platform-browser : ^7.2.2\n        \n            @angular/platform-browser-dynamic : ^7.2.2\n        \n            @angular/router : ^7.2.2\n        \n            @ionic-native/camera : ^5.9.0\n        \n            @ionic-native/core : ^5.11.0\n        \n            @ionic-native/date-picker : ^5.11.0\n        \n            @ionic-native/sms : ^5.11.0\n        \n            @ionic-native/splash-screen : ^5.0.0\n        \n            @ionic-native/status-bar : ^5.9.0\n        \n            @ionic/angular : ^4.6.2\n        \n            @ionic/lab : ^2.0.6\n        \n            @types/pouchdb : ^6.4.0\n        \n            cordova-android : ^8.0.0\n        \n            cordova-ios : ^5.0.1\n        \n            cordova-plugin-camera : ^4.0.3\n        \n            cordova-plugin-datepicker : ^0.9.3\n        \n            cordova-sms-plugin : ^1.0.0\n        \n            core-js : ^2.5.4\n        \n            pouchdb : ^7.1.1\n        \n            pouchdb-find : ^7.1.1\n        \n            rxjs : ~6.5.1\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            clearData   (src/.../local-storage.service.ts)\n                        \n                        \n                            createCookie   (src/.../local-storage.service.ts)\n                        \n                        \n                            getData   (src/.../local-storage.service.ts)\n                        \n                        \n                            getSessionName   (src/.../local-storage.service.ts)\n                        \n                        \n                            readCookie   (src/.../local-storage.service.ts)\n                        \n                        \n                            setData   (src/.../local-storage.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/local-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            clearData\n                        \n                        \n                    \n                \n            \n            \n                \nclearData(type: any)\n                \n            \n\n\n\n\n            \n                \n                    Clears data from storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Storage type (local or session)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createCookie\n                        \n                        \n                    \n                \n            \n            \n                \ncreateCookie(name: any, value: any, days: any)\n                \n            \n\n\n\n\n            \n                \n                    Creates a cookie entry\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie name\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie value\n\n                                    \n                                \n                                \n                                    days\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie expiration number of days\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData(type: any)\n                \n            \n\n\n\n\n            \n                \n                    Retrieves all data from storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Storage type (local or session)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSessionName\n                        \n                        \n                    \n                \n            \n            \n                \ngetSessionName()\n                \n            \n\n\n\n\n            \n                \n                    Getter for session name\n\n\n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readCookie\n                        \n                        \n                    \n                \n            \n            \n                \nreadCookie(name: any)\n                \n            \n\n\n\n\n            \n                \n                    Getter for a cookie document by its name\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Cookie's name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setData\n                        \n                        \n                    \n                \n            \n            \n                \nsetData(type: any, data: any)\n                \n            \n\n\n\n\n            \n                \n                    Sets data into storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Storage type (local or session)\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Information that needs to be stored\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LogoutPageModule\n\n\n\ncluster_LogoutPageModule_declarations\n\n\n\ncluster_VolunteerPageModule\n\n\n\ncluster_VolunteerPageModule_declarations\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nAllocationService\n\nAllocationService\n\nCoreModule -->\n\nAllocationService->CoreModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nCoreModule -->\n\nAuthenticationService->CoreModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nCoreModule -->\n\nCourseService->CoreModule\n\n\n\n\n\nErrorHandlerInterceptor\n\nErrorHandlerInterceptor\n\nCoreModule -->\n\nErrorHandlerInterceptor->CoreModule\n\n\n\n\n\nErrorMessageService\n\nErrorMessageService\n\nCoreModule -->\n\nErrorMessageService->CoreModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nCoreModule -->\n\nLocalStorageService->CoreModule\n\n\n\n\n\nLocationsService\n\nLocationsService\n\nCoreModule -->\n\nLocationsService->CoreModule\n\n\n\n\n\nOrganisationService\n\nOrganisationService\n\nCoreModule -->\n\nOrganisationService->CoreModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\nCoreModule -->\n\nRequestInterceptor->CoreModule\n\n\n\n\n\nVolunteerService\n\nVolunteerService\n\nCoreModule -->\n\nVolunteerService->CoreModule\n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLogoutPage\n\nLogoutPage\n\n\n\nLogoutPageModule\n\nLogoutPageModule\n\nLogoutPageModule -->\n\nLogoutPage->LogoutPageModule\n\n\n\n\n\nAddVolunteerComponent\n\nAddVolunteerComponent\n\n\n\nVolunteerPageModule\n\nVolunteerPageModule\n\nVolunteerPageModule -->\n\nAddVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nListVolunteerComponent\n\nListVolunteerComponent\n\nVolunteerPageModule -->\n\nListVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nSendMessageComponent\n\nSendMessageComponent\n\nVolunteerPageModule -->\n\nSendMessageComponent->VolunteerPageModule\n\n\n\n\n\nValidateVolunteerComponent\n\nValidateVolunteerComponent\n\nVolunteerPageModule -->\n\nValidateVolunteerComponent->VolunteerPageModule\n\n\n\n\n\nVolunteerPage\n\nVolunteerPage\n\nVolunteerPageModule -->\n\nVolunteerPage->VolunteerPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        22 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AboutPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LogoutPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VolunteerPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            credentialsKey   (src/.../authentication.service.ts)\n                        \n                        \n                            credentialsKey   (src/.../error-handler.interceptor.ts)\n                        \n                        \n                            environment   (src/.../environment.dev.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.local.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            localAllocationsDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            localCoursesDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            localDB   (src/.../allocation.service.ts)\n                        \n                        \n                            localDB   (src/.../course.service.ts)\n                        \n                        \n                            localDB   (src/.../volunteer.service.ts)\n                        \n                        \n                            localDB   (src/.../organisation.service.ts)\n                        \n                        \n                            localOrganisationsDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            localVolunteersDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            remoteAllocationsDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            remoteCoursesDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            remoteDB   (src/.../allocation.service.ts)\n                        \n                        \n                            remoteDB   (src/.../course.service.ts)\n                        \n                        \n                            remoteDB   (src/.../volunteer.service.ts)\n                        \n                        \n                            remoteDB   (src/.../organisation.service.ts)\n                        \n                        \n                            remoteOrganisationsDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            remoteVolunteersDB   (src/.../database-sync.service.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/core/authentication/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            credentialsKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'credentials'\n                        \n                    \n\n                \n                    \n                        Stores the value of credentials' key\n\n                    \n                \n\n            \n        \n\n    src/app/core/http/error-handler.interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            credentialsKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'credentials'\n                        \n                    \n\n                \n                    \n                        Key that identifies the credentials\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.dev.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'DEV',\n  production: false,\n  serverBaseUrl: 'https://rvm-api.lxhost.ro',\n  serverUrl: 'https://rvm-api.lxhost.ro/api',\n  databaseURL: 'http://rvm.lxhost.ro:5984'\n}\n                        \n                    \n\n                \n                    \n                        Developement environment values\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'PROD',\n  production: true\n}\n                        \n                    \n\n                \n                    \n                        Production environment values\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.local.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'LOCAL',\n  production: false\n}\n                        \n                    \n\n                \n                    \n                        Local environment values\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  env: 'DEFAULT',\n  production: false,\n  serverBaseUrl: 'https://rvm-api.lxhost.ro',\n  serverUrl: 'https://rvm-api.lxhost.ro/api',\n  databaseURL: 'http://rvm.lxhost.ro:5984'\n}\n                        \n                    \n\n                \n                    \n                        Default environment values\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/database-sync.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localAllocationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('allocations')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localCoursesDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('courses')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Courses Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localOrganisationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('organisations')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Organisations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localVolunteersDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('volunteers')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteAllocationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/allocations')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteCoursesDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/courses')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Courses Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteOrganisationsDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/organisations')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Organisations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteVolunteersDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/volunteers')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/allocation.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('allocations')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Allocations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/allocations')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Allocations Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/course.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('courses')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Courses Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/courses')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Courses Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/volunteer.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('volunteers')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/volunteers')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Volunteers Database\n\n                    \n                \n\n            \n        \n\n    src/app/core/service/organisation.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            localDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB('organisations')\n                        \n                    \n\n                \n                    \n                        Reference for local PouchDB Organisations Database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remoteDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PouchDB(environment.databaseURL + '/organisations')\n                        \n                    \n\n                \n                    \n                        Reference for server CouchDB Organisations Database\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
